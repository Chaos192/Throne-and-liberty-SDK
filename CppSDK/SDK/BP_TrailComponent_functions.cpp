#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TrailComponent

#include "Basic.hpp"

#include "BP_TrailComponent_classes.hpp"
#include "BP_TrailComponent_parameters.hpp"


namespace SDK
{

// Function BP_TrailComponent.BP_TrailComponent_C.ExecuteUbergraph_BP_TrailComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TrailComponent_C::ExecuteUbergraph_BP_TrailComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailComponent_C", "ExecuteUbergraph_BP_TrailComponent");

	Params::BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TrailComponent.BP_TrailComponent_C.SetTrailProperties
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTrailProperties                 Properties                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UBP_TrailComponent_C::SetTrailProperties(const struct FTrailProperties& Properties)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailComponent_C", "SetTrailProperties");

	Params::BP_TrailComponent_C_SetTrailProperties Parms{};

	Parms.Properties = std::move(Properties);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TrailComponent.BP_TrailComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TrailComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailComponent_C", "ReceiveTick");

	Params::BP_TrailComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TrailComponent.BP_TrailComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_TrailComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TrailComponent.BP_TrailComponent_C.CalculateWeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Weight                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TrailComponent_C::CalculateWeight(float Distance, float* Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailComponent_C", "CalculateWeight");

	Params::BP_TrailComponent_C_CalculateWeight Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);

	if (Weight != nullptr)
		*Weight = Parms.Weight;
}


// Function BP_TrailComponent.BP_TrailComponent_C.CalculateWeight2
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Weight                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TrailComponent_C::CalculateWeight2(float Distance, float* Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailComponent_C", "CalculateWeight2");

	Params::BP_TrailComponent_C_CalculateWeight2 Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);

	if (Weight != nullptr)
		*Weight = Parms.Weight;
}


// Function BP_TrailComponent.BP_TrailComponent_C.TryRegisterTrail
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_TrailComponent_C::TryRegisterTrail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailComponent_C", "TryRegisterTrail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TrailComponent.BP_TrailComponent_C.FindTrailSurface
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHitResult>               InHitResults                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// TArray<struct FHitResult>               OutHitResult                                           (Parm, OutParm, ContainsInstancedReference)

void UBP_TrailComponent_C::FindTrailSurface(TArray<struct FHitResult>& InHitResults, TArray<struct FHitResult>* OutHitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailComponent_C", "FindTrailSurface");

	Params::BP_TrailComponent_C_FindTrailSurface Parms{};

	Parms.InHitResults = std::move(InHitResults);

	UObject::ProcessEvent(Func, &Parms);

	InHitResults = std::move(Parms.InHitResults);

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);
}


// Function BP_TrailComponent.BP_TrailComponent_C.GetCameraLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UBP_TrailComponent_C::GetCameraLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TrailComponent_C", "GetCameraLocation");

	Params::BP_TrailComponent_C_GetCameraLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

