#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UI_BTN_TextType

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_UI_BTN_TextType.BP_UI_BTN_TextType_C
// 0x0058 (0x0F58 - 0x0F00)
class UBP_UI_BTN_TextType_C final : public UTLUserWidgetActionGuideButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0F00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowAnim;                                          // 0x0F08(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Press;                                             // 0x0F10(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x0F18(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTLCanvasPanel*                         TLCanvasPanel_0;                                   // 0x0F20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSpacer*                              TLSpacer_Icon;                                     // 0x0F28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IconOnOff;                                         // 0x0F30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F31[0x3];                                      // 0x0F31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Icon_Padding;                                      // 0x0F34(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              IconSize;                                          // 0x0F3C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                In_Offset;                                         // 0x0F44(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_UI_BTN_TextType(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void GreenHoverColorSet();
	void RedHoverColorSet();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UI_BTN_TextType_C">();
	}
	static class UBP_UI_BTN_TextType_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_UI_BTN_TextType_C>();
	}
};
static_assert(alignof(UBP_UI_BTN_TextType_C) == 0x000008, "Wrong alignment on UBP_UI_BTN_TextType_C");
static_assert(sizeof(UBP_UI_BTN_TextType_C) == 0x000F58, "Wrong size on UBP_UI_BTN_TextType_C");
static_assert(offsetof(UBP_UI_BTN_TextType_C, UberGraphFrame) == 0x000F00, "Member 'UBP_UI_BTN_TextType_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_TextType_C, ShowAnim) == 0x000F08, "Member 'UBP_UI_BTN_TextType_C::ShowAnim' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_TextType_C, Press) == 0x000F10, "Member 'UBP_UI_BTN_TextType_C::Press' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_TextType_C, Hover) == 0x000F18, "Member 'UBP_UI_BTN_TextType_C::Hover' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_TextType_C, TLCanvasPanel_0) == 0x000F20, "Member 'UBP_UI_BTN_TextType_C::TLCanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_TextType_C, TLSpacer_Icon) == 0x000F28, "Member 'UBP_UI_BTN_TextType_C::TLSpacer_Icon' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_TextType_C, IconOnOff) == 0x000F30, "Member 'UBP_UI_BTN_TextType_C::IconOnOff' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_TextType_C, Icon_Padding) == 0x000F34, "Member 'UBP_UI_BTN_TextType_C::Icon_Padding' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_TextType_C, IconSize) == 0x000F3C, "Member 'UBP_UI_BTN_TextType_C::IconSize' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_TextType_C, In_Offset) == 0x000F44, "Member 'UBP_UI_BTN_TextType_C::In_Offset' has a wrong offset!");

}

