#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemTooltip_Equip_StatType_1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ItemTooltip_Equip_StatType_1.BP_ItemTooltip_Equip_StatType_1_C
// 0x0080 (0x0BA0 - 0x0B20)
class UBP_ItemTooltip_Equip_StatType_1_C final : public UTLUserWidgetTooltipStatInfo
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B20(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTLBorder*                              ColorSetting_1;                                    // 0x0B28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBorder*                              ColorSetting_2;                                    // 0x0B30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           EnchantValueTextBlock_First;                       // 0x0B38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           EnchantValueTextBlock_Second;                      // 0x0B40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           StatValueTextBlock_First;                          // 0x0B48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           StatValueTextBlock_Second;                         // 0x0B50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TEX_Tooltip_List_Normal;                           // 0x0B58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         TLCanvasPanel;                                     // 0x0B60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         TLCanvasPanel_3;                                   // 0x0B68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TLImage;                                           // 0x0B70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TLImage_0;                                         // 0x0B78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TLTextBlock;                                       // 0x0B80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TLTextBlock_0;                                     // 0x0B88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TLTextBlock_1;                                     // 0x0B90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TLTextBlock_124;                                   // 0x0B98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ItemTooltip_Equip_StatType_1(int32 EntryPoint);
	void Construct();
	void OnUpdateAttackValueCompare(int32 InMinValueDiff, int32 InMaxValueDiff);
	void PreConstruct(bool IsDesignTime);
	void OnUpdateAttackEnchantValueText(const class FText& InEnchantMinValueText, const class FText& InEnchantMaxValueText, class FName InColorKey);
	void OnUpdateAttackValue(int32 InMinValue, int32 InMaxValue);
	void OnUpdateEnchantValueText(const class FText& InText, class FName InColorKey);
	void OnUpdateBaseValueText(const class FText& InText);
	void OnUpdateName(const class FText& InText);

	class UObject* GetListItemObject() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemTooltip_Equip_StatType_1_C">();
	}
	static class UBP_ItemTooltip_Equip_StatType_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ItemTooltip_Equip_StatType_1_C>();
	}
};
static_assert(alignof(UBP_ItemTooltip_Equip_StatType_1_C) == 0x000008, "Wrong alignment on UBP_ItemTooltip_Equip_StatType_1_C");
static_assert(sizeof(UBP_ItemTooltip_Equip_StatType_1_C) == 0x000BA0, "Wrong size on UBP_ItemTooltip_Equip_StatType_1_C");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, UberGraphFrame) == 0x000B20, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, ColorSetting_1) == 0x000B28, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::ColorSetting_1' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, ColorSetting_2) == 0x000B30, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::ColorSetting_2' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, EnchantValueTextBlock_First) == 0x000B38, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::EnchantValueTextBlock_First' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, EnchantValueTextBlock_Second) == 0x000B40, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::EnchantValueTextBlock_Second' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, StatValueTextBlock_First) == 0x000B48, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::StatValueTextBlock_First' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, StatValueTextBlock_Second) == 0x000B50, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::StatValueTextBlock_Second' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, TEX_Tooltip_List_Normal) == 0x000B58, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::TEX_Tooltip_List_Normal' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, TLCanvasPanel) == 0x000B60, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::TLCanvasPanel' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, TLCanvasPanel_3) == 0x000B68, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::TLCanvasPanel_3' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, TLImage) == 0x000B70, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::TLImage' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, TLImage_0) == 0x000B78, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::TLImage_0' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, TLTextBlock) == 0x000B80, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::TLTextBlock' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, TLTextBlock_0) == 0x000B88, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::TLTextBlock_0' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, TLTextBlock_1) == 0x000B90, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::TLTextBlock_1' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_StatType_1_C, TLTextBlock_124) == 0x000B98, "Member 'UBP_ItemTooltip_Equip_StatType_1_C::TLTextBlock_124' has a wrong offset!");

}

