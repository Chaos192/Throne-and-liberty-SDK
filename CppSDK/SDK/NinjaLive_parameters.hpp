#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NinjaLive

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function NinjaLive.NinjaLive_C.ExecuteUbergraph_NinjaLive
// 0x0730 (0x0730 - 0x0000)
struct NinjaLive_C_ExecuteUbergraph_NinjaLive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ParamName;                            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_FadeTimeOfBrush;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_FadeTimeOfCanvas;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_BrushSize;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0040(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0068(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget_RTout;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ANinjaLive_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Get_Item;                           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_2;          // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0110(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   Temp_byte_Variable;                                // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_InputTouchEvent_FingerIndex;                // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_InputTouchEvent_Location;                   // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x01C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x01D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_3;          // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_4;          // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETouchIndex                                   K2Node_InputTouchEvent_FingerIndex_1;              // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x2];                                      // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_InputTouchEvent_Location_1;                 // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0228(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x023C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	EObjectTypeQuery                              CallFunc_Array_Get_Item_2;                         // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_ComponentOverlapComponents_OutComponents; // 0x0298(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_ComponentOverlapComponents_ReturnValue;   // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_3;                         // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin_1;              // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_1;           // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_1;        // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxElement_ReturnValue_1;              // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue_1;     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x030D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x030E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x030F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_3;                               // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             Temp_byte_Variable_1;                              // 0x0314(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0316(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_317[0x1];                                      // 0x0317(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322[0x2];                                      // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32B[0x1];                                      // 0x032B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EObjectTypeQuery                              CallFunc_Map_Find_Value;                           // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0335(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336[0x2];                                      // 0x0336(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0340(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0351(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin_2;              // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_2;           // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_2;        // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue_2;              // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0376(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0377(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_TraceMouse_HitUV;                         // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceMouse_SimHitByMouse;                 // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceMouse_MouseClickValid;               // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceMouse_TouchValid;                    // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x038B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x038D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x038E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F[0x1];                                      // 0x038F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_TraceMouse_HitUV_1;                       // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceMouse_SimHitByMouse_1;               // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceMouse_MouseClickValid_1;             // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceMouse_TouchValid_1;                  // 0x03A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A3[0x5];                                      // 0x03A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           K2Node_Select_Default;                             // 0x03B8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_4;                         // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E2[0x6];                                      // 0x03E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_5;                         // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue;                  // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue_1;                // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumBones_ReturnValue;                  // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x041E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41F[0x1];                                      // 0x041F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x042D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42E[0x2];                                      // 0x042E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_6;                         // 0x0430(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x043C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x3];                                      // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0480(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x04B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x04CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD[0x3];                                      // 0x04CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x04D0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin_3;              // 0x0564(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_3;           // 0x0570(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_3;        // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxElement_ReturnValue_3;              // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x058A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58B[0x5];                                      // 0x058B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue_2;     // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x05A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EObjectTypeQuery                              CallFunc_Map_Find_Value_1;                         // 0x05A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue_1; // 0x05A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x05A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A7[0x1];                                      // 0x05A7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AD[0x3];                                      // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B5[0x3];                                      // 0x05B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_5;          // 0x05B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x05CC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x05E0(0x0010)(ReferenceParm)
	TArray<class UPrimitiveComponent*>            CallFunc_Map_Values_Values;                        // 0x05F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_606[0x2];                                      // 0x0606(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60D[0x3];                                      // 0x060D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0615(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_616[0x2];                                      // 0x0616(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_7;                         // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x062C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x063D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63E[0x2];                                      // 0x063E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default_1;                           // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_3;             // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64D[0x3];                                      // 0x064D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUnrealAnimSkeletalMeshComponent*> CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0650(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_4;             // 0x0665(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_666[0x2];                                      // 0x0666(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0668(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0678(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x0685(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0686(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue_3;     // 0x0687(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_689[0x3];                                      // 0x0689(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_2;                 // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_691[0x7];                                      // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0698(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_8;                         // 0x06A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_3;                 // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B9[0x3];                                      // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_9;                         // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_Select_Default_2;                           // 0x06C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_4;           // 0x06D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_5;             // 0x06DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DB[0x1];                                      // 0x06DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x06DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor_1;                         // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_Select_Default_3;                           // 0x06F0(0x0010)(ReferenceParm)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0700(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_6;                               // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_714[0x4];                                      // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_Select_Default_4;                           // 0x0718(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_ExecuteUbergraph_NinjaLive) == 0x000010, "Wrong alignment on NinjaLive_C_ExecuteUbergraph_NinjaLive");
static_assert(sizeof(NinjaLive_C_ExecuteUbergraph_NinjaLive) == 0x000730, "Wrong size on NinjaLive_C_ExecuteUbergraph_NinjaLive");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, EntryPoint) == 0x000000, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::EntryPoint' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000004, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Array_Index_Variable) == 0x000010, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Event_ParamName) == 0x00001C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Event_ParamName' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Event_FadeTimeOfBrush) == 0x000024, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Event_FadeTimeOfBrush' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Event_FadeTimeOfCanvas) == 0x000028, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Event_FadeTimeOfCanvas' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Event_BrushSize) == 0x00002C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Event_BrushSize' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_struct_Variable) == 0x000040, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Variable) == 0x000058, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_InputKeyEvent_Key) == 0x000068, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_SwitchEnum_CmpSuccess_1) == 0x000081, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_SwitchEnum_CmpSuccess_2) == 0x000082, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000083, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Subtract_IntInt_ReturnValue) == 0x000084, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_MakeLiteralString_ReturnValue) == 0x000090, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetDisplayName_ReturnValue) == 0x0000A0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_CreateRenderTarget_RTout) == 0x0000C0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_CreateRenderTarget_RTout' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0000D9, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000E4, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Variable_1) == 0x0000E8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000EC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_MakeLiteralString_ReturnValue_1) == 0x0000F0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_MakeLiteralString_ReturnValue_2) == 0x000100, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_MakeLiteralString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_InputKeyEvent_Key_1) == 0x000110, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Array_Index_Variable_2) == 0x000128, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_bool_True_if_break_was_hit_Variable) == 0x00012C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Not_PreBool_ReturnValue) == 0x00012D, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Loop_Counter_Variable_1) == 0x000130, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_struct_Variable_1) == 0x000134, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue_3) == 0x000140, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_byte_Variable) == 0x000144, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Array_Index_Variable_3) == 0x000148, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00014C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Loop_Counter_Variable_2) == 0x000150, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_InputTouchEvent_FingerIndex) == 0x000154, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_InputTouchEvent_FingerIndex' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_InputTouchEvent_Location) == 0x000158, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_InputTouchEvent_Location' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue_4) == 0x000164, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Array_Index_Variable_4) == 0x000168, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Loop_Counter_Variable_3) == 0x00016C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue_5) == 0x000174, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_MakeArray_Array) == 0x000178, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000188, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Loop_Counter_Variable_4) == 0x00018C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue_6) == 0x000198, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_MakeLiteralBool_ReturnValue) == 0x00019C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_Origin) == 0x0001A0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_BoxExtent) == 0x0001AC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_SphereRadius) == 0x0001B8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetMaxElement_ReturnValue) == 0x0001BC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001C0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_MakeStruct_LinearColor) == 0x0001C4, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_MakeStruct_LinearColor_1) == 0x0001D4, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_MakeLiteralString_ReturnValue_3) == 0x0001E8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_MakeLiteralString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_MakeLiteralString_ReturnValue_4) == 0x0001F8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_MakeLiteralString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetDisplayName_ReturnValue_1) == 0x000208, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_SwitchEnum_CmpSuccess_3) == 0x000218, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_InputTouchEvent_FingerIndex_1) == 0x000219, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_InputTouchEvent_FingerIndex_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_InputTouchEvent_Location_1) == 0x00021C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_InputTouchEvent_Location_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_bool_Variable) == 0x000228, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_LastIndex_ReturnValue) == 0x00022C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000230, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CreateDelegate_OutputDelegate) == 0x00023C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000250, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Get_Item_2) == 0x000280, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_2) == 0x000284, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Less_IntInt_ReturnValue_1) == 0x000288, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Variable_2) == 0x00028C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue_7) == 0x000290, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_ComponentOverlapComponents_OutComponents) == 0x000298, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_ComponentOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_ComponentOverlapComponents_ReturnValue) == 0x0002A8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_ComponentOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Array_Index_Variable_5) == 0x0002AC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Get_Item_3) == 0x0002B0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetOwner_ReturnValue) == 0x0002B8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetCollisionObjectType_ReturnValue) == 0x0002C0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_Origin_1) == 0x0002C4, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_BoxExtent_1) == 0x0002D0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_SphereRadius_1) == 0x0002DC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_SphereRadius_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002E0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetMaxElement_ReturnValue_1) == 0x0002E4, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetMaxElement_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002E8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetOwner_ReturnValue_1) == 0x0002F0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_BooleanOR_ReturnValue) == 0x0002F8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Add_ReturnValue) == 0x0002FC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetCollisionObjectType_ReturnValue_1) == 0x000300, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetCollisionObjectType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_3) == 0x000304, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_4) == 0x000308, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Less_IntInt_ReturnValue_2) == 0x00030C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00030D, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_RemoveItem_ReturnValue) == 0x00030E, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00030F, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Variable_3) == 0x000310, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_byte_Variable_1) == 0x000314, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Map_Contains_ReturnValue) == 0x000315, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000316, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue_8) == 0x000318, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Add_ReturnValue_1) == 0x00031C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Contains_ReturnValue) == 0x000320, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Not_PreBool_ReturnValue_2) == 0x000321, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_5) == 0x000324, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Greater_IntInt_ReturnValue) == 0x000328, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x000329, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00032A, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Add_ReturnValue_2) == 0x00032C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Loop_Counter_Variable_5) == 0x000330, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Map_Find_Value) == 0x000334, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Map_Find_ReturnValue) == 0x000335, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue_9) == 0x000338, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00033C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CreateDelegate_OutputDelegate_1) == 0x000340, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Not_PreBool_ReturnValue_3) == 0x000350, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_bool_Variable_1) == 0x000351, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_Origin_2) == 0x000354, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_Origin_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_BoxExtent_2) == 0x000360, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_BoxExtent_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_SphereRadius_2) == 0x00036C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_SphereRadius_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetMaxElement_ReturnValue_2) == 0x000370, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetMaxElement_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000374, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000375, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_BooleanOR_ReturnValue_1) == 0x000376, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000377, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_TraceMouse_HitUV) == 0x000378, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_TraceMouse_HitUV' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_TraceMouse_SimHitByMouse) == 0x000388, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_TraceMouse_SimHitByMouse' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_TraceMouse_MouseClickValid) == 0x000389, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_TraceMouse_MouseClickValid' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_TraceMouse_TouchValid) == 0x00038A, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_TraceMouse_TouchValid' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00038B, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_BooleanOR_ReturnValue_2) == 0x00038C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Contains_ReturnValue_1) == 0x00038D, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00038E, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_TraceMouse_HitUV_1) == 0x000390, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_TraceMouse_HitUV_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_TraceMouse_SimHitByMouse_1) == 0x0003A0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_TraceMouse_SimHitByMouse_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_TraceMouse_MouseClickValid_1) == 0x0003A1, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_TraceMouse_MouseClickValid_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_TraceMouse_TouchValid_1) == 0x0003A2, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_TraceMouse_TouchValid_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetPlayerController_ReturnValue) == 0x0003A8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x0003B0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_bool_Variable_2) == 0x0003B1, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Select_Default) == 0x0003B8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_IsOverlappingActor_ReturnValue) == 0x0003C0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Get_Item_4) == 0x0003C8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0003D8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_6) == 0x0003DC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Less_IntInt_ReturnValue_3) == 0x0003E0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_BooleanAND_ReturnValue) == 0x0003E1, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Get_Item_5) == 0x0003E8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetBoneName_ReturnValue) == 0x0003F0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetBoneName_ReturnValue_1) == 0x0003F8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetBoneName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetNumBones_ReturnValue) == 0x000400, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetNumBones_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Conv_NameToString_ReturnValue) == 0x000408, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000418, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Contains_ReturnValue) == 0x00041C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00041D, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x00041E, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_7) == 0x000420, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Less_IntInt_ReturnValue_4) == 0x000424, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_8) == 0x000428, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00042C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_bool_Has_Been_Initd_Variable) == 0x00042D, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Get_Item_6) == 0x000430, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_IsValid_ReturnValue_1) == 0x000438, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CreateDelegate_OutputDelegate_2) == 0x00043C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_bool_IsClosed_Variable) == 0x00044C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Map_Length_ReturnValue) == 0x000450, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_9) == 0x000454, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Find_ReturnValue) == 0x000458, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00045C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000460, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_10) == 0x000464, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000468, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_SelectString_ReturnValue) == 0x000470, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000480, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_SelectColor_ReturnValue) == 0x000490, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_11) == 0x0004A0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_12) == 0x0004A4, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0004A8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CustomEvent_OverlappedComponent_1) == 0x0004B0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CustomEvent_OtherActor_1) == 0x0004B8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CustomEvent_OtherComp_1) == 0x0004C0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CustomEvent_OtherBodyIndex_1) == 0x0004C8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CustomEvent_bFromSweep) == 0x0004CC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CustomEvent_SweepResult) == 0x0004D0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetOwner_ReturnValue_2) == 0x000558, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Add_ReturnValue_3) == 0x000560, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_Origin_3) == 0x000564, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_Origin_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_BoxExtent_3) == 0x000570, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_BoxExtent_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetComponentBounds_SphereRadius_3) == 0x00057C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetComponentBounds_SphereRadius_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Contains_ReturnValue_2) == 0x000580, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetMaxElement_ReturnValue_3) == 0x000584, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetMaxElement_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Not_PreBool_ReturnValue_4) == 0x000588, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000589, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_BooleanOR_ReturnValue_3) == 0x00058A, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetOwner_ReturnValue_3) == 0x000590, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetObjectClass_ReturnValue) == 0x000598, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetCollisionObjectType_ReturnValue_2) == 0x0005A0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetCollisionObjectType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0005A1, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0005A2, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Map_Find_Value_1) == 0x0005A3, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Map_Find_ReturnValue_1) == 0x0005A4, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetCollisionResponseToChannel_ReturnValue_1) == 0x0005A5, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetCollisionResponseToChannel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0005A6, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Find_ReturnValue_1) == 0x0005A8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0005AC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Variable_4) == 0x0005B0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Not_PreBool_ReturnValue_5) == 0x0005B4, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_MakeLiteralString_ReturnValue_5) == 0x0005B8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_MakeLiteralString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_bool_Has_Been_Initd_Variable_1) == 0x0005C8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CreateDelegate_OutputDelegate_3) == 0x0005CC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Map_Keys_Keys) == 0x0005E0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Map_Values_Values) == 0x0005F0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Map_Length_ReturnValue_1) == 0x000600, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000604, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_BooleanOR_ReturnValue_4) == 0x000605, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_13) == 0x000608, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x00060C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Loop_Counter_Variable_6) == 0x000610, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_BooleanOR_ReturnValue_5) == 0x000614, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Less_IntInt_ReturnValue_5) == 0x000615, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Add_IntInt_ReturnValue_10) == 0x000618, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Array_Index_Variable_6) == 0x00061C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Get_Item_7) == 0x000620, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_bool_IsClosed_Variable_1) == 0x000628, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CreateDelegate_OutputDelegate_4) == 0x00062C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_bool_Variable_3) == 0x00063C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_bool_Variable_4) == 0x00063D, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Select_Default_1) == 0x000640, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Add_ReturnValue_4) == 0x000648, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Contains_ReturnValue_3) == 0x00064C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000650, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_14) == 0x000660, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x000664, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Contains_ReturnValue_4) == 0x000665, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CustomEvent_OverlappedComponent) == 0x000668, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CustomEvent_OtherActor) == 0x000670, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CustomEvent_OtherComp) == 0x000678, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CustomEvent_OtherBodyIndex) == 0x000680, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Not_PreBool_ReturnValue_6) == 0x000684, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x000685, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_BooleanAND_ReturnValue_1) == 0x000686, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GetCollisionObjectType_ReturnValue_3) == 0x000687, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GetCollisionObjectType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000688, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Find_ReturnValue_2) == 0x00068C, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000690, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000698, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Get_Item_8) == 0x0006A8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Length_ReturnValue_15) == 0x0006B0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Find_ReturnValue_3) == 0x0006B4, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Less_IntInt_ReturnValue_6) == 0x0006B8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Get_Item_9) == 0x0006BC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Map_Remove_ReturnValue) == 0x0006C0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Select_Default_2) == 0x0006C8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0006D8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_RemoveItem_ReturnValue_4) == 0x0006D9, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_RemoveItem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Contains_ReturnValue_5) == 0x0006DA, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Variable_5) == 0x0006DC, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Event_OtherActor_1) == 0x0006E0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Event_OtherActor_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Event_OtherActor) == 0x0006E8, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Select_Default_3) == 0x0006F0, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_CreateDelegate_OutputDelegate_5) == 0x000700, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, Temp_int_Variable_6) == 0x000710, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, K2Node_Select_Default_4) == 0x000718, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ExecuteUbergraph_NinjaLive, CallFunc_Array_Add_ReturnValue_5) == 0x000728, "Member 'NinjaLive_C_ExecuteUbergraph_NinjaLive::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct NinjaLive_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on NinjaLive_C_ReceiveActorBeginOverlap");
static_assert(sizeof(NinjaLive_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on NinjaLive_C_ReceiveActorBeginOverlap");
static_assert(offsetof(NinjaLive_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'NinjaLive_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.ReceiveActorEndOverlap
// 0x0008 (0x0008 - 0x0000)
struct NinjaLive_C_ReceiveActorEndOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_ReceiveActorEndOverlap) == 0x000008, "Wrong alignment on NinjaLive_C_ReceiveActorEndOverlap");
static_assert(sizeof(NinjaLive_C_ReceiveActorEndOverlap) == 0x000008, "Wrong size on NinjaLive_C_ReceiveActorEndOverlap");
static_assert(offsetof(NinjaLive_C_ReceiveActorEndOverlap, OtherActor) == 0x000000, "Member 'NinjaLive_C_ReceiveActorEndOverlap::OtherActor' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.EndOverlapComponent
// 0x0020 (0x0020 - 0x0000)
struct NinjaLive_C_EndOverlapComponent final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_EndOverlapComponent) == 0x000008, "Wrong alignment on NinjaLive_C_EndOverlapComponent");
static_assert(sizeof(NinjaLive_C_EndOverlapComponent) == 0x000020, "Wrong size on NinjaLive_C_EndOverlapComponent");
static_assert(offsetof(NinjaLive_C_EndOverlapComponent, OverlappedComponent) == 0x000000, "Member 'NinjaLive_C_EndOverlapComponent::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_EndOverlapComponent, OtherActor) == 0x000008, "Member 'NinjaLive_C_EndOverlapComponent::OtherActor' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_EndOverlapComponent, OtherComp) == 0x000010, "Member 'NinjaLive_C_EndOverlapComponent::OtherComp' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_EndOverlapComponent, OtherBodyIndex) == 0x000018, "Member 'NinjaLive_C_EndOverlapComponent::OtherBodyIndex' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.BeginOverlapComponent
// 0x00A8 (0x00A8 - 0x0000)
struct NinjaLive_C_BeginOverlapComponent final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(NinjaLive_C_BeginOverlapComponent) == 0x000008, "Wrong alignment on NinjaLive_C_BeginOverlapComponent");
static_assert(sizeof(NinjaLive_C_BeginOverlapComponent) == 0x0000A8, "Wrong size on NinjaLive_C_BeginOverlapComponent");
static_assert(offsetof(NinjaLive_C_BeginOverlapComponent, OverlappedComponent) == 0x000000, "Member 'NinjaLive_C_BeginOverlapComponent::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_BeginOverlapComponent, OtherActor) == 0x000008, "Member 'NinjaLive_C_BeginOverlapComponent::OtherActor' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_BeginOverlapComponent, OtherComp) == 0x000010, "Member 'NinjaLive_C_BeginOverlapComponent::OtherComp' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_BeginOverlapComponent, OtherBodyIndex) == 0x000018, "Member 'NinjaLive_C_BeginOverlapComponent::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_BeginOverlapComponent, bFromSweep) == 0x00001C, "Member 'NinjaLive_C_BeginOverlapComponent::bFromSweep' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_BeginOverlapComponent, SweepResult) == 0x000020, "Member 'NinjaLive_C_BeginOverlapComponent::SweepResult' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct NinjaLive_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_ReceiveTick) == 0x000004, "Wrong alignment on NinjaLive_C_ReceiveTick");
static_assert(sizeof(NinjaLive_C_ReceiveTick) == 0x000004, "Wrong size on NinjaLive_C_ReceiveTick");
static_assert(offsetof(NinjaLive_C_ReceiveTick, DeltaSeconds_0) == 0x000000, "Member 'NinjaLive_C_ReceiveTick::DeltaSeconds_0' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.LiveFluidParams
// 0x0004 (0x0004 - 0x0000)
struct NinjaLive_C_LiveFluidParams final
{
public:
	float                                         BrushSize;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_LiveFluidParams) == 0x000004, "Wrong alignment on NinjaLive_C_LiveFluidParams");
static_assert(sizeof(NinjaLive_C_LiveFluidParams) == 0x000004, "Wrong size on NinjaLive_C_LiveFluidParams");
static_assert(offsetof(NinjaLive_C_LiveFluidParams, BrushSize) == 0x000000, "Member 'NinjaLive_C_LiveFluidParams::BrushSize' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.LiveActivation
// 0x0010 (0x0010 - 0x0000)
struct NinjaLive_C_LiveActivation final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTimeOfBrush;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTimeOfCanvas;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_LiveActivation) == 0x000004, "Wrong alignment on NinjaLive_C_LiveActivation");
static_assert(sizeof(NinjaLive_C_LiveActivation) == 0x000010, "Wrong size on NinjaLive_C_LiveActivation");
static_assert(offsetof(NinjaLive_C_LiveActivation, ParamName) == 0x000000, "Member 'NinjaLive_C_LiveActivation::ParamName' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_LiveActivation, FadeTimeOfBrush) == 0x000008, "Member 'NinjaLive_C_LiveActivation::FadeTimeOfBrush' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_LiveActivation, FadeTimeOfCanvas) == 0x00000C, "Member 'NinjaLive_C_LiveActivation::FadeTimeOfCanvas' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0");
static_assert(sizeof(NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0");
static_assert(offsetof(NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");
static_assert(sizeof(NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");
static_assert(offsetof(NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'NinjaLive_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.InpTchEvt_Pressed
// 0x0010 (0x0010 - 0x0000)
struct NinjaLive_C_InpTchEvt_Pressed final
{
public:
	ETouchIndex                                   FingerIndex;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_InpTchEvt_Pressed) == 0x000004, "Wrong alignment on NinjaLive_C_InpTchEvt_Pressed");
static_assert(sizeof(NinjaLive_C_InpTchEvt_Pressed) == 0x000010, "Wrong size on NinjaLive_C_InpTchEvt_Pressed");
static_assert(offsetof(NinjaLive_C_InpTchEvt_Pressed, FingerIndex) == 0x000000, "Member 'NinjaLive_C_InpTchEvt_Pressed::FingerIndex' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_InpTchEvt_Pressed, Location) == 0x000004, "Member 'NinjaLive_C_InpTchEvt_Pressed::Location' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.InpTchEvt_Released
// 0x0010 (0x0010 - 0x0000)
struct NinjaLive_C_InpTchEvt_Released final
{
public:
	ETouchIndex                                   FingerIndex;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_InpTchEvt_Released) == 0x000004, "Wrong alignment on NinjaLive_C_InpTchEvt_Released");
static_assert(sizeof(NinjaLive_C_InpTchEvt_Released) == 0x000010, "Wrong size on NinjaLive_C_InpTchEvt_Released");
static_assert(offsetof(NinjaLive_C_InpTchEvt_Released, FingerIndex) == 0x000000, "Member 'NinjaLive_C_InpTchEvt_Released::FingerIndex' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_InpTchEvt_Released, Location) == 0x000004, "Member 'NinjaLive_C_InpTchEvt_Released::Location' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.UserConstructionScript
// 0x0038 (0x0038 - 0x0000)
struct NinjaLive_C_UserConstructionScript final
{
public:
	TArray<class UPrimitiveComponent*>            K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_UserConstructionScript) == 0x000008, "Wrong alignment on NinjaLive_C_UserConstructionScript");
static_assert(sizeof(NinjaLive_C_UserConstructionScript) == 0x000038, "Wrong size on NinjaLive_C_UserConstructionScript");
static_assert(offsetof(NinjaLive_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'NinjaLive_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000010, "Member 'NinjaLive_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00001C, "Member 'NinjaLive_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_UserConstructionScript, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000028, "Member 'NinjaLive_C_UserConstructionScript::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000030, "Member 'NinjaLive_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");

// Function NinjaLive.NinjaLive_C.ActorDestroyed
// 0x0038 (0x0038 - 0x0000)
struct NinjaLive_C_ActorDestroyed final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_C_ActorDestroyed) == 0x000008, "Wrong alignment on NinjaLive_C_ActorDestroyed");
static_assert(sizeof(NinjaLive_C_ActorDestroyed) == 0x000038, "Wrong size on NinjaLive_C_ActorDestroyed");
static_assert(offsetof(NinjaLive_C_ActorDestroyed, Actor) == 0x000000, "Member 'NinjaLive_C_ActorDestroyed::Actor' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ActorDestroyed, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000008, "Member 'NinjaLive_C_ActorDestroyed::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ActorDestroyed, Temp_int_Array_Index_Variable) == 0x000018, "Member 'NinjaLive_C_ActorDestroyed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ActorDestroyed, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'NinjaLive_C_ActorDestroyed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ActorDestroyed, CallFunc_Array_Get_Item) == 0x000020, "Member 'NinjaLive_C_ActorDestroyed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ActorDestroyed, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'NinjaLive_C_ActorDestroyed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ActorDestroyed, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'NinjaLive_C_ActorDestroyed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ActorDestroyed, CallFunc_Array_RemoveItem_ReturnValue) == 0x00002D, "Member 'NinjaLive_C_ActorDestroyed::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_C_ActorDestroyed, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'NinjaLive_C_ActorDestroyed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

