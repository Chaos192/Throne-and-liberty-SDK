#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemTooltip_Cant_ICO_BTN

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ItemTooltip_Cant_ICO_BTN.BP_ItemTooltip_Cant_ICO_BTN_C
// 0x0260 (0x0CE0 - 0x0A80)
class UBP_ItemTooltip_Cant_ICO_BTN_C final : public UTLUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A80(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTLImage*                               ImageIcon;                                         // 0x0A88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSpacer*                              ImageSize;                                         // 0x0A90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_NUM;                                           // 0x0A98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateBrush                            CanIcon;                                           // 0x0AA0(0x0088)(Edit, BlueprintVisible)
	struct FSlateBrush                            NotIcon;                                           // 0x0B28(0x0088)(Edit, BlueprintVisible)
	struct FSlateBrush                            CustomIcon1;                                       // 0x0BB0(0x0088)(Edit, BlueprintVisible)
	struct FSlateBrush                            CustomIcon2;                                       // 0x0C38(0x0088)(Edit, BlueprintVisible)
	bool                                          TEXT_NUM_ONOFF;                                    // 0x0CC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC1[0x3];                                      // 0x0CC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              IconSize;                                          // 0x0CC4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                Icon_Offset;                                       // 0x0CCC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_ItemTooltip_Cant_ICO_BTN(int32 EntryPoint);
	void SetIconBrush(class FName InName);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemTooltip_Cant_ICO_BTN_C">();
	}
	static class UBP_ItemTooltip_Cant_ICO_BTN_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ItemTooltip_Cant_ICO_BTN_C>();
	}
};
static_assert(alignof(UBP_ItemTooltip_Cant_ICO_BTN_C) == 0x000008, "Wrong alignment on UBP_ItemTooltip_Cant_ICO_BTN_C");
static_assert(sizeof(UBP_ItemTooltip_Cant_ICO_BTN_C) == 0x000CE0, "Wrong size on UBP_ItemTooltip_Cant_ICO_BTN_C");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, UberGraphFrame) == 0x000A80, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, ImageIcon) == 0x000A88, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::ImageIcon' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, ImageSize) == 0x000A90, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::ImageSize' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, TXT_NUM) == 0x000A98, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::TXT_NUM' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, CanIcon) == 0x000AA0, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::CanIcon' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, NotIcon) == 0x000B28, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::NotIcon' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, CustomIcon1) == 0x000BB0, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::CustomIcon1' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, CustomIcon2) == 0x000C38, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::CustomIcon2' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, TEXT_NUM_ONOFF) == 0x000CC0, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::TEXT_NUM_ONOFF' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, IconSize) == 0x000CC4, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::IconSize' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Cant_ICO_BTN_C, Icon_Offset) == 0x000CCC, "Member 'UBP_ItemTooltip_Cant_ICO_BTN_C::Icon_Offset' has a wrong offset!");

}

