#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TooltipPanel_Bg

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_TooltipPanel_Bg.BP_TooltipPanel_Bg_C
// 0x0090 (0x14C0 - 0x1430)
class UBP_TooltipPanel_Bg_C final : public UTLUserWidgetFrame
{
public:
	uint8                                         Pad_1428[0x8];                                     // 0x1428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTLNamedSlot*                           Contents;                                          // 0x1438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLNamedSlot*                           KeyGuide;                                          // 0x1440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSizeBox*                             PanelMinSize;                                      // 0x1448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         ScrollOnMarginBox;                                 // 0x1450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Tex_Tooltip_Dot_On;                                // 0x1458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Tex_Tooltip_InnerGlowBack;                         // 0x1460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TEX_TOOLTIP_INNERLINE;                             // 0x1468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TEX_TOOLTIP_NOMAL_BACK;                            // 0x1470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TextGoup;                                          // 0x1478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLNamedSlot*                           Title;                                             // 0x1480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSpacer*                              TitleSpacer;                                       // 0x1488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          TItleOnOff;                                        // 0x1490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1491[0x3];                                     // 0x1491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              TooltipMinSize;                                    // 0x1494(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PanelSize_Max;                                     // 0x149C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TextFront_Dot_ONOFF;                               // 0x14A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TooltipBox_LargeOnOff;                             // 0x14A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TitleBottomSpacerOn;                               // 0x14A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ScrollOnMargin;                                    // 0x14A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          InnerBox_Texture_On;                               // 0x14A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A5[0x3];                                     // 0x14A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              TooltipMargin;                                     // 0x14A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                In_Offset_Innerbox;                                // 0x14B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_TooltipPanel_Bg(int32 EntryPoint);
	void ScrollMarginSet_T();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void ScrollMarginSet_F();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TooltipPanel_Bg_C">();
	}
	static class UBP_TooltipPanel_Bg_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TooltipPanel_Bg_C>();
	}
};
static_assert(alignof(UBP_TooltipPanel_Bg_C) == 0x000010, "Wrong alignment on UBP_TooltipPanel_Bg_C");
static_assert(sizeof(UBP_TooltipPanel_Bg_C) == 0x0014C0, "Wrong size on UBP_TooltipPanel_Bg_C");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, UberGraphFrame) == 0x001430, "Member 'UBP_TooltipPanel_Bg_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, Contents) == 0x001438, "Member 'UBP_TooltipPanel_Bg_C::Contents' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, KeyGuide) == 0x001440, "Member 'UBP_TooltipPanel_Bg_C::KeyGuide' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, PanelMinSize) == 0x001448, "Member 'UBP_TooltipPanel_Bg_C::PanelMinSize' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, ScrollOnMarginBox) == 0x001450, "Member 'UBP_TooltipPanel_Bg_C::ScrollOnMarginBox' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, Tex_Tooltip_Dot_On) == 0x001458, "Member 'UBP_TooltipPanel_Bg_C::Tex_Tooltip_Dot_On' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, Tex_Tooltip_InnerGlowBack) == 0x001460, "Member 'UBP_TooltipPanel_Bg_C::Tex_Tooltip_InnerGlowBack' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, TEX_TOOLTIP_INNERLINE) == 0x001468, "Member 'UBP_TooltipPanel_Bg_C::TEX_TOOLTIP_INNERLINE' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, TEX_TOOLTIP_NOMAL_BACK) == 0x001470, "Member 'UBP_TooltipPanel_Bg_C::TEX_TOOLTIP_NOMAL_BACK' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, TextGoup) == 0x001478, "Member 'UBP_TooltipPanel_Bg_C::TextGoup' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, Title) == 0x001480, "Member 'UBP_TooltipPanel_Bg_C::Title' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, TitleSpacer) == 0x001488, "Member 'UBP_TooltipPanel_Bg_C::TitleSpacer' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, TItleOnOff) == 0x001490, "Member 'UBP_TooltipPanel_Bg_C::TItleOnOff' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, TooltipMinSize) == 0x001494, "Member 'UBP_TooltipPanel_Bg_C::TooltipMinSize' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, PanelSize_Max) == 0x00149C, "Member 'UBP_TooltipPanel_Bg_C::PanelSize_Max' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, TextFront_Dot_ONOFF) == 0x0014A0, "Member 'UBP_TooltipPanel_Bg_C::TextFront_Dot_ONOFF' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, TooltipBox_LargeOnOff) == 0x0014A1, "Member 'UBP_TooltipPanel_Bg_C::TooltipBox_LargeOnOff' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, TitleBottomSpacerOn) == 0x0014A2, "Member 'UBP_TooltipPanel_Bg_C::TitleBottomSpacerOn' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, ScrollOnMargin) == 0x0014A3, "Member 'UBP_TooltipPanel_Bg_C::ScrollOnMargin' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, InnerBox_Texture_On) == 0x0014A4, "Member 'UBP_TooltipPanel_Bg_C::InnerBox_Texture_On' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, TooltipMargin) == 0x0014A8, "Member 'UBP_TooltipPanel_Bg_C::TooltipMargin' has a wrong offset!");
static_assert(offsetof(UBP_TooltipPanel_Bg_C, In_Offset_Innerbox) == 0x0014B0, "Member 'UBP_TooltipPanel_Bg_C::In_Offset_Innerbox' has a wrong offset!");

}

