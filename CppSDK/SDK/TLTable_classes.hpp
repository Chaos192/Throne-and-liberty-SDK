#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TLTable

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "TLBase_classes.hpp"


namespace SDK
{

// Class TLTable.TLDataAssetTable
// 0x0138 (0x0160 - 0x0028)
class UTLDataAssetTable : public UObject
{
public:
	class UTLTableMaster*                         TLTableMasterInner;                                // 0x0028(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                 DataAssetClass;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScriptStruct*                          DataStruct;                                        // 0x0038(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTLTableRowDataAsset*>           RowAssets;                                         // 0x0040(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_50[0x110];                                     // 0x0050(0x0110)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLDataAssetTable">();
	}
	static class UTLDataAssetTable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLDataAssetTable>();
	}
};
static_assert(alignof(UTLDataAssetTable) == 0x000008, "Wrong alignment on UTLDataAssetTable");
static_assert(sizeof(UTLDataAssetTable) == 0x000160, "Wrong size on UTLDataAssetTable");
static_assert(offsetof(UTLDataAssetTable, TLTableMasterInner) == 0x000028, "Member 'UTLDataAssetTable::TLTableMasterInner' has a wrong offset!");
static_assert(offsetof(UTLDataAssetTable, DataAssetClass) == 0x000030, "Member 'UTLDataAssetTable::DataAssetClass' has a wrong offset!");
static_assert(offsetof(UTLDataAssetTable, DataStruct) == 0x000038, "Member 'UTLDataAssetTable::DataStruct' has a wrong offset!");
static_assert(offsetof(UTLDataAssetTable, RowAssets) == 0x000040, "Member 'UTLDataAssetTable::RowAssets' has a wrong offset!");

// Class TLTable.TLDataAssetTableInt32
// 0x0050 (0x01B0 - 0x0160)
class UTLDataAssetTableInt32 final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x50];                                     // 0x0160(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLDataAssetTableInt32">();
	}
	static class UTLDataAssetTableInt32* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLDataAssetTableInt32>();
	}
};
static_assert(alignof(UTLDataAssetTableInt32) == 0x000008, "Wrong alignment on UTLDataAssetTableInt32");
static_assert(sizeof(UTLDataAssetTableInt32) == 0x0001B0, "Wrong size on UTLDataAssetTableInt32");

// Class TLTable.TLDataAssetTableInt64
// 0x0050 (0x01B0 - 0x0160)
class UTLDataAssetTableInt64 final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x50];                                     // 0x0160(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLDataAssetTableInt64">();
	}
	static class UTLDataAssetTableInt64* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLDataAssetTableInt64>();
	}
};
static_assert(alignof(UTLDataAssetTableInt64) == 0x000008, "Wrong alignment on UTLDataAssetTableInt64");
static_assert(sizeof(UTLDataAssetTableInt64) == 0x0001B0, "Wrong size on UTLDataAssetTableInt64");

// Class TLTable.TLTableAbnormal
// 0x01F8 (0x0358 - 0x0160)
class UTLTableAbnormal final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x1F8];                                    // 0x0160(0x01F8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableAbnormal">();
	}
	static class UTLTableAbnormal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableAbnormal>();
	}
};
static_assert(alignof(UTLTableAbnormal) == 0x000008, "Wrong alignment on UTLTableAbnormal");
static_assert(sizeof(UTLTableAbnormal) == 0x000358, "Wrong size on UTLTableAbnormal");

// Class TLTable.TLTableAbnormalLooks
// 0x0008 (0x0168 - 0x0160)
class UTLTableAbnormalLooks final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableAbnormalLooks">();
	}
	static class UTLTableAbnormalLooks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableAbnormalLooks>();
	}
};
static_assert(alignof(UTLTableAbnormalLooks) == 0x000008, "Wrong alignment on UTLTableAbnormalLooks");
static_assert(sizeof(UTLTableAbnormalLooks) == 0x000168, "Wrong size on UTLTableAbnormalLooks");

// Class TLTable.TLTableAbnormalLooksGroup
// 0x0058 (0x01B8 - 0x0160)
class UTLTableAbnormalLooksGroup final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x58];                                     // 0x0160(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableAbnormalLooksGroup">();
	}
	static class UTLTableAbnormalLooksGroup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableAbnormalLooksGroup>();
	}
};
static_assert(alignof(UTLTableAbnormalLooksGroup) == 0x000008, "Wrong alignment on UTLTableAbnormalLooksGroup");
static_assert(sizeof(UTLTableAbnormalLooksGroup) == 0x0001B8, "Wrong size on UTLTableAbnormalLooksGroup");

// Class TLTable.TLTableAchievementSteam
// 0x0008 (0x0168 - 0x0160)
class UTLTableAchievementSteam final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableAchievementSteam">();
	}
	static class UTLTableAchievementSteam* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableAchievementSteam>();
	}
};
static_assert(alignof(UTLTableAchievementSteam) == 0x000008, "Wrong alignment on UTLTableAchievementSteam");
static_assert(sizeof(UTLTableAchievementSteam) == 0x000168, "Wrong size on UTLTableAchievementSteam");

// Class TLTable.TLTableCarrier
// 0x0008 (0x0168 - 0x0160)
class UTLTableCarrier final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableCarrier">();
	}
	static class UTLTableCarrier* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableCarrier>();
	}
};
static_assert(alignof(UTLTableCarrier) == 0x000008, "Wrong alignment on UTLTableCarrier");
static_assert(sizeof(UTLTableCarrier) == 0x000168, "Wrong size on UTLTableCarrier");

// Class TLTable.TLTableCarrierState
// 0x0008 (0x0168 - 0x0160)
class UTLTableCarrierState final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableCarrierState">();
	}
	static class UTLTableCarrierState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableCarrierState>();
	}
};
static_assert(alignof(UTLTableCarrierState) == 0x000008, "Wrong alignment on UTLTableCarrierState");
static_assert(sizeof(UTLTableCarrierState) == 0x000168, "Wrong size on UTLTableCarrierState");

// Class TLTable.TLTableCinematicDialog
// 0x0008 (0x0168 - 0x0160)
class UTLTableCinematicDialog final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableCinematicDialog">();
	}
	static class UTLTableCinematicDialog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableCinematicDialog>();
	}
};
static_assert(alignof(UTLTableCinematicDialog) == 0x000008, "Wrong alignment on UTLTableCinematicDialog");
static_assert(sizeof(UTLTableCinematicDialog) == 0x000168, "Wrong size on UTLTableCinematicDialog");

// Class TLTable.TLTableCodexCodeLooks
// 0x0008 (0x0168 - 0x0160)
class UTLTableCodexCodeLooks final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableCodexCodeLooks">();
	}
	static class UTLTableCodexCodeLooks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableCodexCodeLooks>();
	}
};
static_assert(alignof(UTLTableCodexCodeLooks) == 0x000008, "Wrong alignment on UTLTableCodexCodeLooks");
static_assert(sizeof(UTLTableCodexCodeLooks) == 0x000168, "Wrong size on UTLTableCodexCodeLooks");

// Class TLTable.TLTableCodexGroupLooks
// 0x0008 (0x0168 - 0x0160)
class UTLTableCodexGroupLooks final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableCodexGroupLooks">();
	}
	static class UTLTableCodexGroupLooks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableCodexGroupLooks>();
	}
};
static_assert(alignof(UTLTableCodexGroupLooks) == 0x000008, "Wrong alignment on UTLTableCodexGroupLooks");
static_assert(sizeof(UTLTableCodexGroupLooks) == 0x000168, "Wrong size on UTLTableCodexGroupLooks");

// Class TLTable.TLTableCodexObjectiveLooks
// 0x0008 (0x0168 - 0x0160)
class UTLTableCodexObjectiveLooks final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableCodexObjectiveLooks">();
	}
	static class UTLTableCodexObjectiveLooks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableCodexObjectiveLooks>();
	}
};
static_assert(alignof(UTLTableCodexObjectiveLooks) == 0x000008, "Wrong alignment on UTLTableCodexObjectiveLooks");
static_assert(sizeof(UTLTableCodexObjectiveLooks) == 0x000168, "Wrong size on UTLTableCodexObjectiveLooks");

// Class TLTable.TLTableCostumePortraitLine
// 0x0008 (0x0168 - 0x0160)
class UTLTableCostumePortraitLine final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableCostumePortraitLine">();
	}
	static class UTLTableCostumePortraitLine* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableCostumePortraitLine>();
	}
};
static_assert(alignof(UTLTableCostumePortraitLine) == 0x000008, "Wrong alignment on UTLTableCostumePortraitLine");
static_assert(sizeof(UTLTableCostumePortraitLine) == 0x000168, "Wrong size on UTLTableCostumePortraitLine");

// Class TLTable.TLTableCutscene
// 0x0008 (0x0168 - 0x0160)
class UTLTableCutscene final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableCutscene">();
	}
	static class UTLTableCutscene* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableCutscene>();
	}
};
static_assert(alignof(UTLTableCutscene) == 0x000008, "Wrong alignment on UTLTableCutscene");
static_assert(sizeof(UTLTableCutscene) == 0x000168, "Wrong size on UTLTableCutscene");

// Class TLTable.TLTableDialogue
// 0x0008 (0x0168 - 0x0160)
class UTLTableDialogue final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableDialogue">();
	}
	static class UTLTableDialogue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableDialogue>();
	}
};
static_assert(alignof(UTLTableDialogue) == 0x000008, "Wrong alignment on UTLTableDialogue");
static_assert(sizeof(UTLTableDialogue) == 0x000168, "Wrong size on UTLTableDialogue");

// Class TLTable.TLTableDialogueContent
// 0x0008 (0x0168 - 0x0160)
class UTLTableDialogueContent final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableDialogueContent">();
	}
	static class UTLTableDialogueContent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableDialogueContent>();
	}
};
static_assert(alignof(UTLTableDialogueContent) == 0x000008, "Wrong alignment on UTLTableDialogueContent");
static_assert(sizeof(UTLTableDialogueContent) == 0x000168, "Wrong size on UTLTableDialogueContent");

// Class TLTable.TLTableEffectPropLooks
// 0x0008 (0x0168 - 0x0160)
class UTLTableEffectPropLooks final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableEffectPropLooks">();
	}
	static class UTLTableEffectPropLooks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableEffectPropLooks>();
	}
};
static_assert(alignof(UTLTableEffectPropLooks) == 0x000008, "Wrong alignment on UTLTableEffectPropLooks");
static_assert(sizeof(UTLTableEffectPropLooks) == 0x000168, "Wrong size on UTLTableEffectPropLooks");

// Class TLTable.TLTableFO
// 0x00A8 (0x0208 - 0x0160)
class UTLTableFO final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0xA8];                                     // 0x0160(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableFO">();
	}
	static class UTLTableFO* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableFO>();
	}
};
static_assert(alignof(UTLTableFO) == 0x000008, "Wrong alignment on UTLTableFO");
static_assert(sizeof(UTLTableFO) == 0x000208, "Wrong size on UTLTableFO");

// Class TLTable.TLTableFoState
// 0x0008 (0x0168 - 0x0160)
class UTLTableFoState final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableFoState">();
	}
	static class UTLTableFoState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableFoState>();
	}
};
static_assert(alignof(UTLTableFoState) == 0x000008, "Wrong alignment on UTLTableFoState");
static_assert(sizeof(UTLTableFoState) == 0x000168, "Wrong size on UTLTableFoState");

// Class TLTable.TLTableGrowthPassGroup
// 0x0008 (0x0168 - 0x0160)
class UTLTableGrowthPassGroup final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableGrowthPassGroup">();
	}
	static class UTLTableGrowthPassGroup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableGrowthPassGroup>();
	}
};
static_assert(alignof(UTLTableGrowthPassGroup) == 0x000008, "Wrong alignment on UTLTableGrowthPassGroup");
static_assert(sizeof(UTLTableGrowthPassGroup) == 0x000168, "Wrong size on UTLTableGrowthPassGroup");

// Class TLTable.TLTableGuildLevel
// 0x0008 (0x0168 - 0x0160)
class UTLTableGuildLevel final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableGuildLevel">();
	}
	static class UTLTableGuildLevel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableGuildLevel>();
	}
};
static_assert(alignof(UTLTableGuildLevel) == 0x000008, "Wrong alignment on UTLTableGuildLevel");
static_assert(sizeof(UTLTableGuildLevel) == 0x000168, "Wrong size on UTLTableGuildLevel");

// Class TLTable.TLTableGuildRaid
// 0x0008 (0x0168 - 0x0160)
class UTLTableGuildRaid final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableGuildRaid">();
	}
	static class UTLTableGuildRaid* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableGuildRaid>();
	}
};
static_assert(alignof(UTLTableGuildRaid) == 0x000008, "Wrong alignment on UTLTableGuildRaid");
static_assert(sizeof(UTLTableGuildRaid) == 0x000168, "Wrong size on UTLTableGuildRaid");

// Class TLTable.TLTableHyperLinkText
// 0x0008 (0x0168 - 0x0160)
class UTLTableHyperLinkText final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableHyperLinkText">();
	}
	static class UTLTableHyperLinkText* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableHyperLinkText>();
	}
};
static_assert(alignof(UTLTableHyperLinkText) == 0x000008, "Wrong alignment on UTLTableHyperLinkText");
static_assert(sizeof(UTLTableHyperLinkText) == 0x000168, "Wrong size on UTLTableHyperLinkText");

// Class TLTable.TLTableInteractionData
// 0x0008 (0x0168 - 0x0160)
class UTLTableInteractionData final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableInteractionData">();
	}
	static class UTLTableInteractionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableInteractionData>();
	}
};
static_assert(alignof(UTLTableInteractionData) == 0x000008, "Wrong alignment on UTLTableInteractionData");
static_assert(sizeof(UTLTableInteractionData) == 0x000168, "Wrong size on UTLTableInteractionData");

// Class TLTable.TLTableMaster
// 0x0FD8 (0x1010 - 0x0038)
class UTLTableMaster final : public UTLObject
{
public:
	uint8                                         Pad_38[0xF28];                                     // 0x0038(0x0F28)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             DataTableMaster;                                   // 0x0F60(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                             StringTableMaster;                                 // 0x0F68(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, class UTLDataAssetTable*>   DataAssetTables;                                   // 0x0F70(0x0050)(Transient, NativeAccessSpecifierPrivate)
	TMap<class UScriptStruct*, class UTLDataAssetTable*> DataAssetTablesByStruct;                           // 0x0FC0(0x0050)(Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableMaster">();
	}
	static class UTLTableMaster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableMaster>();
	}
};
static_assert(alignof(UTLTableMaster) == 0x000008, "Wrong alignment on UTLTableMaster");
static_assert(sizeof(UTLTableMaster) == 0x001010, "Wrong size on UTLTableMaster");
static_assert(offsetof(UTLTableMaster, DataTableMaster) == 0x000F60, "Member 'UTLTableMaster::DataTableMaster' has a wrong offset!");
static_assert(offsetof(UTLTableMaster, StringTableMaster) == 0x000F68, "Member 'UTLTableMaster::StringTableMaster' has a wrong offset!");
static_assert(offsetof(UTLTableMaster, DataAssetTables) == 0x000F70, "Member 'UTLTableMaster::DataAssetTables' has a wrong offset!");
static_assert(offsetof(UTLTableMaster, DataAssetTablesByStruct) == 0x000FC0, "Member 'UTLTableMaster::DataAssetTablesByStruct' has a wrong offset!");

// Class TLTable.TLTableNPC
// 0x00F8 (0x0258 - 0x0160)
class UTLTableNPC final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0xF8];                                     // 0x0160(0x00F8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableNPC">();
	}
	static class UTLTableNPC* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableNPC>();
	}
};
static_assert(alignof(UTLTableNPC) == 0x000008, "Wrong alignment on UTLTableNPC");
static_assert(sizeof(UTLTableNPC) == 0x000258, "Wrong size on UTLTableNPC");

// Class TLTable.TLTableSkillLooks
// 0x0008 (0x0168 - 0x0160)
class UTLTableSkillLooks final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableSkillLooks">();
	}
	static class UTLTableSkillLooks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableSkillLooks>();
	}
};
static_assert(alignof(UTLTableSkillLooks) == 0x000008, "Wrong alignment on UTLTableSkillLooks");
static_assert(sizeof(UTLTableSkillLooks) == 0x000168, "Wrong size on UTLTableSkillLooks");

// Class TLTable.TLTableSkillPcLooks
// 0x0008 (0x0168 - 0x0160)
class UTLTableSkillPcLooks final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableSkillPcLooks">();
	}
	static class UTLTableSkillPcLooks* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableSkillPcLooks>();
	}
};
static_assert(alignof(UTLTableSkillPcLooks) == 0x000008, "Wrong alignment on UTLTableSkillPcLooks");
static_assert(sizeof(UTLTableSkillPcLooks) == 0x000168, "Wrong size on UTLTableSkillPcLooks");

// Class TLTable.TLTableSocialMotion
// 0x0008 (0x0168 - 0x0160)
class UTLTableSocialMotion final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableSocialMotion">();
	}
	static class UTLTableSocialMotion* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableSocialMotion>();
	}
};
static_assert(alignof(UTLTableSocialMotion) == 0x000008, "Wrong alignment on UTLTableSocialMotion");
static_assert(sizeof(UTLTableSocialMotion) == 0x000168, "Wrong size on UTLTableSocialMotion");

// Class TLTable.TLTableTextTooltip
// 0x0008 (0x0168 - 0x0160)
class UTLTableTextTooltip final : public UTLDataAssetTable
{
public:
	uint8                                         Pad_160[0x8];                                      // 0x0160(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TLTableTextTooltip">();
	}
	static class UTLTableTextTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTLTableTextTooltip>();
	}
};
static_assert(alignof(UTLTableTextTooltip) == 0x000008, "Wrong alignment on UTLTableTextTooltip");
static_assert(sizeof(UTLTableTextTooltip) == 0x000168, "Wrong size on UTLTableTextTooltip");

}

