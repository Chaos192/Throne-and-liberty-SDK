#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DamageFloaterGroup_Defence

#include "Basic.hpp"

#include "TLScheme_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_DamageFloaterGroup_Defence.BP_DamageFloaterGroup_Defence_C.ExecuteUbergraph_BP_DamageFloaterGroup_Defence
// 0x0058 (0x0058 - 0x0000)
struct BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInPrimeSkill;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHpAbnormalStatus                             K2Node_Event_AbnormalStatus;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInSuccessByAccuracy;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFloaterCategory                              K2Node_Event_FloaterCategory;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsMyPc;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddImageBrushBinding_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddVisibleBinding_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddImageBrushBinding_ReturnValue_1;       // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x001C(0x001C)(NoDestructor)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_1;               // 0x0038(0x001C)(NoDestructor)
	bool                                          CallFunc_AddVisibleBinding_ReturnValue_1;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence) == 0x000008, "Wrong alignment on BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence");
static_assert(sizeof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence) == 0x000058, "Wrong size on BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, EntryPoint) == 0x000000, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, K2Node_Event_bInPrimeSkill) == 0x000004, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::K2Node_Event_bInPrimeSkill' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, K2Node_Event_AbnormalStatus) == 0x000005, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::K2Node_Event_AbnormalStatus' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, K2Node_Event_bInSuccessByAccuracy) == 0x000006, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::K2Node_Event_bInSuccessByAccuracy' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, K2Node_Event_FloaterCategory) == 0x000007, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::K2Node_Event_FloaterCategory' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, K2Node_Event_IsMyPc) == 0x000008, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::K2Node_Event_IsMyPc' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, CallFunc_AddImageBrushBinding_ReturnValue) == 0x000019, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::CallFunc_AddImageBrushBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, CallFunc_AddVisibleBinding_ReturnValue) == 0x00001A, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::CallFunc_AddVisibleBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, CallFunc_AddImageBrushBinding_ReturnValue_1) == 0x00001B, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::CallFunc_AddImageBrushBinding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, K2Node_MakeStruct_WidgetTransform) == 0x00001C, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, K2Node_MakeStruct_WidgetTransform_1) == 0x000038, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::K2Node_MakeStruct_WidgetTransform_1' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence, CallFunc_AddVisibleBinding_ReturnValue_1) == 0x000054, "Member 'BP_DamageFloaterGroup_Defence_C_ExecuteUbergraph_BP_DamageFloaterGroup_Defence::CallFunc_AddVisibleBinding_ReturnValue_1' has a wrong offset!");

// Function BP_DamageFloaterGroup_Defence.BP_DamageFloaterGroup_Defence_C.OnEmit
// 0x0005 (0x0005 - 0x0000)
struct BP_DamageFloaterGroup_Defence_C_OnEmit final
{
public:
	bool                                          bInPrimeSkill;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EHpAbnormalStatus                             AbnormalStatus;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInSuccessByAccuracy;                              // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFloaterCategory                              FloaterCategory;                                   // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMyPc;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DamageFloaterGroup_Defence_C_OnEmit) == 0x000001, "Wrong alignment on BP_DamageFloaterGroup_Defence_C_OnEmit");
static_assert(sizeof(BP_DamageFloaterGroup_Defence_C_OnEmit) == 0x000005, "Wrong size on BP_DamageFloaterGroup_Defence_C_OnEmit");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_OnEmit, bInPrimeSkill) == 0x000000, "Member 'BP_DamageFloaterGroup_Defence_C_OnEmit::bInPrimeSkill' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_OnEmit, AbnormalStatus) == 0x000001, "Member 'BP_DamageFloaterGroup_Defence_C_OnEmit::AbnormalStatus' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_OnEmit, bInSuccessByAccuracy) == 0x000002, "Member 'BP_DamageFloaterGroup_Defence_C_OnEmit::bInSuccessByAccuracy' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_OnEmit, FloaterCategory) == 0x000003, "Member 'BP_DamageFloaterGroup_Defence_C_OnEmit::FloaterCategory' has a wrong offset!");
static_assert(offsetof(BP_DamageFloaterGroup_Defence_C_OnEmit, IsMyPc) == 0x000004, "Member 'BP_DamageFloaterGroup_Defence_C_OnEmit::IsMyPc' has a wrong offset!");

}

