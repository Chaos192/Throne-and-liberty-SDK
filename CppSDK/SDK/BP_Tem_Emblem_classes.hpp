#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tem_Emblem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Tem_Emblem.BP_Tem_Emblem_C
// 0x0038 (0x0AD8 - 0x0AA0)
class UBP_Tem_Emblem_C final : public UTLUserWidgetEmblem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTLImage*                               EmblemBack;                                        // 0x0AA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               IMG_Emblem;                                        // 0x0AB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               IMG_None_Material;                                 // 0x0AB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Emblem_Size_Off;                                   // 0x0AC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC1[0x3];                                      // 0x0AC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Emblem_Size;                                       // 0x0AC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EmblemBackOnOff;                                   // 0x0AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC9[0x3];                                      // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              EmblemBack_Size;                                   // 0x0ACC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Tem_Emblem(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Tem_Emblem_C">();
	}
	static class UBP_Tem_Emblem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Tem_Emblem_C>();
	}
};
static_assert(alignof(UBP_Tem_Emblem_C) == 0x000008, "Wrong alignment on UBP_Tem_Emblem_C");
static_assert(sizeof(UBP_Tem_Emblem_C) == 0x000AD8, "Wrong size on UBP_Tem_Emblem_C");
static_assert(offsetof(UBP_Tem_Emblem_C, UberGraphFrame) == 0x000AA0, "Member 'UBP_Tem_Emblem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Tem_Emblem_C, EmblemBack) == 0x000AA8, "Member 'UBP_Tem_Emblem_C::EmblemBack' has a wrong offset!");
static_assert(offsetof(UBP_Tem_Emblem_C, IMG_Emblem) == 0x000AB0, "Member 'UBP_Tem_Emblem_C::IMG_Emblem' has a wrong offset!");
static_assert(offsetof(UBP_Tem_Emblem_C, IMG_None_Material) == 0x000AB8, "Member 'UBP_Tem_Emblem_C::IMG_None_Material' has a wrong offset!");
static_assert(offsetof(UBP_Tem_Emblem_C, Emblem_Size_Off) == 0x000AC0, "Member 'UBP_Tem_Emblem_C::Emblem_Size_Off' has a wrong offset!");
static_assert(offsetof(UBP_Tem_Emblem_C, Emblem_Size) == 0x000AC4, "Member 'UBP_Tem_Emblem_C::Emblem_Size' has a wrong offset!");
static_assert(offsetof(UBP_Tem_Emblem_C, EmblemBackOnOff) == 0x000AC8, "Member 'UBP_Tem_Emblem_C::EmblemBackOnOff' has a wrong offset!");
static_assert(offsetof(UBP_Tem_Emblem_C, EmblemBack_Size) == 0x000ACC, "Member 'UBP_Tem_Emblem_C::EmblemBack_Size' has a wrong offset!");

}

