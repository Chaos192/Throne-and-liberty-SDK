#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NamePlateFrame_PcSimple_Optimization2C

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TLClient_structs.hpp"
#include "TLClient_classes.hpp"
#include "TLScheme_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_NamePlateFrame_PcSimple_Optimization2C.BP_NamePlateFrame_PcSimple_Optimization2C_C
// 0x0120 (0x1150 - 0x1030)
class UBP_NamePlateFrame_PcSimple_Optimization2C_C final : public UTLUserWidgetNamePlatePC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_NamePlate_HPGage_Optimization_C*    BP_HPGauge;                                        // 0x1038(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NamePlate_Guild_Optimization2_C*    BP_NamePlate_Guild_Optimization2;                  // 0x1040(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NamePlate_TeamBattle_Emblem_C*      BP_NamePlate_TeamBattle_Emblem;                    // 0x1048(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tem_KeyIcon_BTN_C*                  BP_Tem_KeyIcon_BTN;                                // 0x1050(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         CharInfo_HBox;                                     // 0x1058(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSpacer*                              CharInfo_NameHP_Size;                              // 0x1060(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSpacer*                              CharInfo_Size;                                     // 0x1068(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ContentsMarker_Sign;                               // 0x1070(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               EE_BG;                                             // 0x1078(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           EE_GridPanel;                                      // 0x1080(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GuildSlot_1;                                       // 0x1088(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GuildSlot_GuildRelation;                           // 0x1090(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GuildSlot_GuildRelationConflict;                   // 0x1098(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               HitArea_Name;                                      // 0x10A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Image_EEIcon;                                      // 0x10A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ImgBossTarget;                                     // 0x10B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ImgDetectionIcon;                                  // 0x10B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NameBG_Simple;                                     // 0x10C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NormalSlot_S_Glow;                                 // 0x10C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NormalSlot_S_GuildRelation;                        // 0x10D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_CharacterName;                                // 0x10D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_EECount;                                      // 0x10E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLUniformGridPanel*                    TLUniform_Usurping;                                // 0x10E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         TLVbox_NameplatePC;                                // 0x10F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               VivoxVoice_Icon;                                   // 0x10F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         DefaultFontSize;                                   // 0x1100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FixTargetFontSize;                                 // 0x1104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        Path_DetectionIcon_RangeIn;                        // 0x1108(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSoftObjectPath                        Path_DetectionIcon_RangeOut;                       // 0x1120(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bIsMyPcConfictZone;                                // 0x1138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1139[0x7];                                     // 0x1139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               NameBG_Layout_Y;                                   // 0x1140(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_NamePlateFrame_PcSimple_Optimization2C(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnUpdateHpBarType(EHpBarType InHpBarType);
	void OnUpdateSimpleLayout(ETLNameplateSimpleLayout InLayout);
	void OnUpdatedMassCombatMode(bool bInMassCombatMode);
	void OnSlotColorUpdate();
	void OnChangeStealthDetectionState(ETLStealthDectectionState State);
	void OnSimpleModeOffsetForConsole(const struct FVector2D& InRenderTransformOffset);
	void OnChangeOtherPCAlive(bool bIsAlive);
	void OnSetInteractPCTarget(bool InTarget);
	void Fn_SetGuildRelationColor(bool ConflictZone);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NamePlateFrame_PcSimple_Optimization2C_C">();
	}
	static class UBP_NamePlateFrame_PcSimple_Optimization2C_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NamePlateFrame_PcSimple_Optimization2C_C>();
	}
};
static_assert(alignof(UBP_NamePlateFrame_PcSimple_Optimization2C_C) == 0x000010, "Wrong alignment on UBP_NamePlateFrame_PcSimple_Optimization2C_C");
static_assert(sizeof(UBP_NamePlateFrame_PcSimple_Optimization2C_C) == 0x001150, "Wrong size on UBP_NamePlateFrame_PcSimple_Optimization2C_C");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, UberGraphFrame) == 0x001030, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, BP_HPGauge) == 0x001038, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::BP_HPGauge' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, BP_NamePlate_Guild_Optimization2) == 0x001040, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::BP_NamePlate_Guild_Optimization2' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, BP_NamePlate_TeamBattle_Emblem) == 0x001048, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::BP_NamePlate_TeamBattle_Emblem' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, BP_Tem_KeyIcon_BTN) == 0x001050, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::BP_Tem_KeyIcon_BTN' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, CharInfo_HBox) == 0x001058, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::CharInfo_HBox' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, CharInfo_NameHP_Size) == 0x001060, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::CharInfo_NameHP_Size' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, CharInfo_Size) == 0x001068, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::CharInfo_Size' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, ContentsMarker_Sign) == 0x001070, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::ContentsMarker_Sign' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, EE_BG) == 0x001078, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::EE_BG' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, EE_GridPanel) == 0x001080, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::EE_GridPanel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, GuildSlot_1) == 0x001088, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::GuildSlot_1' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, GuildSlot_GuildRelation) == 0x001090, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::GuildSlot_GuildRelation' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, GuildSlot_GuildRelationConflict) == 0x001098, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::GuildSlot_GuildRelationConflict' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, HitArea_Name) == 0x0010A0, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::HitArea_Name' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, Image_EEIcon) == 0x0010A8, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::Image_EEIcon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, ImgBossTarget) == 0x0010B0, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::ImgBossTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, ImgDetectionIcon) == 0x0010B8, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::ImgDetectionIcon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, NameBG_Simple) == 0x0010C0, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::NameBG_Simple' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, NormalSlot_S_Glow) == 0x0010C8, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::NormalSlot_S_Glow' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, NormalSlot_S_GuildRelation) == 0x0010D0, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::NormalSlot_S_GuildRelation' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, Text_CharacterName) == 0x0010D8, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::Text_CharacterName' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, Text_EECount) == 0x0010E0, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::Text_EECount' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, TLUniform_Usurping) == 0x0010E8, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::TLUniform_Usurping' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, TLVbox_NameplatePC) == 0x0010F0, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::TLVbox_NameplatePC' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, VivoxVoice_Icon) == 0x0010F8, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::VivoxVoice_Icon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, DefaultFontSize) == 0x001100, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::DefaultFontSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, FixTargetFontSize) == 0x001104, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::FixTargetFontSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, Path_DetectionIcon_RangeIn) == 0x001108, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::Path_DetectionIcon_RangeIn' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, Path_DetectionIcon_RangeOut) == 0x001120, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::Path_DetectionIcon_RangeOut' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, bIsMyPcConfictZone) == 0x001138, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::bIsMyPcConfictZone' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_PcSimple_Optimization2C_C, NameBG_Layout_Y) == 0x001140, "Member 'UBP_NamePlateFrame_PcSimple_Optimization2C_C::NameBG_Layout_Y' has a wrong offset!");

}

