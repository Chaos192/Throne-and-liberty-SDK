#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NCMovieSceneTracks

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK
{

// ScriptStruct NCMovieSceneTracks.MovieSceneFollowTargetCamKeyStruct
// 0x0040 (0x0048 - 0x0008)
struct FMovieSceneFollowTargetCamKeyStruct final : public FMovieSceneKeyStruct
{
public:
	float                                         Distance;                                          // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Offset;                                            // 0x0018(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameNumber                           Time;                                              // 0x0028(0x0004)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x1C];                                      // 0x002C(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneFollowTargetCamKeyStruct) == 0x000008, "Wrong alignment on FMovieSceneFollowTargetCamKeyStruct");
static_assert(sizeof(FMovieSceneFollowTargetCamKeyStruct) == 0x000048, "Wrong size on FMovieSceneFollowTargetCamKeyStruct");
static_assert(offsetof(FMovieSceneFollowTargetCamKeyStruct, Distance) == 0x000008, "Member 'FMovieSceneFollowTargetCamKeyStruct::Distance' has a wrong offset!");
static_assert(offsetof(FMovieSceneFollowTargetCamKeyStruct, Rotation) == 0x00000C, "Member 'FMovieSceneFollowTargetCamKeyStruct::Rotation' has a wrong offset!");
static_assert(offsetof(FMovieSceneFollowTargetCamKeyStruct, Offset) == 0x000018, "Member 'FMovieSceneFollowTargetCamKeyStruct::Offset' has a wrong offset!");
static_assert(offsetof(FMovieSceneFollowTargetCamKeyStruct, Weight) == 0x000024, "Member 'FMovieSceneFollowTargetCamKeyStruct::Weight' has a wrong offset!");
static_assert(offsetof(FMovieSceneFollowTargetCamKeyStruct, Time) == 0x000028, "Member 'FMovieSceneFollowTargetCamKeyStruct::Time' has a wrong offset!");

// ScriptStruct NCMovieSceneTracks.MovieSceneTargetFollowCamTemplateNC01
// 0x05C0 (0x05E0 - 0x0020)
struct alignas(0x10) FMovieSceneTargetFollowCamTemplateNC01 final : public FMovieSceneEvalTemplate
{
public:
	struct FMovieSceneFloatChannel                TargetFollowCamDistanceChannel;                    // 0x0020(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                TargetFollowCamRotationChannel[0x3];               // 0x00C0(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                TargetFollowCamOffsetChannel[0x3];                 // 0x02A0(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                TargetFollowCamWeightChannel;                      // 0x0480(0x00A0)(NativeAccessSpecifierPrivate)
	class FName                                   TargetBoneSocketName;                              // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMovieSceneObjectBindingID             TargetBindingObjectID;                             // 0x0528(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_540[0xA0];                                     // 0x0540(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneTargetFollowCamTemplateNC01) == 0x000010, "Wrong alignment on FMovieSceneTargetFollowCamTemplateNC01");
static_assert(sizeof(FMovieSceneTargetFollowCamTemplateNC01) == 0x0005E0, "Wrong size on FMovieSceneTargetFollowCamTemplateNC01");
static_assert(offsetof(FMovieSceneTargetFollowCamTemplateNC01, TargetFollowCamDistanceChannel) == 0x000020, "Member 'FMovieSceneTargetFollowCamTemplateNC01::TargetFollowCamDistanceChannel' has a wrong offset!");
static_assert(offsetof(FMovieSceneTargetFollowCamTemplateNC01, TargetFollowCamRotationChannel) == 0x0000C0, "Member 'FMovieSceneTargetFollowCamTemplateNC01::TargetFollowCamRotationChannel' has a wrong offset!");
static_assert(offsetof(FMovieSceneTargetFollowCamTemplateNC01, TargetFollowCamOffsetChannel) == 0x0002A0, "Member 'FMovieSceneTargetFollowCamTemplateNC01::TargetFollowCamOffsetChannel' has a wrong offset!");
static_assert(offsetof(FMovieSceneTargetFollowCamTemplateNC01, TargetFollowCamWeightChannel) == 0x000480, "Member 'FMovieSceneTargetFollowCamTemplateNC01::TargetFollowCamWeightChannel' has a wrong offset!");
static_assert(offsetof(FMovieSceneTargetFollowCamTemplateNC01, TargetBoneSocketName) == 0x000520, "Member 'FMovieSceneTargetFollowCamTemplateNC01::TargetBoneSocketName' has a wrong offset!");
static_assert(offsetof(FMovieSceneTargetFollowCamTemplateNC01, TargetBindingObjectID) == 0x000528, "Member 'FMovieSceneTargetFollowCamTemplateNC01::TargetBindingObjectID' has a wrong offset!");

}

