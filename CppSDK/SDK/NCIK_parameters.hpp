#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NCIK

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function NCIK.NCIKBlueprintFunctionLibrary.SetAnimRootMotionTranslationScale
// 0x0010 (0x0010 - 0x0000)
struct NCIKBlueprintFunctionLibrary_SetAnimRootMotionTranslationScale final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InAnimRootMotionTranslationScale;                  // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NCIKBlueprintFunctionLibrary_SetAnimRootMotionTranslationScale) == 0x000008, "Wrong alignment on NCIKBlueprintFunctionLibrary_SetAnimRootMotionTranslationScale");
static_assert(sizeof(NCIKBlueprintFunctionLibrary_SetAnimRootMotionTranslationScale) == 0x000010, "Wrong size on NCIKBlueprintFunctionLibrary_SetAnimRootMotionTranslationScale");
static_assert(offsetof(NCIKBlueprintFunctionLibrary_SetAnimRootMotionTranslationScale, Character) == 0x000000, "Member 'NCIKBlueprintFunctionLibrary_SetAnimRootMotionTranslationScale::Character' has a wrong offset!");
static_assert(offsetof(NCIKBlueprintFunctionLibrary_SetAnimRootMotionTranslationScale, InAnimRootMotionTranslationScale) == 0x000008, "Member 'NCIKBlueprintFunctionLibrary_SetAnimRootMotionTranslationScale::InAnimRootMotionTranslationScale' has a wrong offset!");

// Function NCIK.NCIKBlueprintFunctionLibrary.SetDrawDebugColor
// 0x0018 (0x0018 - 0x0000)
struct NCIKBlueprintFunctionLibrary_SetDrawDebugColor final
{
public:
	class USkinnedMeshComponent*                  MeshComp;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NCIKBlueprintFunctionLibrary_SetDrawDebugColor) == 0x000008, "Wrong alignment on NCIKBlueprintFunctionLibrary_SetDrawDebugColor");
static_assert(sizeof(NCIKBlueprintFunctionLibrary_SetDrawDebugColor) == 0x000018, "Wrong size on NCIKBlueprintFunctionLibrary_SetDrawDebugColor");
static_assert(offsetof(NCIKBlueprintFunctionLibrary_SetDrawDebugColor, MeshComp) == 0x000000, "Member 'NCIKBlueprintFunctionLibrary_SetDrawDebugColor::MeshComp' has a wrong offset!");
static_assert(offsetof(NCIKBlueprintFunctionLibrary_SetDrawDebugColor, Color) == 0x000008, "Member 'NCIKBlueprintFunctionLibrary_SetDrawDebugColor::Color' has a wrong offset!");

}

