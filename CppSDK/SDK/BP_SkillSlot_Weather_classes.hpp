#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillSlot_Weather

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "TLClient_classes.hpp"
#include "TLScheme_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SkillSlot_Weather.BP_SkillSlot_Weather_C
// 0x00B8 (0x0B50 - 0x0A98)
class UBP_SkillSlot_Weather_C final : public UTLUserWidgetSkillSlotWeather
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A98(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Weather_Reset;                                     // 0x0AA0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Night_Loop_Anim;                                   // 0x0AA8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Rain_Loop_Anim;                                    // 0x0AB0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Wind_Loop_Anim;                                    // 0x0AB8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x0AC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Dark_2;                                            // 0x0AC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               FX_Aura;                                           // 0x0AD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               FX_Aura_01;                                        // 0x0AD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               FX_Rain;                                           // 0x0AE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Icon_Rain;                                         // 0x0AE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Icon_Wind;                                         // 0x0AF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Leaves;                                            // 0x0AF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Moon;                                              // 0x0B00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         Night;                                             // 0x0B08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         RainOverlay;                                       // 0x0B10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Star;                                              // 0x0B18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Star_2;                                            // 0x0B20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLInvalidationBox*                     TLInvalidationBox_0;                               // 0x0B28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         WindOveray;                                        // 0x0B30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Set_visible_Back;                                  // 0x0B38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B39[0x3];                                      // 0x0B39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Icon_MarginOffset;                                 // 0x0B3C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_SkillSlot_Weather(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SkillSlot_Weather_C">();
	}
	static class UBP_SkillSlot_Weather_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SkillSlot_Weather_C>();
	}
};
static_assert(alignof(UBP_SkillSlot_Weather_C) == 0x000008, "Wrong alignment on UBP_SkillSlot_Weather_C");
static_assert(sizeof(UBP_SkillSlot_Weather_C) == 0x000B50, "Wrong size on UBP_SkillSlot_Weather_C");
static_assert(offsetof(UBP_SkillSlot_Weather_C, UberGraphFrame) == 0x000A98, "Member 'UBP_SkillSlot_Weather_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Weather_Reset) == 0x000AA0, "Member 'UBP_SkillSlot_Weather_C::Weather_Reset' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Night_Loop_Anim) == 0x000AA8, "Member 'UBP_SkillSlot_Weather_C::Night_Loop_Anim' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Rain_Loop_Anim) == 0x000AB0, "Member 'UBP_SkillSlot_Weather_C::Rain_Loop_Anim' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Wind_Loop_Anim) == 0x000AB8, "Member 'UBP_SkillSlot_Weather_C::Wind_Loop_Anim' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, CanvasPanel_0) == 0x000AC0, "Member 'UBP_SkillSlot_Weather_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Dark_2) == 0x000AC8, "Member 'UBP_SkillSlot_Weather_C::Dark_2' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, FX_Aura) == 0x000AD0, "Member 'UBP_SkillSlot_Weather_C::FX_Aura' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, FX_Aura_01) == 0x000AD8, "Member 'UBP_SkillSlot_Weather_C::FX_Aura_01' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, FX_Rain) == 0x000AE0, "Member 'UBP_SkillSlot_Weather_C::FX_Rain' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Icon_Rain) == 0x000AE8, "Member 'UBP_SkillSlot_Weather_C::Icon_Rain' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Icon_Wind) == 0x000AF0, "Member 'UBP_SkillSlot_Weather_C::Icon_Wind' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Leaves) == 0x000AF8, "Member 'UBP_SkillSlot_Weather_C::Leaves' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Moon) == 0x000B00, "Member 'UBP_SkillSlot_Weather_C::Moon' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Night) == 0x000B08, "Member 'UBP_SkillSlot_Weather_C::Night' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, RainOverlay) == 0x000B10, "Member 'UBP_SkillSlot_Weather_C::RainOverlay' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Star) == 0x000B18, "Member 'UBP_SkillSlot_Weather_C::Star' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Star_2) == 0x000B20, "Member 'UBP_SkillSlot_Weather_C::Star_2' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, TLInvalidationBox_0) == 0x000B28, "Member 'UBP_SkillSlot_Weather_C::TLInvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, WindOveray) == 0x000B30, "Member 'UBP_SkillSlot_Weather_C::WindOveray' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Set_visible_Back) == 0x000B38, "Member 'UBP_SkillSlot_Weather_C::Set_visible_Back' has a wrong offset!");
static_assert(offsetof(UBP_SkillSlot_Weather_C, Icon_MarginOffset) == 0x000B3C, "Member 'UBP_SkillSlot_Weather_C::Icon_MarginOffset' has a wrong offset!");

}

