#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NcPlatformSdk

#include "Basic.hpp"

#include "NcPlatformSdk_classes.hpp"
#include "NcPlatformSdk_parameters.hpp"


namespace SDK
{

// Function NcPlatformSdk.GenericPlatformNcWebBrowser.BroadcastOnBeforePopup
// (Final, Native, Protected)
// Parameters:
// class FString                           InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Frame                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGenericPlatformNcWebBrowser::BroadcastOnBeforePopup(const class FString& InUrl, const class FString& Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GenericPlatformNcWebBrowser", "BroadcastOnBeforePopup");

	Params::GenericPlatformNcWebBrowser_BroadcastOnBeforePopup Parms{};

	Parms.InUrl = std::move(InUrl);
	Parms.Frame = std::move(Frame);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.GenericPlatformNcWebBrowser.BroadcastOnUrlChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGenericPlatformNcWebBrowser::BroadcastOnUrlChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GenericPlatformNcWebBrowser", "BroadcastOnUrlChanged");

	Params::GenericPlatformNcWebBrowser_BroadcastOnUrlChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.GenericPlatformNcWebBrowser.BroadcastOnWebBrowserClosed
// (Final, Native, Protected)
// Parameters:
// bool                                    HasError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMsg                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGenericPlatformNcWebBrowser::BroadcastOnWebBrowserClosed(bool HasError, const class FString& ErrorMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GenericPlatformNcWebBrowser", "BroadcastOnWebBrowserClosed");

	Params::GenericPlatformNcWebBrowser_BroadcastOnWebBrowserClosed Parms{};

	Parms.HasError = HasError;
	Parms.ErrorMsg = std::move(ErrorMsg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction NcPlatformSdk.GenericPlatformNcWebBrowser.OnBeforePopup__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Frame                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGenericPlatformNcWebBrowser::OnBeforePopup__DelegateSignature(const class FString& URL, const class FString& Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GenericPlatformNcWebBrowser", "OnBeforePopup__DelegateSignature");

	Params::GenericPlatformNcWebBrowser_OnBeforePopup__DelegateSignature Parms{};

	Parms.URL = std::move(URL);
	Parms.Frame = std::move(Frame);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction NcPlatformSdk.GenericPlatformNcWebBrowser.OnUrlChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UGenericPlatformNcWebBrowser::OnUrlChanged__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GenericPlatformNcWebBrowser", "OnUrlChanged__DelegateSignature");

	Params::GenericPlatformNcWebBrowser_OnUrlChanged__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction NcPlatformSdk.GenericPlatformNcWebBrowser.OnWebBrowserClosed__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    HasError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMsg                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGenericPlatformNcWebBrowser::OnWebBrowserClosed__DelegateSignature(bool HasError, const class FString& ErrorMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GenericPlatformNcWebBrowser", "OnWebBrowserClosed__DelegateSignature");

	Params::GenericPlatformNcWebBrowser_OnWebBrowserClosed__DelegateSignature Parms{};

	Parms.HasError = HasError;
	Parms.ErrorMsg = std::move(ErrorMsg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NcPlatformSdk.NcModalWidget.OnClickTemplateCloseButton
// (Final, Native, Private)

void UNcModalWidget::OnClickTemplateCloseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcModalWidget", "OnClickTemplateCloseButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.LoginViaPlayncWidget.Hide
// (Final, Native, Public)

void ULoginViaPlayncWidget::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginViaPlayncWidget", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.LoginViaPlayncWidget.NativeConstruct
// (Final, Native, Private)

void ULoginViaPlayncWidget::NativeConstruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginViaPlayncWidget", "NativeConstruct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.LoginViaPlayncWidget.OnClickClose
// (Final, Native, Private)

void ULoginViaPlayncWidget::OnClickClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginViaPlayncWidget", "OnClickClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.LoginViaPlayncWidget.OnClickLogin
// (Final, Native, Private)

void ULoginViaPlayncWidget::OnClickLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginViaPlayncWidget", "OnClickLogin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.LoginViaPlayncWidget.OnTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ULoginViaPlayncWidget::OnTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginViaPlayncWidget", "OnTextChanged");

	Params::LoginViaPlayncWidget_OnTextChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.LoginViaPlayncWidget.Show
// (Final, Native, Public)

void ULoginViaPlayncWidget::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginViaPlayncWidget", "Show");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcAgeSelectWidget.OnClickUnderLineButtonHandler
// (Final, Native, Private)

void UNcAgeSelectWidget::OnClickUnderLineButtonHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcAgeSelectWidget", "OnClickUnderLineButtonHandler");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcAlertWithBottomAreaWidget.OnClickBottomButtonHandler
// (Final, Native, Private)

void UNcAlertWithBottomAreaWidget::OnClickBottomButtonHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcAlertWithBottomAreaWidget", "OnClickBottomButtonHandler");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcInputTextAlertWidget.OnTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNcInputTextAlertWidget::OnTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcInputTextAlertWidget", "OnTextChanged");

	Params::NcInputTextAlertWidget_OnTextChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcInputTextAlertWidget.RefreshInputText
// (Final, Native, Private)

void UNcInputTextAlertWidget::RefreshInputText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcInputTextAlertWidget", "RefreshInputText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcAuthenticationNumberInputWidget.BroadcastOnClickManageInfo
// (Final, Native, Private)

void UNcAuthenticationNumberInputWidget::BroadcastOnClickManageInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcAuthenticationNumberInputWidget", "BroadcastOnClickManageInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcAuthenticationNumberInputWidget.BroadcastOnClickRetry
// (Final, Native, Private)

void UNcAuthenticationNumberInputWidget::BroadcastOnClickRetry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcAuthenticationNumberInputWidget", "BroadcastOnClickRetry");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcAuthenticationNumberInputWidget.EnableResendButton
// (Final, Native, Private)

void UNcAuthenticationNumberInputWidget::EnableResendButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcAuthenticationNumberInputWidget", "EnableResendButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcAuthenticationNumberInputWidget.UpdateWarningState
// (Final, Native, Private)
// Parameters:
// bool                                    bIsWarning                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcAuthenticationNumberInputWidget::UpdateWarningState(bool bIsWarning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcAuthenticationNumberInputWidget", "UpdateWarningState");

	Params::NcAuthenticationNumberInputWidget_UpdateWarningState Parms{};

	Parms.bIsWarning = bIsWarning;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcAuthTypeSelectorWidget.BroadcastOnClickClose
// (Final, Native, Private)

void UNcAuthTypeSelectorWidget::BroadcastOnClickClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcAuthTypeSelectorWidget", "BroadcastOnClickClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcAuthTypeSelectorWidget.BroadcastOnClickPurpleAuth
// (Final, Native, Private)

void UNcAuthTypeSelectorWidget::BroadcastOnClickPurpleAuth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcAuthTypeSelectorWidget", "BroadcastOnClickPurpleAuth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcAuthTypeSelectorWidget.BroadcastOnClickRegisterDevice
// (Final, Native, Private)

void UNcAuthTypeSelectorWidget::BroadcastOnClickRegisterDevice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcAuthTypeSelectorWidget", "BroadcastOnClickRegisterDevice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcCheckBox.BroadcastCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcCheckBox::BroadcastCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcCheckBox", "BroadcastCheckStateChanged");

	Params::NcCheckBox_BroadcastCheckStateChanged Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcCountrySelectWidget.AddCountry
// (Final, Native, Public)
// Parameters:
// class FString                           CountryCode                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EnglishName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcCountrySelectWidget::AddCountry(const class FString& CountryCode, const class FString& EnglishName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcCountrySelectWidget", "AddCountry");

	Params::NcCountrySelectWidget_AddCountry Parms{};

	Parms.CountryCode = std::move(CountryCode);
	Parms.EnglishName = std::move(EnglishName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcCountrySelectWidget.GetSelectedCountry
// (Final, Native, Public)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNcCountrySelectWidget::GetSelectedCountry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcCountrySelectWidget", "GetSelectedCountry");

	Params::NcCountrySelectWidget_GetSelectedCountry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NcPlatformSdk.NcCountrySelectWidget.LockSelection
// (Final, Native, Public)

void UNcCountrySelectWidget::LockSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcCountrySelectWidget", "LockSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcCountrySelectWidget.OnCountrySelectChanged
// (Final, Native, Private)
// Parameters:
// class FString                           SelectedItem                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcCountrySelectWidget::OnCountrySelectChanged(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcCountrySelectWidget", "OnCountrySelectChanged");

	Params::NcCountrySelectWidget_OnCountrySelectChanged Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcCountrySelectWidget.SetInitialCountry
// (Final, Native, Public)
// Parameters:
// class FString                           CountryCode                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcCountrySelectWidget::SetInitialCountry(const class FString& CountryCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcCountrySelectWidget", "SetInitialCountry");

	Params::NcCountrySelectWidget_SetInitialCountry Parms{};

	Parms.CountryCode = std::move(CountryCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcCountrySelectWidget.SetSelectedOptionToInitialCountry
// (Final, Native, Public)

void UNcCountrySelectWidget::SetSelectedOptionToInitialCountry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcCountrySelectWidget", "SetSelectedOptionToInitialCountry");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcDeviceListSlotWidget.BroadcastOnClickChangeName
// (Final, Native, Private)

void UNcDeviceListSlotWidget::BroadcastOnClickChangeName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcDeviceListSlotWidget", "BroadcastOnClickChangeName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcDeviceListSlotWidget.BroadcastOnClickDelete
// (Final, Native, Private)

void UNcDeviceListSlotWidget::BroadcastOnClickDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcDeviceListSlotWidget", "BroadcastOnClickDelete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcDeviceListWidget.BroadcastOnClickChangePhoneNumberButton
// (Final, Native, Private)

void UNcDeviceListWidget::BroadcastOnClickChangePhoneNumberButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcDeviceListWidget", "BroadcastOnClickChangePhoneNumberButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcGeneralWebViewWidget.BroadcastOnBeforePopup
// (Final, Native, Private)
// Parameters:
// class FString                           InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Frame                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcGeneralWebViewWidget::BroadcastOnBeforePopup(const class FString& InUrl, const class FString& Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcGeneralWebViewWidget", "BroadcastOnBeforePopup");

	Params::NcGeneralWebViewWidget_BroadcastOnBeforePopup Parms{};

	Parms.InUrl = std::move(InUrl);
	Parms.Frame = std::move(Frame);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcGeneralWebViewWidget.BroadcastOnClickClose
// (Final, Native, Private)

void UNcGeneralWebViewWidget::BroadcastOnClickClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcGeneralWebViewWidget", "BroadcastOnClickClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcGeneralWebViewWidget.BroadcastOnUrlChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNcGeneralWebViewWidget::BroadcastOnUrlChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcGeneralWebViewWidget", "BroadcastOnUrlChanged");

	Params::NcGeneralWebViewWidget_BroadcastOnUrlChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcGeneralWebViewWidget.ExecuteJavascript
// (Final, Native, Public)
// Parameters:
// class FString                           JavascriptExp                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcGeneralWebViewWidget::ExecuteJavascript(const class FString& JavascriptExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcGeneralWebViewWidget", "ExecuteJavascript");

	Params::NcGeneralWebViewWidget_ExecuteJavascript Parms{};

	Parms.JavascriptExp = std::move(JavascriptExp);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcGeneralWebViewWidget.HandleOnWebBrowserClosed
// (Final, Native, Private)
// Parameters:
// bool                                    HasError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMsg                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcGeneralWebViewWidget::HandleOnWebBrowserClosed(bool HasError, const class FString& ErrorMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcGeneralWebViewWidget", "HandleOnWebBrowserClosed");

	Params::NcGeneralWebViewWidget_HandleOnWebBrowserClosed Parms{};

	Parms.HasError = HasError;
	Parms.ErrorMsg = std::move(ErrorMsg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcGeneralWebViewWidget.HideCloseButton
// (Final, Native, Public)

void UNcGeneralWebViewWidget::HideCloseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcGeneralWebViewWidget", "HideCloseButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcGeneralWebViewWidget.LoadURL
// (Final, Native, Public)
// Parameters:
// class FString                           InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcGeneralWebViewWidget::LoadURL(const class FString& InUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcGeneralWebViewWidget", "LoadURL");

	Params::NcGeneralWebViewWidget_LoadURL Parms{};

	Parms.InUrl = std::move(InUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcGeneralWebViewWidget.SetSupportsTransparency
// (Final, Native, Public)
// Parameters:
// bool                                    InSupportsTransparency                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcGeneralWebViewWidget::SetSupportsTransparency(bool InSupportsTransparency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcGeneralWebViewWidget", "SetSupportsTransparency");

	Params::NcGeneralWebViewWidget_SetSupportsTransparency Parms{};

	Parms.InSupportsTransparency = InSupportsTransparency;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcGeneralWebViewWidget.Show
// (Native, Public)
// Parameters:
// int32                                   InZOrder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcGeneralWebViewWidget::Show(int32 InZOrder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcGeneralWebViewWidget", "Show");

	Params::NcGeneralWebViewWidget_Show Parms{};

	Parms.InZOrder = InZOrder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcGeneralWebViewWidget.GetUrl
// (Final, Native, Public, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNcGeneralWebViewWidget::GetUrl() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcGeneralWebViewWidget", "GetUrl");

	Params::NcGeneralWebViewWidget_GetUrl Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NcPlatformSdk.NcInputPhoneNumberWidget.OnCountryComboBoxChanged
// (Final, Native, Private)
// Parameters:
// class FString                           SelectedItem                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcInputPhoneNumberWidget::OnCountryComboBoxChanged(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcInputPhoneNumberWidget", "OnCountryComboBoxChanged");

	Params::NcInputPhoneNumberWidget_OnCountryComboBoxChanged Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcInputPhoneNumberWidget.OnPhoneNumberInputTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNcInputPhoneNumberWidget::OnPhoneNumberInputTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcInputPhoneNumberWidget", "OnPhoneNumberInputTextChanged");

	Params::NcInputPhoneNumberWidget_OnPhoneNumberInputTextChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPaymentAccountCheckWidget.OnClickRetryButtonHandler
// (Final, Native, Private)

void UNcPaymentAccountCheckWidget::OnClickRetryButtonHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPaymentAccountCheckWidget", "OnClickRetryButtonHandler");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPinCodeDisplayWidget.OnClickHelpButton
// (Final, Native, Private)

void UNcPinCodeDisplayWidget::OnClickHelpButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPinCodeDisplayWidget", "OnClickHelpButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPinCodeInputWidget.DisplayPinCode
// (Final, Native, Private)
// Parameters:
// class FString                           PinCode                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcPinCodeInputWidget::DisplayPinCode(const class FString& PinCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPinCodeInputWidget", "DisplayPinCode");

	Params::NcPinCodeInputWidget_DisplayPinCode Parms{};

	Parms.PinCode = std::move(PinCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPinCodeInputWidget.OnClickHelpButton
// (Final, Native, Private)

void UNcPinCodeInputWidget::OnClickHelpButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPinCodeInputWidget", "OnClickHelpButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPinCodeInputWidget.OnTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNcPinCodeInputWidget::OnTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPinCodeInputWidget", "OnTextChanged");

	Params::NcPinCodeInputWidget_OnTextChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPinCodeInputWidget.RefreshInputText
// (Final, Native, Private)

void UNcPinCodeInputWidget::RefreshInputText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPinCodeInputWidget", "RefreshInputText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPurpleAuthenticatorWidget.BroadcastOnClickAppleStore
// (Final, Native, Private)

void UNcPurpleAuthenticatorWidget::BroadcastOnClickAppleStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPurpleAuthenticatorWidget", "BroadcastOnClickAppleStore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPurpleAuthenticatorWidget.BroadcastOnClickClose
// (Final, Native, Private)

void UNcPurpleAuthenticatorWidget::BroadcastOnClickClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPurpleAuthenticatorWidget", "BroadcastOnClickClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPurpleAuthenticatorWidget.BroadcastOnClickGooglePlay
// (Final, Native, Private)

void UNcPurpleAuthenticatorWidget::BroadcastOnClickGooglePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPurpleAuthenticatorWidget", "BroadcastOnClickGooglePlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPurpleAuthenticatorWidget.BroadcastOnClickResend
// (Final, Native, Private)

void UNcPurpleAuthenticatorWidget::BroadcastOnClickResend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPurpleAuthenticatorWidget", "BroadcastOnClickResend");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcPurpleAuthenticatorWidget.EnableResendButton
// (Final, Native, Private)

void UNcPurpleAuthenticatorWidget::EnableResendButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcPurpleAuthenticatorWidget", "EnableResendButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowAbnormalRefundSlotWidget.BroadcastOnClickPurchaseButton
// (Final, Native, Private)

void UNcShowAbnormalRefundSlotWidget::BroadcastOnClickPurchaseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowAbnormalRefundSlotWidget", "BroadcastOnClickPurchaseButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowAbnormalRefundWidget.BroadcastOnClickContactButton
// (Final, Native, Private)

void UNcShowAbnormalRefundWidget::BroadcastOnClickContactButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowAbnormalRefundWidget", "BroadcastOnClickContactButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowAgreementSlotWidget.BroadcastOnCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcShowAgreementSlotWidget::BroadcastOnCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowAgreementSlotWidget", "BroadcastOnCheckStateChanged");

	Params::NcShowAgreementSlotWidget_BroadcastOnCheckStateChanged Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowAgreementSlotWidget.BroadcastOnClickDetailLink
// (Final, Native, Private)

void UNcShowAgreementSlotWidget::BroadcastOnClickDetailLink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowAgreementSlotWidget", "BroadcastOnClickDetailLink");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowAgreementSlotWidget.ToggleCheckBoxState
// (Final, Native, Private)

void UNcShowAgreementSlotWidget::ToggleCheckBoxState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowAgreementSlotWidget", "ToggleCheckBoxState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowCampaignWidget.BroadcastOnCampaignWebBrowserClosed
// (Final, Native, Private)
// Parameters:
// bool                                    HasError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMsg                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcShowCampaignWidget::BroadcastOnCampaignWebBrowserClosed(bool HasError, const class FString& ErrorMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "BroadcastOnCampaignWebBrowserClosed");

	Params::NcShowCampaignWidget_BroadcastOnCampaignWebBrowserClosed Parms{};

	Parms.HasError = HasError;
	Parms.ErrorMsg = std::move(ErrorMsg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowCampaignWidget.BroadcastOnClickExceptCheck
// (Final, Native, Private)

void UNcShowCampaignWidget::BroadcastOnClickExceptCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "BroadcastOnClickExceptCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowCampaignWidget.GetVisibleStartTime
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UNcShowCampaignWidget::GetVisibleStartTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "GetVisibleStartTime");

	Params::NcShowCampaignWidget_GetVisibleStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NcPlatformSdk.NcShowCampaignWidget.LoadCampaignImage
// (Final, Native, Public)
// Parameters:
// class FString                           ImageUrl                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcShowCampaignWidget::LoadCampaignImage(const class FString& ImageUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "LoadCampaignImage");

	Params::NcShowCampaignWidget_LoadCampaignImage Parms{};

	Parms.ImageUrl = std::move(ImageUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowCampaignWidget.OnHoveredExceptCheckButton
// (Final, Native, Private)

void UNcShowCampaignWidget::OnHoveredExceptCheckButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "OnHoveredExceptCheckButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowCampaignWidget.OnImageClickAction
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UNcShowCampaignWidget::OnImageClickAction(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "OnImageClickAction");

	Params::NcShowCampaignWidget_OnImageClickAction Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NcPlatformSdk.NcShowCampaignWidget.OnInputEnabled
// (Final, Native, Private)

void UNcShowCampaignWidget::OnInputEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "OnInputEnabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowCampaignWidget.OnPressedExceptCheckButton
// (Final, Native, Private)

void UNcShowCampaignWidget::OnPressedExceptCheckButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "OnPressedExceptCheckButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowCampaignWidget.OnReleasedExceptCheckButton
// (Final, Native, Private)

void UNcShowCampaignWidget::OnReleasedExceptCheckButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "OnReleasedExceptCheckButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowCampaignWidget.OnUnhoveredExceptCheckButton
// (Final, Native, Private)

void UNcShowCampaignWidget::OnUnhoveredExceptCheckButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "OnUnhoveredExceptCheckButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowCampaignWidget.SetTemplete
// (Final, Native, Public)
// Parameters:
// int32                                   TemplateType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TitleString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ExceptTitleString                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcShowCampaignWidget::SetTemplete(int32 TemplateType, const class FString& TitleString, const class FString& ExceptTitleString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowCampaignWidget", "SetTemplete");

	Params::NcShowCampaignWidget_SetTemplete Parms{};

	Parms.TemplateType = TemplateType;
	Parms.TitleString = std::move(TitleString);
	Parms.ExceptTitleString = std::move(ExceptTitleString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginProviderCircleWidget.BroadcastOnClickProvider
// (Final, Native, Private)

void UNcShowLoginProviderCircleWidget::BroadcastOnClickProvider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginProviderCircleWidget", "BroadcastOnClickProvider");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginProviderCircleWidget.SetProviderImage
// (Final, Native, Private)
// Parameters:
// class UTexture2D*                       InImage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcShowLoginProviderCircleWidget::SetProviderImage(class UTexture2D* InImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginProviderCircleWidget", "SetProviderImage");

	Params::NcShowLoginProviderCircleWidget_SetProviderImage Parms{};

	Parms.InImage = InImage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginProviderSquareWidget.BroadcastOnClickProvider
// (Final, Native, Private)

void UNcShowLoginProviderSquareWidget::BroadcastOnClickProvider()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginProviderSquareWidget", "BroadcastOnClickProvider");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginProviderSquareWidget.RefreshTextLayout
// (Final, Native, Private)

void UNcShowLoginProviderSquareWidget::RefreshTextLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginProviderSquareWidget", "RefreshTextLayout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginProviderSquareWidget.SetProviderText
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNcShowLoginProviderSquareWidget::SetProviderText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginProviderSquareWidget", "SetProviderText");

	Params::NcShowLoginProviderSquareWidget_SetProviderText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginWidget.BroadcastOnClickClose
// (Final, Native, Private)

void UNcShowLoginWidget::BroadcastOnClickClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginWidget", "BroadcastOnClickClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginWidget.OnClickedCountryButton
// (Final, Native, Private)

void UNcShowLoginWidget::OnClickedCountryButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginWidget", "OnClickedCountryButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginWidget.OnHoveredCountryButton
// (Final, Native, Private)

void UNcShowLoginWidget::OnHoveredCountryButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginWidget", "OnHoveredCountryButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginWidget.OnPressedCountryButton
// (Final, Native, Private)

void UNcShowLoginWidget::OnPressedCountryButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginWidget", "OnPressedCountryButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginWidget.OnReleasedCountryButton
// (Final, Native, Private)

void UNcShowLoginWidget::OnReleasedCountryButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginWidget", "OnReleasedCountryButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcShowLoginWidget.OnUnhoveredCountryButton
// (Final, Native, Private)

void UNcShowLoginWidget::OnUnhoveredCountryButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcShowLoginWidget", "OnUnhoveredCountryButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcSimpleLoginSlotWidget.BroadcastOnClickDelete
// (Final, Native, Private)

void UNcSimpleLoginSlotWidget::BroadcastOnClickDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcSimpleLoginSlotWidget", "BroadcastOnClickDelete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcSimpleLoginSlotWidget.BroadcastOnClickMemo
// (Final, Native, Private)

void UNcSimpleLoginSlotWidget::BroadcastOnClickMemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcSimpleLoginSlotWidget", "BroadcastOnClickMemo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcSimpleLoginSlotWidget.BroadcastOnClickSlot
// (Final, Native, Private)

void UNcSimpleLoginSlotWidget::BroadcastOnClickSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcSimpleLoginSlotWidget", "BroadcastOnClickSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcSimpleLoginSlotWidget.OnPressedMemo
// (Final, Native, Private)

void UNcSimpleLoginSlotWidget::OnPressedMemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcSimpleLoginSlotWidget", "OnPressedMemo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcSimpleLoginSlotWidget.OnReleasedMemo
// (Final, Native, Private)

void UNcSimpleLoginSlotWidget::OnReleasedMemo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcSimpleLoginSlotWidget", "OnReleasedMemo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcWebBrowser.BroadcastOnBeforePopup
// (Final, Native, Public)
// Parameters:
// class FString                           InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Frame                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcWebBrowser::BroadcastOnBeforePopup(const class FString& InUrl, const class FString& Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWebBrowser", "BroadcastOnBeforePopup");

	Params::NcWebBrowser_BroadcastOnBeforePopup Parms{};

	Parms.InUrl = std::move(InUrl);
	Parms.Frame = std::move(Frame);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcWebBrowser.BroadcastOnUrlChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNcWebBrowser::BroadcastOnUrlChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWebBrowser", "BroadcastOnUrlChanged");

	Params::NcWebBrowser_BroadcastOnUrlChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcWebBrowser.BroadcastOnWebBrowserClosed
// (Final, Native, Public)
// Parameters:
// bool                                    HasError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMsg                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcWebBrowser::BroadcastOnWebBrowserClosed(bool HasError, const class FString& ErrorMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWebBrowser", "BroadcastOnWebBrowserClosed");

	Params::NcWebBrowser_BroadcastOnWebBrowserClosed Parms{};

	Parms.HasError = HasError;
	Parms.ErrorMsg = std::move(ErrorMsg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcWebBrowser.ExecuteJavascript
// (Final, Native, Public)
// Parameters:
// class FString                           JavascriptExp                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcWebBrowser::ExecuteJavascript(const class FString& JavascriptExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWebBrowser", "ExecuteJavascript");

	Params::NcWebBrowser_ExecuteJavascript Parms{};

	Parms.JavascriptExp = std::move(JavascriptExp);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcWebBrowser.LoadURL
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcWebBrowser::LoadURL(const class FString& InUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWebBrowser", "LoadURL");

	Params::NcWebBrowser_LoadURL Parms{};

	Parms.InUrl = std::move(InUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction NcPlatformSdk.NcWebBrowser.OnBeforePopup__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Frame                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcWebBrowser::OnBeforePopup__DelegateSignature(const class FString& URL, const class FString& Frame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWebBrowser", "OnBeforePopup__DelegateSignature");

	Params::NcWebBrowser_OnBeforePopup__DelegateSignature Parms{};

	Parms.URL = std::move(URL);
	Parms.Frame = std::move(Frame);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction NcPlatformSdk.NcWebBrowser.OnUrlChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNcWebBrowser::OnUrlChanged__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWebBrowser", "OnUrlChanged__DelegateSignature");

	Params::NcWebBrowser_OnUrlChanged__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction NcPlatformSdk.NcWebBrowser.OnWebBrowserClosed__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    HasError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMsg                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNcWebBrowser::OnWebBrowserClosed__DelegateSignature(bool HasError, const class FString& ErrorMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWebBrowser", "OnWebBrowserClosed__DelegateSignature");

	Params::NcWebBrowser_OnWebBrowserClosed__DelegateSignature Parms{};

	Parms.HasError = HasError;
	Parms.ErrorMsg = std::move(ErrorMsg);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NcPlatformSdk.NcWebBrowser.SetExtraParams
// (Final, Native, Public, HasOutParams)
// Parameters:
// TMap<class FString, class FString>      Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNcWebBrowser::SetExtraParams(const TMap<class FString, class FString>& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWebBrowser", "SetExtraParams");

	Params::NcWebBrowser_SetExtraParams Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcWidget_Template.OnClickCloseButton
// (Final, Native, Private)

void UNcWidget_Template::OnClickCloseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWidget_Template", "OnClickCloseButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcWidget_Template.OnClickedCancelButton
// (Final, Native, Private)

void UNcWidget_Template::OnClickedCancelButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWidget_Template", "OnClickedCancelButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcWidget_Template.OnClickedConfirmButton
// (Final, Native, Private)

void UNcWidget_Template::OnClickedConfirmButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWidget_Template", "OnClickedConfirmButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcWidget_Template.OnClickedCustomButton
// (Final, Native, Private)

void UNcWidget_Template::OnClickedCustomButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWidget_Template", "OnClickedCustomButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NcPlatformSdk.NcWidgetCreater.GetPlayerController
// (Final, Native, Private)
// Parameters:
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* UNcWidgetCreater::GetPlayerController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NcWidgetCreater", "GetPlayerController");

	Params::NcWidgetCreater_GetPlayerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

