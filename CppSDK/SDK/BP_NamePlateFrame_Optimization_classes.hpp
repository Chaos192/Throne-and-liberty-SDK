#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NamePlateFrame_Optimization

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TLClient_structs.hpp"
#include "TLClient_classes.hpp"
#include "TLScheme_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_NamePlateFrame_Optimization.BP_NamePlateFrame_Optimization_C
// 0x0228 (0x1228 - 0x1000)
class UBP_NamePlateFrame_Optimization_C final : public UTLUserWidgetNamePlate
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1000(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TargetingFocus_Reset;                              // 0x1008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TargetingFocusInterim_Anim;                        // 0x1010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TargetingFocus_Anim;                               // 0x1018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NpcInterim_Loop;                                   // 0x1020(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NpcInterim_OFF;                                    // 0x1028(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NpcInterim_ON;                                     // 0x1030(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_NamePlate_Guild_Optimization2_C*    BP_Guild_Optimization2_2;                          // 0x1038(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NamePlate_HPGageNPC_Optimization_C* BP_HPGageNPC;                                      // 0x1040(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NamePlate_Guild_Optimization2_C*    BP_NamePlate_Guild_Optimization2;                  // 0x1048(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tem_KeyIcon_BTN_C*                  BP_Tem_KeyIcon_BTN;                                // 0x1050(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ContentsMarker;                                    // 0x1058(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               EE_BG;                                             // 0x1060(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           EE_Buff_GridPanel;                                 // 0x1068(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               FixedSelectC;                                      // 0x1070(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           GuildMembersNum;                                   // 0x1078(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GuildSlot;                                         // 0x1080(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GuildSlot_GuildRelation_M15;                       // 0x1088(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         GuildSlot_Panel;                                   // 0x1090(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       Hbox_TeleportGate;                                 // 0x1098(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Image_EEIcon;                                      // 0x10A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Image_RoleIcon;                                    // 0x10A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Img_PartyTargets;                                  // 0x10B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ImgDetectionIcon;                                  // 0x10B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           NameAttacked_Panel;                                // 0x10C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         NameFixed_Clipping;                                // 0x10C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           NameGrp_GridPanel;                                 // 0x10D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           NameInterim_Panel;                                 // 0x10D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           NameTarget_Panel;                                  // 0x10E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           ScanNum;                                           // 0x10E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Server_Sep;                                        // 0x10F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Targeting_Img;                                     // 0x10F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Targeting_Interim2;                                // 0x1100(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TargetingLight_1;                                  // 0x1108(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TargetingLight_ADD;                                // 0x1110(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TargetingLight_interim;                            // 0x1118(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TargetName_AttackedGlow;                           // 0x1120(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBorder*                              TargetNumBorder;                                   // 0x1128(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Tex_Nameplate_Aquire;                              // 0x1130(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_CharacterName;                                // 0x1138(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_EECount;                                      // 0x1140(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_Item_MasterName;                              // 0x1148(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_Title;                                        // 0x1150(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSpacer*                              Text_TitleMarginSpacer;                            // 0x1158(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLHorizontalBox_0;                                 // 0x1160(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         TLVerticalBox_Gauge;                               // 0x1168(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               WorldServerStateImage;                             // 0x1170(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           WorldServerStateTXT_1;                             // 0x1178(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         DefaultFontSize;                                   // 0x1180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FixTargetFontSize;                                 // 0x1184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MyNameFontSize;                                    // 0x1188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FOpacity;                                          // 0x118C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowChaoticImage;                                 // 0x1190(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowRevengeImage;                                 // 0x1191(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowRevengeTargetImage;                           // 0x1192(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFixTarget;                                        // 0x1193(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bScanTarget;                                       // 0x1194(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInterimTarget;                                    // 0x1195(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInteractPCTarget;                                 // 0x1196(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFriendlyTarget;                                   // 0x1197(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FFontOutlineSettings                   OutlineSetting_1px;                                // 0x1198(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFontOutlineSettings                   OutlineSetting_2px;                                // 0x11B8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultTextNameSize;                               // 0x11D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultTextTitleSize;                              // 0x11DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultTextSideSize;                               // 0x11E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultTextScanSize;                               // 0x11E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        Path_DetectionIcon_RangeOut;                       // 0x11E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSoftObjectPath                        Path_DetectionIcon_RangeIn;                        // 0x1200(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FSoftObjectPath>                Path_ServerState_Array;                            // 0x1218(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_NamePlateFrame_Optimization(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnUpdateBossGate(ETLBossGateCrowdingStatus InBossGateStatus);
	void OnChangeNameplateLayout(ETLNameplateLayout InTLNameplateLayout, bool InbMyPc);
	void UpdateSlotTargetLine();
	void NameColorUpdate();
	void OnChangeStealthDetectionState(ETLStealthDectectionState State);
	void OnLoadDefaultFontSizeComplete(int32 InDefaultFontSize);
	void OnCoverToHideHpBar();
	void OnUpdateAttackedMyPc(bool bInAttackedMyPc);
	void ShowPartyTaregt();
	void OnUpdateTargetState(ETLNameplateTaregetState State, bool bShow, const struct FLinearColor& InOutlineColor);
	void OnUpdateHpBarType(EHpBarType InHpBarType);
	void ___t___2();
	void SetNameplateEnableHitTest(bool bInEnable);
	void FnTargetingFriendly(bool IsFriendlyTarget);
	void OnSetFixTarget_1(bool bIsFixTarget);
	void OnSetInterimTarget_1(bool bIsInterimTarget);
	void OnSetScanTarget_1(bool IsScanTarget);
	void OnSetInteractPCTarget_1(bool bIsInteractPCTarget);
	void OnSetFriendlyTarget_1(bool bFriendly);
	void FnSetFontDefaultSetting();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NamePlateFrame_Optimization_C">();
	}
	static class UBP_NamePlateFrame_Optimization_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NamePlateFrame_Optimization_C>();
	}
};
static_assert(alignof(UBP_NamePlateFrame_Optimization_C) == 0x000008, "Wrong alignment on UBP_NamePlateFrame_Optimization_C");
static_assert(sizeof(UBP_NamePlateFrame_Optimization_C) == 0x001228, "Wrong size on UBP_NamePlateFrame_Optimization_C");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, UberGraphFrame) == 0x001000, "Member 'UBP_NamePlateFrame_Optimization_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, TargetingFocus_Reset) == 0x001008, "Member 'UBP_NamePlateFrame_Optimization_C::TargetingFocus_Reset' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, TargetingFocusInterim_Anim) == 0x001010, "Member 'UBP_NamePlateFrame_Optimization_C::TargetingFocusInterim_Anim' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, TargetingFocus_Anim) == 0x001018, "Member 'UBP_NamePlateFrame_Optimization_C::TargetingFocus_Anim' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, NpcInterim_Loop) == 0x001020, "Member 'UBP_NamePlateFrame_Optimization_C::NpcInterim_Loop' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, NpcInterim_OFF) == 0x001028, "Member 'UBP_NamePlateFrame_Optimization_C::NpcInterim_OFF' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, NpcInterim_ON) == 0x001030, "Member 'UBP_NamePlateFrame_Optimization_C::NpcInterim_ON' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, BP_Guild_Optimization2_2) == 0x001038, "Member 'UBP_NamePlateFrame_Optimization_C::BP_Guild_Optimization2_2' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, BP_HPGageNPC) == 0x001040, "Member 'UBP_NamePlateFrame_Optimization_C::BP_HPGageNPC' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, BP_NamePlate_Guild_Optimization2) == 0x001048, "Member 'UBP_NamePlateFrame_Optimization_C::BP_NamePlate_Guild_Optimization2' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, BP_Tem_KeyIcon_BTN) == 0x001050, "Member 'UBP_NamePlateFrame_Optimization_C::BP_Tem_KeyIcon_BTN' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, ContentsMarker) == 0x001058, "Member 'UBP_NamePlateFrame_Optimization_C::ContentsMarker' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, EE_BG) == 0x001060, "Member 'UBP_NamePlateFrame_Optimization_C::EE_BG' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, EE_Buff_GridPanel) == 0x001068, "Member 'UBP_NamePlateFrame_Optimization_C::EE_Buff_GridPanel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, FixedSelectC) == 0x001070, "Member 'UBP_NamePlateFrame_Optimization_C::FixedSelectC' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, GuildMembersNum) == 0x001078, "Member 'UBP_NamePlateFrame_Optimization_C::GuildMembersNum' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, GuildSlot) == 0x001080, "Member 'UBP_NamePlateFrame_Optimization_C::GuildSlot' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, GuildSlot_GuildRelation_M15) == 0x001088, "Member 'UBP_NamePlateFrame_Optimization_C::GuildSlot_GuildRelation_M15' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, GuildSlot_Panel) == 0x001090, "Member 'UBP_NamePlateFrame_Optimization_C::GuildSlot_Panel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Hbox_TeleportGate) == 0x001098, "Member 'UBP_NamePlateFrame_Optimization_C::Hbox_TeleportGate' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Image_EEIcon) == 0x0010A0, "Member 'UBP_NamePlateFrame_Optimization_C::Image_EEIcon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Image_RoleIcon) == 0x0010A8, "Member 'UBP_NamePlateFrame_Optimization_C::Image_RoleIcon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Img_PartyTargets) == 0x0010B0, "Member 'UBP_NamePlateFrame_Optimization_C::Img_PartyTargets' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, ImgDetectionIcon) == 0x0010B8, "Member 'UBP_NamePlateFrame_Optimization_C::ImgDetectionIcon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, NameAttacked_Panel) == 0x0010C0, "Member 'UBP_NamePlateFrame_Optimization_C::NameAttacked_Panel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, NameFixed_Clipping) == 0x0010C8, "Member 'UBP_NamePlateFrame_Optimization_C::NameFixed_Clipping' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, NameGrp_GridPanel) == 0x0010D0, "Member 'UBP_NamePlateFrame_Optimization_C::NameGrp_GridPanel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, NameInterim_Panel) == 0x0010D8, "Member 'UBP_NamePlateFrame_Optimization_C::NameInterim_Panel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, NameTarget_Panel) == 0x0010E0, "Member 'UBP_NamePlateFrame_Optimization_C::NameTarget_Panel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, ScanNum) == 0x0010E8, "Member 'UBP_NamePlateFrame_Optimization_C::ScanNum' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Server_Sep) == 0x0010F0, "Member 'UBP_NamePlateFrame_Optimization_C::Server_Sep' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Targeting_Img) == 0x0010F8, "Member 'UBP_NamePlateFrame_Optimization_C::Targeting_Img' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Targeting_Interim2) == 0x001100, "Member 'UBP_NamePlateFrame_Optimization_C::Targeting_Interim2' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, TargetingLight_1) == 0x001108, "Member 'UBP_NamePlateFrame_Optimization_C::TargetingLight_1' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, TargetingLight_ADD) == 0x001110, "Member 'UBP_NamePlateFrame_Optimization_C::TargetingLight_ADD' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, TargetingLight_interim) == 0x001118, "Member 'UBP_NamePlateFrame_Optimization_C::TargetingLight_interim' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, TargetName_AttackedGlow) == 0x001120, "Member 'UBP_NamePlateFrame_Optimization_C::TargetName_AttackedGlow' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, TargetNumBorder) == 0x001128, "Member 'UBP_NamePlateFrame_Optimization_C::TargetNumBorder' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Tex_Nameplate_Aquire) == 0x001130, "Member 'UBP_NamePlateFrame_Optimization_C::Tex_Nameplate_Aquire' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Text_CharacterName) == 0x001138, "Member 'UBP_NamePlateFrame_Optimization_C::Text_CharacterName' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Text_EECount) == 0x001140, "Member 'UBP_NamePlateFrame_Optimization_C::Text_EECount' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Text_Item_MasterName) == 0x001148, "Member 'UBP_NamePlateFrame_Optimization_C::Text_Item_MasterName' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Text_Title) == 0x001150, "Member 'UBP_NamePlateFrame_Optimization_C::Text_Title' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Text_TitleMarginSpacer) == 0x001158, "Member 'UBP_NamePlateFrame_Optimization_C::Text_TitleMarginSpacer' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, TLHorizontalBox_0) == 0x001160, "Member 'UBP_NamePlateFrame_Optimization_C::TLHorizontalBox_0' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, TLVerticalBox_Gauge) == 0x001168, "Member 'UBP_NamePlateFrame_Optimization_C::TLVerticalBox_Gauge' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, WorldServerStateImage) == 0x001170, "Member 'UBP_NamePlateFrame_Optimization_C::WorldServerStateImage' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, WorldServerStateTXT_1) == 0x001178, "Member 'UBP_NamePlateFrame_Optimization_C::WorldServerStateTXT_1' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, DefaultFontSize) == 0x001180, "Member 'UBP_NamePlateFrame_Optimization_C::DefaultFontSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, FixTargetFontSize) == 0x001184, "Member 'UBP_NamePlateFrame_Optimization_C::FixTargetFontSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, MyNameFontSize) == 0x001188, "Member 'UBP_NamePlateFrame_Optimization_C::MyNameFontSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, FOpacity) == 0x00118C, "Member 'UBP_NamePlateFrame_Optimization_C::FOpacity' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, bShowChaoticImage) == 0x001190, "Member 'UBP_NamePlateFrame_Optimization_C::bShowChaoticImage' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, bShowRevengeImage) == 0x001191, "Member 'UBP_NamePlateFrame_Optimization_C::bShowRevengeImage' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, bShowRevengeTargetImage) == 0x001192, "Member 'UBP_NamePlateFrame_Optimization_C::bShowRevengeTargetImage' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, bFixTarget) == 0x001193, "Member 'UBP_NamePlateFrame_Optimization_C::bFixTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, bScanTarget) == 0x001194, "Member 'UBP_NamePlateFrame_Optimization_C::bScanTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, bInterimTarget) == 0x001195, "Member 'UBP_NamePlateFrame_Optimization_C::bInterimTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, bInteractPCTarget) == 0x001196, "Member 'UBP_NamePlateFrame_Optimization_C::bInteractPCTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, bFriendlyTarget) == 0x001197, "Member 'UBP_NamePlateFrame_Optimization_C::bFriendlyTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, OutlineSetting_1px) == 0x001198, "Member 'UBP_NamePlateFrame_Optimization_C::OutlineSetting_1px' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, OutlineSetting_2px) == 0x0011B8, "Member 'UBP_NamePlateFrame_Optimization_C::OutlineSetting_2px' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, DefaultTextNameSize) == 0x0011D8, "Member 'UBP_NamePlateFrame_Optimization_C::DefaultTextNameSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, DefaultTextTitleSize) == 0x0011DC, "Member 'UBP_NamePlateFrame_Optimization_C::DefaultTextTitleSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, DefaultTextSideSize) == 0x0011E0, "Member 'UBP_NamePlateFrame_Optimization_C::DefaultTextSideSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, DefaultTextScanSize) == 0x0011E4, "Member 'UBP_NamePlateFrame_Optimization_C::DefaultTextScanSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Path_DetectionIcon_RangeOut) == 0x0011E8, "Member 'UBP_NamePlateFrame_Optimization_C::Path_DetectionIcon_RangeOut' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Path_DetectionIcon_RangeIn) == 0x001200, "Member 'UBP_NamePlateFrame_Optimization_C::Path_DetectionIcon_RangeIn' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Optimization_C, Path_ServerState_Array) == 0x001218, "Member 'UBP_NamePlateFrame_Optimization_C::Path_ServerState_Array' has a wrong offset!");

}

