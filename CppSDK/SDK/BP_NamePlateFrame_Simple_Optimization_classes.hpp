#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NamePlateFrame_Simple_Optimization

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TLClient_structs.hpp"
#include "TLClient_classes.hpp"
#include "TLScheme_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_NamePlateFrame_Simple_Optimization.BP_NamePlateFrame_Simple_Optimization_C
// 0x0148 (0x1148 - 0x1000)
class UBP_NamePlateFrame_Simple_Optimization_C final : public UTLUserWidgetNamePlate
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1000(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       EE_Counting;                                       // 0x1008(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DE_Alert_Loop;                                     // 0x1010(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CreatePVP;                                         // 0x1018(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_NamePlate_Guild_Optimization2_C*    BP_Guild_Optimization2_2;                          // 0x1020(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NamePlate_HPGageNPC_Optimization_C* BP_HPGageNPC;                                      // 0x1028(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NamePlate_Guild_Optimization2_C*    BP_NamePlate_Guild_Optimization2;                  // 0x1030(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tem_KeyIcon_BTN_C*                  BP_Tem_KeyIcon_BTN;                                // 0x1038(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ContentsMarker;                                    // 0x1040(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               EE_BG;                                             // 0x1048(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           EE_Buff_GridPanel;                                 // 0x1050(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           GuildMembersNum;                                   // 0x1058(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GuildSlot;                                         // 0x1060(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GuildSlot_GuildRelation_M15;                       // 0x1068(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         GuildSlot_Panel;                                   // 0x1070(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       Hbox_TeleportGate;                                 // 0x1078(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Image_EEIcon;                                      // 0x1080(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Image_RoleIcon;                                    // 0x1088(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ImgDetectionIcon;                                  // 0x1090(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Server_Sep;                                        // 0x1098(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Tex_Nameplate_Aquire;                              // 0x10A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_CharacterName;                                // 0x10A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_EECount;                                      // 0x10B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_Item_MasterName;                              // 0x10B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_Title;                                        // 0x10C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSpacer*                              Text_TitleMarginSpacer;                            // 0x10C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSpacer*                              Text_TitleMarginTitle;                             // 0x10D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLHorizontalBox_0;                                 // 0x10D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               WorldServerStateImage;                             // 0x10E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           WorldServerStateTXT_1;                             // 0x10E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         DefaultFontSize;                                   // 0x10F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FixTargetFontSize;                                 // 0x10F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowChaoticImage;                                 // 0x10F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowRevengeImage;                                 // 0x10F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowRevengeTargetImage;                           // 0x10FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10FB[0x5];                                     // 0x10FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        Path_DetectionIcon_RangeOut;                       // 0x1100(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSoftObjectPath                        Path_DetectionIcon_RangeIn;                        // 0x1118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          ShowHP;                                            // 0x1130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowTitle;                                         // 0x1131(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1132[0x6];                                     // 0x1132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSoftObjectPath>                Path_Server_State_Array;                           // 0x1138(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_NamePlateFrame_Simple_Optimization(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnUpdateBossGate(ETLBossGateCrowdingStatus InBossGateStatus);
	void OnUpdateSimpleLayout(ETLNameplateSimpleLayout InLayout);
	void ___t___2();
	void OnChangeStealthDetectionState(ETLStealthDectectionState State);
	void Construct();
	void OnSetInteractPCTarget(bool InTarget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NamePlateFrame_Simple_Optimization_C">();
	}
	static class UBP_NamePlateFrame_Simple_Optimization_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NamePlateFrame_Simple_Optimization_C>();
	}
};
static_assert(alignof(UBP_NamePlateFrame_Simple_Optimization_C) == 0x000008, "Wrong alignment on UBP_NamePlateFrame_Simple_Optimization_C");
static_assert(sizeof(UBP_NamePlateFrame_Simple_Optimization_C) == 0x001148, "Wrong size on UBP_NamePlateFrame_Simple_Optimization_C");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, UberGraphFrame) == 0x001000, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, EE_Counting) == 0x001008, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::EE_Counting' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, DE_Alert_Loop) == 0x001010, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::DE_Alert_Loop' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, CreatePVP) == 0x001018, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::CreatePVP' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, BP_Guild_Optimization2_2) == 0x001020, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::BP_Guild_Optimization2_2' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, BP_HPGageNPC) == 0x001028, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::BP_HPGageNPC' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, BP_NamePlate_Guild_Optimization2) == 0x001030, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::BP_NamePlate_Guild_Optimization2' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, BP_Tem_KeyIcon_BTN) == 0x001038, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::BP_Tem_KeyIcon_BTN' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, ContentsMarker) == 0x001040, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::ContentsMarker' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, EE_BG) == 0x001048, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::EE_BG' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, EE_Buff_GridPanel) == 0x001050, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::EE_Buff_GridPanel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, GuildMembersNum) == 0x001058, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::GuildMembersNum' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, GuildSlot) == 0x001060, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::GuildSlot' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, GuildSlot_GuildRelation_M15) == 0x001068, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::GuildSlot_GuildRelation_M15' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, GuildSlot_Panel) == 0x001070, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::GuildSlot_Panel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Hbox_TeleportGate) == 0x001078, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Hbox_TeleportGate' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Image_EEIcon) == 0x001080, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Image_EEIcon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Image_RoleIcon) == 0x001088, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Image_RoleIcon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, ImgDetectionIcon) == 0x001090, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::ImgDetectionIcon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Server_Sep) == 0x001098, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Server_Sep' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Tex_Nameplate_Aquire) == 0x0010A0, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Tex_Nameplate_Aquire' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Text_CharacterName) == 0x0010A8, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Text_CharacterName' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Text_EECount) == 0x0010B0, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Text_EECount' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Text_Item_MasterName) == 0x0010B8, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Text_Item_MasterName' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Text_Title) == 0x0010C0, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Text_Title' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Text_TitleMarginSpacer) == 0x0010C8, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Text_TitleMarginSpacer' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Text_TitleMarginTitle) == 0x0010D0, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Text_TitleMarginTitle' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, TLHorizontalBox_0) == 0x0010D8, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::TLHorizontalBox_0' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, WorldServerStateImage) == 0x0010E0, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::WorldServerStateImage' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, WorldServerStateTXT_1) == 0x0010E8, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::WorldServerStateTXT_1' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, DefaultFontSize) == 0x0010F0, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::DefaultFontSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, FixTargetFontSize) == 0x0010F4, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::FixTargetFontSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, bShowChaoticImage) == 0x0010F8, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::bShowChaoticImage' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, bShowRevengeImage) == 0x0010F9, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::bShowRevengeImage' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, bShowRevengeTargetImage) == 0x0010FA, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::bShowRevengeTargetImage' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Path_DetectionIcon_RangeOut) == 0x001100, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Path_DetectionIcon_RangeOut' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Path_DetectionIcon_RangeIn) == 0x001118, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Path_DetectionIcon_RangeIn' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, ShowHP) == 0x001130, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::ShowHP' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, ShowTitle) == 0x001131, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::ShowTitle' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Simple_Optimization_C, Path_Server_State_Array) == 0x001138, "Member 'UBP_NamePlateFrame_Simple_Optimization_C::Path_Server_State_Array' has a wrong offset!");

}

