#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DamageFloaterGroup_Abnormal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TLClient_classes.hpp"
#include "TLScheme_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_DamageFloaterGroup_Abnormal.BP_DamageFloaterGroup_Abnormal_C
// 0x0028 (0x0D30 - 0x0D08)
class UBP_DamageFloaterGroup_Abnormal_C final : public UTLUserWidgetFloater
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Abnormal_MyPC;                                     // 0x0D10(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Abnormal_Default;                                  // 0x0D18(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTLImage*                               IconAbnormal;                                      // 0x0D20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Txt_abnormalBreak;                                 // 0x0D28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DamageFloaterGroup_Abnormal(int32 EntryPoint);
	void OnBreak();
	void OnEmit(bool bInPrimeSkill, EHpAbnormalStatus AbnormalStatus, bool bInSuccessByAccuracy, EFloaterCategory FloaterCategory, bool IsMyPc);
	void PreConstruct(bool IsDesignTime);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DamageFloaterGroup_Abnormal_C">();
	}
	static class UBP_DamageFloaterGroup_Abnormal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DamageFloaterGroup_Abnormal_C>();
	}
};
static_assert(alignof(UBP_DamageFloaterGroup_Abnormal_C) == 0x000008, "Wrong alignment on UBP_DamageFloaterGroup_Abnormal_C");
static_assert(sizeof(UBP_DamageFloaterGroup_Abnormal_C) == 0x000D30, "Wrong size on UBP_DamageFloaterGroup_Abnormal_C");
static_assert(offsetof(UBP_DamageFloaterGroup_Abnormal_C, UberGraphFrame) == 0x000D08, "Member 'UBP_DamageFloaterGroup_Abnormal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Abnormal_C, Abnormal_MyPC) == 0x000D10, "Member 'UBP_DamageFloaterGroup_Abnormal_C::Abnormal_MyPC' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Abnormal_C, Abnormal_Default) == 0x000D18, "Member 'UBP_DamageFloaterGroup_Abnormal_C::Abnormal_Default' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Abnormal_C, IconAbnormal) == 0x000D20, "Member 'UBP_DamageFloaterGroup_Abnormal_C::IconAbnormal' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Abnormal_C, Txt_abnormalBreak) == 0x000D28, "Member 'UBP_DamageFloaterGroup_Abnormal_C::Txt_abnormalBreak' has a wrong offset!");

}

