#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Skill_Tooltip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "TLClient_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Skill_Tooltip.BP_Skill_Tooltip_C
// 0x0330 (0x18D0 - 0x15A0)
class UBP_Skill_Tooltip_C final : public UTLUserWidgetSkillTooltip
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x15A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HideAnim;                                          // 0x15A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowAnim;                                          // 0x15B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTLSizeBox*                             ActionGuideBox;                                    // 0x15B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ActiveSkill_Equip;                                 // 0x15C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ActiveSkill_Equip_Material;                        // 0x15C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ActiveSkill_Icon;                                  // 0x15D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         ActiveSkill_Panel;                                 // 0x15D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillSlot_Weather_C*                BP_SkillSlot_Weather;                              // 0x15E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTooltip_Specialization_C*      BP_SkillTooltip_Specialization;                    // 0x15E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTooltip_Specialization_C*      BP_SkillTooltip_Specialization_1;                  // 0x15F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTooltip_Specialization_C*      BP_SkillTooltip_Specialization_2;                  // 0x15F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTooltip_Specialization_C*      BP_SkillTooltip_Specialization_3;                  // 0x1600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTooltip_Specialization_C*      BP_SkillTooltip_Specialization_4;                  // 0x1608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTootip_Option_C*               BP_SkillTootip_Option;                             // 0x1610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTootip_Option_C*               BP_SkillTootip_Option_1;                           // 0x1618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTootip_Option_C*               BP_SkillTootip_Option_2;                           // 0x1620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTootip_Option_C*               BP_SkillTootip_Option_3;                           // 0x1628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SkillTootip_Option_C*               BP_SkillTootip_Option_4;                           // 0x1630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       Cost_Info_hbox0;                                   // 0x1638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       Cost_Info_hbox1;                                   // 0x1640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       Cost_Info_hbox2;                                   // 0x1648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         CostBox;                                           // 0x1650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               IMG_Grade;                                         // 0x1658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               IMG_Mastery;                                       // 0x1660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         MainStat_Box;                                      // 0x1668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               PassiveSkill_Equip;                                // 0x1670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               PassiveSkill_Icon;                                 // 0x1678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         PassiveSkill_Panel;                                // 0x1680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         Skill_AwakeningOpiton;                             // 0x1688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBorder*                              Skill_BEYOND;                                      // 0x1690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBorder*                              Skill_NORMAL;                                      // 0x1698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         Skill_Specialization;                              // 0x16A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         Skill_SpecializationGuide;                         // 0x16A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         SkillLevelOptions;                                 // 0x16B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBorder*                              SlotAttach;                                        // 0x16B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLCategoryBox;                                     // 0x16C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLCostBox;                                         // 0x16C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLDirectionBox;                                    // 0x16D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLDistanceBox;                                     // 0x16D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBorder*                              TLGradeBorder;                                     // 0x16E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TLGradeLine;                                       // 0x16E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TLImage;                                           // 0x16F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TLImage_1;                                         // 0x16F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TLImage_2;                                         // 0x1700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TLImage_4;                                         // 0x1708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TLImage_424;                                       // 0x1710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         TLLevelGrade;                                      // 0x1718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSizeBox*                             TLLevelPoint;                                      // 0x1720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLReusebox;                                        // 0x1728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLScrollBox*                           TLScrollBoxDesc;                                   // 0x1730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSizeBox*                             TLSizeBoxForSkillDesc;                             // 0x1738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ActionGuide;                                   // 0x1740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Awakening_0;                                   // 0x1748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Awakening_1;                                   // 0x1750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Awakening_2;                                   // 0x1758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_AwakeningOpiton_Title;                         // 0x1760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Cost;                                          // 0x1768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_CostAmount0;                                   // 0x1770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_CostAmount1;                                   // 0x1778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_CostAmount2;                                   // 0x1780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_CostName0;                                     // 0x1788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_CostName1;                                     // 0x1790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_CostName2;                                     // 0x1798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_DeScription;                                   // 0x17A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Description_SpecializationGuide;               // 0x17A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Description_SpecializationGuide_1;             // 0x17B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Description_SpecializationGuide_2;             // 0x17B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Description_SpecializationGuide_3;             // 0x17C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Description_SpecializationGuide_4;             // 0x17C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_DirectionType;                                 // 0x17D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Distance;                                      // 0x17D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Grade;                                         // 0x17E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Meter;                                         // 0x17E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Rank;                                          // 0x17F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Reuse;                                         // 0x17F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ReuseCount;                                    // 0x1800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_SkillCategory;                                 // 0x1808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_SkillClassType;                                // 0x1810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_SkillInputType;                                // 0x1818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_SkillName;                                     // 0x1820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Specialization_Title;                          // 0x1828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_StrikeSkill;                                   // 0x1830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Tier;                                          // 0x1838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Type;                                          // 0x1840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_TypeVal;                                       // 0x1848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_Vitality_1;                                    // 0x1850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_WeaponMasteryMaxLevel;                         // 0x1858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_WeaponMasteryState;                            // 0x1860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UTLTextBlock*>                   AwakeningTextList;                                 // 0x1868(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FSoftObjectPath                        SkillTooltipOption_On;                             // 0x1878(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        SkillTooltipOption_OFF;                            // 0x1890(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FMargin                                In_Offset_Active;                                  // 0x18A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                In_Offset_Passive;                                 // 0x18B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Skill_Tooltip(int32 EntryPoint);
	void ___t___0();
	void OnUpdateWeaponMasteryState(ETLWeaponMasteryNodeState InNodeState);
	void OnUpdateAwakeningOption(int32 InIndex, const class FText& InOptionText, bool bInEnable);
	void OnHideAwakeningOptionList();
	void ___t___1();
	void CustomEvent_0();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Skill_Tooltip_C">();
	}
	static class UBP_Skill_Tooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Skill_Tooltip_C>();
	}
};
static_assert(alignof(UBP_Skill_Tooltip_C) == 0x000010, "Wrong alignment on UBP_Skill_Tooltip_C");
static_assert(sizeof(UBP_Skill_Tooltip_C) == 0x0018D0, "Wrong size on UBP_Skill_Tooltip_C");
static_assert(offsetof(UBP_Skill_Tooltip_C, UberGraphFrame) == 0x0015A0, "Member 'UBP_Skill_Tooltip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, HideAnim) == 0x0015A8, "Member 'UBP_Skill_Tooltip_C::HideAnim' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, ShowAnim) == 0x0015B0, "Member 'UBP_Skill_Tooltip_C::ShowAnim' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, ActionGuideBox) == 0x0015B8, "Member 'UBP_Skill_Tooltip_C::ActionGuideBox' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, ActiveSkill_Equip) == 0x0015C0, "Member 'UBP_Skill_Tooltip_C::ActiveSkill_Equip' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, ActiveSkill_Equip_Material) == 0x0015C8, "Member 'UBP_Skill_Tooltip_C::ActiveSkill_Equip_Material' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, ActiveSkill_Icon) == 0x0015D0, "Member 'UBP_Skill_Tooltip_C::ActiveSkill_Icon' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, ActiveSkill_Panel) == 0x0015D8, "Member 'UBP_Skill_Tooltip_C::ActiveSkill_Panel' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillSlot_Weather) == 0x0015E0, "Member 'UBP_Skill_Tooltip_C::BP_SkillSlot_Weather' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillTooltip_Specialization) == 0x0015E8, "Member 'UBP_Skill_Tooltip_C::BP_SkillTooltip_Specialization' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillTooltip_Specialization_1) == 0x0015F0, "Member 'UBP_Skill_Tooltip_C::BP_SkillTooltip_Specialization_1' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillTooltip_Specialization_2) == 0x0015F8, "Member 'UBP_Skill_Tooltip_C::BP_SkillTooltip_Specialization_2' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillTooltip_Specialization_3) == 0x001600, "Member 'UBP_Skill_Tooltip_C::BP_SkillTooltip_Specialization_3' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillTooltip_Specialization_4) == 0x001608, "Member 'UBP_Skill_Tooltip_C::BP_SkillTooltip_Specialization_4' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillTootip_Option) == 0x001610, "Member 'UBP_Skill_Tooltip_C::BP_SkillTootip_Option' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillTootip_Option_1) == 0x001618, "Member 'UBP_Skill_Tooltip_C::BP_SkillTootip_Option_1' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillTootip_Option_2) == 0x001620, "Member 'UBP_Skill_Tooltip_C::BP_SkillTootip_Option_2' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillTootip_Option_3) == 0x001628, "Member 'UBP_Skill_Tooltip_C::BP_SkillTootip_Option_3' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, BP_SkillTootip_Option_4) == 0x001630, "Member 'UBP_Skill_Tooltip_C::BP_SkillTootip_Option_4' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, Cost_Info_hbox0) == 0x001638, "Member 'UBP_Skill_Tooltip_C::Cost_Info_hbox0' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, Cost_Info_hbox1) == 0x001640, "Member 'UBP_Skill_Tooltip_C::Cost_Info_hbox1' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, Cost_Info_hbox2) == 0x001648, "Member 'UBP_Skill_Tooltip_C::Cost_Info_hbox2' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, CostBox) == 0x001650, "Member 'UBP_Skill_Tooltip_C::CostBox' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, IMG_Grade) == 0x001658, "Member 'UBP_Skill_Tooltip_C::IMG_Grade' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, IMG_Mastery) == 0x001660, "Member 'UBP_Skill_Tooltip_C::IMG_Mastery' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, MainStat_Box) == 0x001668, "Member 'UBP_Skill_Tooltip_C::MainStat_Box' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, PassiveSkill_Equip) == 0x001670, "Member 'UBP_Skill_Tooltip_C::PassiveSkill_Equip' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, PassiveSkill_Icon) == 0x001678, "Member 'UBP_Skill_Tooltip_C::PassiveSkill_Icon' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, PassiveSkill_Panel) == 0x001680, "Member 'UBP_Skill_Tooltip_C::PassiveSkill_Panel' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, Skill_AwakeningOpiton) == 0x001688, "Member 'UBP_Skill_Tooltip_C::Skill_AwakeningOpiton' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, Skill_BEYOND) == 0x001690, "Member 'UBP_Skill_Tooltip_C::Skill_BEYOND' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, Skill_NORMAL) == 0x001698, "Member 'UBP_Skill_Tooltip_C::Skill_NORMAL' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, Skill_Specialization) == 0x0016A0, "Member 'UBP_Skill_Tooltip_C::Skill_Specialization' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, Skill_SpecializationGuide) == 0x0016A8, "Member 'UBP_Skill_Tooltip_C::Skill_SpecializationGuide' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, SkillLevelOptions) == 0x0016B0, "Member 'UBP_Skill_Tooltip_C::SkillLevelOptions' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, SlotAttach) == 0x0016B8, "Member 'UBP_Skill_Tooltip_C::SlotAttach' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLCategoryBox) == 0x0016C0, "Member 'UBP_Skill_Tooltip_C::TLCategoryBox' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLCostBox) == 0x0016C8, "Member 'UBP_Skill_Tooltip_C::TLCostBox' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLDirectionBox) == 0x0016D0, "Member 'UBP_Skill_Tooltip_C::TLDirectionBox' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLDistanceBox) == 0x0016D8, "Member 'UBP_Skill_Tooltip_C::TLDistanceBox' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLGradeBorder) == 0x0016E0, "Member 'UBP_Skill_Tooltip_C::TLGradeBorder' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLGradeLine) == 0x0016E8, "Member 'UBP_Skill_Tooltip_C::TLGradeLine' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLImage) == 0x0016F0, "Member 'UBP_Skill_Tooltip_C::TLImage' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLImage_1) == 0x0016F8, "Member 'UBP_Skill_Tooltip_C::TLImage_1' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLImage_2) == 0x001700, "Member 'UBP_Skill_Tooltip_C::TLImage_2' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLImage_4) == 0x001708, "Member 'UBP_Skill_Tooltip_C::TLImage_4' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLImage_424) == 0x001710, "Member 'UBP_Skill_Tooltip_C::TLImage_424' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLLevelGrade) == 0x001718, "Member 'UBP_Skill_Tooltip_C::TLLevelGrade' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLLevelPoint) == 0x001720, "Member 'UBP_Skill_Tooltip_C::TLLevelPoint' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLReusebox) == 0x001728, "Member 'UBP_Skill_Tooltip_C::TLReusebox' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLScrollBoxDesc) == 0x001730, "Member 'UBP_Skill_Tooltip_C::TLScrollBoxDesc' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TLSizeBoxForSkillDesc) == 0x001738, "Member 'UBP_Skill_Tooltip_C::TLSizeBoxForSkillDesc' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_ActionGuide) == 0x001740, "Member 'UBP_Skill_Tooltip_C::TXT_ActionGuide' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Awakening_0) == 0x001748, "Member 'UBP_Skill_Tooltip_C::TXT_Awakening_0' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Awakening_1) == 0x001750, "Member 'UBP_Skill_Tooltip_C::TXT_Awakening_1' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Awakening_2) == 0x001758, "Member 'UBP_Skill_Tooltip_C::TXT_Awakening_2' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_AwakeningOpiton_Title) == 0x001760, "Member 'UBP_Skill_Tooltip_C::TXT_AwakeningOpiton_Title' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Cost) == 0x001768, "Member 'UBP_Skill_Tooltip_C::TXT_Cost' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_CostAmount0) == 0x001770, "Member 'UBP_Skill_Tooltip_C::TXT_CostAmount0' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_CostAmount1) == 0x001778, "Member 'UBP_Skill_Tooltip_C::TXT_CostAmount1' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_CostAmount2) == 0x001780, "Member 'UBP_Skill_Tooltip_C::TXT_CostAmount2' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_CostName0) == 0x001788, "Member 'UBP_Skill_Tooltip_C::TXT_CostName0' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_CostName1) == 0x001790, "Member 'UBP_Skill_Tooltip_C::TXT_CostName1' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_CostName2) == 0x001798, "Member 'UBP_Skill_Tooltip_C::TXT_CostName2' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_DeScription) == 0x0017A0, "Member 'UBP_Skill_Tooltip_C::TXT_DeScription' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Description_SpecializationGuide) == 0x0017A8, "Member 'UBP_Skill_Tooltip_C::TXT_Description_SpecializationGuide' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Description_SpecializationGuide_1) == 0x0017B0, "Member 'UBP_Skill_Tooltip_C::TXT_Description_SpecializationGuide_1' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Description_SpecializationGuide_2) == 0x0017B8, "Member 'UBP_Skill_Tooltip_C::TXT_Description_SpecializationGuide_2' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Description_SpecializationGuide_3) == 0x0017C0, "Member 'UBP_Skill_Tooltip_C::TXT_Description_SpecializationGuide_3' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Description_SpecializationGuide_4) == 0x0017C8, "Member 'UBP_Skill_Tooltip_C::TXT_Description_SpecializationGuide_4' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_DirectionType) == 0x0017D0, "Member 'UBP_Skill_Tooltip_C::TXT_DirectionType' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Distance) == 0x0017D8, "Member 'UBP_Skill_Tooltip_C::TXT_Distance' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Grade) == 0x0017E0, "Member 'UBP_Skill_Tooltip_C::TXT_Grade' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Meter) == 0x0017E8, "Member 'UBP_Skill_Tooltip_C::TXT_Meter' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Rank) == 0x0017F0, "Member 'UBP_Skill_Tooltip_C::TXT_Rank' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Reuse) == 0x0017F8, "Member 'UBP_Skill_Tooltip_C::TXT_Reuse' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_ReuseCount) == 0x001800, "Member 'UBP_Skill_Tooltip_C::TXT_ReuseCount' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_SkillCategory) == 0x001808, "Member 'UBP_Skill_Tooltip_C::TXT_SkillCategory' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_SkillClassType) == 0x001810, "Member 'UBP_Skill_Tooltip_C::TXT_SkillClassType' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_SkillInputType) == 0x001818, "Member 'UBP_Skill_Tooltip_C::TXT_SkillInputType' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_SkillName) == 0x001820, "Member 'UBP_Skill_Tooltip_C::TXT_SkillName' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Specialization_Title) == 0x001828, "Member 'UBP_Skill_Tooltip_C::TXT_Specialization_Title' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_StrikeSkill) == 0x001830, "Member 'UBP_Skill_Tooltip_C::TXT_StrikeSkill' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Tier) == 0x001838, "Member 'UBP_Skill_Tooltip_C::TXT_Tier' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Type) == 0x001840, "Member 'UBP_Skill_Tooltip_C::TXT_Type' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_TypeVal) == 0x001848, "Member 'UBP_Skill_Tooltip_C::TXT_TypeVal' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_Vitality_1) == 0x001850, "Member 'UBP_Skill_Tooltip_C::TXT_Vitality_1' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_WeaponMasteryMaxLevel) == 0x001858, "Member 'UBP_Skill_Tooltip_C::TXT_WeaponMasteryMaxLevel' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, TXT_WeaponMasteryState) == 0x001860, "Member 'UBP_Skill_Tooltip_C::TXT_WeaponMasteryState' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, AwakeningTextList) == 0x001868, "Member 'UBP_Skill_Tooltip_C::AwakeningTextList' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, SkillTooltipOption_On) == 0x001878, "Member 'UBP_Skill_Tooltip_C::SkillTooltipOption_On' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, SkillTooltipOption_OFF) == 0x001890, "Member 'UBP_Skill_Tooltip_C::SkillTooltipOption_OFF' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, In_Offset_Active) == 0x0018A8, "Member 'UBP_Skill_Tooltip_C::In_Offset_Active' has a wrong offset!");
static_assert(offsetof(UBP_Skill_Tooltip_C, In_Offset_Passive) == 0x0018B8, "Member 'UBP_Skill_Tooltip_C::In_Offset_Passive' has a wrong offset!");

}

