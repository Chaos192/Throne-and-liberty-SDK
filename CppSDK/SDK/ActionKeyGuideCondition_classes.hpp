#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActionKeyGuideCondition

#include "Basic.hpp"

#include "TLClient_structs.hpp"
#include "TLClient_classes.hpp"
#include "Engine_structs.hpp"
#include "TLScheme_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ActionKeyGuideCondition.ActionKeyGuideCondition_C
// 0x0100 (0x0178 - 0x0078)
class UActionKeyGuideCondition_C final : public UTLContentsConditionActionKeyGuide
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0078(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	ETLMobiltyType                                MobilityType;                                      // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTLActionKeyGuideInfo>          GlideActions_PC;                                   // 0x0088(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          DashActions_PC;                                    // 0x0098(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          SwimActions_PC;                                    // 0x00A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          DashActions_Console;                               // 0x00B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          GlideActions_Console;                              // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          SwimActions_Console;                               // 0x00D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          GlideActions_Mobile;                               // 0x00E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          DashActions_Mobile;                                // 0x00F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          SwimActions_Mobile;                                // 0x0108(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          FishingReadyActions_PC;                            // 0x0118(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          FishingWaitingActions_PC;                          // 0x0128(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          FishingBitingActions_PC;                           // 0x0138(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          FishingReadyActions_Console;                       // 0x0148(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          FishingWaitingActions_Console;                     // 0x0158(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FTLActionKeyGuideInfo>          FishingBitingActions_Console;                      // 0x0168(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_ActionKeyGuideCondition(int32 EntryPoint);
	void OnChangeUIPlatformFishing();
	void OnUpdateFishing();
	void OnEnterFishing();
	void OnChangePolymorph(class FName ID, ETLMobiltyType MobilityType_0);
	void OnChangeUIPlatform();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActionKeyGuideCondition_C">();
	}
	static class UActionKeyGuideCondition_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActionKeyGuideCondition_C>();
	}
};
static_assert(alignof(UActionKeyGuideCondition_C) == 0x000008, "Wrong alignment on UActionKeyGuideCondition_C");
static_assert(sizeof(UActionKeyGuideCondition_C) == 0x000178, "Wrong size on UActionKeyGuideCondition_C");
static_assert(offsetof(UActionKeyGuideCondition_C, UberGraphFrame) == 0x000078, "Member 'UActionKeyGuideCondition_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, MobilityType) == 0x000080, "Member 'UActionKeyGuideCondition_C::MobilityType' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, GlideActions_PC) == 0x000088, "Member 'UActionKeyGuideCondition_C::GlideActions_PC' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, DashActions_PC) == 0x000098, "Member 'UActionKeyGuideCondition_C::DashActions_PC' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, SwimActions_PC) == 0x0000A8, "Member 'UActionKeyGuideCondition_C::SwimActions_PC' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, DashActions_Console) == 0x0000B8, "Member 'UActionKeyGuideCondition_C::DashActions_Console' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, GlideActions_Console) == 0x0000C8, "Member 'UActionKeyGuideCondition_C::GlideActions_Console' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, SwimActions_Console) == 0x0000D8, "Member 'UActionKeyGuideCondition_C::SwimActions_Console' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, GlideActions_Mobile) == 0x0000E8, "Member 'UActionKeyGuideCondition_C::GlideActions_Mobile' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, DashActions_Mobile) == 0x0000F8, "Member 'UActionKeyGuideCondition_C::DashActions_Mobile' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, SwimActions_Mobile) == 0x000108, "Member 'UActionKeyGuideCondition_C::SwimActions_Mobile' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, FishingReadyActions_PC) == 0x000118, "Member 'UActionKeyGuideCondition_C::FishingReadyActions_PC' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, FishingWaitingActions_PC) == 0x000128, "Member 'UActionKeyGuideCondition_C::FishingWaitingActions_PC' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, FishingBitingActions_PC) == 0x000138, "Member 'UActionKeyGuideCondition_C::FishingBitingActions_PC' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, FishingReadyActions_Console) == 0x000148, "Member 'UActionKeyGuideCondition_C::FishingReadyActions_Console' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, FishingWaitingActions_Console) == 0x000158, "Member 'UActionKeyGuideCondition_C::FishingWaitingActions_Console' has a wrong offset!");
static_assert(offsetof(UActionKeyGuideCondition_C, FishingBitingActions_Console) == 0x000168, "Member 'UActionKeyGuideCondition_C::FishingBitingActions_Console' has a wrong offset!");

}

