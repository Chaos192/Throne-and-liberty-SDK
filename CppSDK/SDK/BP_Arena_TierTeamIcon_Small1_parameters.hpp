#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Arena_TierTeamIcon_Small1

#include "Basic.hpp"

#include "TLScheme_structs.hpp"


namespace SDK::Params
{

// Function BP_Arena_TierTeamIcon_Small1.BP_Arena_TierTeamIcon_Small1_C.ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1
// 0x0008 (0x0008 - 0x0000)
struct BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETLArenaPartyType                             K2Node_Event_InType;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1) == 0x000004, "Wrong alignment on BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1");
static_assert(sizeof(BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1) == 0x000008, "Wrong size on BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1");
static_assert(offsetof(BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1, EntryPoint) == 0x000000, "Member 'BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1, K2Node_Event_InType) == 0x000004, "Member 'BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1::K2Node_Event_InType' has a wrong offset!");
static_assert(offsetof(BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1, K2Node_Event_IsDesignTime) == 0x000005, "Member 'BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'BP_Arena_TierTeamIcon_Small1_C_ExecuteUbergraph_BP_Arena_TierTeamIcon_Small1::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Arena_TierTeamIcon_Small1.BP_Arena_TierTeamIcon_Small1_C.OnSetPartyType
// 0x0001 (0x0001 - 0x0000)
struct BP_Arena_TierTeamIcon_Small1_C_OnSetPartyType final
{
public:
	ETLArenaPartyType                             InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Arena_TierTeamIcon_Small1_C_OnSetPartyType) == 0x000001, "Wrong alignment on BP_Arena_TierTeamIcon_Small1_C_OnSetPartyType");
static_assert(sizeof(BP_Arena_TierTeamIcon_Small1_C_OnSetPartyType) == 0x000001, "Wrong size on BP_Arena_TierTeamIcon_Small1_C_OnSetPartyType");
static_assert(offsetof(BP_Arena_TierTeamIcon_Small1_C_OnSetPartyType, InType) == 0x000000, "Member 'BP_Arena_TierTeamIcon_Small1_C_OnSetPartyType::InType' has a wrong offset!");

// Function BP_Arena_TierTeamIcon_Small1.BP_Arena_TierTeamIcon_Small1_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_Arena_TierTeamIcon_Small1_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Arena_TierTeamIcon_Small1_C_PreConstruct) == 0x000001, "Wrong alignment on BP_Arena_TierTeamIcon_Small1_C_PreConstruct");
static_assert(sizeof(BP_Arena_TierTeamIcon_Small1_C_PreConstruct) == 0x000001, "Wrong size on BP_Arena_TierTeamIcon_Small1_C_PreConstruct");
static_assert(offsetof(BP_Arena_TierTeamIcon_Small1_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_Arena_TierTeamIcon_Small1_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

