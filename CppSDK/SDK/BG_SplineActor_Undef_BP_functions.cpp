#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BG_SplineActor_Undef_BP

#include "Basic.hpp"

#include "BG_SplineActor_Undef_BP_classes.hpp"
#include "BG_SplineActor_Undef_BP_parameters.hpp"


namespace SDK
{

// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.ExecuteUbergraph_BG_SplineActor_Undef_BP
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABG_SplineActor_Undef_BP_C::ExecuteUbergraph_BG_SplineActor_Undef_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "ExecuteUbergraph_BG_SplineActor_Undef_BP");

	Params::BG_SplineActor_Undef_BP_C_ExecuteUbergraph_BG_SplineActor_Undef_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABG_SplineActor_Undef_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABG_SplineActor_Undef_BP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.Build Wall
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      Wall                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABG_SplineActor_Undef_BP_C::Build_Wall(class UStaticMesh* Wall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "Build Wall");

	Params::BG_SplineActor_Undef_BP_C_Build_Wall Parms{};

	Parms.Wall = Wall;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.Build Pillar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      FillarMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABG_SplineActor_Undef_BP_C::Build_Pillar(class UStaticMesh* FillarMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "Build Pillar");

	Params::BG_SplineActor_Undef_BP_C_Build_Pillar Parms{};

	Parms.FillarMesh = FillarMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.Append_Array
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstance*>        Materials                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABG_SplineActor_Undef_BP_C::Append_Array(class UStaticMesh*& Mesh, TArray<class UMaterialInstance*>& Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "Append_Array");

	Params::BG_SplineActor_Undef_BP_C_Append_Array Parms{};

	Parms.Mesh = Mesh;
	Parms.Materials = std::move(Materials);

	UObject::ProcessEvent(Func, &Parms);

	Mesh = Parms.Mesh;
	Materials = std::move(Parms.Materials);
}


// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.Get_Rotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Z                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Z_Dir                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   End_Index                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABG_SplineActor_Undef_BP_C::Get_Rotation(int32 Index_0, float X, float Y, float Z, bool Z_Dir, bool Type, int32 End_Index, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "Get_Rotation");

	Params::BG_SplineActor_Undef_BP_C_Get_Rotation Parms{};

	Parms.Index_0 = Index_0;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Z_Dir = Z_Dir;
	Parms.Type = Type;
	Parms.End_Index = End_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.AddInstancedStaticMeshComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      StaticMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInstance*>        Materials                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   UVTiling                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   UVTilingYScale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   UVRotation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInstancedStaticMeshComponent*    TargetISM                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABG_SplineActor_Undef_BP_C::AddInstancedStaticMeshComponent(class UStaticMesh* StaticMesh, TArray<class UMaterialInstance*>& Materials, float UVTiling, float UVTilingYScale, float UVRotation, class UInstancedStaticMeshComponent* TargetISM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "AddInstancedStaticMeshComponent");

	Params::BG_SplineActor_Undef_BP_C_AddInstancedStaticMeshComponent Parms{};

	Parms.StaticMesh = StaticMesh;
	Parms.Materials = std::move(Materials);
	Parms.UVTiling = UVTiling;
	Parms.UVTilingYScale = UVTilingYScale;
	Parms.UVRotation = UVRotation;
	Parms.TargetISM = TargetISM;

	UObject::ProcessEvent(Func, &Parms);

	Materials = std::move(Parms.Materials);
}


// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.RandomValue
// (Public, BlueprintCallable, BlueprintEvent)

void ABG_SplineActor_Undef_BP_C::RandomValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "RandomValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.DisableOrSetLDCullDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInstancedStaticMeshComponent*    ISM                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABG_SplineActor_Undef_BP_C::DisableOrSetLDCullDistance(class UInstancedStaticMeshComponent* ISM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "DisableOrSetLDCullDistance");

	Params::BG_SplineActor_Undef_BP_C_DisableOrSetLDCullDistance Parms{};

	Parms.ISM = ISM;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BG_SplineActor_Undef_BP.BG_SplineActor_Undef_BP_C.Has Scalar Parameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UMaterialInstance*                Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bHas                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABG_SplineActor_Undef_BP_C::Has_Scalar_Parameter(class UMaterialInstance* Material, TArray<class FName>& Name_0, bool* bHas) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BG_SplineActor_Undef_BP_C", "Has Scalar Parameter");

	Params::BG_SplineActor_Undef_BP_C_Has_Scalar_Parameter Parms{};

	Parms.Material = Material;
	Parms.Name_0 = std::move(Name_0);

	UObject::ProcessEvent(Func, &Parms);

	Name_0 = std::move(Parms.Name_0);

	if (bHas != nullptr)
		*bHas = Parms.bHas;
}

}

