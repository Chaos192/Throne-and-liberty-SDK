#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NamePlate_HPGage_Optimization

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TLScheme_structs.hpp"
#include "TLClient_structs.hpp"


namespace SDK::Params
{

// Function BP_NamePlate_HPGage_Optimization.BP_NamePlate_HPGage_Optimization_C.ExecuteUbergraph_BP_NamePlate_HPGage_Optimization
// 0x00C8 (0x00C8 - 0x0000)
struct BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_InPercent;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHpAbnormalStatus                             K2Node_Event_InStatus;                             // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InbIsMyPc;                            // 0x000D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_1;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_2;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InFocused;                            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETLRelationColorToMyPc                        K2Node_Event_InTLRelationColorToMyPc;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_InOverrideColor;                      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_3;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_4;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InForward;                            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_5;              // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization) == 0x000008, "Wrong alignment on BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization");
static_assert(sizeof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization) == 0x0000C8, "Wrong size on BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, EntryPoint) == 0x000000, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_ComponentBoundEvent_InPercent) == 0x000008, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_ComponentBoundEvent_InPercent' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_Event_InStatus) == 0x00000C, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_Event_InStatus' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_Event_InbIsMyPc) == 0x00000D, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_Event_InbIsMyPc' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_SwitchEnum_CmpSuccess) == 0x00000E, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_SwitchEnum_CmpSuccess_1) == 0x00000F, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, CallFunc_SetVisible_self_CastInput) == 0x000010, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::CallFunc_SetVisible_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, CallFunc_SetVisible_self_CastInput_1) == 0x000020, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::CallFunc_SetVisible_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, CallFunc_SetVisible_self_CastInput_2) == 0x000030, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::CallFunc_SetVisible_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_Event_InFocused) == 0x000040, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_Event_InFocused' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, CallFunc_PlayAnimationForward_ReturnValue) == 0x000048, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_Event_InTLRelationColorToMyPc) == 0x000050, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_Event_InTLRelationColorToMyPc' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000058, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_SwitchEnum_CmpSuccess_2) == 0x000060, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, CallFunc_BreakVector2D_X) == 0x000064, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_SwitchInteger_CmpSuccess) == 0x00006C, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_Event_InOverrideColor) == 0x000070, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_Event_InOverrideColor' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, CallFunc_SetVisible_self_CastInput_3) == 0x000080, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::CallFunc_SetVisible_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, CallFunc_SetVisible_self_CastInput_4) == 0x000090, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::CallFunc_SetVisible_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_MakeStruct_LinearColor) == 0x0000A0, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, K2Node_Event_InForward) == 0x0000B0, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::K2Node_Event_InForward' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization, CallFunc_SetVisible_self_CastInput_5) == 0x0000B8, "Member 'BP_NamePlate_HPGage_Optimization_C_ExecuteUbergraph_BP_NamePlate_HPGage_Optimization::CallFunc_SetVisible_self_CastInput_5' has a wrong offset!");

// Function BP_NamePlate_HPGage_Optimization.BP_NamePlate_HPGage_Optimization_C.PlayHideHpAnim
// 0x0001 (0x0001 - 0x0000)
struct BP_NamePlate_HPGage_Optimization_C_PlayHideHpAnim final
{
public:
	bool                                          InForward;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NamePlate_HPGage_Optimization_C_PlayHideHpAnim) == 0x000001, "Wrong alignment on BP_NamePlate_HPGage_Optimization_C_PlayHideHpAnim");
static_assert(sizeof(BP_NamePlate_HPGage_Optimization_C_PlayHideHpAnim) == 0x000001, "Wrong size on BP_NamePlate_HPGage_Optimization_C_PlayHideHpAnim");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_PlayHideHpAnim, InForward) == 0x000000, "Member 'BP_NamePlate_HPGage_Optimization_C_PlayHideHpAnim::InForward' has a wrong offset!");

// Function BP_NamePlate_HPGage_Optimization.BP_NamePlate_HPGage_Optimization_C.OnUpdateOverridedRelationColor
// 0x0010 (0x0010 - 0x0000)
struct BP_NamePlate_HPGage_Optimization_C_OnUpdateOverridedRelationColor final
{
public:
	struct FLinearColor                           InOverrideColor;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NamePlate_HPGage_Optimization_C_OnUpdateOverridedRelationColor) == 0x000004, "Wrong alignment on BP_NamePlate_HPGage_Optimization_C_OnUpdateOverridedRelationColor");
static_assert(sizeof(BP_NamePlate_HPGage_Optimization_C_OnUpdateOverridedRelationColor) == 0x000010, "Wrong size on BP_NamePlate_HPGage_Optimization_C_OnUpdateOverridedRelationColor");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_OnUpdateOverridedRelationColor, InOverrideColor) == 0x000000, "Member 'BP_NamePlate_HPGage_Optimization_C_OnUpdateOverridedRelationColor::InOverrideColor' has a wrong offset!");

// Function BP_NamePlate_HPGage_Optimization.BP_NamePlate_HPGage_Optimization_C.OnUpdateRelationToMyPc
// 0x0001 (0x0001 - 0x0000)
struct BP_NamePlate_HPGage_Optimization_C_OnUpdateRelationToMyPc final
{
public:
	ETLRelationColorToMyPc                        InTLRelationColorToMyPc;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NamePlate_HPGage_Optimization_C_OnUpdateRelationToMyPc) == 0x000001, "Wrong alignment on BP_NamePlate_HPGage_Optimization_C_OnUpdateRelationToMyPc");
static_assert(sizeof(BP_NamePlate_HPGage_Optimization_C_OnUpdateRelationToMyPc) == 0x000001, "Wrong size on BP_NamePlate_HPGage_Optimization_C_OnUpdateRelationToMyPc");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_OnUpdateRelationToMyPc, InTLRelationColorToMyPc) == 0x000000, "Member 'BP_NamePlate_HPGage_Optimization_C_OnUpdateRelationToMyPc::InTLRelationColorToMyPc' has a wrong offset!");

// Function BP_NamePlate_HPGage_Optimization.BP_NamePlate_HPGage_Optimization_C.OnFocusTargeting
// 0x0001 (0x0001 - 0x0000)
struct BP_NamePlate_HPGage_Optimization_C_OnFocusTargeting final
{
public:
	bool                                          InFocused;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NamePlate_HPGage_Optimization_C_OnFocusTargeting) == 0x000001, "Wrong alignment on BP_NamePlate_HPGage_Optimization_C_OnFocusTargeting");
static_assert(sizeof(BP_NamePlate_HPGage_Optimization_C_OnFocusTargeting) == 0x000001, "Wrong size on BP_NamePlate_HPGage_Optimization_C_OnFocusTargeting");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_OnFocusTargeting, InFocused) == 0x000000, "Member 'BP_NamePlate_HPGage_Optimization_C_OnFocusTargeting::InFocused' has a wrong offset!");

// Function BP_NamePlate_HPGage_Optimization.BP_NamePlate_HPGage_Optimization_C.BndEvt__BP_NamePlate_HPGage_HP_Bar_K2Node_ComponentBoundEvent_0_OnChangedPercent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_NamePlate_HPGage_Optimization_C_BndEvt__BP_NamePlate_HPGage_HP_Bar_K2Node_ComponentBoundEvent_0_OnChangedPercent__DelegateSignature final
{
public:
	float                                         InPercent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NamePlate_HPGage_Optimization_C_BndEvt__BP_NamePlate_HPGage_HP_Bar_K2Node_ComponentBoundEvent_0_OnChangedPercent__DelegateSignature) == 0x000004, "Wrong alignment on BP_NamePlate_HPGage_Optimization_C_BndEvt__BP_NamePlate_HPGage_HP_Bar_K2Node_ComponentBoundEvent_0_OnChangedPercent__DelegateSignature");
static_assert(sizeof(BP_NamePlate_HPGage_Optimization_C_BndEvt__BP_NamePlate_HPGage_HP_Bar_K2Node_ComponentBoundEvent_0_OnChangedPercent__DelegateSignature) == 0x000004, "Wrong size on BP_NamePlate_HPGage_Optimization_C_BndEvt__BP_NamePlate_HPGage_HP_Bar_K2Node_ComponentBoundEvent_0_OnChangedPercent__DelegateSignature");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_BndEvt__BP_NamePlate_HPGage_HP_Bar_K2Node_ComponentBoundEvent_0_OnChangedPercent__DelegateSignature, InPercent) == 0x000000, "Member 'BP_NamePlate_HPGage_Optimization_C_BndEvt__BP_NamePlate_HPGage_HP_Bar_K2Node_ComponentBoundEvent_0_OnChangedPercent__DelegateSignature::InPercent' has a wrong offset!");

// Function BP_NamePlate_HPGage_Optimization.BP_NamePlate_HPGage_Optimization_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_NamePlate_HPGage_Optimization_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NamePlate_HPGage_Optimization_C_PreConstruct) == 0x000001, "Wrong alignment on BP_NamePlate_HPGage_Optimization_C_PreConstruct");
static_assert(sizeof(BP_NamePlate_HPGage_Optimization_C_PreConstruct) == 0x000001, "Wrong size on BP_NamePlate_HPGage_Optimization_C_PreConstruct");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_NamePlate_HPGage_Optimization_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_NamePlate_HPGage_Optimization.BP_NamePlate_HPGage_Optimization_C.OnChangedHpAbnormalStatus
// 0x0002 (0x0002 - 0x0000)
struct BP_NamePlate_HPGage_Optimization_C_OnChangedHpAbnormalStatus final
{
public:
	EHpAbnormalStatus                             InStatus;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InbIsMyPc;                                         // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NamePlate_HPGage_Optimization_C_OnChangedHpAbnormalStatus) == 0x000001, "Wrong alignment on BP_NamePlate_HPGage_Optimization_C_OnChangedHpAbnormalStatus");
static_assert(sizeof(BP_NamePlate_HPGage_Optimization_C_OnChangedHpAbnormalStatus) == 0x000002, "Wrong size on BP_NamePlate_HPGage_Optimization_C_OnChangedHpAbnormalStatus");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_OnChangedHpAbnormalStatus, InStatus) == 0x000000, "Member 'BP_NamePlate_HPGage_Optimization_C_OnChangedHpAbnormalStatus::InStatus' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_OnChangedHpAbnormalStatus, InbIsMyPc) == 0x000001, "Member 'BP_NamePlate_HPGage_Optimization_C_OnChangedHpAbnormalStatus::InbIsMyPc' has a wrong offset!");

// Function BP_NamePlate_HPGage_Optimization.BP_NamePlate_HPGage_Optimization_C.FnGaugeEdgeSet
// 0x0038 (0x0038 - 0x0000)
struct BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Percent;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProgressWidth;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HideEdgePercent;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet) == 0x000008, "Wrong alignment on BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet");
static_assert(sizeof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet) == 0x000038, "Wrong size on BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet, Widget) == 0x000000, "Member 'BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet::Widget' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet, Percent) == 0x000008, "Member 'BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet::Percent' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet, ProgressWidth) == 0x00000C, "Member 'BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet::ProgressWidth' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet, HideEdgePercent) == 0x000010, "Member 'BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet::HideEdgePercent' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet, CallFunc_MakeVector2D_ReturnValue) == 0x000024, "Member 'BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'BP_NamePlate_HPGage_Optimization_C_FnGaugeEdgeSet::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

}

