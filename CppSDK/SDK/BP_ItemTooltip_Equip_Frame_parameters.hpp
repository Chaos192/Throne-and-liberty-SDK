#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemTooltip_Equip_Frame

#include "Basic.hpp"

#include "TLScheme_structs.hpp"
#include "TLClient_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.ExecuteUbergraph_BP_ItemTooltip_Equip_Frame
// 0x02B8 (0x02B8 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InName_1;                             // 0x0008(0x0018)(ConstParm)
	class FText                                   K2Node_Event_InGradeName;                          // 0x0020(0x0018)(ConstParm)
	class FName                                   K2Node_Event_InColorTableKey;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InName_2;                             // 0x0040(0x0018)(ConstParm)
	int32                                         K2Node_Event_InRequireLevel;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InPcLevel;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemTooltipComponent                         K2Node_Event_InComponent;                          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InEmphasize;                          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InShowTradePrice;                     // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_RecentPriceText;                      // 0x0088(0x0018)(ConstParm)
	class FText                                   K2Node_Event_SaleCountText;                        // 0x00A0(0x0018)(ConstParm)
	bool                                          K2Node_Event_bIsDecomposable;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsDestructible;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsStorable;                          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETLItemCollectableState                       K2Node_Event_InCollectableState;                   // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InConditionLevel;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InIsOtherPreset;                      // 0x00C0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00C8(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InName;                               // 0x00E8(0x0018)(ConstParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput;                // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_1;              // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_2;              // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InLock;                               // 0x0138(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsVisible_1;                       // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsEnable_1;                        // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InCount;                              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0140(0x0018)()
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_3;              // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_4;              // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsVisible;                         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInIsEnable;                          // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InMaxLevel;                           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x0180(0x0018)()
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_5;              // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_6;              // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsTradable;                          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsOverwriteExchangeable;             // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InIsExist;                            // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BB[0x5];                                      // 0x01BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_7;              // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_8;              // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInEnable;                            // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInShow;                              // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_9;              // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_ShowWithValue_self_CastInput;             // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_10;             // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_11;             // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFocus;                               // 0x0228(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_12;             // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_13;             // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShow_1;                              // 0x0250(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_14;             // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShow;                                // 0x0268(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsConsole;                           // 0x0269(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26B[0x5];                                      // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_15;             // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_16;             // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_17;             // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UTLTextBlock*>                   K2Node_MakeArray_Array;                            // 0x02A8(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame) == 0x000008, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame) == 0x0002B8, "Wrong size on BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, EntryPoint) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InName_1) == 0x000008, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InName_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InGradeName) == 0x000020, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InGradeName' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InColorTableKey) == 0x000038, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InColorTableKey' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InName_2) == 0x000040, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InName_2' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InRequireLevel) == 0x000058, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InRequireLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InPcLevel) == 0x00005C, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InPcLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InComponent) == 0x000081, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InComponent' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InEmphasize) == 0x000082, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InEmphasize' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_SwitchEnum_CmpSuccess) == 0x000083, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InShowTradePrice) == 0x000084, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InShowTradePrice' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_RecentPriceText) == 0x000088, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_RecentPriceText' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_SaleCountText) == 0x0000A0, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_SaleCountText' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bIsDecomposable) == 0x0000B8, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bIsDecomposable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bIsDestructible) == 0x0000B9, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bIsDestructible' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bIsStorable) == 0x0000BA, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bIsStorable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InCollectableState) == 0x0000BB, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InCollectableState' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InConditionLevel) == 0x0000BC, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InConditionLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InIsOtherPreset) == 0x0000C0, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InIsOtherPreset' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000C8, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000E0, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_IsDesignTime) == 0x0000E1, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E2, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E3, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InName) == 0x0000E8, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_BooleanOR_ReturnValue) == 0x000100, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_TextIsEmpty_ReturnValue) == 0x000101, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_Not_PreBool_ReturnValue) == 0x000102, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput) == 0x000108, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_1) == 0x000118, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_2) == 0x000128, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InLock) == 0x000138, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InLock' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bInIsVisible_1) == 0x000139, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bInIsVisible_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bInIsEnable_1) == 0x00013A, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bInIsEnable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InCount) == 0x00013C, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000140, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_3) == 0x000158, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_4) == 0x000168, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bInIsVisible) == 0x000178, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bInIsVisible' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bInIsEnable) == 0x000179, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bInIsEnable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InMaxLevel) == 0x00017C, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InMaxLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_Conv_IntToText_ReturnValue_3) == 0x000180, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_5) == 0x000198, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_6) == 0x0001A8, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_6' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bIsTradable) == 0x0001B8, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bIsTradable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bIsOverwriteExchangeable) == 0x0001B9, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bIsOverwriteExchangeable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_InIsExist) == 0x0001BA, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_InIsExist' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_7) == 0x0001C0, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_7' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_8) == 0x0001D0, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_8' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bInEnable) == 0x0001E0, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bInEnable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bInShow) == 0x0001E1, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bInShow' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_9) == 0x0001E8, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_9' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_ShowWithValue_self_CastInput) == 0x0001F8, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_ShowWithValue_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_10) == 0x000208, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_10' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_11) == 0x000218, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_11' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bFocus) == 0x000228, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bFocus' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_12) == 0x000230, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_12' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_13) == 0x000240, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_13' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bShow_1) == 0x000250, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bShow_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_14) == 0x000258, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_14' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bShow) == 0x000268, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bShow' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_Event_bIsConsole) == 0x000269, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_Event_bIsConsole' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_BooleanAND_ReturnValue) == 0x00026A, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_15) == 0x000270, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_15' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_Not_PreBool_ReturnValue_1) == 0x000280, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_BooleanAND_ReturnValue_1) == 0x000281, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_16) == 0x000288, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_16' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, CallFunc_SetVisible_self_CastInput_17) == 0x000298, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::CallFunc_SetVisible_self_CastInput_17' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame, K2Node_MakeArray_Array) == 0x0002A8, "Member 'BP_ItemTooltip_Equip_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Equip_Frame::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateDropActionGuide
// 0x0002 (0x0002 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateDropActionGuide final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsConsole;                                        // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateDropActionGuide) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateDropActionGuide");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateDropActionGuide) == 0x000002, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateDropActionGuide");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateDropActionGuide, bShow) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateDropActionGuide::bShow' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateDropActionGuide, bIsConsole) == 0x000001, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateDropActionGuide::bIsConsole' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateFocusMoveAreaGuide
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateFocusMoveAreaGuide final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateFocusMoveAreaGuide) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateFocusMoveAreaGuide");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateFocusMoveAreaGuide) == 0x000001, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateFocusMoveAreaGuide");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateFocusMoveAreaGuide, bShow) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateFocusMoveAreaGuide::bShow' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnChangeScrollContentAutonFocus
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnChangeScrollContentAutonFocus final
{
public:
	bool                                          bFocus;                                            // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnChangeScrollContentAutonFocus) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnChangeScrollContentAutonFocus");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnChangeScrollContentAutonFocus) == 0x000001, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnChangeScrollContentAutonFocus");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnChangeScrollContentAutonFocus, bFocus) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnChangeScrollContentAutonFocus::bFocus' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateTotalMenu
// 0x0002 (0x0002 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateTotalMenu final
{
public:
	bool                                          bInEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInShow;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTotalMenu) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateTotalMenu");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTotalMenu) == 0x000002, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateTotalMenu");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTotalMenu, bInEnable) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateTotalMenu::bInEnable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTotalMenu, bInShow) == 0x000001, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateTotalMenu::bInShow' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnExistStats
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnExistStats final
{
public:
	bool                                          InIsExist;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnExistStats) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnExistStats");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnExistStats) == 0x000001, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnExistStats");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnExistStats, InIsExist) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnExistStats::InIsExist' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateTradableIcon
// 0x0002 (0x0002 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateTradableIcon final
{
public:
	bool                                          bIsTradable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsOverwriteExchangeable;                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTradableIcon) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateTradableIcon");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTradableIcon) == 0x000002, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateTradableIcon");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTradableIcon, bIsTradable) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateTradableIcon::bIsTradable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTradableIcon, bIsOverwriteExchangeable) == 0x000001, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateTradableIcon::bIsOverwriteExchangeable' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateEnchant
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant final
{
public:
	bool                                          bInIsVisible;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInIsEnable;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InMaxLevel;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant) == 0x000004, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant) == 0x000008, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant, bInIsVisible) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant::bInIsVisible' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant, bInIsEnable) == 0x000001, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant::bInIsEnable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant, InMaxLevel) == 0x000004, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchant::InMaxLevel' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateEnchantTransfer
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer final
{
public:
	bool                                          bInIsVisible;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInIsEnable;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InCount;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer) == 0x000004, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer) == 0x000008, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer, bInIsVisible) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer::bInIsVisible' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer, bInIsEnable) == 0x000001, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer::bInIsEnable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer, InCount) == 0x000004, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateEnchantTransfer::InCount' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateEquipPositionName
// 0x0018 (0x0018 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateEquipPositionName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEquipPositionName) == 0x000008, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateEquipPositionName");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEquipPositionName) == 0x000018, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateEquipPositionName");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateEquipPositionName, InName) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateEquipPositionName::InName' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_PreConstruct) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_PreConstruct");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_PreConstruct) == 0x000001, "Wrong size on BP_ItemTooltip_Equip_Frame_C_PreConstruct");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateCollectable
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateCollectable final
{
public:
	ETLItemCollectableState                       InCollectableState;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InConditionLevel;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateCollectable) == 0x000004, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateCollectable");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateCollectable) == 0x000008, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateCollectable");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateCollectable, InCollectableState) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateCollectable::InCollectableState' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateCollectable, InConditionLevel) == 0x000004, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateCollectable::InConditionLevel' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateStorable
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateStorable final
{
public:
	bool                                          bIsStorable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateStorable) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateStorable");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateStorable) == 0x000001, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateStorable");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateStorable, bIsStorable) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateStorable::bIsStorable' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateDestructible
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateDestructible final
{
public:
	bool                                          bIsDestructible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateDestructible) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateDestructible");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateDestructible) == 0x000001, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateDestructible");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateDestructible, bIsDestructible) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateDestructible::bIsDestructible' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateDecomposable
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateDecomposable final
{
public:
	bool                                          bIsDecomposable;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateDecomposable) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateDecomposable");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateDecomposable) == 0x000001, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateDecomposable");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateDecomposable, bIsDecomposable) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateDecomposable::bIsDecomposable' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateTradePriceInfo
// 0x0038 (0x0038 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo final
{
public:
	bool                                          InShowTradePrice;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RecentPriceText;                                   // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   SaleCountText;                                     // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo) == 0x000008, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo) == 0x000038, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo, InShowTradePrice) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo::InShowTradePrice' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo, RecentPriceText) == 0x000008, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo::RecentPriceText' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo, SaleCountText) == 0x000020, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateTradePriceInfo::SaleCountText' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnEmphasizeComponent
// 0x0002 (0x0002 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnEmphasizeComponent final
{
public:
	EItemTooltipComponent                         InComponent;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InEmphasize;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnEmphasizeComponent) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnEmphasizeComponent");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnEmphasizeComponent) == 0x000002, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnEmphasizeComponent");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnEmphasizeComponent, InComponent) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnEmphasizeComponent::InComponent' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnEmphasizeComponent, InEmphasize) == 0x000001, "Member 'BP_ItemTooltip_Equip_Frame_C_OnEmphasizeComponent::InEmphasize' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateRequireLevel
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateRequireLevel final
{
public:
	int32                                         InRequireLevel;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InPcLevel;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateRequireLevel) == 0x000004, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateRequireLevel");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateRequireLevel) == 0x000008, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateRequireLevel");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateRequireLevel, InRequireLevel) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateRequireLevel::InRequireLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateRequireLevel, InPcLevel) == 0x000004, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateRequireLevel::InPcLevel' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateCategoryName
// 0x0018 (0x0018 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateCategoryName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateCategoryName) == 0x000008, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateCategoryName");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateCategoryName) == 0x000018, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateCategoryName");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateCategoryName, InName) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateCategoryName::InName' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateGradeColor
// 0x0020 (0x0020 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateGradeColor final
{
public:
	class FText                                   InGradeName;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   InColorTableKey;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateGradeColor) == 0x000008, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateGradeColor");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateGradeColor) == 0x000020, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateGradeColor");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateGradeColor, InGradeName) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateGradeColor::InGradeName' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateGradeColor, InColorTableKey) == 0x000018, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateGradeColor::InColorTableKey' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnUpdateItemName
// 0x0018 (0x0018 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnUpdateItemName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnUpdateItemName) == 0x000008, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnUpdateItemName");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnUpdateItemName) == 0x000018, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnUpdateItemName");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnUpdateItemName, InName) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnUpdateItemName::InName' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnPresetInfoUpdate
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnPresetInfoUpdate final
{
public:
	bool                                          InIsOtherPreset;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnPresetInfoUpdate) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnPresetInfoUpdate");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnPresetInfoUpdate) == 0x000001, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnPresetInfoUpdate");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnPresetInfoUpdate, InIsOtherPreset) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnPresetInfoUpdate::InIsOtherPreset' has a wrong offset!");

// Function BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C.OnItemLockUpdate
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Equip_Frame_C_OnItemLockUpdate final
{
public:
	bool                                          InLock;                                            // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Equip_Frame_C_OnItemLockUpdate) == 0x000001, "Wrong alignment on BP_ItemTooltip_Equip_Frame_C_OnItemLockUpdate");
static_assert(sizeof(BP_ItemTooltip_Equip_Frame_C_OnItemLockUpdate) == 0x000001, "Wrong size on BP_ItemTooltip_Equip_Frame_C_OnItemLockUpdate");
static_assert(offsetof(BP_ItemTooltip_Equip_Frame_C_OnItemLockUpdate, InLock) == 0x000000, "Member 'BP_ItemTooltip_Equip_Frame_C_OnItemLockUpdate::InLock' has a wrong offset!");

}

