#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PurpleCommunitySdk

#include "Basic.hpp"


namespace SDK::Params
{

// Function PurpleCommunitySdk.CommunityCoreAPI.Get
// 0x0008 (0x0008 - 0x0000)
struct CommunityCoreAPI_Get final
{
public:
	class UCommunityCoreAPI*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityCoreAPI_Get) == 0x000008, "Wrong alignment on CommunityCoreAPI_Get");
static_assert(sizeof(CommunityCoreAPI_Get) == 0x000008, "Wrong size on CommunityCoreAPI_Get");
static_assert(offsetof(CommunityCoreAPI_Get, ReturnValue) == 0x000000, "Member 'CommunityCoreAPI_Get::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityLaunchExternalWebBrowserDialogWidget.LaunchExternalWebrowser
// 0x0010 (0x0010 - 0x0000)
struct CommunityLaunchExternalWebBrowserDialogWidget_LaunchExternalWebrowser final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityLaunchExternalWebBrowserDialogWidget_LaunchExternalWebrowser) == 0x000008, "Wrong alignment on CommunityLaunchExternalWebBrowserDialogWidget_LaunchExternalWebrowser");
static_assert(sizeof(CommunityLaunchExternalWebBrowserDialogWidget_LaunchExternalWebrowser) == 0x000010, "Wrong size on CommunityLaunchExternalWebBrowserDialogWidget_LaunchExternalWebrowser");
static_assert(offsetof(CommunityLaunchExternalWebBrowserDialogWidget_LaunchExternalWebrowser, URL) == 0x000000, "Member 'CommunityLaunchExternalWebBrowserDialogWidget_LaunchExternalWebrowser::URL' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityUIAPI.AddThemeFiles
// 0x0020 (0x0020 - 0x0000)
struct CommunityUIAPI_AddThemeFiles final
{
public:
	TArray<class FString>                         FilePaths;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 DefaultThemeFilePath;                              // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityUIAPI_AddThemeFiles) == 0x000008, "Wrong alignment on CommunityUIAPI_AddThemeFiles");
static_assert(sizeof(CommunityUIAPI_AddThemeFiles) == 0x000020, "Wrong size on CommunityUIAPI_AddThemeFiles");
static_assert(offsetof(CommunityUIAPI_AddThemeFiles, FilePaths) == 0x000000, "Member 'CommunityUIAPI_AddThemeFiles::FilePaths' has a wrong offset!");
static_assert(offsetof(CommunityUIAPI_AddThemeFiles, DefaultThemeFilePath) == 0x000010, "Member 'CommunityUIAPI_AddThemeFiles::DefaultThemeFilePath' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityUIAPI.ApplyPlugin
// 0x0040 (0x0040 - 0x0000)
struct CommunityUIAPI_ApplyPlugin final
{
public:
	class FString                                 PluginName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ConfigUrl;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BuildAge;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StoreType;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityUIAPI_ApplyPlugin) == 0x000008, "Wrong alignment on CommunityUIAPI_ApplyPlugin");
static_assert(sizeof(CommunityUIAPI_ApplyPlugin) == 0x000040, "Wrong size on CommunityUIAPI_ApplyPlugin");
static_assert(offsetof(CommunityUIAPI_ApplyPlugin, PluginName) == 0x000000, "Member 'CommunityUIAPI_ApplyPlugin::PluginName' has a wrong offset!");
static_assert(offsetof(CommunityUIAPI_ApplyPlugin, ConfigUrl) == 0x000010, "Member 'CommunityUIAPI_ApplyPlugin::ConfigUrl' has a wrong offset!");
static_assert(offsetof(CommunityUIAPI_ApplyPlugin, BuildAge) == 0x000020, "Member 'CommunityUIAPI_ApplyPlugin::BuildAge' has a wrong offset!");
static_assert(offsetof(CommunityUIAPI_ApplyPlugin, StoreType) == 0x000030, "Member 'CommunityUIAPI_ApplyPlugin::StoreType' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityUIAPI.DidCompleteScreenShot
// 0x0010 (0x0010 - 0x0000)
struct CommunityUIAPI_DidCompleteScreenShot final
{
public:
	class FString                                 ScreenshotFilePath;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityUIAPI_DidCompleteScreenShot) == 0x000008, "Wrong alignment on CommunityUIAPI_DidCompleteScreenShot");
static_assert(sizeof(CommunityUIAPI_DidCompleteScreenShot) == 0x000010, "Wrong size on CommunityUIAPI_DidCompleteScreenShot");
static_assert(offsetof(CommunityUIAPI_DidCompleteScreenShot, ScreenshotFilePath) == 0x000000, "Member 'CommunityUIAPI_DidCompleteScreenShot::ScreenshotFilePath' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityUIAPI.Execute
// 0x0010 (0x0010 - 0x0000)
struct CommunityUIAPI_Execute final
{
public:
	class FString                                 Uri;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityUIAPI_Execute) == 0x000008, "Wrong alignment on CommunityUIAPI_Execute");
static_assert(sizeof(CommunityUIAPI_Execute) == 0x000010, "Wrong size on CommunityUIAPI_Execute");
static_assert(offsetof(CommunityUIAPI_Execute, Uri) == 0x000000, "Member 'CommunityUIAPI_Execute::Uri' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityUIAPI.Get
// 0x0008 (0x0008 - 0x0000)
struct CommunityUIAPI_Get final
{
public:
	class UCommunityUIAPI*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityUIAPI_Get) == 0x000008, "Wrong alignment on CommunityUIAPI_Get");
static_assert(sizeof(CommunityUIAPI_Get) == 0x000008, "Wrong size on CommunityUIAPI_Get");
static_assert(offsetof(CommunityUIAPI_Get, ReturnValue) == 0x000000, "Member 'CommunityUIAPI_Get::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityUIAPI.OpenCommunity
// 0x0010 (0x0010 - 0x0000)
struct CommunityUIAPI_OpenCommunity final
{
public:
	class FString                                 Uri;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityUIAPI_OpenCommunity) == 0x000008, "Wrong alignment on CommunityUIAPI_OpenCommunity");
static_assert(sizeof(CommunityUIAPI_OpenCommunity) == 0x000010, "Wrong size on CommunityUIAPI_OpenCommunity");
static_assert(offsetof(CommunityUIAPI_OpenCommunity, Uri) == 0x000000, "Member 'CommunityUIAPI_OpenCommunity::Uri' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityUIAPI.OpenCommunityEx
// 0x0030 (0x0030 - 0x0000)
struct CommunityUIAPI_OpenCommunityEx final
{
public:
	class FString                                 AuthnToken;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Login_Url;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Target_Url;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityUIAPI_OpenCommunityEx) == 0x000008, "Wrong alignment on CommunityUIAPI_OpenCommunityEx");
static_assert(sizeof(CommunityUIAPI_OpenCommunityEx) == 0x000030, "Wrong size on CommunityUIAPI_OpenCommunityEx");
static_assert(offsetof(CommunityUIAPI_OpenCommunityEx, AuthnToken) == 0x000000, "Member 'CommunityUIAPI_OpenCommunityEx::AuthnToken' has a wrong offset!");
static_assert(offsetof(CommunityUIAPI_OpenCommunityEx, Login_Url) == 0x000010, "Member 'CommunityUIAPI_OpenCommunityEx::Login_Url' has a wrong offset!");
static_assert(offsetof(CommunityUIAPI_OpenCommunityEx, Target_Url) == 0x000020, "Member 'CommunityUIAPI_OpenCommunityEx::Target_Url' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityUIAPI.SetServiceAlias
// 0x0010 (0x0010 - 0x0000)
struct CommunityUIAPI_SetServiceAlias final
{
public:
	class FString                                 ServiceAlias;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityUIAPI_SetServiceAlias) == 0x000008, "Wrong alignment on CommunityUIAPI_SetServiceAlias");
static_assert(sizeof(CommunityUIAPI_SetServiceAlias) == 0x000010, "Wrong size on CommunityUIAPI_SetServiceAlias");
static_assert(offsetof(CommunityUIAPI_SetServiceAlias, ServiceAlias) == 0x000000, "Member 'CommunityUIAPI_SetServiceAlias::ServiceAlias' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityWebViewWidget.ExecuteJavascript
// 0x0010 (0x0010 - 0x0000)
struct CommunityWebViewWidget_ExecuteJavascript final
{
public:
	class FString                                 Script;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityWebViewWidget_ExecuteJavascript) == 0x000008, "Wrong alignment on CommunityWebViewWidget_ExecuteJavascript");
static_assert(sizeof(CommunityWebViewWidget_ExecuteJavascript) == 0x000010, "Wrong size on CommunityWebViewWidget_ExecuteJavascript");
static_assert(offsetof(CommunityWebViewWidget_ExecuteJavascript, Script) == 0x000000, "Member 'CommunityWebViewWidget_ExecuteJavascript::Script' has a wrong offset!");

// Function PurpleCommunitySdk.CommunityWebViewWidget.LoadURL
// 0x0010 (0x0010 - 0x0000)
struct CommunityWebViewWidget_LoadURL final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommunityWebViewWidget_LoadURL) == 0x000008, "Wrong alignment on CommunityWebViewWidget_LoadURL");
static_assert(sizeof(CommunityWebViewWidget_LoadURL) == 0x000010, "Wrong size on CommunityWebViewWidget_LoadURL");
static_assert(offsetof(CommunityWebViewWidget_LoadURL, URL) == 0x000000, "Member 'CommunityWebViewWidget_LoadURL::URL' has a wrong offset!");

// Function PurpleCommunitySdk.GoogleSTTAPI.Get
// 0x0008 (0x0008 - 0x0000)
struct GoogleSTTAPI_Get final
{
public:
	class UGoogleSTTAPI*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GoogleSTTAPI_Get) == 0x000008, "Wrong alignment on GoogleSTTAPI_Get");
static_assert(sizeof(GoogleSTTAPI_Get) == 0x000008, "Wrong size on GoogleSTTAPI_Get");
static_assert(offsetof(GoogleSTTAPI_Get, ReturnValue) == 0x000000, "Member 'GoogleSTTAPI_Get::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityChatAPI.SetConfigInfoWithUrl
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityChatAPI_SetConfigInfoWithUrl final
{
public:
	class FString                                 ApiSrvUrl;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityChatAPI_SetConfigInfoWithUrl) == 0x000008, "Wrong alignment on PurpleCommunityChatAPI_SetConfigInfoWithUrl");
static_assert(sizeof(PurpleCommunityChatAPI_SetConfigInfoWithUrl) == 0x000010, "Wrong size on PurpleCommunityChatAPI_SetConfigInfoWithUrl");
static_assert(offsetof(PurpleCommunityChatAPI_SetConfigInfoWithUrl, ApiSrvUrl) == 0x000000, "Member 'PurpleCommunityChatAPI_SetConfigInfoWithUrl::ApiSrvUrl' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.GetAppId
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_GetAppId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_GetAppId) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_GetAppId");
static_assert(sizeof(PurpleCommunityCoreAPI_GetAppId) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_GetAppId");
static_assert(offsetof(PurpleCommunityCoreAPI_GetAppId, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_GetAppId::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.GetAppSecret
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_GetAppSecret final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_GetAppSecret) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_GetAppSecret");
static_assert(sizeof(PurpleCommunityCoreAPI_GetAppSecret) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_GetAppSecret");
static_assert(offsetof(PurpleCommunityCoreAPI_GetAppSecret, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_GetAppSecret::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.GetAppVersion
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_GetAppVersion final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_GetAppVersion) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_GetAppVersion");
static_assert(sizeof(PurpleCommunityCoreAPI_GetAppVersion) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_GetAppVersion");
static_assert(offsetof(PurpleCommunityCoreAPI_GetAppVersion, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_GetAppVersion::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.GetBuildAge
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_GetBuildAge final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_GetBuildAge) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_GetBuildAge");
static_assert(sizeof(PurpleCommunityCoreAPI_GetBuildAge) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_GetBuildAge");
static_assert(offsetof(PurpleCommunityCoreAPI_GetBuildAge, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_GetBuildAge::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.GetCountryCode
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_GetCountryCode final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_GetCountryCode) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_GetCountryCode");
static_assert(sizeof(PurpleCommunityCoreAPI_GetCountryCode) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_GetCountryCode");
static_assert(offsetof(PurpleCommunityCoreAPI_GetCountryCode, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_GetCountryCode::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.GetLanguageCode
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_GetLanguageCode final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_GetLanguageCode) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_GetLanguageCode");
static_assert(sizeof(PurpleCommunityCoreAPI_GetLanguageCode) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_GetLanguageCode");
static_assert(offsetof(PurpleCommunityCoreAPI_GetLanguageCode, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_GetLanguageCode::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.GetLocaleByLanguageCode
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_GetLocaleByLanguageCode final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_GetLocaleByLanguageCode) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_GetLocaleByLanguageCode");
static_assert(sizeof(PurpleCommunityCoreAPI_GetLocaleByLanguageCode) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_GetLocaleByLanguageCode");
static_assert(offsetof(PurpleCommunityCoreAPI_GetLocaleByLanguageCode, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_GetLocaleByLanguageCode::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.GetSdkVersion
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_GetSdkVersion final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_GetSdkVersion) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_GetSdkVersion");
static_assert(sizeof(PurpleCommunityCoreAPI_GetSdkVersion) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_GetSdkVersion");
static_assert(offsetof(PurpleCommunityCoreAPI_GetSdkVersion, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_GetSdkVersion::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.GetStoreType
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_GetStoreType final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_GetStoreType) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_GetStoreType");
static_assert(sizeof(PurpleCommunityCoreAPI_GetStoreType) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_GetStoreType");
static_assert(offsetof(PurpleCommunityCoreAPI_GetStoreType, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_GetStoreType::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.Initialize
// 0x0060 (0x0060 - 0x0000)
struct PurpleCommunityCoreAPI_Initialize final
{
public:
	class FString                                 AppId;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppSecret;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppVersion;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ConfigUrl;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BuildAge;                                          // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StoreType;                                         // 0x0050(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_Initialize) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_Initialize");
static_assert(sizeof(PurpleCommunityCoreAPI_Initialize) == 0x000060, "Wrong size on PurpleCommunityCoreAPI_Initialize");
static_assert(offsetof(PurpleCommunityCoreAPI_Initialize, AppId) == 0x000000, "Member 'PurpleCommunityCoreAPI_Initialize::AppId' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_Initialize, AppSecret) == 0x000010, "Member 'PurpleCommunityCoreAPI_Initialize::AppSecret' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_Initialize, AppVersion) == 0x000020, "Member 'PurpleCommunityCoreAPI_Initialize::AppVersion' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_Initialize, ConfigUrl) == 0x000030, "Member 'PurpleCommunityCoreAPI_Initialize::ConfigUrl' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_Initialize, BuildAge) == 0x000040, "Member 'PurpleCommunityCoreAPI_Initialize::BuildAge' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_Initialize, StoreType) == 0x000050, "Member 'PurpleCommunityCoreAPI_Initialize::StoreType' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.IsEnabledLog
// 0x0001 (0x0001 - 0x0000)
struct PurpleCommunityCoreAPI_IsEnabledLog final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_IsEnabledLog) == 0x000001, "Wrong alignment on PurpleCommunityCoreAPI_IsEnabledLog");
static_assert(sizeof(PurpleCommunityCoreAPI_IsEnabledLog) == 0x000001, "Wrong size on PurpleCommunityCoreAPI_IsEnabledLog");
static_assert(offsetof(PurpleCommunityCoreAPI_IsEnabledLog, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_IsEnabledLog::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.IsInitialized
// 0x0001 (0x0001 - 0x0000)
struct PurpleCommunityCoreAPI_IsInitialized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_IsInitialized) == 0x000001, "Wrong alignment on PurpleCommunityCoreAPI_IsInitialized");
static_assert(sizeof(PurpleCommunityCoreAPI_IsInitialized) == 0x000001, "Wrong size on PurpleCommunityCoreAPI_IsInitialized");
static_assert(offsetof(PurpleCommunityCoreAPI_IsInitialized, ReturnValue) == 0x000000, "Member 'PurpleCommunityCoreAPI_IsInitialized::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.SetCountryCode
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_SetCountryCode final
{
public:
	class FString                                 CountryCode;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_SetCountryCode) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_SetCountryCode");
static_assert(sizeof(PurpleCommunityCoreAPI_SetCountryCode) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_SetCountryCode");
static_assert(offsetof(PurpleCommunityCoreAPI_SetCountryCode, CountryCode) == 0x000000, "Member 'PurpleCommunityCoreAPI_SetCountryCode::CountryCode' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.SetEnableLog
// 0x0001 (0x0001 - 0x0000)
struct PurpleCommunityCoreAPI_SetEnableLog final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_SetEnableLog) == 0x000001, "Wrong alignment on PurpleCommunityCoreAPI_SetEnableLog");
static_assert(sizeof(PurpleCommunityCoreAPI_SetEnableLog) == 0x000001, "Wrong size on PurpleCommunityCoreAPI_SetEnableLog");
static_assert(offsetof(PurpleCommunityCoreAPI_SetEnableLog, Enabled) == 0x000000, "Member 'PurpleCommunityCoreAPI_SetEnableLog::Enabled' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.SetLanguageCode
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityCoreAPI_SetLanguageCode final
{
public:
	class FString                                 LanguageCode;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityCoreAPI_SetLanguageCode) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_SetLanguageCode");
static_assert(sizeof(PurpleCommunityCoreAPI_SetLanguageCode) == 0x000010, "Wrong size on PurpleCommunityCoreAPI_SetLanguageCode");
static_assert(offsetof(PurpleCommunityCoreAPI_SetLanguageCode, LanguageCode) == 0x000000, "Member 'PurpleCommunityCoreAPI_SetLanguageCode::LanguageCode' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityCoreAPI.UpdateGameCharacter
// 0x0078 (0x0078 - 0x0000)
struct PurpleCommunityCoreAPI_UpdateGameCharacter final
{
public:
	class FString                                 GameAccountID;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ServerId;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ServerName;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CharacterId;                                       // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CharacterName;                                     // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GroupID;                                           // 0x0050(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GroupName;                                         // 0x0060(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Level;                                             // 0x0070(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PurpleCommunityCoreAPI_UpdateGameCharacter) == 0x000008, "Wrong alignment on PurpleCommunityCoreAPI_UpdateGameCharacter");
static_assert(sizeof(PurpleCommunityCoreAPI_UpdateGameCharacter) == 0x000078, "Wrong size on PurpleCommunityCoreAPI_UpdateGameCharacter");
static_assert(offsetof(PurpleCommunityCoreAPI_UpdateGameCharacter, GameAccountID) == 0x000000, "Member 'PurpleCommunityCoreAPI_UpdateGameCharacter::GameAccountID' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_UpdateGameCharacter, ServerId) == 0x000010, "Member 'PurpleCommunityCoreAPI_UpdateGameCharacter::ServerId' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_UpdateGameCharacter, ServerName) == 0x000020, "Member 'PurpleCommunityCoreAPI_UpdateGameCharacter::ServerName' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_UpdateGameCharacter, CharacterId) == 0x000030, "Member 'PurpleCommunityCoreAPI_UpdateGameCharacter::CharacterId' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_UpdateGameCharacter, CharacterName) == 0x000040, "Member 'PurpleCommunityCoreAPI_UpdateGameCharacter::CharacterName' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_UpdateGameCharacter, GroupID) == 0x000050, "Member 'PurpleCommunityCoreAPI_UpdateGameCharacter::GroupID' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_UpdateGameCharacter, GroupName) == 0x000060, "Member 'PurpleCommunityCoreAPI_UpdateGameCharacter::GroupName' has a wrong offset!");
static_assert(offsetof(PurpleCommunityCoreAPI_UpdateGameCharacter, Level) == 0x000070, "Member 'PurpleCommunityCoreAPI_UpdateGameCharacter::Level' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityViewAPI.DidCompleteScreenShot
// 0x0010 (0x0010 - 0x0000)
struct PurpleCommunityViewAPI_DidCompleteScreenShot final
{
public:
	class FString                                 ScreenshotFilePath;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityViewAPI_DidCompleteScreenShot) == 0x000008, "Wrong alignment on PurpleCommunityViewAPI_DidCompleteScreenShot");
static_assert(sizeof(PurpleCommunityViewAPI_DidCompleteScreenShot) == 0x000010, "Wrong size on PurpleCommunityViewAPI_DidCompleteScreenShot");
static_assert(offsetof(PurpleCommunityViewAPI_DidCompleteScreenShot, ScreenshotFilePath) == 0x000000, "Member 'PurpleCommunityViewAPI_DidCompleteScreenShot::ScreenshotFilePath' has a wrong offset!");

// Function PurpleCommunitySdk.PurpleCommunityViewAPI.OpenCommunity
// 0x0020 (0x0020 - 0x0000)
struct PurpleCommunityViewAPI_OpenCommunity final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Title;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PurpleCommunityViewAPI_OpenCommunity) == 0x000008, "Wrong alignment on PurpleCommunityViewAPI_OpenCommunity");
static_assert(sizeof(PurpleCommunityViewAPI_OpenCommunity) == 0x000020, "Wrong size on PurpleCommunityViewAPI_OpenCommunity");
static_assert(offsetof(PurpleCommunityViewAPI_OpenCommunity, URL) == 0x000000, "Member 'PurpleCommunityViewAPI_OpenCommunity::URL' has a wrong offset!");
static_assert(offsetof(PurpleCommunityViewAPI_OpenCommunity, Title) == 0x000010, "Member 'PurpleCommunityViewAPI_OpenCommunity::Title' has a wrong offset!");

// Function PurpleCommunitySdk.TextToSpeechAPI.Get
// 0x0008 (0x0008 - 0x0000)
struct TextToSpeechAPI_Get final
{
public:
	class UTextToSpeechAPI*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TextToSpeechAPI_Get) == 0x000008, "Wrong alignment on TextToSpeechAPI_Get");
static_assert(sizeof(TextToSpeechAPI_Get) == 0x000008, "Wrong size on TextToSpeechAPI_Get");
static_assert(offsetof(TextToSpeechAPI_Get, ReturnValue) == 0x000000, "Member 'TextToSpeechAPI_Get::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.TranslateAPI.IsInitialized
// 0x0001 (0x0001 - 0x0000)
struct TranslateAPI_IsInitialized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TranslateAPI_IsInitialized) == 0x000001, "Wrong alignment on TranslateAPI_IsInitialized");
static_assert(sizeof(TranslateAPI_IsInitialized) == 0x000001, "Wrong size on TranslateAPI_IsInitialized");
static_assert(offsetof(TranslateAPI_IsInitialized, ReturnValue) == 0x000000, "Member 'TranslateAPI_IsInitialized::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.TranslateAPI.SetConfigInfo
// 0x0028 (0x0028 - 0x0000)
struct TranslateAPI_SetConfigInfo final
{
public:
	class FString                                 ApiSrvUrl;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GameCode;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(TranslateAPI_SetConfigInfo) == 0x000008, "Wrong alignment on TranslateAPI_SetConfigInfo");
static_assert(sizeof(TranslateAPI_SetConfigInfo) == 0x000028, "Wrong size on TranslateAPI_SetConfigInfo");
static_assert(offsetof(TranslateAPI_SetConfigInfo, ApiSrvUrl) == 0x000000, "Member 'TranslateAPI_SetConfigInfo::ApiSrvUrl' has a wrong offset!");
static_assert(offsetof(TranslateAPI_SetConfigInfo, GameCode) == 0x000010, "Member 'TranslateAPI_SetConfigInfo::GameCode' has a wrong offset!");
static_assert(offsetof(TranslateAPI_SetConfigInfo, ReturnValue) == 0x000020, "Member 'TranslateAPI_SetConfigInfo::ReturnValue' has a wrong offset!");

// Function PurpleCommunitySdk.TranslateAPI.Translate
// 0x0058 (0x0058 - 0x0000)
struct TranslateAPI_Translate final
{
public:
	class FString                                 SourceLanguage;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SourceText;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TargetLanguage;                                    // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SentFrom;                                          // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MilliSec;                                          // 0x0040(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(TranslateAPI_Translate) == 0x000008, "Wrong alignment on TranslateAPI_Translate");
static_assert(sizeof(TranslateAPI_Translate) == 0x000058, "Wrong size on TranslateAPI_Translate");
static_assert(offsetof(TranslateAPI_Translate, SourceLanguage) == 0x000000, "Member 'TranslateAPI_Translate::SourceLanguage' has a wrong offset!");
static_assert(offsetof(TranslateAPI_Translate, SourceText) == 0x000010, "Member 'TranslateAPI_Translate::SourceText' has a wrong offset!");
static_assert(offsetof(TranslateAPI_Translate, TargetLanguage) == 0x000020, "Member 'TranslateAPI_Translate::TargetLanguage' has a wrong offset!");
static_assert(offsetof(TranslateAPI_Translate, SentFrom) == 0x000030, "Member 'TranslateAPI_Translate::SentFrom' has a wrong offset!");
static_assert(offsetof(TranslateAPI_Translate, MilliSec) == 0x000040, "Member 'TranslateAPI_Translate::MilliSec' has a wrong offset!");
static_assert(offsetof(TranslateAPI_Translate, ReturnValue) == 0x000048, "Member 'TranslateAPI_Translate::ReturnValue' has a wrong offset!");

}

