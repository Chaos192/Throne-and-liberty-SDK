#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NCETSettings

#include "Basic.hpp"

#include "DeveloperSettings_classes.hpp"
#include "NCETSettings_structs.hpp"


namespace SDK
{

// Class NCETSettings.NCETSettings
// 0x00B8 (0x00F0 - 0x0038)
class UNCETSettings final : public UDeveloperSettings
{
public:
	bool                                          bNiagaraEmitter;                                   // 0x0038(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseNCETParser;                                     // 0x0039(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentLangaugeName;                               // 0x0040(0x0010)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ImportFileSuffix;                                  // 0x0050(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLangagueInfo>                  LanguageInfos;                                     // 0x0060(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                 IdFieldName;                                       // 0x0070(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TextFieldName;                                     // 0x0080(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ExcludeHeaderRow;                                  // 0x0090(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        IdColumnPosition;                                  // 0x0094(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        TextColumnPosition;                                // 0x0098(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSequenceDynamicParamDefaultKeyNameSetting> PropertyDefaultKeyNameMapping;                     // 0x00A0(0x0010)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	float                                         ScreenWidgetFaceCameraOffset;                      // 0x00B0(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScreenWidgetLayerZOrder;                           // 0x00B4(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B8[0x38];                                      // 0x00B8(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NCETSettings">();
	}
	static class UNCETSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNCETSettings>();
	}
};
static_assert(alignof(UNCETSettings) == 0x000008, "Wrong alignment on UNCETSettings");
static_assert(sizeof(UNCETSettings) == 0x0000F0, "Wrong size on UNCETSettings");
static_assert(offsetof(UNCETSettings, bNiagaraEmitter) == 0x000038, "Member 'UNCETSettings::bNiagaraEmitter' has a wrong offset!");
static_assert(offsetof(UNCETSettings, UseNCETParser) == 0x000039, "Member 'UNCETSettings::UseNCETParser' has a wrong offset!");
static_assert(offsetof(UNCETSettings, CurrentLangaugeName) == 0x000040, "Member 'UNCETSettings::CurrentLangaugeName' has a wrong offset!");
static_assert(offsetof(UNCETSettings, ImportFileSuffix) == 0x000050, "Member 'UNCETSettings::ImportFileSuffix' has a wrong offset!");
static_assert(offsetof(UNCETSettings, LanguageInfos) == 0x000060, "Member 'UNCETSettings::LanguageInfos' has a wrong offset!");
static_assert(offsetof(UNCETSettings, IdFieldName) == 0x000070, "Member 'UNCETSettings::IdFieldName' has a wrong offset!");
static_assert(offsetof(UNCETSettings, TextFieldName) == 0x000080, "Member 'UNCETSettings::TextFieldName' has a wrong offset!");
static_assert(offsetof(UNCETSettings, ExcludeHeaderRow) == 0x000090, "Member 'UNCETSettings::ExcludeHeaderRow' has a wrong offset!");
static_assert(offsetof(UNCETSettings, IdColumnPosition) == 0x000094, "Member 'UNCETSettings::IdColumnPosition' has a wrong offset!");
static_assert(offsetof(UNCETSettings, TextColumnPosition) == 0x000098, "Member 'UNCETSettings::TextColumnPosition' has a wrong offset!");
static_assert(offsetof(UNCETSettings, PropertyDefaultKeyNameMapping) == 0x0000A0, "Member 'UNCETSettings::PropertyDefaultKeyNameMapping' has a wrong offset!");
static_assert(offsetof(UNCETSettings, ScreenWidgetFaceCameraOffset) == 0x0000B0, "Member 'UNCETSettings::ScreenWidgetFaceCameraOffset' has a wrong offset!");
static_assert(offsetof(UNCETSettings, ScreenWidgetLayerZOrder) == 0x0000B4, "Member 'UNCETSettings::ScreenWidgetLayerZOrder' has a wrong offset!");

}

