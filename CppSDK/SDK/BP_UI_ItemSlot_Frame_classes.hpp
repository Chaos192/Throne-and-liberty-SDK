#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UI_ItemSlot_Frame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "TLClient_classes.hpp"
#include "TLScheme_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_UI_ItemSlot_Frame.BP_UI_ItemSlot_Frame_C
// 0x0190 (0x1418 - 0x1288)
class UBP_UI_ItemSlot_Frame_C final : public UTLUserWidgetItemSlot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x1290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTLUniformGridPanel*                    BORDER_RequireLevel;                               // 0x1298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_UI_BTN_Toggle_OnlyIcon_NoColor_C*   BP_UI_BTN_Toggle_OnlyIcon_Lock;                    // 0x12A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_UI_ItemSlot_C*                      BP_UI_ItemSlot;                                    // 0x12A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_UI_ItemTrait_State_Widget_C*        BP_UI_ItemTrait_State_Widget;                      // 0x12B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Costume_Icon;                                      // 0x12B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Empty;                                             // 0x12C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBorder*                              Empty_Visible;                                     // 0x12C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GRade_GraImage;                                    // 0x12D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Hover_Glow_IMG;                                    // 0x12D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               IMG_Dimmed;                                        // 0x12E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Img_TraitExtract_ICO;                              // 0x12E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSizeBox*                             ItemSlot_Size;                                     // 0x12F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               SlotLock;                                          // 0x12F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TEX_Common_Dimmed_Box_1;                           // 0x1300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TLImage_GradeEffect;                               // 0x1308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_RequireLevel;                                  // 0x1310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         ItemSlot_MinSize;                                  // 0x1318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Gra_Grade_Visible;                                 // 0x131C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AllgradeOff;                                       // 0x131D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131E[0x2];                                     // 0x131E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Gra_Option;                                        // 0x1320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible_Exchangeable;                              // 0x1324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1325[0x3];                                     // 0x1325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        Upgrade_FontStyle;                                 // 0x1328(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Equipment_Visible;                                 // 0x1340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Level_Visible;                                     // 0x1341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hover_Option;                                      // 0x1342(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1343[0x5];                                     // 0x1343(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        Path_HoverTexture;                                 // 0x1348(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FAnchorData                            In_Layout_Data_Type_1;                             // 0x1360(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FAnchorData                            In_Layout_Data_Type_2;                             // 0x1388(0x0028)(Edit, BlueprintVisible, NoDestructor)
	bool                                          TraitExtract_Custom;                               // 0x13B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13B1[0x7];                                     // 0x13B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        Path_Img_TraitExtrac;                              // 0x13B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FAnchorData                            In_Layout_Data_Type_3;                             // 0x13D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	int32                                         In_ZOrder;                                         // 0x13F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13FC[0x4];                                     // 0x13FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        Path_Dimmed;                                       // 0x1400(0x0018)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_UI_ItemSlot_Frame(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnItemTraitExtract(bool InIsExtractItem);
	void OnUpdateRequireLevel(int32 InRequireLevel, int32 InPcLevel);
	void OnUpdateCollectableMarks();
	void OnUpdateMaxEnchant(bool InbMaxLevel);
	void OnItemGradeUpdate(const EItemGrade InGrade);
	void OnItemDungeonUpdate(const bool bInIsDungeonItem);
	void OnItemLockUpdate();
	void OnEmpty(bool InEmpty);
	void OnItemEquipUpdate();
	void OnPresetInfoUpdate();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UI_ItemSlot_Frame_C">();
	}
	static class UBP_UI_ItemSlot_Frame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_UI_ItemSlot_Frame_C>();
	}
};
static_assert(alignof(UBP_UI_ItemSlot_Frame_C) == 0x000008, "Wrong alignment on UBP_UI_ItemSlot_Frame_C");
static_assert(sizeof(UBP_UI_ItemSlot_Frame_C) == 0x001418, "Wrong size on UBP_UI_ItemSlot_Frame_C");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, UberGraphFrame) == 0x001288, "Member 'UBP_UI_ItemSlot_Frame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Hover) == 0x001290, "Member 'UBP_UI_ItemSlot_Frame_C::Hover' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, BORDER_RequireLevel) == 0x001298, "Member 'UBP_UI_ItemSlot_Frame_C::BORDER_RequireLevel' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, BP_UI_BTN_Toggle_OnlyIcon_Lock) == 0x0012A0, "Member 'UBP_UI_ItemSlot_Frame_C::BP_UI_BTN_Toggle_OnlyIcon_Lock' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, BP_UI_ItemSlot) == 0x0012A8, "Member 'UBP_UI_ItemSlot_Frame_C::BP_UI_ItemSlot' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, BP_UI_ItemTrait_State_Widget) == 0x0012B0, "Member 'UBP_UI_ItemSlot_Frame_C::BP_UI_ItemTrait_State_Widget' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Costume_Icon) == 0x0012B8, "Member 'UBP_UI_ItemSlot_Frame_C::Costume_Icon' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Empty) == 0x0012C0, "Member 'UBP_UI_ItemSlot_Frame_C::Empty' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Empty_Visible) == 0x0012C8, "Member 'UBP_UI_ItemSlot_Frame_C::Empty_Visible' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, GRade_GraImage) == 0x0012D0, "Member 'UBP_UI_ItemSlot_Frame_C::GRade_GraImage' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Hover_Glow_IMG) == 0x0012D8, "Member 'UBP_UI_ItemSlot_Frame_C::Hover_Glow_IMG' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, IMG_Dimmed) == 0x0012E0, "Member 'UBP_UI_ItemSlot_Frame_C::IMG_Dimmed' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Img_TraitExtract_ICO) == 0x0012E8, "Member 'UBP_UI_ItemSlot_Frame_C::Img_TraitExtract_ICO' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, ItemSlot_Size) == 0x0012F0, "Member 'UBP_UI_ItemSlot_Frame_C::ItemSlot_Size' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, SlotLock) == 0x0012F8, "Member 'UBP_UI_ItemSlot_Frame_C::SlotLock' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, TEX_Common_Dimmed_Box_1) == 0x001300, "Member 'UBP_UI_ItemSlot_Frame_C::TEX_Common_Dimmed_Box_1' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, TLImage_GradeEffect) == 0x001308, "Member 'UBP_UI_ItemSlot_Frame_C::TLImage_GradeEffect' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, TXT_RequireLevel) == 0x001310, "Member 'UBP_UI_ItemSlot_Frame_C::TXT_RequireLevel' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, ItemSlot_MinSize) == 0x001318, "Member 'UBP_UI_ItemSlot_Frame_C::ItemSlot_MinSize' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Gra_Grade_Visible) == 0x00131C, "Member 'UBP_UI_ItemSlot_Frame_C::Gra_Grade_Visible' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, AllgradeOff) == 0x00131D, "Member 'UBP_UI_ItemSlot_Frame_C::AllgradeOff' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Gra_Option) == 0x001320, "Member 'UBP_UI_ItemSlot_Frame_C::Gra_Option' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Visible_Exchangeable) == 0x001324, "Member 'UBP_UI_ItemSlot_Frame_C::Visible_Exchangeable' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Upgrade_FontStyle) == 0x001328, "Member 'UBP_UI_ItemSlot_Frame_C::Upgrade_FontStyle' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Equipment_Visible) == 0x001340, "Member 'UBP_UI_ItemSlot_Frame_C::Equipment_Visible' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Level_Visible) == 0x001341, "Member 'UBP_UI_ItemSlot_Frame_C::Level_Visible' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Hover_Option) == 0x001342, "Member 'UBP_UI_ItemSlot_Frame_C::Hover_Option' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Path_HoverTexture) == 0x001348, "Member 'UBP_UI_ItemSlot_Frame_C::Path_HoverTexture' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, In_Layout_Data_Type_1) == 0x001360, "Member 'UBP_UI_ItemSlot_Frame_C::In_Layout_Data_Type_1' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, In_Layout_Data_Type_2) == 0x001388, "Member 'UBP_UI_ItemSlot_Frame_C::In_Layout_Data_Type_2' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, TraitExtract_Custom) == 0x0013B0, "Member 'UBP_UI_ItemSlot_Frame_C::TraitExtract_Custom' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Path_Img_TraitExtrac) == 0x0013B8, "Member 'UBP_UI_ItemSlot_Frame_C::Path_Img_TraitExtrac' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, In_Layout_Data_Type_3) == 0x0013D0, "Member 'UBP_UI_ItemSlot_Frame_C::In_Layout_Data_Type_3' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, In_ZOrder) == 0x0013F8, "Member 'UBP_UI_ItemSlot_Frame_C::In_ZOrder' has a wrong offset!");
static_assert(offsetof(UBP_UI_ItemSlot_Frame_C, Path_Dimmed) == 0x001400, "Member 'UBP_UI_ItemSlot_Frame_C::Path_Dimmed' has a wrong offset!");

}

