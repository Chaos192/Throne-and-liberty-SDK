#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventoryContextMenuCondition

#include "Basic.hpp"

#include "InventoryContextMenuCondition_classes.hpp"
#include "InventoryContextMenuCondition_parameters.hpp"


namespace SDK
{

// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.ExecuteUbergraph_InventoryContextMenuCondition
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventoryContextMenuCondition_C::ExecuteUbergraph_InventoryContextMenuCondition(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "ExecuteUbergraph_InventoryContextMenuCondition");

	Params::InventoryContextMenuCondition_C_ExecuteUbergraph_InventoryContextMenuCondition Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.OnContextMenuShow
// (Event, Public, BlueprintEvent)
// Parameters:
// EInvenModeType                          InInvenModeType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTLUserWidgetItemSlot*            InItemWidget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InCurrentPresetNum                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETLUIPlatform                           UIPlatform_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventoryContextMenuCondition_C::OnContextMenuShow(EInvenModeType InInvenModeType, class UTLUserWidgetItemSlot* InItemWidget, int32 InCurrentPresetNum, ETLUIPlatform UIPlatform_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "OnContextMenuShow");

	Params::InventoryContextMenuCondition_C_OnContextMenuShow Parms{};

	Parms.InInvenModeType = InInvenModeType;
	Parms.InItemWidget = InItemWidget;
	Parms.InCurrentPresetNum = InCurrentPresetNum;
	Parms.UIPlatform_0 = UIPlatform_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.ShowInventoryContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::ShowInventoryContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "ShowInventoryContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddEquipContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddEquipContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddEquipContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddCommonContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddCommonContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddCommonContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.ShowShopContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::ShowShopContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "ShowShopContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddUseContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddUseContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddUseContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddEnchantMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddEnchantMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddEnchantMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.ShowStorageContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::ShowStorageContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "ShowStorageContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.ShowCraftingContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::ShowCraftingContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "ShowCraftingContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.Show Equip Context Menu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::Show_Equip_Context_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "Show Equip Context Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.Show Enchant Context Menu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::Show_Enchant_Context_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "Show Enchant Context Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.Add Compare Other Slot Menu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::Add_Compare_Other_Slot_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "Add Compare Other Slot Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddRegisterScrollMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddRegisterScrollMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddRegisterScrollMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddDecompositionMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddDecompositionMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddDecompositionMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.Add Destruction Menu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::Add_Destruction_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "Add Destruction Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddCompositionMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddCompositionMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddCompositionMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.Add Item Collection Menu
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::Add_Item_Collection_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "Add Item Collection Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddAcquisitionMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddAcquisitionMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddAcquisitionMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.ShowDecompositionContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::ShowDecompositionContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "ShowDecompositionContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.Show Collection Context Menu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::Show_Collection_Context_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "Show Collection Context Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.Add Lock Menu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::Add_Lock_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "Add Lock Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.Add PolymorphElixine Menu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::Add_PolymorphElixine_Menu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "Add PolymorphElixine Menu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddTradeSellMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddTradeSellMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddTradeSellMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddTradeSearchMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddTradeSearchMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddTradeSearchMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.ShowTradeContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::ShowTradeContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "ShowTradeContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddSlotRegisterMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddSlotRegisterMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddSlotRegisterMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.ShowDestructionContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::ShowDestructionContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "ShowDestructionContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.Add UsageMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::Add_UsageMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "Add UsageMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddAutoUseMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddAutoUseMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddAutoUseMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddChatShare
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddChatShare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddChatShare");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddItemTraitExtract
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddItemTraitExtract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddItemTraitExtract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddTraitListMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddTraitListMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddTraitListMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddItemLotteryMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddItemLotteryMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddItemLotteryMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddItemRune
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddItemRune()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddItemRune");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddRuneSocket
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddRuneSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddRuneSocket");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.ShowItemRubbingContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::ShowItemRubbingContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "ShowItemRubbingContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryContextMenuCondition.InventoryContextMenuCondition_C.AddItemRubbingMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryContextMenuCondition_C::AddItemRubbingMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContextMenuCondition_C", "AddItemRubbingMenu");

	UObject::ProcessEvent(Func, nullptr);
}

}

