#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemTooltip_Consume_Frame

#include "Basic.hpp"

#include "TLClient_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.ExecuteUbergraph_BP_ItemTooltip_Consume_Frame
// 0x01B0 (0x01B0 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InName;                               // 0x0008(0x0018)(ConstParm)
	int32                                         K2Node_Event_InRequireLevel;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InPcLevel;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InLock;                               // 0x0049(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsStorable;                          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InShowTradePrice;                     // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_RecentPriceText;                      // 0x0050(0x0018)(ConstParm)
	class FText                                   K2Node_Event_SaleCountText;                        // 0x0068(0x0018)(ConstParm)
	bool                                          K2Node_Event_bIsDestructible;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsDecomposable;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETLItemCollectableState                       K2Node_Event_InCollectableState;                   // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InConditionLevel;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0088(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_InGradeName;                          // 0x00A8(0x0018)(ConstParm)
	class FName                                   K2Node_Event_InColorTableKey;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_InName_1;                             // 0x00C8(0x0018)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsUnLock;                             // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput;                // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_1;              // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsTradable;                          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsOverwriteExchangeable;             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInEnable;                            // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bInShow;                              // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_2;              // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_ShowWithValue_self_CastInput;             // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_3;              // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_4;              // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddVisibleBinding_ReturnValue;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddTextBinding_ReturnValue;               // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddTextBinding_ReturnValue_1;             // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddVisibleBinding_ReturnValue_1;          // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddTextBinding_ReturnValue_2;             // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTLUserWidgetSelectableItemSlot*> K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_AddVisibleBinding_ReturnValue_2;          // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_ShowWithValue_self_CastInput_1;           // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddTextBinding_ReturnValue_3;             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddVisibleBinding_ReturnValue_3;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFocus;                               // 0x0182(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_5;              // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bShow;                                // 0x0198(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITLWidgetVisibilityInterface> CallFunc_SetVisible_self_CastInput_6;              // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame) == 0x000008, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame) == 0x0001B0, "Wrong size on BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, EntryPoint) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_InName) == 0x000008, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_InRequireLevel) == 0x000020, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_InRequireLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_InPcLevel) == 0x000024, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_InPcLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_InLock) == 0x000049, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_InLock' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_bIsStorable) == 0x00004A, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_bIsStorable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_InShowTradePrice) == 0x00004B, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_InShowTradePrice' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_RecentPriceText) == 0x000050, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_RecentPriceText' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_SaleCountText) == 0x000068, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_SaleCountText' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_bIsDestructible) == 0x000080, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_bIsDestructible' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_bIsDecomposable) == 0x000081, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_bIsDecomposable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_InCollectableState) == 0x000082, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_InCollectableState' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_InConditionLevel) == 0x000084, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_InConditionLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000088, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_SwitchEnum_CmpSuccess) == 0x0000A0, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_InGradeName) == 0x0000A8, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_InGradeName' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_InColorTableKey) == 0x0000C0, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_InColorTableKey' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_InName_1) == 0x0000C8, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_InName_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E1, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_BooleanOR_ReturnValue) == 0x0000E2, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_IsUnLock) == 0x0000E3, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_IsUnLock' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_Not_PreBool_ReturnValue) == 0x0000E4, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_SetVisible_self_CastInput) == 0x0000E8, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_SetVisible_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_SetVisible_self_CastInput_1) == 0x0000F8, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_SetVisible_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_bIsTradable) == 0x000108, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_bIsTradable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_bIsOverwriteExchangeable) == 0x000109, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_bIsOverwriteExchangeable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_bInEnable) == 0x00010A, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_bInEnable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_bInShow) == 0x00010B, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_bInShow' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_SetVisible_self_CastInput_2) == 0x000110, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_SetVisible_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_ShowWithValue_self_CastInput) == 0x000120, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_ShowWithValue_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_SetVisible_self_CastInput_3) == 0x000130, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_SetVisible_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_SetVisible_self_CastInput_4) == 0x000140, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_SetVisible_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_AddVisibleBinding_ReturnValue) == 0x000150, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_AddVisibleBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_AddTextBinding_ReturnValue) == 0x000151, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_AddTextBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_AddTextBinding_ReturnValue_1) == 0x000152, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_AddTextBinding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_AddVisibleBinding_ReturnValue_1) == 0x000153, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_AddVisibleBinding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_AddTextBinding_ReturnValue_2) == 0x000154, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_AddTextBinding_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_MakeArray_Array) == 0x000158, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_AddVisibleBinding_ReturnValue_2) == 0x000168, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_AddVisibleBinding_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_ShowWithValue_self_CastInput_1) == 0x000170, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_ShowWithValue_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_AddTextBinding_ReturnValue_3) == 0x000180, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_AddTextBinding_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_AddVisibleBinding_ReturnValue_3) == 0x000181, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_AddVisibleBinding_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_bFocus) == 0x000182, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_bFocus' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_IsDesignTime) == 0x000183, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_SetVisible_self_CastInput_5) == 0x000188, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_SetVisible_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, K2Node_Event_bShow) == 0x000198, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::K2Node_Event_bShow' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame, CallFunc_SetVisible_self_CastInput_6) == 0x0001A0, "Member 'BP_ItemTooltip_Consume_Frame_C_ExecuteUbergraph_BP_ItemTooltip_Consume_Frame::CallFunc_SetVisible_self_CastInput_6' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateFocusMoveAreaGuide
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateFocusMoveAreaGuide final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateFocusMoveAreaGuide) == 0x000001, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateFocusMoveAreaGuide");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateFocusMoveAreaGuide) == 0x000001, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateFocusMoveAreaGuide");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateFocusMoveAreaGuide, bShow) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateFocusMoveAreaGuide::bShow' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_PreConstruct) == 0x000001, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_PreConstruct");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_PreConstruct) == 0x000001, "Wrong size on BP_ItemTooltip_Consume_Frame_C_PreConstruct");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnChangeScrollContentAutonFocus
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnChangeScrollContentAutonFocus final
{
public:
	bool                                          bFocus;                                            // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnChangeScrollContentAutonFocus) == 0x000001, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnChangeScrollContentAutonFocus");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnChangeScrollContentAutonFocus) == 0x000001, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnChangeScrollContentAutonFocus");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnChangeScrollContentAutonFocus, bFocus) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnChangeScrollContentAutonFocus::bFocus' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateTotalMenu
// 0x0002 (0x0002 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateTotalMenu final
{
public:
	bool                                          bInEnable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInShow;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTotalMenu) == 0x000001, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateTotalMenu");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTotalMenu) == 0x000002, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateTotalMenu");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTotalMenu, bInEnable) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateTotalMenu::bInEnable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTotalMenu, bInShow) == 0x000001, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateTotalMenu::bInShow' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateTradableIcon
// 0x0002 (0x0002 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateTradableIcon final
{
public:
	bool                                          bIsTradable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsOverwriteExchangeable;                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTradableIcon) == 0x000001, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateTradableIcon");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTradableIcon) == 0x000002, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateTradableIcon");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTradableIcon, bIsTradable) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateTradableIcon::bIsTradable' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTradableIcon, bIsOverwriteExchangeable) == 0x000001, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateTradableIcon::bIsOverwriteExchangeable' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUnLockMemorial
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUnLockMemorial final
{
public:
	bool                                          IsUnLock;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUnLockMemorial) == 0x000001, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUnLockMemorial");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUnLockMemorial) == 0x000001, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUnLockMemorial");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUnLockMemorial, IsUnLock) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUnLockMemorial::IsUnLock' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateCollectable
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateCollectable final
{
public:
	ETLItemCollectableState                       InCollectableState;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InConditionLevel;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateCollectable) == 0x000004, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateCollectable");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateCollectable) == 0x000008, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateCollectable");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateCollectable, InCollectableState) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateCollectable::InCollectableState' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateCollectable, InConditionLevel) == 0x000004, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateCollectable::InConditionLevel' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateDecomposable
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateDecomposable final
{
public:
	bool                                          bIsDecomposable;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateDecomposable) == 0x000001, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateDecomposable");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateDecomposable) == 0x000001, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateDecomposable");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateDecomposable, bIsDecomposable) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateDecomposable::bIsDecomposable' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateDestructible
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateDestructible final
{
public:
	bool                                          bIsDestructible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateDestructible) == 0x000001, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateDestructible");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateDestructible) == 0x000001, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateDestructible");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateDestructible, bIsDestructible) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateDestructible::bIsDestructible' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateTradePriceInfo
// 0x0038 (0x0038 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo final
{
public:
	bool                                          InShowTradePrice;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RecentPriceText;                                   // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   SaleCountText;                                     // 0x0020(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo) == 0x000008, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo) == 0x000038, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo, InShowTradePrice) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo::InShowTradePrice' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo, RecentPriceText) == 0x000008, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo::RecentPriceText' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo, SaleCountText) == 0x000020, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateTradePriceInfo::SaleCountText' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateStorable
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateStorable final
{
public:
	bool                                          bIsStorable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateStorable) == 0x000001, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateStorable");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateStorable) == 0x000001, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateStorable");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateStorable, bIsStorable) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateStorable::bIsStorable' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateRequireLevel
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateRequireLevel final
{
public:
	int32                                         InRequireLevel;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InPcLevel;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateRequireLevel) == 0x000004, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateRequireLevel");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateRequireLevel) == 0x000008, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateRequireLevel");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateRequireLevel, InRequireLevel) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateRequireLevel::InRequireLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateRequireLevel, InPcLevel) == 0x000004, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateRequireLevel::InPcLevel' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateCategoryName
// 0x0018 (0x0018 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateCategoryName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateCategoryName) == 0x000008, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateCategoryName");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateCategoryName) == 0x000018, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateCategoryName");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateCategoryName, InName) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateCategoryName::InName' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnItemLockUpdate
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnItemLockUpdate final
{
public:
	bool                                          InLock;                                            // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnItemLockUpdate) == 0x000001, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnItemLockUpdate");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnItemLockUpdate) == 0x000001, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnItemLockUpdate");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnItemLockUpdate, InLock) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnItemLockUpdate::InLock' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateGradeColor
// 0x0020 (0x0020 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateGradeColor final
{
public:
	class FText                                   InGradeName;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   InColorTableKey;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateGradeColor) == 0x000008, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateGradeColor");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateGradeColor) == 0x000020, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateGradeColor");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateGradeColor, InGradeName) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateGradeColor::InGradeName' has a wrong offset!");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateGradeColor, InColorTableKey) == 0x000018, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateGradeColor::InColorTableKey' has a wrong offset!");

// Function BP_ItemTooltip_Consume_Frame.BP_ItemTooltip_Consume_Frame_C.OnUpdateItemName
// 0x0018 (0x0018 - 0x0000)
struct BP_ItemTooltip_Consume_Frame_C_OnUpdateItemName final
{
public:
	class FText                                   InName;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ItemTooltip_Consume_Frame_C_OnUpdateItemName) == 0x000008, "Wrong alignment on BP_ItemTooltip_Consume_Frame_C_OnUpdateItemName");
static_assert(sizeof(BP_ItemTooltip_Consume_Frame_C_OnUpdateItemName) == 0x000018, "Wrong size on BP_ItemTooltip_Consume_Frame_C_OnUpdateItemName");
static_assert(offsetof(BP_ItemTooltip_Consume_Frame_C_OnUpdateItemName, InName) == 0x000000, "Member 'BP_ItemTooltip_Consume_Frame_C_OnUpdateItemName::InName' has a wrong offset!");

}

