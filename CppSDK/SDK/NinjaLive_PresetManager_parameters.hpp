#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NinjaLive_PresetManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "NinjaPreset_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.ExecuteUbergraph_NinjaLive_PresetManager
// 0x03E8 (0x03E8 - 0x0000)
struct NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0020(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ANinjaLive_C*                           K2Node_DynamicCast_AsNinja_Live;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ANinjaLive_MemoryPoolManager_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	class ANinjaLive_MemoryPoolManager_C*         CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0078(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Event_InputTable;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_InputData;                            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNinjaLiveGUI_C*                        CallFunc_Create_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool SavePaintBuffer)>         K2Node_CreateDelegate_OutputDelegate;              // 0x00FC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0110(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_ConvertToPowerOfTwo_Out;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_Map_Find_Value;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0190(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_Map_Find_Value_1;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_2;          // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_3;          // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_4;          // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_SavePaintBuffer;                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_Select_Default_1;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0220(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_2;                           // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_RenderTargetExportSingle_SavedAssetPath;  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_RenderTargetExportSingle_SavedAssetData;  // 0x0290(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x02F8(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNinjaLiveComponent_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0328(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANinjaLive_C*                           K2Node_DynamicCast_AsNinja_Live_1;                 // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0350(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x0368(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0380(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x03A8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SelectObject_ReturnValue;                 // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNinjaLiveGUI_C*                        K2Node_DynamicCast_AsNinja_Live_GUI;               // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNinjaLiveComponent_C*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager");
static_assert(sizeof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager) == 0x0003E8, "Wrong size on NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, EntryPoint) == 0x000000, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_InputKeyEvent_Key_4) == 0x000008, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_struct_Variable) == 0x000020, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_MakeLiteralBool_ReturnValue) == 0x000038, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_DynamicCast_AsNinja_Live) == 0x000048, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_DynamicCast_AsNinja_Live' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Array_Find_ReturnValue) == 0x000054, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Array_Get_Item) == 0x000068, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_IsValid_ReturnValue_1) == 0x000074, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000075, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_InputKeyEvent_Key_5) == 0x000078, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_BooleanOR_ReturnValue) == 0x000090, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_Event_InputTable) == 0x000098, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_Event_InputTable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_Event_InputData) == 0x0000A0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_Event_InputData' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_GetPlayerController_ReturnValue) == 0x0000B0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Create_ReturnValue) == 0x0000B8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000C0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_MakeLiteralString_ReturnValue) == 0x0000C8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_GetAllActorsWithInterface_OutActors) == 0x0000D8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_bool_Variable) == 0x0000F8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_CreateDelegate_OutputDelegate) == 0x0000FC, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_int_Variable) == 0x00010C, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_string_Variable) == 0x000110, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_IsValid_ReturnValue_2) == 0x000120, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000124, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Conv_IntToString_ReturnValue) == 0x000128, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Conv_StringToName_ReturnValue) == 0x000138, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_LeftChop_ReturnValue) == 0x000140, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Min_ReturnValue) == 0x000150, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Concat_StrStr_ReturnValue) == 0x000158, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_ConvertToPowerOfTwo_Out) == 0x000168, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_ConvertToPowerOfTwo_Out' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000170, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000178, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Map_Find_Value) == 0x000180, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Map_Find_ReturnValue) == 0x000188, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_string_Variable_1) == 0x000190, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0001A0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Map_Find_Value_1) == 0x0001A8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Map_Find_ReturnValue_1) == 0x0001B0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_MakeLiteralString_ReturnValue_1) == 0x0001B8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_MakeLiteralString_ReturnValue_2) == 0x0001C8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_MakeLiteralString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_MakeLiteralString_ReturnValue_3) == 0x0001D8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_MakeLiteralString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_MakeLiteralString_ReturnValue_4) == 0x0001E8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_MakeLiteralString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_bool_Variable_1) == 0x0001F8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_CustomEvent_SavePaintBuffer) == 0x0001F9, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_CustomEvent_SavePaintBuffer' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_Select_Default) == 0x000200, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_Select_Default_1) == 0x000208, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_SelectString_ReturnValue) == 0x000210, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_struct_Variable_1) == 0x000220, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_int_Variable_1) == 0x000238, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_IsInViewport_ReturnValue) == 0x00023C, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_Select_Default_2) == 0x000240, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000250, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000260, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000270, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000278, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_RenderTargetExportSingle_SavedAssetPath) == 0x000288, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_RenderTargetExportSingle_SavedAssetPath' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_RenderTargetExportSingle_SavedAssetData) == 0x000290, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_RenderTargetExportSingle_SavedAssetData' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002F0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Add_IntInt_ReturnValue) == 0x0002F4, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_InputKeyEvent_Key) == 0x0002F8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_int_Array_Index_Variable) == 0x000310, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Array_Get_Item_2) == 0x000318, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Array_Add_ReturnValue) == 0x000320, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_GetComponentByClass_ReturnValue) == 0x000328, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_IsValid_ReturnValue_3) == 0x000330, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_GetOwner_ReturnValue) == 0x000338, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_DynamicCast_AsNinja_Live_1) == 0x000340, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_DynamicCast_AsNinja_Live_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_DynamicCast_bSuccess_1) == 0x000348, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_InputKeyEvent_Key_1) == 0x000350, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_struct_Variable_2) == 0x000368, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_InputKeyEvent_Key_2) == 0x000380, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, Temp_int_Loop_Counter_Variable) == 0x000398, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Less_IntInt_ReturnValue) == 0x00039C, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003A0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_InputKeyEvent_Key_3) == 0x0003A8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_IsValid_ReturnValue_4) == 0x0003C0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_SelectObject_ReturnValue) == 0x0003C8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_SelectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_DynamicCast_AsNinja_Live_GUI) == 0x0003D0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_DynamicCast_AsNinja_Live_GUI' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, K2Node_DynamicCast_bSuccess_2) == 0x0003D8, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0003E0, "Member 'NinjaLive_PresetManager_C_ExecuteUbergraph_NinjaLive_PresetManager::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.OnDensityMapSave
// 0x0001 (0x0001 - 0x0000)
struct NinjaLive_PresetManager_C_OnDensityMapSave final
{
public:
	bool                                          SavePaintBuffer;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NinjaLive_PresetManager_C_OnDensityMapSave) == 0x000001, "Wrong alignment on NinjaLive_PresetManager_C_OnDensityMapSave");
static_assert(sizeof(NinjaLive_PresetManager_C_OnDensityMapSave) == 0x000001, "Wrong size on NinjaLive_PresetManager_C_OnDensityMapSave");
static_assert(offsetof(NinjaLive_PresetManager_C_OnDensityMapSave, SavePaintBuffer) == 0x000000, "Member 'NinjaLive_PresetManager_C_OnDensityMapSave::SavePaintBuffer' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.WriteDataTableFunction
// 0x0018 (0x0018 - 0x0000)
struct NinjaLive_PresetManager_C_WriteDataTableFunction final
{
public:
	class UDataTable*                             InputTable;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 InputData;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_WriteDataTableFunction) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_WriteDataTableFunction");
static_assert(sizeof(NinjaLive_PresetManager_C_WriteDataTableFunction) == 0x000018, "Wrong size on NinjaLive_PresetManager_C_WriteDataTableFunction");
static_assert(offsetof(NinjaLive_PresetManager_C_WriteDataTableFunction, InputTable) == 0x000000, "Member 'NinjaLive_PresetManager_C_WriteDataTableFunction::InputTable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_WriteDataTableFunction, InputData) == 0x000008, "Member 'NinjaLive_PresetManager_C_WriteDataTableFunction::InputData' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct NinjaLive_PresetManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_ReceiveTick) == 0x000004, "Wrong alignment on NinjaLive_PresetManager_C_ReceiveTick");
static_assert(sizeof(NinjaLive_PresetManager_C_ReceiveTick) == 0x000004, "Wrong size on NinjaLive_PresetManager_C_ReceiveTick");
static_assert(offsetof(NinjaLive_PresetManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'NinjaLive_PresetManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0");
static_assert(sizeof(NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0");
static_assert(offsetof(NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_1");
static_assert(sizeof(NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_1");
static_assert(offsetof(NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'NinjaLive_PresetManager_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2");
static_assert(sizeof(NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2");
static_assert(offsetof(NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3");
static_assert(sizeof(NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3");
static_assert(offsetof(NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'NinjaLive_PresetManager_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4");
static_assert(sizeof(NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4");
static_assert(offsetof(NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5");
static_assert(sizeof(NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5");
static_assert(offsetof(NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'NinjaLive_PresetManager_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.SetAssetNameAndPath
// 0x0128 (0x0128 - 0x0000)
struct NinjaLive_PresetManager_C_SetAssetNameAndPath final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AssetTrimmedName;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AssetPath;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0038(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0080(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UObject*>                        CallFunc_FindSoftReferencesToObject_ReferencingObjects; // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        K2Node_Select_Default;                             // 0x00B0(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_CreateAssetData_ReturnValue;              // 0x00C8(0x0060)(HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_SetAssetNameAndPath) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_SetAssetNameAndPath");
static_assert(sizeof(NinjaLive_PresetManager_C_SetAssetNameAndPath) == 0x000128, "Wrong size on NinjaLive_PresetManager_C_SetAssetNameAndPath");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, Object) == 0x000000, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::Object' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, AssetTrimmedName) == 0x000008, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::AssetTrimmedName' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, AssetPath) == 0x000010, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::AssetPath' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, Temp_bool_Variable) == 0x000018, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, K2Node_MakeArray_Array) == 0x000028, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000038, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000060, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, CallFunc_LeftChop_ReturnValue) == 0x000070, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000080, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, CallFunc_FindSoftReferencesToObject_ReferencingObjects) == 0x000098, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::CallFunc_FindSoftReferencesToObject_ReferencingObjects' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, K2Node_Select_Default) == 0x0000B0, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_SetAssetNameAndPath, CallFunc_CreateAssetData_ReturnValue) == 0x0000C8, "Member 'NinjaLive_PresetManager_C_SetAssetNameAndPath::CallFunc_CreateAssetData_ReturnValue' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.RenderTargetExportSingle
// 0x02E8 (0x02E8 - 0x0000)
struct NinjaLive_PresetManager_C_RenderTargetExportSingle final
{
public:
	class UTextureRenderTarget2D*                 TextureRenderTarget;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InternalSave;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SRGB;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoAlpha;                                           // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SaveWithDialog;                                    // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   InternalFilePath;                                  // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExternalFilePath;                                  // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Extension;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   SavedAssetPath;                                    // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             SavedAssetData;                                    // 0x0048(0x0060)(Parm, OutParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProjectDirectory_ReturnValue;          // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_DuplicateAsset_ReturnValue;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_DuplicateAssetWithDialog_ReturnValue;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_CreateAssetData_ReturnValue;              // 0x0130(0x0060)(HasGetValueTypeHash)
	struct FAssetData                             CallFunc_CreateAssetData_ReturnValue_1;            // 0x0190(0x0060)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_3;          // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAssetData                             K2Node_Select_Default;                             // 0x0268(0x0060)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_1;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NinjaLive_PresetManager_C_RenderTargetExportSingle) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_RenderTargetExportSingle");
static_assert(sizeof(NinjaLive_PresetManager_C_RenderTargetExportSingle) == 0x0002E8, "Wrong size on NinjaLive_PresetManager_C_RenderTargetExportSingle");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, TextureRenderTarget) == 0x000000, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::TextureRenderTarget' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, InternalSave) == 0x000008, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::InternalSave' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, SRGB) == 0x000009, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::SRGB' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, NoAlpha) == 0x00000A, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::NoAlpha' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, SaveWithDialog) == 0x00000B, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::SaveWithDialog' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, InternalFilePath) == 0x00000C, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::InternalFilePath' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, ExternalFilePath) == 0x000014, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::ExternalFilePath' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, Filename) == 0x000020, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::Filename' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, Extension) == 0x000030, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::Extension' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, SavedAssetPath) == 0x000040, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::SavedAssetPath' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, SavedAssetData) == 0x000048, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::SavedAssetData' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_GetProjectDirectory_ReturnValue) == 0x0000A8, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_GetProjectDirectory_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_Left_ReturnValue) == 0x0000C8, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D8, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_Conv_NameToString_ReturnValue) == 0x0000E8, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000F8, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000F9, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000100, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_SelectString_ReturnValue) == 0x000110, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_DuplicateAsset_ReturnValue) == 0x000120, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_DuplicateAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_DuplicateAssetWithDialog_ReturnValue) == 0x000128, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_DuplicateAssetWithDialog_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_CreateAssetData_ReturnValue) == 0x000130, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_CreateAssetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_CreateAssetData_ReturnValue_1) == 0x000190, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_CreateAssetData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_Conv_NameToString_ReturnValue_2) == 0x0001F0, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_IsValid_ReturnValue) == 0x000200, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_Conv_NameToString_ReturnValue_3) == 0x000208, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_Conv_NameToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_SelectString_ReturnValue_1) == 0x000218, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_MakeLiteralString_ReturnValue) == 0x000228, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_Conv_StringToName_ReturnValue) == 0x000238, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000240, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, Temp_bool_Variable) == 0x000250, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, CallFunc_SelectString_ReturnValue_2) == 0x000258, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, K2Node_Select_Default) == 0x000268, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, Temp_bool_Variable_1) == 0x0002C8, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, K2Node_Select_Default_1) == 0x0002D0, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, K2Node_DynamicCast_AsTexture_2D) == 0x0002D8, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_RenderTargetExportSingle, K2Node_DynamicCast_bSuccess) == 0x0002E0, "Member 'NinjaLive_PresetManager_C_RenderTargetExportSingle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.Preset_to_InternalCSV_to_DT_Saver
// 0x0498 (0x0498 - 0x0000)
struct NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver final
{
public:
	bool                                          OverWriteFlag;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 VarAsString;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SelectedItem;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           AssetPaths;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   AssetName;                                         // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ANinjaLive_PresetManager_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ANinjaLive_PresetManager_C*             CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FAssetData>                     K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UObject*>                        CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x00B8(0x0010)(ReferenceParm)
	TArray<class UObject*>                        CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x00C8(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class FName>                             K2Node_MakeSet_Set;                                // 0x00E8(0x0050)()
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x0148(0x0010)(ReferenceParm)
	struct FARFilter                              K2Node_MakeStruct_ARFilter;                        // 0x0158(0x00F0)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FAssetData>                     CallFunc_GetAssets_OutAssetData;                   // 0x0278(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssets_ReturnValue;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAssetData>                     K2Node_Select_Default;                             // 0x02C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetData                             CallFunc_Array_Get_Item_3;                         // 0x02D8(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_352[0x6];                                      // 0x0352(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWriteDataTableInterface_C> CallFunc_WriteDataTableFunction_self_CastInput;    // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FAssetData                             CallFunc_CreateAssetData_ReturnValue;              // 0x0368(0x0060)(HasGetValueTypeHash)
	struct FAssetData                             CallFunc_CreateAssetData_ReturnValue_1;            // 0x03C8(0x0060)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_3;          // 0x0448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0458(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_DuplicateAssetWithDialog_ReturnValue;     // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_DynamicCast_AsData_Table_1;                 // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWriteDataTableInterface_C> CallFunc_WriteDataTableFunction_self_CastInput_1;  // 0x0488(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver");
static_assert(sizeof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver) == 0x000498, "Wrong size on NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, OverWriteFlag) == 0x000000, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::OverWriteFlag' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, VarAsString) == 0x000008, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::VarAsString' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, SelectedItem) == 0x000018, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::SelectedItem' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, AssetPaths) == 0x000028, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::AssetPaths' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, AssetName) == 0x000038, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::AssetName' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Array_Get_Item) == 0x000060, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, K2Node_MakeArray_Array) == 0x000098, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A8, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0000B8, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x0000C8, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, K2Node_MakeSet_Set) == 0x0000E8, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::K2Node_MakeSet_Set' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, K2Node_MakeArray_Array_1) == 0x000138, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, K2Node_MakeArray_Array_2) == 0x000148, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, K2Node_MakeStruct_ARFilter) == 0x000158, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::K2Node_MakeStruct_ARFilter' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, Temp_int_Loop_Counter_Variable) == 0x000248, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, Temp_int_Array_Index_Variable) == 0x00024C, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Add_IntInt_ReturnValue) == 0x000250, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, Temp_bool_Variable) == 0x000254, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_GetAssetRegistry_ReturnValue) == 0x000258, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_MakeLiteralString_ReturnValue) == 0x000268, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_GetAssets_OutAssetData) == 0x000278, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_GetAssets_OutAssetData' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_GetAssets_ReturnValue) == 0x000288, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_GetAssets_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000290, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Array_Length_ReturnValue) == 0x0002A0, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0002A8, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002B8, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, K2Node_Select_Default) == 0x0002C0, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Array_Length_ReturnValue_1) == 0x0002D0, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Array_Get_Item_3) == 0x0002D8, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Less_IntInt_ReturnValue) == 0x000338, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_GetAsset_ReturnValue) == 0x000340, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, K2Node_DynamicCast_AsData_Table) == 0x000348, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, K2Node_DynamicCast_bSuccess) == 0x000350, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_IsValid_ReturnValue) == 0x000351, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_WriteDataTableFunction_self_CastInput) == 0x000358, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_WriteDataTableFunction_self_CastInput' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_CreateAssetData_ReturnValue) == 0x000368, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_CreateAssetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_CreateAssetData_ReturnValue_1) == 0x0003C8, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_CreateAssetData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000428, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000438, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Conv_NameToString_ReturnValue_3) == 0x000448, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Conv_NameToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000458, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_DuplicateAssetWithDialog_ReturnValue) == 0x000468, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_DuplicateAssetWithDialog_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_Contains_ReturnValue) == 0x000470, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, K2Node_DynamicCast_AsData_Table_1) == 0x000478, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::K2Node_DynamicCast_AsData_Table_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, K2Node_DynamicCast_bSuccess_1) == 0x000480, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver, CallFunc_WriteDataTableFunction_self_CastInput_1) == 0x000488, "Member 'NinjaLive_PresetManager_C_Preset_to_InternalCSV_to_DT_Saver::CallFunc_WriteDataTableFunction_self_CastInput_1' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.AssetDataFromObject
// 0x01C8 (0x01C8 - 0x0000)
struct NinjaLive_PresetManager_C_AssetDataFromObject final
{
public:
	class UObject*                                InputObject;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             ComboAssetData;                                    // 0x0008(0x0060)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   Object_Path;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Package_Name;                                      // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Package_Path;                                      // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Asset_Name;                                        // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Asset_Class;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x00A0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UObject*>                        K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0100(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        CallFunc_FindSoftReferencesToObject_ReferencingObjects; // 0x0120(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        K2Node_Select_Default;                             // 0x0140(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetData                             CallFunc_CreateAssetData_ReturnValue;              // 0x0168(0x0060)(HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_AssetDataFromObject) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_AssetDataFromObject");
static_assert(sizeof(NinjaLive_PresetManager_C_AssetDataFromObject) == 0x0001C8, "Wrong size on NinjaLive_PresetManager_C_AssetDataFromObject");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, InputObject) == 0x000000, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::InputObject' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, ComboAssetData) == 0x000008, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::ComboAssetData' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, Object_Path) == 0x000068, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::Object_Path' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, Package_Name) == 0x000070, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::Package_Name' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, Package_Path) == 0x000078, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::Package_Path' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, Asset_Name) == 0x000080, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::Asset_Name' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, Asset_Class) == 0x000088, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::Asset_Class' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_GetObjectClass_ReturnValue) == 0x000098, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x0000A0, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x0000D0, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_LeftChop_ReturnValue) == 0x0000E0, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, K2Node_MakeArray_Array) == 0x0000F0, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000100, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, Temp_int_Loop_Counter_Variable) == 0x000118, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_FindSoftReferencesToObject_ReferencingObjects) == 0x000120, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_FindSoftReferencesToObject_ReferencingObjects' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000138, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, Temp_bool_Variable) == 0x000139, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, K2Node_Select_Default) == 0x000140, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_Array_Get_Item) == 0x000158, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_AssetDataFromObject, CallFunc_CreateAssetData_ReturnValue) == 0x000168, "Member 'NinjaLive_PresetManager_C_AssetDataFromObject::CallFunc_CreateAssetData_ReturnValue' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.Preset_SingleKeyPicker_DT
// 0x0210 (0x0210 - 0x0000)
struct NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT final
{
public:
	class FString                                 PresetName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 KeyToPick;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UDataTable*                             DataTable;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PickedKeyValue;                                    // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TArray<struct FAssetData>                     CallFunc_GetAssetsByClass_OutAssetData;            // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByClass_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_Array_Get_Item;                           // 0x0098(0x0060)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FNinjaPreset                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_CreateAssetData_ReturnValue;              // 0x0180(0x0060)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT");
static_assert(sizeof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT) == 0x000210, "Wrong size on NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, PresetName) == 0x000000, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::PresetName' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, KeyToPick) == 0x000010, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::KeyToPick' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, DataTable) == 0x000020, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::DataTable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, PickedKeyValue) == 0x000028, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::PickedKeyValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, Temp_int_Array_Index_Variable) == 0x000038, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Conv_StringToName_ReturnValue) == 0x00003C, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_MakeLiteralString_ReturnValue) == 0x000048, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_GetAssetRegistry_ReturnValue) == 0x000060, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_GetAssetsByClass_OutAssetData) == 0x000070, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_GetAssetsByClass_OutAssetData' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_GetAssetsByClass_ReturnValue) == 0x000080, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_GetAssetsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Conv_NameToString_ReturnValue) == 0x000088, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Array_Get_Item) == 0x000098, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F8, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_GetAsset_ReturnValue) == 0x000108, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000110, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, K2Node_DynamicCast_AsData_Table) == 0x000120, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000130, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_GetDataTableRowFromName_OutRow) == 0x000140, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000150, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000158, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000170, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_CreateAssetData_ReturnValue) == 0x000180, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_CreateAssetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Array_Length_ReturnValue) == 0x0001E0, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Less_IntInt_ReturnValue) == 0x0001E4, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0001E8, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0001F8, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT, CallFunc_Contains_ReturnValue) == 0x000208, "Member 'NinjaLive_PresetManager_C_Preset_SingleKeyPicker_DT::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.DataTable_SingleKeyPicker_DT
// 0x0070 (0x0070 - 0x0000)
struct NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT final
{
public:
	class UDataTable*                             DataTableIn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 KeyToPick;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PickedKeyValue;                                    // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NotFound;                                          // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RowNotFound;                                       // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNinjaPreset                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT");
static_assert(sizeof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT) == 0x000070, "Wrong size on NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, DataTableIn) == 0x000000, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::DataTableIn' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, KeyToPick) == 0x000008, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::KeyToPick' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, PickedKeyValue) == 0x000018, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::PickedKeyValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, NotFound) == 0x000028, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::NotFound' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, RowNotFound) == 0x000029, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::RowNotFound' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, CallFunc_Conv_StringToName_ReturnValue) == 0x00002C, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, CallFunc_MakeLiteralString_ReturnValue) == 0x000050, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'NinjaLive_PresetManager_C_DataTable_SingleKeyPicker_DT::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.MarkNewFilesAsUnsaved
// 0x0090 (0x0090 - 0x0000)
struct NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved final
{
public:
	TArray<struct FAssetData>                     ArrayOfUnsaveAssetData;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetData                             CallFunc_Array_Get_Item;                           // 0x0020(0x0060)(HasGetValueTypeHash)
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved");
static_assert(sizeof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved) == 0x000090, "Wrong size on NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved, ArrayOfUnsaveAssetData) == 0x000000, "Member 'NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved::ArrayOfUnsaveAssetData' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved, Temp_int_Array_Index_Variable) == 0x000014, "Member 'NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved, CallFunc_Array_Get_Item) == 0x000020, "Member 'NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved, CallFunc_GetAsset_ReturnValue) == 0x000080, "Member 'NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'NinjaLive_PresetManager_C_MarkNewFilesAsUnsaved::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.GetCurrentLevelInfo
// 0x00D8 (0x00D8 - 0x0000)
struct NinjaLive_PresetManager_C_GetCurrentLevelInfo final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LevelPath;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TArray<struct FAssetData>                     CallFunc_GetAssetsByClass_OutAssetData;            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByClass_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_Array_Get_Item;                           // 0x0058(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NinjaLive_PresetManager_C_GetCurrentLevelInfo) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_GetCurrentLevelInfo");
static_assert(sizeof(NinjaLive_PresetManager_C_GetCurrentLevelInfo) == 0x0000D8, "Wrong size on NinjaLive_PresetManager_C_GetCurrentLevelInfo");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, LevelName) == 0x000000, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::LevelName' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, LevelPath) == 0x000008, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::LevelPath' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, Temp_int_Array_Index_Variable) == 0x000010, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000020, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, CallFunc_GetAssetRegistry_ReturnValue) == 0x000030, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, CallFunc_GetAssetsByClass_OutAssetData) == 0x000040, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::CallFunc_GetAssetsByClass_OutAssetData' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, CallFunc_GetAssetsByClass_ReturnValue) == 0x000050, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::CallFunc_GetAssetsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, CallFunc_Array_Get_Item) == 0x000058, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, CallFunc_Conv_NameToString_ReturnValue) == 0x0000C0, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_GetCurrentLevelInfo, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000D0, "Member 'NinjaLive_PresetManager_C_GetCurrentLevelInfo::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.ConvertToPowerOfTwo
// 0x0020 (0x0020 - 0x0000)
struct NinjaLive_PresetManager_C_ConvertToPowerOfTwo final
{
public:
	int32                                         In;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Out;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Log_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLive_PresetManager_C_ConvertToPowerOfTwo) == 0x000004, "Wrong alignment on NinjaLive_PresetManager_C_ConvertToPowerOfTwo");
static_assert(sizeof(NinjaLive_PresetManager_C_ConvertToPowerOfTwo) == 0x000020, "Wrong size on NinjaLive_PresetManager_C_ConvertToPowerOfTwo");
static_assert(offsetof(NinjaLive_PresetManager_C_ConvertToPowerOfTwo, In) == 0x000000, "Member 'NinjaLive_PresetManager_C_ConvertToPowerOfTwo::In' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ConvertToPowerOfTwo, Out) == 0x000004, "Member 'NinjaLive_PresetManager_C_ConvertToPowerOfTwo::Out' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ConvertToPowerOfTwo, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'NinjaLive_PresetManager_C_ConvertToPowerOfTwo::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ConvertToPowerOfTwo, CallFunc_Log_ReturnValue) == 0x00000C, "Member 'NinjaLive_PresetManager_C_ConvertToPowerOfTwo::CallFunc_Log_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ConvertToPowerOfTwo, CallFunc_Round_ReturnValue) == 0x000010, "Member 'NinjaLive_PresetManager_C_ConvertToPowerOfTwo::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ConvertToPowerOfTwo, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000014, "Member 'NinjaLive_PresetManager_C_ConvertToPowerOfTwo::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ConvertToPowerOfTwo, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'NinjaLive_PresetManager_C_ConvertToPowerOfTwo::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_ConvertToPowerOfTwo, CallFunc_Round_ReturnValue_1) == 0x00001C, "Member 'NinjaLive_PresetManager_C_ConvertToPowerOfTwo::CallFunc_Round_ReturnValue_1' has a wrong offset!");

// Function NinjaLive_PresetManager.NinjaLive_PresetManager_C.MarkForSave_UE426_BugWorkaround
// 0x00A0 (0x00A0 - 0x0000)
struct NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround final
{
public:
	class UObject*                                CurrentAsset;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 AssetName;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_CreateAssetData_ReturnValue;              // 0x0018(0x0060)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_RenameAssetIfEditorBuild_ReturnValue;     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround) == 0x000008, "Wrong alignment on NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround");
static_assert(sizeof(NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround) == 0x0000A0, "Wrong size on NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround, CurrentAsset) == 0x000000, "Member 'NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround::CurrentAsset' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround, AssetName) == 0x000008, "Member 'NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround::AssetName' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround, CallFunc_CreateAssetData_ReturnValue) == 0x000018, "Member 'NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround::CallFunc_CreateAssetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround, CallFunc_Conv_NameToString_ReturnValue) == 0x000078, "Member 'NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000088, "Member 'NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround, CallFunc_RenameAssetIfEditorBuild_ReturnValue) == 0x000098, "Member 'NinjaLive_PresetManager_C_MarkForSave_UE426_BugWorkaround::CallFunc_RenameAssetIfEditorBuild_ReturnValue' has a wrong offset!");

}

