#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MyPCComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TLScene_structs.hpp"
#include "TLScene_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MyPCComponent.BP_MyPCComponent_C
// 0x0078 (0x0128 - 0x00B0)
class UBP_MyPCComponent_C final : public UTLMyPCActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         FlowGenBallAngle;                                  // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_TrailComponent_C*>           TrailComponents;                                   // 0x00C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UBP_TrailComponent_C*>           MudTrailComponents;                                // 0x00D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bSpawnFlowingSandBall;                             // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TrailHardness;                                     // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TrailToeOffset;                                    // 0x00E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TrailHeelOffset;                                   // 0x00F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TrailsManager_C*                    TrailsManager;                                     // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnteredMudArea;                                   // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MudHardness;                                       // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MudTrailScale;                                     // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         BoneNamesForTrailComponents;                       // 0x0118(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_MyPCComponent(int32 EntryPoint);
	void OnMovementModeChanged(EMovementMode CurrentMovementMode, uint8 CurrentCustomMode, EMovementMode PreviousMovementMode, uint8 PreviousCustomMode);
	void OnLeaveMudArea();
	void OnEnterMudArea();
	void OnFootprint(const struct FVector& Location);
	void OnModelLoaded(class USkeletalMeshComponent* SkeletalMeshComponent);
	void ReceiveBeginPlay();
	void Try_Spawn_Flowing_Sand(const struct FVector& Location);
	void Is_Valid_Skeleton(class USkinnedMeshComponent* SkinnedMeshComponent, bool* Valid);
	void RebuildTrailComponents(class USkeletalMeshComponent* SkeletalMeshComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MyPCComponent_C">();
	}
	static class UBP_MyPCComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MyPCComponent_C>();
	}
};
static_assert(alignof(UBP_MyPCComponent_C) == 0x000008, "Wrong alignment on UBP_MyPCComponent_C");
static_assert(sizeof(UBP_MyPCComponent_C) == 0x000128, "Wrong size on UBP_MyPCComponent_C");
static_assert(offsetof(UBP_MyPCComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_MyPCComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, FlowGenBallAngle) == 0x0000B8, "Member 'UBP_MyPCComponent_C::FlowGenBallAngle' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, TrailComponents) == 0x0000C0, "Member 'UBP_MyPCComponent_C::TrailComponents' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, MudTrailComponents) == 0x0000D0, "Member 'UBP_MyPCComponent_C::MudTrailComponents' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, bSpawnFlowingSandBall) == 0x0000E0, "Member 'UBP_MyPCComponent_C::bSpawnFlowingSandBall' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, TrailHardness) == 0x0000E4, "Member 'UBP_MyPCComponent_C::TrailHardness' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, TrailToeOffset) == 0x0000E8, "Member 'UBP_MyPCComponent_C::TrailToeOffset' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, TrailHeelOffset) == 0x0000F4, "Member 'UBP_MyPCComponent_C::TrailHeelOffset' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, TrailsManager) == 0x000100, "Member 'UBP_MyPCComponent_C::TrailsManager' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, bEnteredMudArea) == 0x000108, "Member 'UBP_MyPCComponent_C::bEnteredMudArea' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, MudHardness) == 0x00010C, "Member 'UBP_MyPCComponent_C::MudHardness' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, MudTrailScale) == 0x000110, "Member 'UBP_MyPCComponent_C::MudTrailScale' has a wrong offset!");
static_assert(offsetof(UBP_MyPCComponent_C, BoneNamesForTrailComponents) == 0x000118, "Member 'UBP_MyPCComponent_C::BoneNamesForTrailComponents' has a wrong offset!");

}

