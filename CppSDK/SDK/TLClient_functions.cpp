#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TLClient

#include "Basic.hpp"

#include "TLClient_classes.hpp"
#include "TLClient_parameters.hpp"


namespace SDK
{

// Function TLClient.TLUserWidget.AutonAreaDidNavigation
// (Event, Public, BlueprintEvent)
// Parameters:
// class UWidget*                          AreaWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisit                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLAutonNavigation                      ByNavigation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWindowStackChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::AutonAreaDidNavigation(class UWidget* AreaWidget, bool bVisit, ETLAutonNavigation ByNavigation, bool bWindowStackChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "AutonAreaDidNavigation");

	Params::TLUserWidget_AutonAreaDidNavigation Parms{};

	Parms.AreaWidget = AreaWidget;
	Parms.bVisit = bVisit;
	Parms.ByNavigation = ByNavigation;
	Parms.bWindowStackChanged = bWindowStackChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidget.AutonDoAction
// (Event, Public, BlueprintEvent)

void UTLUserWidget::AutonDoAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "AutonDoAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidget.ChangeHideAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInClearWithNameNone                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::ChangeHideAnimation(class FName InAnimName, bool bInClearWithNameNone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "ChangeHideAnimation");

	Params::TLUserWidget_ChangeHideAnimation Parms{};

	Parms.InAnimName = InAnimName;
	Parms.bInClearWithNameNone = bInClearWithNameNone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.ChangeShowAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InAnimName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInClearWithNameNone                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::ChangeShowAnimation(class FName InAnimName, bool bInClearWithNameNone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "ChangeShowAnimation");

	Params::TLUserWidget_ChangeShowAnimation Parms{};

	Parms.InAnimName = InAnimName;
	Parms.bInClearWithNameNone = bInClearWithNameNone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.HandleHovered
// (Native, Protected)

void UTLUserWidget::HandleHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "HandleHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.HandlePressed
// (Native, Protected)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::HandlePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "HandlePressed");

	Params::TLUserWidget_HandlePressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.HandleReleased
// (Native, Protected)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::HandleReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "HandleReleased");

	Params::TLUserWidget_HandleReleased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.HandleUnhovered
// (Native, Protected)

void UTLUserWidget::HandleUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "HandleUnhovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.HandleUpdateEnabled
// (Final, Native, Public)

void UTLUserWidget::HandleUpdateEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "HandleUpdateEnabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.HandleUpdateVisible
// (Final, Native, Public)

void UTLUserWidget::HandleUpdateVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "HandleUpdateVisible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.Hide
// (Native, Public, BlueprintCallable)

void UTLUserWidget::Hide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "Hide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.HideByGotoBack
// (Native, Public, BlueprintCallable)

void UTLUserWidget::HideByGotoBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "HideByGotoBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.HideByHiddenState
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInPlayHideAnim                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInPlayHideAnimManually                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::HideByHiddenState(const bool bInPlayHideAnim, const bool bInPlayHideAnimManually)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "HideByHiddenState");

	Params::TLUserWidget_HideByHiddenState Parms{};

	Parms.bInPlayHideAnim = bInPlayHideAnim;
	Parms.bInPlayHideAnimManually = bInPlayHideAnimManually;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.InitVisibility
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::InitVisibility(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "InitVisibility");

	Params::TLUserWidget_InitVisibility Parms{};

	Parms.bInVisible = bInVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.IsShow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::IsShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "IsShow");

	Params::TLUserWidget_IsShow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.NativeOnHideAnimationFinished
// (Final, Native, Protected)

void UTLUserWidget::NativeOnHideAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "NativeOnHideAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.NativeOnShowAnimationFinished
// (Final, Native, Protected)

void UTLUserWidget::NativeOnShowAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "NativeOnShowAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.OnAzulejoDecoyActivated
// (Event, Public, BlueprintEvent)

void UTLUserWidget::OnAzulejoDecoyActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "OnAzulejoDecoyActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidget.OnChangeVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::OnChangeVisibility(bool bInVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "OnChangeVisibility");

	Params::TLUserWidget_OnChangeVisibility Parms{};

	Parms.bInVisibility = bInVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidget.OnHide
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UTLUserWidget::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "OnHide");

	Params::TLUserWidget_OnHide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.OnHover
// (Event, Public, BlueprintEvent)

void UTLUserWidget::OnHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "OnHover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidget.OnShow
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UTLUserWidget::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "OnShow");

	Params::TLUserWidget_OnShow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.OnUnhover
// (Event, Public, BlueprintEvent)

void UTLUserWidget::OnUnhover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "OnUnhover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidget.OnUpdateAdvancedUIModeEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidget::OnUpdateAdvancedUIModeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "OnUpdateAdvancedUIModeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidget.OnUpdateNormalUIModeEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidget::OnUpdateNormalUIModeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "OnUpdateNormalUIModeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidget.OnUpdateNotification
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsOn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::OnUpdateNotification(bool InIsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "OnUpdateNotification");

	Params::TLUserWidget_OnUpdateNotification Parms{};

	Parms.InIsOn = InIsOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidget.PlayAndStopAnimationAtEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 Animation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::PlayAndStopAnimationAtEnd(class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "PlayAndStopAnimationAtEnd");

	Params::TLUserWidget_PlayAndStopAnimationAtEnd Parms{};

	Parms.Animation = Animation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.PlayAnimationByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             AnimationName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::PlayAnimationByName(class FName AnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "PlayAnimationByName");

	Params::TLUserWidget_PlayAnimationByName Parms{};

	Parms.AnimationName = AnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.PlayAnimationForwardInUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnim                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::PlayAnimationForwardInUserWidget(class UWidgetAnimation* InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "PlayAnimationForwardInUserWidget");

	Params::TLUserWidget_PlayAnimationForwardInUserWidget Parms{};

	Parms.InAnim = InAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.PlayAnimationInUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnim                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::PlayAnimationInUserWidget(class UWidgetAnimation* InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "PlayAnimationInUserWidget");

	Params::TLUserWidget_PlayAnimationInUserWidget Parms{};

	Parms.InAnim = InAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.PlayAnimationInUserWidget1
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnim                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartAtTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumLoopsToPlay                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUMGSequencePlayMode                    PlayMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::PlayAnimationInUserWidget1(class UWidgetAnimation* InAnim, float StartAtTime, int32 NumLoopsToPlay, EUMGSequencePlayMode PlayMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "PlayAnimationInUserWidget1");

	Params::TLUserWidget_PlayAnimationInUserWidget1 Parms{};

	Parms.InAnim = InAnim;
	Parms.StartAtTime = StartAtTime;
	Parms.NumLoopsToPlay = NumLoopsToPlay;
	Parms.PlayMode = PlayMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.PlayAnimationLoopInUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnim                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::PlayAnimationLoopInUserWidget(class UWidgetAnimation* InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "PlayAnimationLoopInUserWidget");

	Params::TLUserWidget_PlayAnimationLoopInUserWidget Parms{};

	Parms.InAnim = InAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.PlayAnimationReverseInUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnim                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::PlayAnimationReverseInUserWidget(class UWidgetAnimation* InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "PlayAnimationReverseInUserWidget");

	Params::TLUserWidget_PlayAnimationReverseInUserWidget Parms{};

	Parms.InAnim = InAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.PlayAnimationWithOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 Animation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseReverse                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::PlayAnimationWithOptions(class UWidgetAnimation* Animation, bool bUseReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "PlayAnimationWithOptions");

	Params::TLUserWidget_PlayAnimationWithOptions Parms{};

	Parms.Animation = Animation;
	Parms.bUseReverse = bUseReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.PlayReverseAndStopAnimationAtEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 Animation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::PlayReverseAndStopAnimationAtEnd(class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "PlayReverseAndStopAnimationAtEnd");

	Params::TLUserWidget_PlayReverseAndStopAnimationAtEnd Parms{};

	Parms.Animation = Animation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.PlayUISound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLSoundEvent*                    InSoundEvent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::PlayUISound(class UTLSoundEvent* InSoundEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "PlayUISound");

	Params::TLUserWidget_PlayUISound Parms{};

	Parms.InSoundEvent = InSoundEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.Reset
// (Native, Public, BlueprintCallable)

void UTLUserWidget::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.SetAdvancedUIModeByModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAdvancedUIModeByModel                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInForce                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::SetAdvancedUIModeByModel(bool bInAdvancedUIModeByModel, bool bInForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "SetAdvancedUIModeByModel");

	Params::TLUserWidget_SetAdvancedUIModeByModel Parms{};

	Parms.bInAdvancedUIModeByModel = bInAdvancedUIModeByModel;
	Parms.bInForce = bInForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.SetHiddenState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInHiddenState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::SetHiddenState(bool bInHiddenState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "SetHiddenState");

	Params::TLUserWidget_SetHiddenState Parms{};

	Parms.bInHiddenState = bInHiddenState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.SetHide
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidget::SetHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "SetHide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.SetNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInNotification                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::SetNotification(bool bInNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "SetNotification");

	Params::TLUserWidget_SetNotification Parms{};

	Parms.bInNotification = bInNotification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.SetShow
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidget::SetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "SetShow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.SetTextTooltipId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTextTooltipId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsImmediately                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::SetTextTooltipId(class FName InTextTooltipId, bool IsImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "SetTextTooltipId");

	Params::TLUserWidget_SetTextTooltipId Parms{};

	Parms.InTextTooltipId = InTextTooltipId;
	Parms.IsImmediately = IsImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.SetTooltipAnchorTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::SetTooltipAnchorTarget(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "SetTooltipAnchorTarget");

	Params::TLUserWidget_SetTooltipAnchorTarget Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.SetTooltipBoundary
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFlags                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::SetTooltipBoundary(class UWidget* InWidget, int32 InFlags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "SetTooltipBoundary");

	Params::TLUserWidget_SetTooltipBoundary Parms{};

	Parms.InWidget = InWidget;
	Parms.InFlags = InFlags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.Show
// (Native, Public, BlueprintCallable)

void UTLUserWidget::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "Show");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.ShowWithValue
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::ShowWithValue(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "ShowWithValue");

	Params::TLUserWidget_ShowWithValue Parms{};

	Parms.InVisible = InVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.StopAllAnimationAtEnd
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidget::StopAllAnimationAtEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "StopAllAnimationAtEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.StopAnimationAtEnd
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 Animation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidget::StopAnimationAtEnd(class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "StopAnimationAtEnd");

	Params::TLUserWidget_StopAnimationAtEnd Parms{};

	Parms.Animation = Animation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.StopAnimationByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             AnimationName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::StopAnimationByName(class FName AnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "StopAnimationByName");

	Params::TLUserWidget_StopAnimationByName Parms{};

	Parms.AnimationName = AnimationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.StopAnimationInUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidgetAnimation*                 InAnim                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::StopAnimationInUserWidget(const class UWidgetAnimation* InAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "StopAnimationInUserWidget");

	Params::TLUserWidget_StopAnimationInUserWidget Parms{};

	Parms.InAnim = InAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.Toggle
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidget::Toggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "Toggle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidget.GetNotification
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::GetNotification() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "GetNotification");

	Params::TLUserWidget_GetNotification Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidget.IsHiddenState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidget::IsHiddenState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidget", "IsHiddenState");

	Params::TLUserWidget_IsHiddenState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetView.ClearDataContext
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetView::ClearDataContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetView", "ClearDataContext");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetView.GetDataContext
// (Native, Public, BlueprintCallable)
// Parameters:
// class UTLViewModelBase*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLViewModelBase* UTLUserWidgetView::GetDataContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetView", "GetDataContext");

	Params::TLUserWidgetView_GetDataContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetView.HandleDataSourceBinding
// (Final, Native, Public)

void UTLUserWidgetView::HandleDataSourceBinding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetView", "HandleDataSourceBinding");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetView.GetViewModelClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UTLViewModelImpl>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UTLViewModelImpl> UTLUserWidgetView::GetViewModelClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetView", "GetViewModelClass");

	Params::TLUserWidgetView_GetViewModelClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetButton.Click
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetButton::Click()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "Click");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetButton.HandleClick
// (Native, Protected)

void UTLUserWidgetButton::HandleClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "HandleClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetButton.HandleOnPressed
// (Native, Protected)

void UTLUserWidgetButton::HandleOnPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "HandleOnPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetButton.HandleOnReleased
// (Native, Protected)

void UTLUserWidgetButton::HandleOnReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "HandleOnReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetButton.SetButtonStyleByTableKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetButton::SetButtonStyleByTableKey(class FName InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "SetButtonStyleByTableKey");

	Params::TLUserWidgetButton_SetButtonStyleByTableKey Parms{};

	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetButton.SetHoverIconFromSoftObjectPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  Path                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAsyncLoad                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetButton::SetHoverIconFromSoftObjectPath(const struct FSoftObjectPath& Path, bool bInAsyncLoad, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "SetHoverIconFromSoftObjectPath");

	Params::TLUserWidgetButton_SetHoverIconFromSoftObjectPath Parms{};

	Parms.Path = std::move(Path);
	Parms.bInAsyncLoad = bInAsyncLoad;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetButton.SetIconFromSoftObjectPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  Path                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAsyncLoad                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetButton::SetIconFromSoftObjectPath(const struct FSoftObjectPath& Path, bool bInAsyncLoad, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "SetIconFromSoftObjectPath");

	Params::TLUserWidgetButton_SetIconFromSoftObjectPath Parms{};

	Parms.Path = std::move(Path);
	Parms.bInAsyncLoad = bInAsyncLoad;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TLClient.TLUserWidgetButton.SetSizeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                                   InWidgth                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetButton::SetSizeDelegate__DelegateSignature(float InWidgth, float InHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "SetSizeDelegate__DelegateSignature");

	Params::TLUserWidgetButton_SetSizeDelegate__DelegateSignature Parms{};

	Parms.InWidgth = InWidgth;
	Parms.InHeight = InHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetButton.SetText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetButton::SetText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "SetText");

	Params::TLUserWidgetButton_SetText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TLClient.TLUserWidgetButton.SimpleDynamicMulticastDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTLUserWidgetButton::SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction TLClient.TLUserWidgetButton.TLButtonChangeEnableEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetButton::TLButtonChangeEnableEvent__DelegateSignature(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetButton", "TLButtonChangeEnableEvent__DelegateSignature");

	Params::TLUserWidgetButton_TLButtonChangeEnableEvent__DelegateSignature Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCheckButton.BindGameValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             GameValueName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCheckButton::BindGameValue(class FName GameValueName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "BindGameValue");

	Params::TLUserWidgetCheckButton_BindGameValue Parms{};

	Parms.GameValueName = GameValueName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCheckButton.HandleIndeterminate
// (Native, Protected)
// Parameters:
// bool                                    bIndeterminate                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCheckButton::HandleIndeterminate(bool bIndeterminate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "HandleIndeterminate");

	Params::TLUserWidgetCheckButton_HandleIndeterminate Parms{};

	Parms.bIndeterminate = bIndeterminate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCheckButton.HandleSelected
// (Native, Protected)
// Parameters:
// bool                                    Selected                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCheckButton::HandleSelected(bool Selected, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "HandleSelected");

	Params::TLUserWidgetCheckButton_HandleSelected Parms{};

	Parms.Selected = Selected;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCheckButton.HandleVisibleBindUserWidget
// (Final, Native, Public)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCheckButton::HandleVisibleBindUserWidget(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "HandleVisibleBindUserWidget");

	Params::TLUserWidgetCheckButton_HandleVisibleBindUserWidget Parms{};

	Parms.bInVisible = bInVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCheckButton.SetCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Check                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCheckButton::SetCheck(bool Check)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "SetCheck");

	Params::TLUserWidgetCheckButton_SetCheck Parms{};

	Parms.Check = Check;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCheckButton.SetCheckHoverIconFromSoftObjectPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  Path                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAsyncLoad                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCheckButton::SetCheckHoverIconFromSoftObjectPath(const struct FSoftObjectPath& Path, bool bInAsyncLoad, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "SetCheckHoverIconFromSoftObjectPath");

	Params::TLUserWidgetCheckButton_SetCheckHoverIconFromSoftObjectPath Parms{};

	Parms.Path = std::move(Path);
	Parms.bInAsyncLoad = bInAsyncLoad;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCheckButton.SetCheckIconFromSoftObjectPath
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  Path                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAsyncLoad                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCheckButton::SetCheckIconFromSoftObjectPath(const struct FSoftObjectPath& Path, bool bInAsyncLoad, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "SetCheckIconFromSoftObjectPath");

	Params::TLUserWidgetCheckButton_SetCheckIconFromSoftObjectPath Parms{};

	Parms.Path = std::move(Path);
	Parms.bInAsyncLoad = bInAsyncLoad;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCheckButton.SetCheckIgnoreDisable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Check                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCheckButton::SetCheckIgnoreDisable(bool Check)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "SetCheckIgnoreDisable");

	Params::TLUserWidgetCheckButton_SetCheckIgnoreDisable Parms{};

	Parms.Check = Check;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCheckButton.SetIndeterminate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCheckButton::SetIndeterminate(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "SetIndeterminate");

	Params::TLUserWidgetCheckButton_SetIndeterminate Parms{};

	Parms.bInValue = bInValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCheckButton.UnbindGameValue
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetCheckButton::UnbindGameValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "UnbindGameValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCheckButton.IsBindedGameValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetCheckButton::IsBindedGameValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "IsBindedGameValue");

	Params::TLUserWidgetCheckButton_IsBindedGameValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetCheckButton.IsChecked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetCheckButton::IsChecked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "IsChecked");

	Params::TLUserWidgetCheckButton_IsChecked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetCheckButton.IsIndeterminate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetCheckButton::IsIndeterminate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCheckButton", "IsIndeterminate");

	Params::TLUserWidgetCheckButton_IsIndeterminate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetTopLevel.ActivateWidget
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetTopLevel::ActivateWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTopLevel", "ActivateWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTopLevel.AddActionGuideButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLUserWidgetActionGuideButton*   ActionGuideButton                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTopLevel::AddActionGuideButton(class UTLUserWidgetActionGuideButton* ActionGuideButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTopLevel", "AddActionGuideButton");

	Params::TLUserWidgetTopLevel_AddActionGuideButton Parms{};

	Parms.ActionGuideButton = ActionGuideButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTopLevel.DeactivateWidget
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetTopLevel::DeactivateWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTopLevel", "DeactivateWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTopLevel.OnActivateEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTopLevel::OnActivateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTopLevel", "OnActivateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTopLevel.OnDeactivateEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTopLevel::OnDeactivateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTopLevel", "OnDeactivateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTopLevel.RemoveActionGuideButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTopLevel::RemoveActionGuideButton(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTopLevel", "RemoveActionGuideButton");

	Params::TLUserWidgetTopLevel_RemoveActionGuideButton Parms{};

	Parms.ActionName = ActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTopLevel.SetWrapParentFrame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLUserWidgetFrame*               InFrame                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTopLevel::SetWrapParentFrame(class UTLUserWidgetFrame* InFrame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTopLevel", "SetWrapParentFrame");

	Params::TLUserWidgetTopLevel_SetWrapParentFrame Parms{};

	Parms.InFrame = InFrame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetFrame.HandleHideAnimationFinished
// (Event, Public, BlueprintEvent)

void UTLUserWidgetFrame::HandleHideAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFrame", "HandleHideAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetFrame.HandleShowAnimationFinished
// (Event, Public, BlueprintEvent)

void UTLUserWidgetFrame::HandleShowAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFrame", "HandleShowAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetFrame.HandleUISystemEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLUISystemEvent                        InEvent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFrame::HandleUISystemEvent(ETLUISystemEvent InEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFrame", "HandleUISystemEvent");

	Params::TLUserWidgetFrame_HandleUISystemEvent Parms{};

	Parms.InEvent = InEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFrame.HideUI
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetFrame::HideUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFrame", "HideUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetFrame.OnTutorialActivateEvent
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLInfoTutorial                  InfoTutorial                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetFrame::OnTutorialActivateEvent(const struct FTLInfoTutorial& InfoTutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFrame", "OnTutorialActivateEvent");

	Params::TLUserWidgetFrame_OnTutorialActivateEvent Parms{};

	Parms.InfoTutorial = std::move(InfoTutorial);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFrame.OnTutorialDeactivateEvent
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLInfoTutorial                  InfoTutorial                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetFrame::OnTutorialDeactivateEvent(const struct FTLInfoTutorial& InfoTutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFrame", "OnTutorialDeactivateEvent");

	Params::TLUserWidgetFrame_OnTutorialDeactivateEvent Parms{};

	Parms.InfoTutorial = std::move(InfoTutorial);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFrame.OnWidgetFloatingEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLUIWidgetFloatingEvent                InWidgetFloatingEvent                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFrame::OnWidgetFloatingEvent(ETLUIWidgetFloatingEvent InWidgetFloatingEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFrame", "OnWidgetFloatingEvent");

	Params::TLUserWidgetFrame_OnWidgetFloatingEvent Parms{};

	Parms.InWidgetFloatingEvent = InWidgetFloatingEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFrame.SetSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFrame::SetSize(const struct FVector2D& InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFrame", "SetSize");

	Params::TLUserWidgetFrame_SetSize Parms{};

	Parms.InSize = std::move(InSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetQuickSlotGroup.OnChangeMainHandWeapon
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemCategory                           InItemCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetQuickSlotGroup::OnChangeMainHandWeapon(EItemCategory InItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetQuickSlotGroup", "OnChangeMainHandWeapon");

	Params::TLUserWidgetQuickSlotGroup_OnChangeMainHandWeapon Parms{};

	Parms.InItemCategory = InItemCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetQuickSlotGroup.OnChangeSlotPage
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InPageIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetQuickSlotGroup::OnChangeSlotPage(int32 InPageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetQuickSlotGroup", "OnChangeSlotPage");

	Params::TLUserWidgetQuickSlotGroup_OnChangeSlotPage Parms{};

	Parms.InPageIndex = InPageIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetQuickSlotGroup.OnCheckButtonQuickSlotCollapseExpandCheck
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetQuickSlotGroup::OnCheckButtonQuickSlotCollapseExpandCheck(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetQuickSlotGroup", "OnCheckButtonQuickSlotCollapseExpandCheck");

	Params::TLUserWidgetQuickSlotGroup_OnCheckButtonQuickSlotCollapseExpandCheck Parms{};

	Parms.bIsChecked = bIsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetQuickSlotGroup.OnUpdateEditableNonQuickSlotSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetQuickSlotGroup::OnUpdateEditableNonQuickSlotSelected(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetQuickSlotGroup", "OnUpdateEditableNonQuickSlotSelected");

	Params::TLUserWidgetQuickSlotGroup_OnUpdateEditableNonQuickSlotSelected Parms{};

	Parms.bInValue = bInValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetQuickSlotGroup.OnUpdateWeaponPreset
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetQuickSlotGroup::OnUpdateWeaponPreset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetQuickSlotGroup", "OnUpdateWeaponPreset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetModeBase.ChangeCameraOnShow
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetModeBase::ChangeCameraOnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "ChangeCameraOnShow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.GetSceneActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATLCustomSceneControlActor*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATLCustomSceneControlActor* UTLUserWidgetModeBase::GetSceneActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "GetSceneActor");

	Params::TLUserWidgetModeBase_GetSceneActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardDownPressed
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardDownPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardDownPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardDownReleased
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardDownReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardDownReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardJumpPressed
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardJumpPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardJumpPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardJumpReleased
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardJumpReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardJumpReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardLeftPressed
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardLeftPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardLeftPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardLeftReleased
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardLeftReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardLeftReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardRightPressed
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardRightPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardRightPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardRightReleased
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardRightReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardRightReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardShiftPressed
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardShiftPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardShiftPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardShiftReleased
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardShiftReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardShiftReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardUpPressed
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardUpPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardUpPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnKeyboardUpReleased
// (Final, Native, Protected)

void UTLUserWidgetModeBase::OnKeyboardUpReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnKeyboardUpReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetModeBase.OnNotificationTab
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             TabName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInNotification                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetModeBase::OnNotificationTab(class FName TabName, bool bInNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnNotificationTab");

	Params::TLUserWidgetModeBase_OnNotificationTab Parms{};

	Parms.TabName = TabName;
	Parms.bInNotification = bInNotification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetModeBase.OnSelectTab
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             TabName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetModeBase::OnSelectTab(class FName TabName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetModeBase", "OnSelectTab");

	Params::TLUserWidgetModeBase_OnSelectTab Parms{};

	Parms.TabName = TabName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollection.HandleSearchTextBoxCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollection::HandleSearchTextBoxCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollection", "HandleSearchTextBoxCommitted");

	Params::TLUserWidgetItemCollection_HandleSearchTextBoxCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemCollection.HandleSearchTextRemoveClicked
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetItemCollection::HandleSearchTextRemoveClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollection", "HandleSearchTextRemoveClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemCollection.OnItemViewVisibleUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollection::OnItemViewVisibleUpdate(const bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollection", "OnItemViewVisibleUpdate");

	Params::TLUserWidgetItemCollection_OnItemViewVisibleUpdate Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollection.OnResultSearchText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSearchNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollection::OnResultSearchText(bool InVisible, int32 InSearchNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollection", "OnResultSearchText");

	Params::TLUserWidgetItemCollection_OnResultSearchText Parms{};

	Parms.InVisible = InVisible;
	Parms.InSearchNum = InSearchNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollection.OnToggleSummaryWidget
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemCollection::OnToggleSummaryWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollection", "OnToggleSummaryWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetIcon.HandleDragDropOperationDropped
// (Final, Native, Private)
// Parameters:
// class UDragDropOperation*               Operation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetIcon::HandleDragDropOperationDropped(class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetIcon", "HandleDragDropOperationDropped");

	Params::TLUserWidgetIcon_HandleDragDropOperationDropped Parms{};

	Parms.Operation = Operation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetIcon.HandleSelected
// (Native, Protected)
// Parameters:
// bool                                    Selected                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetIcon::HandleSelected(bool Selected, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetIcon", "HandleSelected");

	Params::TLUserWidgetIcon_HandleSelected Parms{};

	Parms.Selected = Selected;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TLClient.TLUserWidgetIcon.SimpleDynamicMulticastDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTLUserWidgetIcon::SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetIcon", "SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetIcon.IsWidgetSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetIcon::IsWidgetSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetIcon", "IsWidgetSelected");

	Params::TLUserWidgetIcon_IsWidgetSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemCompositionOpenResultSlot.OnOpenStart
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InGrade                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInReturnToMaterial                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCompositionOpenResultSlot::OnOpenStart(int32 InGrade, bool bInReturnToMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResultSlot", "OnOpenStart");

	Params::TLUserWidgetItemCompositionOpenResultSlot_OnOpenStart Parms{};

	Parms.InGrade = InGrade;
	Parms.bInReturnToMaterial = bInReturnToMaterial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCompositionOpenResultSlot.OnReset
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemCompositionOpenResultSlot::OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResultSlot", "OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemCompositionOpenResultSlot.OnReview
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InGrade                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInReturnToMaterial                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCompositionOpenResultSlot::OnReview(int32 InGrade, bool bInReturnToMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResultSlot", "OnReview");

	Params::TLUserWidgetItemCompositionOpenResultSlot_OnReview Parms{};

	Parms.InGrade = InGrade;
	Parms.bInReturnToMaterial = bInReturnToMaterial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCompositionOpenResultSlot.OpenFinished
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetItemCompositionOpenResultSlot::OpenFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResultSlot", "OpenFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetHudCustomizeSetting.OnBeginComponentTransform
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetHudCustomizeSetting::OnBeginComponentTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHudCustomizeSetting", "OnBeginComponentTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetHudCustomizeSetting.OnEndComponentTransform
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetHudCustomizeSetting::OnEndComponentTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHudCustomizeSetting", "OnEndComponentTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetHudCustomizeSetting.OnFinishMinimizeEvent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bMinimize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHudCustomizeSetting::OnFinishMinimizeEvent(bool bMinimize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHudCustomizeSetting", "OnFinishMinimizeEvent");

	Params::TLUserWidgetHudCustomizeSetting_OnFinishMinimizeEvent Parms{};

	Parms.bMinimize = bMinimize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetHudCustomizeSetting.OnMinimizeEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bMinimize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHudCustomizeSetting::OnMinimizeEvent(bool bMinimize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHudCustomizeSetting", "OnMinimizeEvent");

	Params::TLUserWidgetHudCustomizeSetting_OnMinimizeEvent Parms{};

	Parms.bMinimize = bMinimize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsAlarmBase.OnOnlyFavoriteListShow
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsShow_0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsAlarmBase::OnOnlyFavoriteListShow(bool IsShow_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmBase", "OnOnlyFavoriteListShow");

	Params::TLUserWidgetContentsAlarmBase_OnOnlyFavoriteListShow Parms{};

	Parms.IsShow_0 = IsShow_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsAlarmBase.OnUpdateViewType
// (Event, Public, BlueprintEvent)
// Parameters:
// EContentsAlarmViewType                  InViewType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsAlarmBase::OnUpdateViewType(EContentsAlarmViewType InViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmBase", "OnUpdateViewType");

	Params::TLUserWidgetContentsAlarmBase_OnUpdateViewType Parms{};

	Parms.InViewType = InViewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractBoard.OnCompleteContract
// (Event, Public, BlueprintEvent)

void UTLUserWidgetGuildContractBoard::OnCompleteContract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoard", "OnCompleteContract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGuildContractBoard.OnUpdateContract
// (Event, Public, BlueprintEvent)

void UTLUserWidgetGuildContractBoard::OnUpdateContract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoard", "OnUpdateContract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMapBase.OnUpdateFogState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsOpenFog                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapBase::OnUpdateFogState(bool IsOpenFog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapBase", "OnUpdateFogState");

	Params::TLUserWidgetMapBase_OnUpdateFogState Parms{};

	Parms.IsOpenFog = IsOpenFog;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapBase.OnUpdateMapScale
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InMapScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapBase::OnUpdateMapScale(float InMapScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapBase", "OnUpdateMapScale");

	Params::TLUserWidgetMapBase_OnUpdateMapScale Parms{};

	Parms.InMapScale = InMapScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapBase.OnUpdateOption
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMapBase::OnUpdateOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapBase", "OnUpdateOption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMapBase.OnUpdateRegionTileTexture
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InShowRegionTileTexture                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLRegionMapDisplayType                 InDisplayType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapBase::OnUpdateRegionTileTexture(bool InShowRegionTileTexture, ETLRegionMapDisplayType InDisplayType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapBase", "OnUpdateRegionTileTexture");

	Params::TLUserWidgetMapBase_OnUpdateRegionTileTexture Parms{};

	Parms.InShowRegionTileTexture = InShowRegionTileTexture;
	Parms.InDisplayType = InDisplayType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapBase.SetMapFrameSize
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        InMapFrameSize                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapBase::SetMapFrameSize(const struct FVector2D& InMapFrameSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapBase", "SetMapFrameSize");

	Params::TLUserWidgetMapBase_SetMapFrameSize Parms{};

	Parms.InMapFrameSize = std::move(InMapFrameSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapBase.SetMapIconFrame
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EMapIconType                            InMapIconType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InZOrder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAnchors                         InAnchor                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        InSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapBase::SetMapIconFrame(EMapIconType InMapIconType, int32 InZOrder, const struct FAnchors& InAnchor, const struct FVector2D& InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapBase", "SetMapIconFrame");

	Params::TLUserWidgetMapBase_SetMapIconFrame Parms{};

	Parms.InMapIconType = InMapIconType;
	Parms.InZOrder = InZOrder;
	Parms.InAnchor = std::move(InAnchor);
	Parms.InSize = std::move(InSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOverlayMap.HandlePanningState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLMinimapPanningState                  InPanningState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOverlayMap::HandlePanningState(ETLMinimapPanningState InPanningState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOverlayMap", "HandlePanningState");

	Params::TLUserWidgetOverlayMap_HandlePanningState Parms{};

	Parms.InPanningState = InPanningState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOverlayMap.OnUpdateOverlayMapOpacity
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOverlayMap::OnUpdateOverlayMapOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOverlayMap", "OnUpdateOverlayMapOpacity");

	Params::TLUserWidgetOverlayMap_OnUpdateOverlayMapOpacity Parms{};

	Parms.InOpacity = InOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOverlayMap.OnUpdateRoadAdditive
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOverlayMap::OnUpdateRoadAdditive(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOverlayMap", "OnUpdateRoadAdditive");

	Params::TLUserWidgetOverlayMap_OnUpdateRoadAdditive Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOverlayMap.OnUpdateRoadAlphaWhite
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOverlayMap::OnUpdateRoadAlphaWhite(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOverlayMap", "OnUpdateRoadAlphaWhite");

	Params::TLUserWidgetOverlayMap_OnUpdateRoadAlphaWhite Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOverlayMap.OnUpdateRoadBrightness
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOverlayMap::OnUpdateRoadBrightness(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOverlayMap", "OnUpdateRoadBrightness");

	Params::TLUserWidgetOverlayMap_OnUpdateRoadBrightness Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMainMenu.GetMenuButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InMenuTypeName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidgetMainMenuButton*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserWidgetMainMenuButton* UTLUserWidgetMainMenu::GetMenuButton(const class FString& InMenuTypeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMainMenu", "GetMenuButton");

	Params::TLUserWidgetMainMenu_GetMenuButton Parms{};

	Parms.InMenuTypeName = std::move(InMenuTypeName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetMainMenu.OnRedDotCountUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InRedDotCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMainMenu::OnRedDotCountUpdated(int32 InRedDotCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMainMenu", "OnRedDotCountUpdated");

	Params::TLUserWidgetMainMenu_OnRedDotCountUpdated Parms{};

	Parms.InRedDotCount = InRedDotCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMainMenu.OnUpdateVisibleCategory
// (Event, Public, BlueprintEvent)
// Parameters:
// EMainMenuCategory                       InCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMainMenu::OnUpdateVisibleCategory(EMainMenuCategory InCategory, bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMainMenu", "OnUpdateVisibleCategory");

	Params::TLUserWidgetMainMenu_OnUpdateVisibleCategory Parms{};

	Parms.InCategory = InCategory;
	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPVPMessageUnit.SetInfo
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bWin                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             AttackerName                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             DieCharacter                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPVPMessageUnit::SetInfo(const bool bWin, const class FText& AttackerName, const class FText& DieCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPVPMessageUnit", "SetInfo");

	Params::TLUserWidgetPVPMessageUnit_SetInfo Parms{};

	Parms.bWin = bWin;
	Parms.AttackerName = std::move(AttackerName);
	Parms.DieCharacter = std::move(DieCharacter);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.EmphasizeNameplate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInEmphasize                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::EmphasizeNameplate(bool bInEmphasize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "EmphasizeNameplate");

	Params::TLUserWidgetNamePlate_EmphasizeNameplate Parms{};

	Parms.bInEmphasize = bInEmphasize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.GetRelationColorToMyPc
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ETLRelationColorToMyPc                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLRelationColorToMyPc UTLUserWidgetNamePlate::GetRelationColorToMyPc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "GetRelationColorToMyPc");

	Params::TLUserWidgetNamePlate_GetRelationColorToMyPc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetNamePlate.IsHostileToMyPc
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetNamePlate::IsHostileToMyPc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "IsHostileToMyPc");

	Params::TLUserWidgetNamePlate_IsHostileToMyPc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetNamePlate.IsShowHPBar
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetNamePlate::IsShowHPBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "IsShowHPBar");

	Params::TLUserWidgetNamePlate_IsShowHPBar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetNamePlate.LoadDefaultFontSize
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetNamePlate::LoadDefaultFontSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "LoadDefaultFontSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetNamePlate.OnChangedHpAbnormalStatus
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EHpAbnormalStatus                       InStatus                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbIsMyPc                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnChangedHpAbnormalStatus(const EHpAbnormalStatus& InStatus, const bool InbIsMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnChangedHpAbnormalStatus");

	Params::TLUserWidgetNamePlate_OnChangedHpAbnormalStatus Parms{};

	Parms.InStatus = InStatus;
	Parms.InbIsMyPc = InbIsMyPc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnChangeNameplateLayout
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLNameplateLayout                      InTLNameplateLayout                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbMyPc                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnChangeNameplateLayout(ETLNameplateLayout InTLNameplateLayout, bool InbMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnChangeNameplateLayout");

	Params::TLUserWidgetNamePlate_OnChangeNameplateLayout Parms{};

	Parms.InTLNameplateLayout = InTLNameplateLayout;
	Parms.InbMyPc = InbMyPc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnChangeOtherPCAlive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsAlive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnChangeOtherPCAlive(bool bIsAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnChangeOtherPCAlive");

	Params::TLUserWidgetNamePlate_OnChangeOtherPCAlive Parms{};

	Parms.bIsAlive = bIsAlive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnChangeStealthDetectionState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLStealthDectectionState               State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnChangeStealthDetectionState(ETLStealthDectectionState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnChangeStealthDetectionState");

	Params::TLUserWidgetNamePlate_OnChangeStealthDetectionState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnLoadDefaultFontSizeComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InDefaultFontSize                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnLoadDefaultFontSizeComplete(int32 InDefaultFontSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnLoadDefaultFontSizeComplete");

	Params::TLUserWidgetNamePlate_OnLoadDefaultFontSizeComplete Parms{};

	Parms.InDefaultFontSize = InDefaultFontSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnOwnershipGained
// (Event, Public, BlueprintEvent)

void UTLUserWidgetNamePlate::OnOwnershipGained()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnOwnershipGained");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetNamePlate.OnOwnershipLost
// (Event, Public, BlueprintEvent)

void UTLUserWidgetNamePlate::OnOwnershipLost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnOwnershipLost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetNamePlate.OnSetFixTargetNext
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// bool                                    InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InColor                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnSetFixTargetNext(bool InTarget, const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnSetFixTargetNext");

	Params::TLUserWidgetNamePlate_OnSetFixTargetNext Parms{};

	Parms.InTarget = InTarget;
	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnSetScanTarget
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnSetScanTarget(bool InTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnSetScanTarget");

	Params::TLUserWidgetNamePlate_OnSetScanTarget Parms{};

	Parms.InTarget = InTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdateAttackedMyPc
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInAttackedMyPc                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnUpdateAttackedMyPc(bool bInAttackedMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdateAttackedMyPc");

	Params::TLUserWidgetNamePlate_OnUpdateAttackedMyPc Parms{};

	Parms.bInAttackedMyPc = bInAttackedMyPc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdateBossFocusOnMe
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFocus                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnUpdateBossFocusOnMe(bool bFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdateBossFocusOnMe");

	Params::TLUserWidgetNamePlate_OnUpdateBossFocusOnMe Parms{};

	Parms.bFocus = bFocus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdateBossGate
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLBossGateCrowdingStatus               InBossGateStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnUpdateBossGate(ETLBossGateCrowdingStatus InBossGateStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdateBossGate");

	Params::TLUserWidgetNamePlate_OnUpdateBossGate Parms{};

	Parms.InBossGateStatus = InBossGateStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdatedMassCombatMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInMassCombatMode                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnUpdatedMassCombatMode(bool bInMassCombatMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdatedMassCombatMode");

	Params::TLUserWidgetNamePlate_OnUpdatedMassCombatMode Parms{};

	Parms.bInMassCombatMode = bInMassCombatMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdateEEAlert
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInEEAlert                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnUpdateEEAlert(bool bInEEAlert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdateEEAlert");

	Params::TLUserWidgetNamePlate_OnUpdateEEAlert Parms{};

	Parms.bInEEAlert = bInEEAlert;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdateEECount
// (Event, Public, BlueprintEvent)

void UTLUserWidgetNamePlate::OnUpdateEECount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdateEECount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdateGuildEmblemShow
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnUpdateGuildEmblemShow(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdateGuildEmblemShow");

	Params::TLUserWidgetNamePlate_OnUpdateGuildEmblemShow Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdateHpBarType
// (Event, Public, BlueprintEvent)
// Parameters:
// EHpBarType                              InHpBarType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnUpdateHpBarType(EHpBarType InHpBarType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdateHpBarType");

	Params::TLUserWidgetNamePlate_OnUpdateHpBarType Parms{};

	Parms.InHpBarType = InHpBarType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdateMassCombatMode
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLNameplateMassCombatModeState         InMassCombatModeState                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnUpdateMassCombatMode(ETLNameplateMassCombatModeState InMassCombatModeState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdateMassCombatMode");

	Params::TLUserWidgetNamePlate_OnUpdateMassCombatMode Parms{};

	Parms.InMassCombatModeState = InMassCombatModeState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdateSimpleLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLNameplateSimpleLayout                InLayout                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnUpdateSimpleLayout(ETLNameplateSimpleLayout InLayout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdateSimpleLayout");

	Params::TLUserWidgetNamePlate_OnUpdateSimpleLayout Parms{};

	Parms.InLayout = InLayout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.OnUpdateTargetState
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// ETLNameplateTaregetState                State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InOutlineColor                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::OnUpdateTargetState(ETLNameplateTaregetState State, bool bShow, const struct FLinearColor& InOutlineColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "OnUpdateTargetState");

	Params::TLUserWidgetNamePlate_OnUpdateTargetState Parms{};

	Parms.State = State;
	Parms.bShow = bShow;
	Parms.InOutlineColor = std::move(InOutlineColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.SetNameplateEnableHitTest
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::SetNameplateEnableHitTest(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "SetNameplateEnableHitTest");

	Params::TLUserWidgetNamePlate_SetNameplateEnableHitTest Parms{};

	Parms.bInEnable = bInEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.ShowPartyNum
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlate::ShowPartyNum(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "ShowPartyNum");

	Params::TLUserWidgetNamePlate_ShowPartyNum Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlate.UpdateSlotTargetLine
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetNamePlate::UpdateSlotTargetLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlate", "UpdateSlotTargetLine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetNamePlatePC.IsPvpState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetNamePlatePC::IsPvpState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlatePC", "IsPvpState");

	Params::TLUserWidgetNamePlatePC_IsPvpState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetNamePlatePC.OnSimpleModeOffsetForConsole
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D                        InRenderTransformOffset                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlatePC::OnSimpleModeOffsetForConsole(const struct FVector2D& InRenderTransformOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlatePC", "OnSimpleModeOffsetForConsole");

	Params::TLUserWidgetNamePlatePC_OnSimpleModeOffsetForConsole Parms{};

	Parms.InRenderTransformOffset = std::move(InRenderTransformOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxBase.HandleMsgBoxClickedBtnEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLMsgBoxBtnType                        InClickedBtnType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxBase::HandleMsgBoxClickedBtnEvent(ETLMsgBoxBtnType InClickedBtnType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxBase", "HandleMsgBoxClickedBtnEvent");

	Params::TLUserWidgetMsgBoxBase_HandleMsgBoxClickedBtnEvent Parms{};

	Parms.InClickedBtnType = InClickedBtnType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxBase.HandleSetBtnStyle
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLMsgBoxBtnStyle                       InBtnStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxBase::HandleSetBtnStyle(ETLMsgBoxBtnStyle InBtnStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxBase", "HandleSetBtnStyle");

	Params::TLUserWidgetMsgBoxBase_HandleSetBtnStyle Parms{};

	Parms.InBtnStyle = InBtnStyle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleWindow.SetContentWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLUserWidgetTopLevel*            InContentWidget                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleWindow::SetContentWidget(class UTLUserWidgetTopLevel* InContentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleWindow", "SetContentWidget");

	Params::TLUserWidgetConsoleWindow_SetContentWidget Parms{};

	Parms.InContentWidget = InContentWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatItem.OnChatViewrStateAnimation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetChatItem::OnChatViewrStateAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatItem", "OnChatViewrStateAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChatItem.OnShowPortrait
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInHidePortraitArea                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatItem::OnShowPortrait(bool IsVisible_0, bool bInHidePortraitArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatItem", "OnShowPortrait");

	Params::TLUserWidgetChatItem_OnShowPortrait Parms{};

	Parms.IsVisible_0 = IsVisible_0;
	Parms.bInHidePortraitArea = bInHidePortraitArea;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatItem.OnStartVisibleAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bReverse                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatItem::OnStartVisibleAnimation(bool bReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatItem", "OnStartVisibleAnimation");

	Params::TLUserWidgetChatItem_OnStartVisibleAnimation Parms{};

	Parms.bReverse = bReverse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatItem.OnUpdateChatCategoryOption
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bVisibleChatCategory                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatItem::OnUpdateChatCategoryOption(bool bVisibleChatCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatItem", "OnUpdateChatCategoryOption");

	Params::TLUserWidgetChatItem_OnUpdateChatCategoryOption Parms{};

	Parms.bVisibleChatCategory = bVisibleChatCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatItem.OnUpdateUserPortrait
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInUserPortrait                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatItem::OnUpdateUserPortrait(bool bInUserPortrait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatItem", "OnUpdateUserPortrait");

	Params::TLUserWidgetChatItem_OnUpdateUserPortrait Parms{};

	Parms.bInUserPortrait = bInUserPortrait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxTradeSale.OnPriceInputTextChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   InChangedValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLSpinnerValueCompareResult            InCompareResult                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTradeSale::OnPriceInputTextChanged(int32 InChangedValue, ETLSpinnerValueCompareResult InCompareResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTradeSale", "OnPriceInputTextChanged");

	Params::TLUserWidgetMsgBoxTradeSale_OnPriceInputTextChanged Parms{};

	Parms.InChangedValue = InChangedValue;
	Parms.InCompareResult = InCompareResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTradeSale.OnPriceInputTextCommitted
// (Final, Native, Protected)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTradeSale::OnPriceInputTextCommitted(int32 InValue, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTradeSale", "OnPriceInputTextCommitted");

	Params::TLUserWidgetMsgBoxTradeSale_OnPriceInputTextCommitted Parms{};

	Parms.InValue = InValue;
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTradeSale.OnPriceSpinnerFocused
// (Final, Native, Protected)
// Parameters:
// bool                                    InIsFocused                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTradeSale::OnPriceSpinnerFocused(bool InIsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTradeSale", "OnPriceSpinnerFocused");

	Params::TLUserWidgetMsgBoxTradeSale_OnPriceSpinnerFocused Parms{};

	Parms.InIsFocused = InIsFocused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTradeSale.OnQuantityInputTextChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   InChangedValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLSpinnerValueCompareResult            InCompareResult                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTradeSale::OnQuantityInputTextChanged(int32 InChangedValue, ETLSpinnerValueCompareResult InCompareResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTradeSale", "OnQuantityInputTextChanged");

	Params::TLUserWidgetMsgBoxTradeSale_OnQuantityInputTextChanged Parms{};

	Parms.InChangedValue = InChangedValue;
	Parms.InCompareResult = InCompareResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTradeSale.OnQuantityInputTextCommitted
// (Final, Native, Protected)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTradeSale::OnQuantityInputTextCommitted(int32 InValue, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTradeSale", "OnQuantityInputTextCommitted");

	Params::TLUserWidgetMsgBoxTradeSale_OnQuantityInputTextCommitted Parms{};

	Parms.InValue = InValue;
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTradeSale.OnQuantitySpinnerFocused
// (Final, Native, Protected)
// Parameters:
// bool                                    InIsFocused                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTradeSale::OnQuantitySpinnerFocused(bool InIsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTradeSale", "OnQuantitySpinnerFocused");

	Params::TLUserWidgetMsgBoxTradeSale_OnQuantitySpinnerFocused Parms{};

	Parms.InIsFocused = InIsFocused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTradeSale.OnShowPriceUnitSpinner
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTradeSale::OnShowPriceUnitSpinner(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTradeSale", "OnShowPriceUnitSpinner");

	Params::TLUserWidgetMsgBoxTradeSale_OnShowPriceUnitSpinner Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxTradeSale.OnShowQuantityUnitSpinner
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTradeSale::OnShowQuantityUnitSpinner(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTradeSale", "OnShowQuantityUnitSpinner");

	Params::TLUserWidgetMsgBoxTradeSale_OnShowQuantityUnitSpinner Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSlot.OnDimmed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InDimmed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSlot::OnDimmed(bool InDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlot", "OnDimmed");

	Params::TLUserWidgetSlot_OnDimmed Parms{};

	Parms.InDimmed = InDimmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSlot.OnDroppable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InDroppable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSlot::OnDroppable(bool InDroppable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlot", "OnDroppable");

	Params::TLUserWidgetSlot_OnDroppable Parms{};

	Parms.InDroppable = InDroppable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSlot.OnEmpty
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InEmpty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSlot::OnEmpty(bool InEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlot", "OnEmpty");

	Params::TLUserWidgetSlot_OnEmpty Parms{};

	Parms.InEmpty = InEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSlot.OnUpdateSelectedEditableQuickSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSlot::OnUpdateSelectedEditableQuickSlot(bool bInSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlot", "OnUpdateSelectedEditableQuickSlot");

	Params::TLUserWidgetSlot_OnUpdateSelectedEditableQuickSlot Parms{};

	Parms.bInSelected = bInSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSlot.IsDimmed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetSlot::IsDimmed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlot", "IsDimmed");

	Params::TLUserWidgetSlot_IsDimmed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSlot.IsEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetSlot::IsEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlot", "IsEmpty");

	Params::TLUserWidgetSlot_IsEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemSlot.OnEquipAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InEquip                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::OnEquipAnimation(bool InEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnEquipAnimation");

	Params::TLUserWidgetItemSlot_OnEquipAnimation Parms{};

	Parms.InEquip = InEquip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemSlot.OnExpirationTimeSet
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::OnExpirationTimeSet(const bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnExpirationTimeSet");

	Params::TLUserWidgetItemSlot_OnExpirationTimeSet Parms{};

	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemSlot.OnFixed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InFixed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::OnFixed(bool InFixed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnFixed");

	Params::TLUserWidgetItemSlot_OnFixed Parms{};

	Parms.InFixed = InFixed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemSlot.OnHovered
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemSlot::OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlot.OnItemCountUpdate
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemSlot::OnItemCountUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnItemCountUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlot.OnItemDungeonUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInIsDungeonItem                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::OnItemDungeonUpdate(const bool bInIsDungeonItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnItemDungeonUpdate");

	Params::TLUserWidgetItemSlot_OnItemDungeonUpdate Parms{};

	Parms.bInIsDungeonItem = bInIsDungeonItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemSlot.OnItemEquipUpdate
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemSlot::OnItemEquipUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnItemEquipUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlot.OnItemGradeUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemGrade                              InGrade                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::OnItemGradeUpdate(const EItemGrade InGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnItemGradeUpdate");

	Params::TLUserWidgetItemSlot_OnItemGradeUpdate Parms{};

	Parms.InGrade = InGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemSlot.OnItemLockUpdate
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemSlot::OnItemLockUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnItemLockUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlot.OnItemTraitExtract
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsExtractItem                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::OnItemTraitExtract(bool InIsExtractItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnItemTraitExtract");

	Params::TLUserWidgetItemSlot_OnItemTraitExtract Parms{};

	Parms.InIsExtractItem = InIsExtractItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemSlot.OnPresetInfoUpdate
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemSlot::OnPresetInfoUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnPresetInfoUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlot.OnReceiveComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInComplete                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::OnReceiveComplete(bool bInComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnReceiveComplete");

	Params::TLUserWidgetItemSlot_OnReceiveComplete Parms{};

	Parms.bInComplete = bInComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemSlot.OnUnhovered
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemSlot::OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlot.OnUpdateCollectableMarks
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemSlot::OnUpdateCollectableMarks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnUpdateCollectableMarks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlot.OnUpdateMaxEnchant
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InbMaxLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::OnUpdateMaxEnchant(bool InbMaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnUpdateMaxEnchant");

	Params::TLUserWidgetItemSlot_OnUpdateMaxEnchant Parms{};

	Parms.InbMaxLevel = InbMaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemSlot.OnUpdateRequireLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InRequireLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPcLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::OnUpdateRequireLevel(int32 InRequireLevel, int32 InPcLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnUpdateRequireLevel");

	Params::TLUserWidgetItemSlot_OnUpdateRequireLevel Parms{};

	Parms.InRequireLevel = InRequireLevel;
	Parms.InPcLevel = InPcLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemSlot.OnUpdateTradable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::OnUpdateTradable(const bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "OnUpdateTradable");

	Params::TLUserWidgetItemSlot_OnUpdateTradable Parms{};

	Parms.bInValue = bInValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemSlot.PlayNewItemAnimation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemSlot::PlayNewItemAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "PlayNewItemAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlot.PlayShowItemAnimation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemSlot::PlayShowItemAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "PlayShowItemAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlot.SetSlotSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlot::SetSlotSize(int32 InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "SetSlotSize");

	Params::TLUserWidgetItemSlot_SetSlotSize Parms{};

	Parms.InSize = InSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TLClient.TLUserWidgetItemSlot.TLOnItemSlotWidgetClickBPDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTLUserWidgetItemSlot::TLOnItemSlotWidgetClickBPDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "TLOnItemSlotWidgetClickBPDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlot.GetItemCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EItemCategory                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemCategory UTLUserWidgetItemSlot::GetItemCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "GetItemCategory");

	Params::TLUserWidgetItemSlot_GetItemCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemSlot.IsEnableCompareEquipWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetItemSlot::IsEnableCompareEquipWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "IsEnableCompareEquipWeapon");

	Params::TLUserWidgetItemSlot_IsEnableCompareEquipWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemSlot.IsEnableCompareOtherSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetItemSlot::IsEnableCompareOtherSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "IsEnableCompareOtherSlot");

	Params::TLUserWidgetItemSlot_IsEnableCompareOtherSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemSlot.IsWeaponItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetItemSlot::IsWeaponItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlot", "IsWeaponItem");

	Params::TLUserWidgetItemSlot_IsWeaponItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetEquipSlot.OnEquipStateUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// EEquipSlotEvent                         InEvent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEquipSlot::OnEquipStateUpdate(const EEquipSlotEvent InEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEquipSlot", "OnEquipStateUpdate");

	Params::TLUserWidgetEquipSlot_OnEquipStateUpdate Parms{};

	Parms.InEvent = InEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEquipSlot.OnFakeItemUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InValue                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEquipSlot::OnFakeItemUpdate(const bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEquipSlot", "OnFakeItemUpdate");

	Params::TLUserWidgetEquipSlot_OnFakeItemUpdate Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEquipSlot.OnUpdateEquippable
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InEquippable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEquipSlot::OnUpdateEquippable(bool InEquippable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEquipSlot", "OnUpdateEquippable");

	Params::TLUserWidgetEquipSlot_OnUpdateEquippable Parms{};

	Parms.InEquippable = InEquippable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEquipSlot.SetEquipCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEquipCategory                          InCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEquipSlot::SetEquipCategory(const EEquipCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEquipSlot", "SetEquipCategory");

	Params::TLUserWidgetEquipSlot_SetEquipCategory Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ActivateCustomSceneCameraWithFixedTarget
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CameraRotation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D                        CameraCenterOffset                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraDistOffset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::ActivateCustomSceneCameraWithFixedTarget(class AActor* Target, const struct FRotator& CameraRotation, const struct FVector2D& CameraCenterOffset, float CameraDistOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ActivateCustomSceneCameraWithFixedTarget");

	Params::TLCustomSceneControlActor_ActivateCustomSceneCameraWithFixedTarget Parms{};

	Parms.Target = Target;
	Parms.CameraRotation = std::move(CameraRotation);
	Parms.CameraCenterOffset = std::move(CameraCenterOffset);
	Parms.CameraDistOffset = CameraDistOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ActivateCustomSceneCameraWithTargetTag
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             TargetObjectTag                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableAdvance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableZoom                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        CameraCenterOffset                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraDistOffset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::ActivateCustomSceneCameraWithTargetTag(class FName TargetObjectTag, bool bEnableAdvance, bool bEnableZoom, const struct FVector2D& CameraCenterOffset, float CameraDistOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ActivateCustomSceneCameraWithTargetTag");

	Params::TLCustomSceneControlActor_ActivateCustomSceneCameraWithTargetTag Parms{};

	Parms.TargetObjectTag = TargetObjectTag;
	Parms.bEnableAdvance = bEnableAdvance;
	Parms.bEnableZoom = bEnableZoom;
	Parms.CameraCenterOffset = std::move(CameraCenterOffset);
	Parms.CameraDistOffset = CameraDistOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ActivateMapEnvironmentAffector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InActivationTag                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideBlendDuration                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendDuration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableWind                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::ActivateMapEnvironmentAffector(class FName InActivationTag, bool bOverrideBlendDuration, float BlendDuration, bool bEnableWind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ActivateMapEnvironmentAffector");

	Params::TLCustomSceneControlActor_ActivateMapEnvironmentAffector Parms{};

	Parms.InActivationTag = InActivationTag;
	Parms.bOverrideBlendDuration = bOverrideBlendDuration;
	Parms.BlendDuration = BlendDuration;
	Parms.bEnableWind = bEnableWind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ChangeCameraTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             CameraTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWarp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceChange                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATLCustomSceneControlActor::ChangeCameraTarget(class FName CameraTarget, bool bWarp, bool bForceChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ChangeCameraTarget");

	Params::TLCustomSceneControlActor_ChangeCameraTarget Parms{};

	Parms.CameraTarget = CameraTarget;
	Parms.bWarp = bWarp;
	Parms.bForceChange = bForceChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCustomSceneControlActor.ChangeEnvironmentSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InActivationTag                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   Sequence                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::ChangeEnvironmentSequence(class FName InActivationTag, class ULevelSequence* Sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ChangeEnvironmentSequence");

	Params::TLCustomSceneControlActor_ChangeEnvironmentSequence Parms{};

	Parms.InActivationTag = InActivationTag;
	Parms.Sequence = Sequence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ChangeHive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHiveEntityData*                  HiveEntity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::ChangeHive(class UHiveEntityData* HiveEntity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ChangeHive");

	Params::TLCustomSceneControlActor_ChangeHive Parms{};

	Parms.HiveEntity = HiveEntity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ChangeHiveByModelIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TargetModelIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHiveEntityData*                  HiveEntity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::ChangeHiveByModelIndex(int32 TargetModelIndex, class UHiveEntityData* HiveEntity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ChangeHiveByModelIndex");

	Params::TLCustomSceneControlActor_ChangeHiveByModelIndex Parms{};

	Parms.TargetModelIndex = TargetModelIndex;
	Parms.HiveEntity = HiveEntity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ChangeHiveByModelTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TargetModelTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHiveEntityData*                  HiveEntity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::ChangeHiveByModelTag(class FName TargetModelTag, class UHiveEntityData* HiveEntity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ChangeHiveByModelTag");

	Params::TLCustomSceneControlActor_ChangeHiveByModelTag Parms{};

	Parms.TargetModelTag = TargetModelTag;
	Parms.HiveEntity = HiveEntity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ClearHiddenState
// (Final, Native, Public, BlueprintCallable)

void ATLCustomSceneControlActor::ClearHiddenState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ClearHiddenState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.CustomSceneEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::CustomSceneEvent(class FName InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "CustomSceneEvent");

	Params::TLCustomSceneControlActor_CustomSceneEvent Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.DeactivateMapEnvironmentAffector
// (Final, Native, Public, BlueprintCallable)

void ATLCustomSceneControlActor::DeactivateMapEnvironmentAffector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "DeactivateMapEnvironmentAffector");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.DestroyMapRoom
// (Final, Native, Public, BlueprintCallable)

void ATLCustomSceneControlActor::DestroyMapRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "DestroyMapRoom");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.DestroySceneActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TagID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::DestroySceneActor(class FName TagID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "DestroySceneActor");

	Params::TLCustomSceneControlActor_DestroySceneActor Parms{};

	Parms.TagID = TagID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.GetModelActorByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   TargetModelIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ATLCustomSceneControlActor::GetModelActorByIndex(int32 TargetModelIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "GetModelActorByIndex");

	Params::TLCustomSceneControlActor_GetModelActorByIndex Parms{};

	Parms.TargetModelIndex = TargetModelIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCustomSceneControlActor.GetModelActorByTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             TargetModelTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ATLCustomSceneControlActor::GetModelActorByTag(class FName TargetModelTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "GetModelActorByTag");

	Params::TLCustomSceneControlActor_GetModelActorByTag Parms{};

	Parms.TargetModelTag = TargetModelTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCustomSceneControlActor.IsBlendingCameraTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATLCustomSceneControlActor::IsBlendingCameraTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "IsBlendingCameraTarget");

	Params::TLCustomSceneControlActor_IsBlendingCameraTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCustomSceneControlActor.IsPlayingLevelSequence
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATLCustomSceneControlActor::IsPlayingLevelSequence(class FName InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "IsPlayingLevelSequence");

	Params::TLCustomSceneControlActor_IsPlayingLevelSequence Parms{};

	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCustomSceneControlActor.OnCameraTransitionComplete
// (Native, Public)

void ATLCustomSceneControlActor::OnCameraTransitionComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "OnCameraTransitionComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.OnCustomCameraActivated
// (Event, Public, BlueprintEvent)

void ATLCustomSceneControlActor::OnCustomCameraActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "OnCustomCameraActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLCustomSceneControlActor.OnCutsceneStopped_Cleanup
// (Final, Native, Protected)

void ATLCustomSceneControlActor::OnCutsceneStopped_Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "OnCutsceneStopped_Cleanup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.OnStartScene
// (Event, Protected, BlueprintEvent)

void ATLCustomSceneControlActor::OnStartScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "OnStartScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLCustomSceneControlActor.OnStopScene
// (Event, Protected, BlueprintEvent)

void ATLCustomSceneControlActor::OnStopScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "OnStopScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLCustomSceneControlActor.PlayLevelSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSkippable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAtCurrentPOV                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPauseAtEnd                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequencePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSequencePlayer* ATLCustomSceneControlActor::PlayLevelSequence(class FName InKey, class ULevelSequence* InSequence, bool bLoop, bool bIsSkippable, bool bAtCurrentPOV, bool bPauseAtEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "PlayLevelSequence");

	Params::TLCustomSceneControlActor_PlayLevelSequence Parms{};

	Parms.InKey = InKey;
	Parms.InSequence = InSequence;
	Parms.bLoop = bLoop;
	Parms.bIsSkippable = bIsSkippable;
	Parms.bAtCurrentPOV = bAtCurrentPOV;
	Parms.bPauseAtEnd = bPauseAtEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCustomSceneControlActor.PlayLevelSequenceWithDynamicStopCallback
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InGroupKey                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnStop                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bIsSkippable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAtCurrentPOV                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequencePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSequencePlayer* ATLCustomSceneControlActor::PlayLevelSequenceWithDynamicStopCallback(class FName InGroupKey, class ULevelSequence* InSequence, const TDelegate<void()>& OnStop, bool bIsSkippable, bool bAtCurrentPOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "PlayLevelSequenceWithDynamicStopCallback");

	Params::TLCustomSceneControlActor_PlayLevelSequenceWithDynamicStopCallback Parms{};

	Parms.InGroupKey = InGroupKey;
	Parms.InSequence = InSequence;
	Parms.OnStop = OnStop;
	Parms.bIsSkippable = bIsSkippable;
	Parms.bAtCurrentPOV = bAtCurrentPOV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCustomSceneControlActor.PlayLevelSequenceWithStopCallback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InGroupKey                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   InSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InFunctionName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSkippable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAtCurrentPOV                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequencePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSequencePlayer* ATLCustomSceneControlActor::PlayLevelSequenceWithStopCallback(class FName InGroupKey, class ULevelSequence* InSequence, class FName InFunctionName, bool bLoop, bool bIsSkippable, bool bAtCurrentPOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "PlayLevelSequenceWithStopCallback");

	Params::TLCustomSceneControlActor_PlayLevelSequenceWithStopCallback Parms{};

	Parms.InGroupKey = InGroupKey;
	Parms.InSequence = InSequence;
	Parms.InFunctionName = InFunctionName;
	Parms.bLoop = bLoop;
	Parms.bIsSkippable = bIsSkippable;
	Parms.bAtCurrentPOV = bAtCurrentPOV;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCustomSceneControlActor.PlaySceneContiByModelIndex
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   TargetModelIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  InSceneContiPath                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMaintainCurrentSCT                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForcePlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::PlaySceneContiByModelIndex(int32 TargetModelIndex, const struct FSoftObjectPath& InSceneContiPath, bool bMaintainCurrentSCT, bool bForcePlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "PlaySceneContiByModelIndex");

	Params::TLCustomSceneControlActor_PlaySceneContiByModelIndex Parms{};

	Parms.TargetModelIndex = TargetModelIndex;
	Parms.InSceneContiPath = std::move(InSceneContiPath);
	Parms.bMaintainCurrentSCT = bMaintainCurrentSCT;
	Parms.bForcePlay = bForcePlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.PlaySceneContiByModelTag
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             TargetModelTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  InSceneContiPath                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMaintainCurrentSCT                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForcePlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::PlaySceneContiByModelTag(class FName TargetModelTag, const struct FSoftObjectPath& InSceneContiPath, bool bMaintainCurrentSCT, bool bForcePlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "PlaySceneContiByModelTag");

	Params::TLCustomSceneControlActor_PlaySceneContiByModelTag Parms{};

	Parms.TargetModelTag = TargetModelTag;
	Parms.InSceneContiPath = std::move(InSceneContiPath);
	Parms.bMaintainCurrentSCT = bMaintainCurrentSCT;
	Parms.bForcePlay = bForcePlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ResetCustomCameraTargetObject
// (Final, Native, Public, BlueprintCallable)

void ATLCustomSceneControlActor::ResetCustomCameraTargetObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ResetCustomCameraTargetObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ResetCustomSceneCameraModelRotation
// (Final, Native, Public, BlueprintCallable)

void ATLCustomSceneControlActor::ResetCustomSceneCameraModelRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ResetCustomSceneCameraModelRotation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.SetCameraPreviewMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPreviewCameraMode                      InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::SetCameraPreviewMode(EPreviewCameraMode InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "SetCameraPreviewMode");

	Params::TLCustomSceneControlActor_SetCameraPreviewMode Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.SetCameraRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         CameraRotation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::SetCameraRotation(const struct FRotator& CameraRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "SetCameraRotation");

	Params::TLCustomSceneControlActor_SetCameraRotation Parms{};

	Parms.CameraRotation = std::move(CameraRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.SetHiddenState
// (Final, Native, Public, BlueprintCallable)

void ATLCustomSceneControlActor::SetHiddenState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "SetHiddenState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.SetMapRoom
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::SetMapRoom(class FName InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "SetMapRoom");

	Params::TLCustomSceneControlActor_SetMapRoom Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.SetModelRotationOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         InOffsetRotation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::SetModelRotationOffset(const struct FRotator& InOffsetRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "SetModelRotationOffset");

	Params::TLCustomSceneControlActor_SetModelRotationOffset Parms{};

	Parms.InOffsetRotation = std::move(InOffsetRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.ShowUIAll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::ShowUIAll(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "ShowUIAll");

	Params::TLCustomSceneControlActor_ShowUIAll Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.SpawnDomeActor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>               InDomeActorClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::SpawnDomeActor(TSubclassOf<class AActor> InDomeActorClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "SpawnDomeActor");

	Params::TLCustomSceneControlActor_SpawnDomeActor Parms{};

	Parms.InDomeActorClass = InDomeActorClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.SpawnSceneActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           ActorClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TagID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* ATLCustomSceneControlActor::SpawnSceneActor(class UClass* ActorClass, class FName TagID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "SpawnSceneActor");

	Params::TLCustomSceneControlActor_SpawnSceneActor Parms{};

	Parms.ActorClass = ActorClass;
	Parms.TagID = TagID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCustomSceneControlActor.StopAllLevelSequence
// (Final, Native, Public, BlueprintCallable)

void ATLCustomSceneControlActor::StopAllLevelSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "StopAllLevelSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.StopCurrentScene
// (Final, Native, Public, BlueprintCallable)

void ATLCustomSceneControlActor::StopCurrentScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "StopCurrentScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.StopLevelSequence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomSceneControlActor::StopLevelSequence(class FName InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "StopLevelSequence");

	Params::TLCustomSceneControlActor_StopLevelSequence Parms{};

	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomSceneControlActor.StopScene
// (Final, Native, Public, BlueprintCallable)

void ATLCustomSceneControlActor::StopScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomSceneControlActor", "StopScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetDynamicEventListText.OnUpdateInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLDEEventEffectStorePointState         StorePointState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTopPlayer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventListText::OnUpdateInfo(ETLDEEventEffectStorePointState StorePointState, bool bTopPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventListText", "OnUpdateInfo");

	Params::TLUserWidgetDynamicEventListText_OnUpdateInfo Parms{};

	Parms.StorePointState = StorePointState;
	Parms.bTopPlayer = bTopPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractBoard.OnUpdateRefreshContractList
// (Event, Protected, BlueprintEvent)
// Parameters:
// EContractRefreshListReason              InContractRefreshListReason                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractBoard::OnUpdateRefreshContractList(EContractRefreshListReason InContractRefreshListReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractBoard", "OnUpdateRefreshContractList");

	Params::TLUserWidgetContractBoard_OnUpdateRefreshContractList Parms{};

	Parms.InContractRefreshListReason = InContractRefreshListReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetShopPrice.GetMoneyType
// (Final, Native, Public)
// Parameters:
// EMoneyType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMoneyType UTLUserWidgetShopPrice::GetMoneyType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShopPrice", "GetMoneyType");

	Params::TLUserWidgetShopPrice_GetMoneyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetShopPrice.GetPrice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTLUserWidgetShopPrice::GetPrice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShopPrice", "GetPrice");

	Params::TLUserWidgetShopPrice_GetPrice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetShopPrice.SetEnoughCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnoughCost                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetShopPrice::SetEnoughCost(bool bInEnoughCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShopPrice", "SetEnoughCost");

	Params::TLUserWidgetShopPrice_SetEnoughCost Parms{};

	Parms.bInEnoughCost = bInEnoughCost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetDiscountShopPrice.OnDiscount
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsDiscount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDiscountShopPrice::OnDiscount(bool InIsDiscount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDiscountShopPrice", "OnDiscount");

	Params::TLUserWidgetDiscountShopPrice_OnDiscount Parms{};

	Parms.InIsDiscount = InIsDiscount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOptionGameValue.LinkGameValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InGameValueFullName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGameValue::LinkGameValue(class FName InGameValueFullName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValue", "LinkGameValue");

	Params::TLUserWidgetOptionGameValue_LinkGameValue Parms{};

	Parms.InGameValueFullName = InGameValueFullName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueBool2Button.HandleButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueBool2Button::HandleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueBool2Button", "HandleButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueBool2Button.HandleButtonOffChecked
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGameValueBool2Button::HandleButtonOffChecked(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueBool2Button", "HandleButtonOffChecked");

	Params::TLUserWidgetOptionGameValueBool2Button_HandleButtonOffChecked Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueBool2Button.HandleButtonOnChecked
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGameValueBool2Button::HandleButtonOnChecked(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueBool2Button", "HandleButtonOnChecked");

	Params::TLUserWidgetOptionGameValueBool2Button_HandleButtonOnChecked Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractListItem.OnBinding
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractListItem::OnBinding(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractListItem", "OnBinding");

	Params::TLUserWidgetContractListItem_OnBinding Parms{};

	Parms.InObject = InObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractListItem.OnMembershipActivate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsActivate                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractListItem::OnMembershipActivate(bool bInIsActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractListItem", "OnMembershipActivate");

	Params::TLUserWidgetContractListItem_OnMembershipActivate Parms{};

	Parms.bInIsActivate = bInIsActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractListItem.OnUpdateContractType
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetContractListItem::OnUpdateContractType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractListItem", "OnUpdateContractType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlotContextMenu.GetContextMenuWidget
// (Final, Native, Private)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UTLUserWidgetItemSlotContextMenu::GetContextMenuWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlotContextMenu", "GetContextMenuWidget");

	Params::TLUserWidgetItemSlotContextMenu_GetContextMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemSlotContextMenu.SetMenuAnchor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLMenuAnchor*                    InMenuAnchor                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlotContextMenu::SetMenuAnchor(class UTLMenuAnchor* InMenuAnchor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlotContextMenu", "SetMenuAnchor");

	Params::TLUserWidgetItemSlotContextMenu_SetMenuAnchor Parms{};

	Parms.InMenuAnchor = InMenuAnchor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetEnchantTransferStatInfo.EventChangeFlow
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferFlow                  InNewFlow                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLEnchantTransferFlow                  InPrevFlow                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferStatInfo::EventChangeFlow(const ETLEnchantTransferFlow InNewFlow, const ETLEnchantTransferFlow InPrevFlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferStatInfo", "EventChangeFlow");

	Params::TLUserWidgetEnchantTransferStatInfo_EventChangeFlow Parms{};

	Parms.InNewFlow = InNewFlow;
	Parms.InPrevFlow = InPrevFlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferStatInfo.EventEnchantTransferResult
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferResult                InResult                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLevelChange                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferStatInfo::EventEnchantTransferResult(const ETLEnchantTransferResult InResult, const bool bInLevelChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferStatInfo", "EventEnchantTransferResult");

	Params::TLUserWidgetEnchantTransferStatInfo_EventEnchantTransferResult Parms{};

	Parms.InResult = InResult;
	Parms.bInLevelChange = bInLevelChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferStatInfo.EventMaterialItemChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InNewItemID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InPrevItemID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferStatInfo::EventMaterialItemChange(const uint64 InNewItemID, const uint64 InPrevItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferStatInfo", "EventMaterialItemChange");

	Params::TLUserWidgetEnchantTransferStatInfo_EventMaterialItemChange Parms{};

	Parms.InNewItemID = InNewItemID;
	Parms.InPrevItemID = InPrevItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferStatInfo.EventProgressActionEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferProgressActionEvent   InEvent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferStatInfo::EventProgressActionEvent(const ETLEnchantTransferProgressActionEvent InEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferStatInfo", "EventProgressActionEvent");

	Params::TLUserWidgetEnchantTransferStatInfo_EventProgressActionEvent Parms{};

	Parms.InEvent = InEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferStatInfo.EventTargetItemChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InNewItemID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InPrevItemID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferStatInfo::EventTargetItemChange(const uint64 InNewItemID, const uint64 InPrevItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferStatInfo", "EventTargetItemChange");

	Params::TLUserWidgetEnchantTransferStatInfo_EventTargetItemChange Parms{};

	Parms.InNewItemID = InNewItemID;
	Parms.InPrevItemID = InPrevItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferStatInfo.OnShowOnlyDefaultStat
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInShowOnlyDefaultStat                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferStatInfo::OnShowOnlyDefaultStat(bool bInShowOnlyDefaultStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferStatInfo", "OnShowOnlyDefaultStat");

	Params::TLUserWidgetEnchantTransferStatInfo_OnShowOnlyDefaultStat Parms{};

	Parms.bInShowOnlyDefaultStat = bInShowOnlyDefaultStat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMatchingSelectPopup.OnChangeUIPlatformImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLUIPlatform                           InPlatform                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMatchingSelectPopup::OnChangeUIPlatformImpl(ETLUIPlatform InPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingSelectPopup", "OnChangeUIPlatformImpl");

	Params::TLUserWidgetPartyMatchingSelectPopup_OnChangeUIPlatformImpl Parms{};

	Parms.InPlatform = InPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRestorationConfirm.OnHintRestorationCount
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   FreeCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CostCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRestorationConfirm::OnHintRestorationCount(int32 FreeCount, int32 CostCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRestorationConfirm", "OnHintRestorationCount");

	Params::TLUserWidgetRestorationConfirm_OnHintRestorationCount Parms{};

	Parms.FreeCount = FreeCount;
	Parms.CostCount = CostCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLSkillObject.IsEnchantNoneType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLSkillObject::IsEnchantNoneType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSkillObject", "IsEnchantNoneType");

	Params::TLSkillObject_IsEnchantNoneType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemPackageResultSlot.OnItemNameUpdate
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetItemPackageResultSlot::OnItemNameUpdate(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemPackageResultSlot", "OnItemNameUpdate");

	Params::TLUserWidgetItemPackageResultSlot_OnItemNameUpdate Parms{};

	Parms.InName = std::move(InName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLWidgetConsole.ChangeActionGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLUserWidgetActionGuide*         InActionGuide                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLWidgetConsole::ChangeActionGuide(class UTLUserWidgetActionGuide* InActionGuide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLWidgetConsole", "ChangeActionGuide");

	Params::TLWidgetConsole_ChangeActionGuide Parms{};

	Parms.InActionGuide = InActionGuide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLWidgetConsole.OnConstructEvent
// (Event, Public, BlueprintEvent)

void UTLWidgetConsole::OnConstructEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLWidgetConsole", "OnConstructEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLWidgetConsole.OnHideEvent
// (Event, Public, BlueprintEvent)

void UTLWidgetConsole::OnHideEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLWidgetConsole", "OnHideEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLWidgetConsole.OnShowEvent
// (Event, Public, BlueprintEvent)

void UTLWidgetConsole::OnShowEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLWidgetConsole", "OnShowEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLWidgetConsole.SetContentsWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLUserWidgetTopLevel*            InContentsWidget                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLWidgetConsole::SetContentsWidget(class UTLUserWidgetTopLevel* InContentsWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLWidgetConsole", "SetContentsWidget");

	Params::TLWidgetConsole_SetContentsWidget Parms{};

	Parms.InContentsWidget = InContentsWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInteractableMark.OnCastingEnd
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECastingEndReason                       CastingEndReason                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInMyPcCasting                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShowCooperateNum                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInteractableMark::OnCastingEnd(ECastingEndReason CastingEndReason, const bool bInMyPcCasting, const bool bInShowCooperateNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInteractableMark", "OnCastingEnd");

	Params::TLUserWidgetInteractableMark_OnCastingEnd Parms{};

	Parms.CastingEndReason = CastingEndReason;
	Parms.bInMyPcCasting = bInMyPcCasting;
	Parms.bInShowCooperateNum = bInShowCooperateNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInteractableMark.OnCastingStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInMyPcCasting                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInCooperative                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShowCooperateNum                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInteractableMark::OnCastingStart(const bool bInMyPcCasting, const bool bInCooperative, const bool bInShowCooperateNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInteractableMark", "OnCastingStart");

	Params::TLUserWidgetInteractableMark_OnCastingStart Parms{};

	Parms.bInMyPcCasting = bInMyPcCasting;
	Parms.bInCooperative = bInCooperative;
	Parms.bInShowCooperateNum = bInShowCooperateNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInteractableMark.OnHideKeyIcon
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInteractableMark::OnHideKeyIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInteractableMark", "OnHideKeyIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInteractableMark.OnHideMainActionIcon
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInteractableMark::OnHideMainActionIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInteractableMark", "OnHideMainActionIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInteractableMark.OnShowDisableIcon
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInteractableMark::OnShowDisableIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInteractableMark", "OnShowDisableIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInteractableMark.OnShowEnableIcon
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInteractableMark::OnShowEnableIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInteractableMark", "OnShowEnableIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInteractableMark.OnShowKeyIcon
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInteractableMark::OnShowKeyIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInteractableMark", "OnShowKeyIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInteractableMark.OnShowMainActionIcon
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInteractableMark::OnShowMainActionIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInteractableMark", "OnShowMainActionIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCustomizeFileBrowserSlot.OnSavedFileObjectSelect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bImmediately                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeFileBrowserSlot::OnSavedFileObjectSelect(bool bSelected, bool bImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeFileBrowserSlot", "OnSavedFileObjectSelect");

	Params::TLUserWidgetCustomizeFileBrowserSlot_OnSavedFileObjectSelect Parms{};

	Parms.bSelected = bSelected;
	Parms.bImmediately = bImmediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.LEWidgetBPLibrary.GetFPS
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ULEWidgetBPLibrary::GetFPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LEWidgetBPLibrary", "GetFPS");

	Params::LEWidgetBPLibrary_GetFPS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTimelineSceneManager.HandleChangeMapId
// (Final, Native, Private)

void UTLTimelineSceneManager::HandleChangeMapId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTimelineSceneManager", "HandleChangeMapId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTimelineSceneManager.HandleChangeMapRegionType
// (Final, Native, Private)
// Parameters:
// EMapRegionType                          InMapRegionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTimelineSceneManager::HandleChangeMapRegionType(EMapRegionType InMapRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTimelineSceneManager", "HandleChangeMapRegionType");

	Params::TLTimelineSceneManager_HandleChangeMapRegionType Parms{};

	Parms.InMapRegionType = InMapRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCodexCollectionBook.OnCompleteBookEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCollectedComplete                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexCollectionBook::OnCompleteBookEvent(bool bCollectedComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCollectionBook", "OnCompleteBookEvent");

	Params::TLUserWidgetCodexCollectionBook_OnCompleteBookEvent Parms{};

	Parms.bCollectedComplete = bCollectedComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitMaterialStat.OnMatchingStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsMatching                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitMaterialStat::OnMatchingStat(bool InIsMatching)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitMaterialStat", "OnMatchingStat");

	Params::TLUserWidgetItemTraitMaterialStat_OnMatchingStat Parms{};

	Parms.InIsMatching = InIsMatching;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipLevelStatInfo.OnUnlock
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InUnlock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipLevelStatInfo::OnUnlock(bool InUnlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipLevelStatInfo", "OnUnlock");

	Params::TLUserWidgetItemTooltipLevelStatInfo_OnUnlock Parms{};

	Parms.InUnlock = InUnlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipLevelStatInfo.OnUpdateCompareDelete
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTooltipLevelStatInfo::OnUpdateCompareDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipLevelStatInfo", "OnUpdateCompareDelete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTooltipLevelStatInfo.OnUpdateCompareNew
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTooltipLevelStatInfo::OnUpdateCompareNew()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipLevelStatInfo", "OnUpdateCompareNew");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTooltipLevelStatInfo.OnUpdateNoDiff
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTooltipLevelStatInfo::OnUpdateNoDiff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipLevelStatInfo", "OnUpdateNoDiff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTooltipLevelStatInfo.OnUpdateValueDiff
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InValueText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bInUpImage                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInUpColor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipLevelStatInfo::OnUpdateValueDiff(const class FText& InValueText, bool bInUpImage, bool bInUpColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipLevelStatInfo", "OnUpdateValueDiff");

	Params::TLUserWidgetItemTooltipLevelStatInfo_OnUpdateValueDiff Parms{};

	Parms.InValueText = std::move(InValueText);
	Parms.bInUpImage = bInUpImage;
	Parms.bInUpColor = bInUpColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCoupon.HandleCouponInputTextChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetCoupon::HandleCouponInputTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCoupon", "HandleCouponInputTextChanged");

	Params::TLUserWidgetCoupon_HandleCouponInputTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCoupon.HandleCouponInputTextCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCoupon::HandleCouponInputTextCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCoupon", "HandleCouponInputTextCommitted");

	Params::TLUserWidgetCoupon_HandleCouponInputTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventoryWindow.ToggleItemRubbing
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetInventoryWindow::ToggleItemRubbing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryWindow", "ToggleItemRubbing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventoryWindow.ToggleUIDecompose
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetInventoryWindow::ToggleUIDecompose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryWindow", "ToggleUIDecompose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventoryWindow.ToggleUIDestroy
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetInventoryWindow::ToggleUIDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryWindow", "ToggleUIDestroy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventoryWindow.ToggleUIEnchant
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetInventoryWindow::ToggleUIEnchant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryWindow", "ToggleUIEnchant");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventoryWindow.ToggleUIItemCollection
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetInventoryWindow::ToggleUIItemCollection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryWindow", "ToggleUIItemCollection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventoryWindow.ToggleUIItemTraitExtract
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetInventoryWindow::ToggleUIItemTraitExtract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryWindow", "ToggleUIItemTraitExtract");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventoryWindow.ToggleUIRuneFrame
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetInventoryWindow::ToggleUIRuneFrame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryWindow", "ToggleUIRuneFrame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSlider.HandleMouseCaptureBegin
// (Native, Protected)

void UTLUserWidgetSlider::HandleMouseCaptureBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlider", "HandleMouseCaptureBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSlider.HandleMouseCaptureEnd
// (Native, Protected)

void UTLUserWidgetSlider::HandleMouseCaptureEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlider", "HandleMouseCaptureEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSlider.HandleValueChanged
// (Native, Protected)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSlider::HandleValueChanged(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlider", "HandleValueChanged");

	Params::TLUserWidgetSlider_HandleValueChanged Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSlider.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSlider::SetValue(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlider", "SetValue");

	Params::TLUserWidgetSlider_SetValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSlider.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLUserWidgetSlider::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlider", "GetValue");

	Params::TLUserWidgetSlider_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetCraftingDetailPanel.OnGoToParentRecipe
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingDetailPanel::OnGoToParentRecipe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingDetailPanel", "OnGoToParentRecipe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingDetailPanel.OnResultItemGrade
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemGrade                              InItemGrade                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingDetailPanel::OnResultItemGrade(EItemGrade InItemGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingDetailPanel", "OnResultItemGrade");

	Params::TLUserWidgetCraftingDetailPanel_OnResultItemGrade Parms{};

	Parms.InItemGrade = InItemGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLAlchemySceneControlActor.OnPlayIdle
// (Event, Protected, BlueprintEvent)

void ATLAlchemySceneControlActor::OnPlayIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLAlchemySceneControlActor", "OnPlayIdle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLAlchemySceneControlActor.OnResult
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLAlchemySceneGradeType                InResultType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLAlchemySceneControlActor::OnResult(const ETLAlchemySceneGradeType InResultType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLAlchemySceneControlActor", "OnResult");

	Params::TLAlchemySceneControlActor_OnResult Parms{};

	Parms.InResultType = InResultType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLAlchemySceneControlActor.OnShowTransmuteResult
// (Final, Native, Protected, BlueprintCallable)

void ATLAlchemySceneControlActor::OnShowTransmuteResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLAlchemySceneControlActor", "OnShowTransmuteResult");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRuneStatInfoListSlot.OnNegativeStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsNegativeStat                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneStatInfoListSlot::OnNegativeStat(bool InIsNegativeStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneStatInfoListSlot", "OnNegativeStat");

	Params::TLUserWidgetRuneStatInfoListSlot_OnNegativeStat Parms{};

	Parms.InIsNegativeStat = InIsNegativeStat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleTargetScan.OnDimmedByTargetMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDimmed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleTargetScan::OnDimmedByTargetMode(bool bDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleTargetScan", "OnDimmedByTargetMode");

	Params::TLUserWidgetConsoleTargetScan_OnDimmedByTargetMode Parms{};

	Parms.bDimmed = bDimmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleTargetScan.OnToggleUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InOn                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleTargetScan::OnToggleUI(const bool InOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleTargetScan", "OnToggleUI");

	Params::TLUserWidgetConsoleTargetScan_OnToggleUI Parms{};

	Parms.InOn = InOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInfinityDungeonTabButton.OnDungeonState
// (Event, Public, BlueprintEvent)
// Parameters:
// EInfinityDungeonState                   InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInfinityDungeonTabButton::OnDungeonState(EInfinityDungeonState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInfinityDungeonTabButton", "OnDungeonState");

	Params::TLUserWidgetInfinityDungeonTabButton_OnDungeonState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOptionGroupListItem.CheckBox_OnCheckStateChanged
// (Final, Native, Public)
// Parameters:
// bool                                    IsChecked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGroupListItem::CheckBox_OnCheckStateChanged(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGroupListItem", "CheckBox_OnCheckStateChanged");

	Params::TLUserWidgetOptionGroupListItem_CheckBox_OnCheckStateChanged Parms{};

	Parms.IsChecked = IsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetExploreChart.OnGroupBackgroundEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InbCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreChart::OnGroupBackgroundEvent(bool InbCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreChart", "OnGroupBackgroundEvent");

	Params::TLUserWidgetExploreChart_OnGroupBackgroundEvent Parms{};

	Parms.InbCompleted = InbCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreChart.OnUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreChart::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreChart", "OnUnLockMemorial");

	Params::TLUserWidgetExploreChart_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsAlarmRewardDetail.HandleClickedReward
// (Final, Native, Public)

void UTLUserWidgetContentsAlarmRewardDetail::HandleClickedReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmRewardDetail", "HandleClickedReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsAlarmRewardDetail.OnCompleteEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetContentsAlarmRewardDetail::OnCompleteEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmRewardDetail", "OnCompleteEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContentsAlarmRewardDetail.OnUpdateAlarmType
// (Event, Public, BlueprintEvent)
// Parameters:
// EContentsAlarmType                      InViewType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsAlarmRewardDetail::OnUpdateAlarmType(EContentsAlarmType InViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmRewardDetail", "OnUpdateAlarmType");

	Params::TLUserWidgetContentsAlarmRewardDetail_OnUpdateAlarmType Parms{};

	Parms.InViewType = InViewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLTutorialConditionObjectHandler.GetContractBmAcceptableCount
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLTutorialConditionObjectHandler::GetContractBmAcceptableCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "GetContractBmAcceptableCount");

	Params::TLTutorialConditionObjectHandler_GetContractBmAcceptableCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.GetContractNpcAcceptableCount
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLTutorialConditionObjectHandler::GetContractNpcAcceptableCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "GetContractNpcAcceptableCount");

	Params::TLTutorialConditionObjectHandler_GetContractNpcAcceptableCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.GetEnchantTabIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLTutorialConditionObjectHandler::GetEnchantTabIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "GetEnchantTabIndex");

	Params::TLTutorialConditionObjectHandler_GetEnchantTabIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.GetPartyDungeonTabIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLTutorialConditionObjectHandler::GetPartyDungeonTabIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "GetPartyDungeonTabIndex");

	Params::TLTutorialConditionObjectHandler_GetPartyDungeonTabIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.GetPlayerLevel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLTutorialConditionObjectHandler::GetPlayerLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "GetPlayerLevel");

	Params::TLTutorialConditionObjectHandler_GetPlayerLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.GetSkillTabIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLTutorialConditionObjectHandler::GetSkillTabIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "GetSkillTabIndex");

	Params::TLTutorialConditionObjectHandler_GetSkillTabIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsActionCameraMode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsActionCameraMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsActionCameraMode");

	Params::TLTutorialConditionObjectHandler_IsActionCameraMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsActiveSkillProgressable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsActiveSkillProgressable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsActiveSkillProgressable");

	Params::TLTutorialConditionObjectHandler_IsActiveSkillProgressable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsCheckCurrentMapId
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InMapId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsCheckCurrentMapId(int32 InMapId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsCheckCurrentMapId");

	Params::TLTutorialConditionObjectHandler_IsCheckCurrentMapId Parms{};

	Parms.InMapId = InMapId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsCompleteAchievement
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InGuid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsCompleteAchievement(class FName InGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsCompleteAchievement");

	Params::TLTutorialConditionObjectHandler_IsCompleteAchievement Parms{};

	Parms.InGuid = InGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsEnteredContentsVolume
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InEventName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsEnteredContentsVolume(class FName InEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsEnteredContentsVolume");

	Params::TLTutorialConditionObjectHandler_IsEnteredContentsVolume Parms{};

	Parms.InEventName = InEventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsEqualName
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InName1                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InName2                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsEqualName(class FName InName1, class FName InName2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsEqualName");

	Params::TLTutorialConditionObjectHandler_IsEqualName Parms{};

	Parms.InName1 = InName1;
	Parms.InName2 = InName2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsExistEnchantMaterialInventory
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsExistEnchantMaterialInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsExistEnchantMaterialInventory");

	Params::TLTutorialConditionObjectHandler_IsExistEnchantMaterialInventory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsExistTraitMaterial
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsExistTraitMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsExistTraitMaterial");

	Params::TLTutorialConditionObjectHandler_IsExistTraitMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsExistTransferMaterial
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsExistTransferMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsExistTransferMaterial");

	Params::TLTutorialConditionObjectHandler_IsExistTransferMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsMagicDollExpeditionRewardable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsMagicDollExpeditionRewardable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsMagicDollExpeditionRewardable");

	Params::TLTutorialConditionObjectHandler_IsMagicDollExpeditionRewardable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsPassiveSkillProgressable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsPassiveSkillProgressable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsPassiveSkillProgressable");

	Params::TLTutorialConditionObjectHandler_IsPassiveSkillProgressable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsSeasonRewardable
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsSeasonRewardable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsSeasonRewardable");

	Params::TLTutorialConditionObjectHandler_IsSeasonRewardable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsTimeDay
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsTimeDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsTimeDay");

	Params::TLTutorialConditionObjectHandler_IsTimeDay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.PlayTutorialInteractionCameraByID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCamPresetID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InTargetID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInHideHUD                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObjectHandler::PlayTutorialInteractionCameraByID(class FName InTutorialId, class FName InCamPresetID, int32 InTargetID, float InDuration, bool bInHideHUD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "PlayTutorialInteractionCameraByID");

	Params::TLTutorialConditionObjectHandler_PlayTutorialInteractionCameraByID Parms{};

	Parms.InTutorialId = InTutorialId;
	Parms.InCamPresetID = InCamPresetID;
	Parms.InTargetID = InTargetID;
	Parms.InDuration = InDuration;
	Parms.bInHideHUD = bInHideHUD;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObjectHandler.ShowSystemMessageGuideByID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObjectHandler::ShowSystemMessageGuideByID(class FName InTutorialId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "ShowSystemMessageGuideByID");

	Params::TLTutorialConditionObjectHandler_ShowSystemMessageGuideByID Parms{};

	Parms.InTutorialId = InTutorialId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObjectHandler.GetStorageCountSize
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Count                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObjectHandler::GetStorageCountSize(int32* Count, int32* Size) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "GetStorageCountSize");

	Params::TLTutorialConditionObjectHandler_GetStorageCountSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Count != nullptr)
		*Count = Parms.Count;

	if (Size != nullptr)
		*Size = Parms.Size;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsAttainedCode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InGuid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsAttainedCode(class FName InGuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsAttainedCode");

	Params::TLTutorialConditionObjectHandler_IsAttainedCode Parms{};

	Parms.InGuid = InGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsAttainedObjective
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InGuid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsAttainedObjective(class FName InGuid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsAttainedObjective");

	Params::TLTutorialConditionObjectHandler_IsAttainedObjective Parms{};

	Parms.InGuid = InGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObjectHandler.IsTutorialComplete
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObjectHandler::IsTutorialComplete(class FName InTutorialId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObjectHandler", "IsTutorialComplete");

	Params::TLTutorialConditionObjectHandler_IsTutorialComplete Parms{};

	Parms.InTutorialId = InTutorialId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCustomizeSceneControlActor.PlayCustomizeLightSequence
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomizeSceneControlActor::PlayCustomizeLightSequence(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomizeSceneControlActor", "PlayCustomizeLightSequence");

	Params::TLCustomizeSceneControlActor_PlayCustomizeLightSequence Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCustomizeSceneControlActor.StopCustomizeCommonActionTree
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             IgnoreGroupName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomizeSceneControlActor::StopCustomizeCommonActionTree(class FName IgnoreGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomizeSceneControlActor", "StopCustomizeCommonActionTree");

	Params::TLCustomizeSceneControlActor_StopCustomizeCommonActionTree Parms{};

	Parms.IgnoreGroupName = IgnoreGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TLClient.TLCustomizeSceneControlActor.TLOnLightSequencePlay__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLCustomizeSceneControlActor::TLOnLightSequencePlay__DelegateSignature(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCustomizeSceneControlActor", "TLOnLightSequencePlay__DelegateSignature");

	Params::TLCustomizeSceneControlActor_TLOnLightSequencePlay__DelegateSignature Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLGameLobbyActor.BlackscreenFadeInFinishCallback
// (Final, Native, Private)

void ATLGameLobbyActor::BlackscreenFadeInFinishCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "BlackscreenFadeInFinishCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobbyActor.ChangeLobbyState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELobbySceneState                        NextState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLLobbyStateChangeReason               InReason                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLGameLobbyActor::ChangeLobbyState(ELobbySceneState NextState, bool bImmediate, ETLLobbyStateChangeReason InReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "ChangeLobbyState");

	Params::TLGameLobbyActor_ChangeLobbyState Parms{};

	Parms.NextState = NextState;
	Parms.bImmediate = bImmediate;
	Parms.InReason = InReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobbyActor.CompleteStateChange
// (Final, Native, Public, BlueprintCallable)

void ATLGameLobbyActor::CompleteStateChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "CompleteStateChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobbyActor.LoadLobbyLevel
// (Final, Native, Public)

void ATLGameLobbyActor::LoadLobbyLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "LoadLobbyLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobbyActor.OnCreditFinishCallback
// (Final, Native, Private)

void ATLGameLobbyActor::OnCreditFinishCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "OnCreditFinishCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobbyActor.OnGameEnterSctFinished
// (Final, Native, Public)

void ATLGameLobbyActor::OnGameEnterSctFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "OnGameEnterSctFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobbyActor.OnLobbyLevelLoaded
// (Final, Native, Private)
// Parameters:
// class FName                             InLevelName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLGameLobbyActor::OnLobbyLevelLoaded(class FName InLevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "OnLobbyLevelLoaded");

	Params::TLGameLobbyActor_OnLobbyLevelLoaded Parms{};

	Parms.InLevelName = InLevelName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobbyActor.OnNightmareCutsceneFinished
// (Final, Native, Public)
// Parameters:
// class FName                             CutSceneID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ExclusiveTag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECutscenePlayResult                     PlayResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLGameLobbyActor::OnNightmareCutsceneFinished(class FName CutSceneID, class FName ExclusiveTag, ECutscenePlayResult PlayResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "OnNightmareCutsceneFinished");

	Params::TLGameLobbyActor_OnNightmareCutsceneFinished Parms{};

	Parms.CutSceneID = CutSceneID;
	Parms.ExclusiveTag = ExclusiveTag;
	Parms.PlayResult = PlayResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobbyActor.PlayCredit
// (Final, Native, Public, BlueprintCallable)

void ATLGameLobbyActor::PlayCredit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "PlayCredit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobbyActor.PlayRealmSelectAT
// (Final, Native, Public)
// Parameters:
// class FName                             InConditionKey                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLGameLobbyActor::PlayRealmSelectAT(class FName InConditionKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "PlayRealmSelectAT");

	Params::TLGameLobbyActor_PlayRealmSelectAT Parms{};

	Parms.InConditionKey = InConditionKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobbyActor.IsPendingEnterNewCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATLGameLobbyActor::IsPendingEnterNewCharacter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobbyActor", "IsPendingEnterNewCharacter");

	Params::TLGameLobbyActor_IsPendingEnterNewCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBeautyshopControlActor.TestSetPolymorphID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPolymorphID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLCharacterGender                      InGender                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLBeautyshopControlActor::TestSetPolymorphID(int32 InPolymorphID, ETLCharacterGender InGender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBeautyshopControlActor", "TestSetPolymorphID");

	Params::TLBeautyshopControlActor_TestSetPolymorphID Parms{};

	Parms.InPolymorphID = InPolymorphID;
	Parms.InGender = InGender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBinkBlueprintLibrary.CanPauseBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::CanPauseBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "CanPauseBink");

	Params::TLBinkBlueprintLibrary_CanPauseBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.CanPlayBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::CanPlayBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "CanPlayBink");

	Params::TLBinkBlueprintLibrary_CanPlayBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.CloseBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::CloseBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "CloseBink");

	Params::TLBinkBlueprintLibrary_CloseBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.CloseUrlBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBinkBlueprintLibrary::CloseUrlBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "CloseUrlBink");

	Params::TLBinkBlueprintLibrary_CloseUrlBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBinkBlueprintLibrary.CreateAndSetBinkMediaPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaTexture*                InTexture                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLooping                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInStartImmediately                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInDelayedOpen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBinkMediaPlayer*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBinkMediaPlayer* UTLBinkBlueprintLibrary::CreateAndSetBinkMediaPlayer(class UBinkMediaTexture* InTexture, const class FString& InUrl, bool bInLooping, bool bInStartImmediately, bool bInDelayedOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "CreateAndSetBinkMediaPlayer");

	Params::TLBinkBlueprintLibrary_CreateAndSetBinkMediaPlayer Parms{};

	Parms.InTexture = InTexture;
	Parms.InUrl = std::move(InUrl);
	Parms.bInLooping = bInLooping;
	Parms.bInStartImmediately = bInStartImmediately;
	Parms.bInDelayedOpen = bInDelayedOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.CreateBinkMediaObject
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 BinkMediaPlayer                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBinkMediaTexture*                BinkMediaTexture                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStartImmediately                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDelayedOpen                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBinkBlueprintLibrary::CreateBinkMediaObject(class UBinkMediaPlayer** BinkMediaPlayer, class UBinkMediaTexture** BinkMediaTexture, const class FString& URL, bool bLooping, bool bStartImmediately, bool bDelayedOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "CreateBinkMediaObject");

	Params::TLBinkBlueprintLibrary_CreateBinkMediaObject Parms{};

	Parms.URL = std::move(URL);
	Parms.bLooping = bLooping;
	Parms.bStartImmediately = bStartImmediately;
	Parms.bDelayedOpen = bDelayedOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BinkMediaPlayer != nullptr)
		*BinkMediaPlayer = Parms.BinkMediaPlayer;

	if (BinkMediaTexture != nullptr)
		*BinkMediaTexture = Parms.BinkMediaTexture;
}


// Function TLClient.TLBinkBlueprintLibrary.CreateBinkMediaObjectFromAsset
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UBinkMediaTexture*                TextureAsset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          Outer_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBinkMediaPlayer*                 BinkMediaPlayer                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBinkMediaTexture*                BinkMediaTexture                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBinkBlueprintLibrary::CreateBinkMediaObjectFromAsset(class UBinkMediaTexture* TextureAsset, class UObject* Outer_0, class UBinkMediaPlayer** BinkMediaPlayer, class UBinkMediaTexture** BinkMediaTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "CreateBinkMediaObjectFromAsset");

	Params::TLBinkBlueprintLibrary_CreateBinkMediaObjectFromAsset Parms{};

	Parms.TextureAsset = TextureAsset;
	Parms.Outer_0 = Outer_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BinkMediaPlayer != nullptr)
		*BinkMediaPlayer = Parms.BinkMediaPlayer;

	if (BinkMediaTexture != nullptr)
		*BinkMediaTexture = Parms.BinkMediaTexture;
}


// Function TLClient.TLBinkBlueprintLibrary.DrawBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Tonemap                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Out_nits                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Srgb_decode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    HDR                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBinkBlueprintLibrary::DrawBink(class UBinkMediaPlayer* InBinkMediaPlayer, class UTexture* Texture, bool Tonemap, int32 Out_nits, float Alpha, bool Srgb_decode, bool HDR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "DrawBink");

	Params::TLBinkBlueprintLibrary_DrawBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;
	Parms.Texture = Texture;
	Parms.Tonemap = Tonemap;
	Parms.Out_nits = Out_nits;
	Parms.Alpha = Alpha;
	Parms.Srgb_decode = Srgb_decode;
	Parms.HDR = HDR;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBinkBlueprintLibrary.GetDurationBink
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UTLBinkBlueprintLibrary::GetDurationBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "GetDurationBink");

	Params::TLBinkBlueprintLibrary_GetDurationBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.GetRateBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLBinkBlueprintLibrary::GetRateBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "GetRateBink");

	Params::TLBinkBlueprintLibrary_GetRateBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.GetTimeBink
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UTLBinkBlueprintLibrary::GetTimeBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "GetTimeBink");

	Params::TLBinkBlueprintLibrary_GetTimeBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.GetUrlBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTLBinkBlueprintLibrary::GetUrlBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "GetUrlBink");

	Params::TLBinkBlueprintLibrary_GetUrlBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.IsLoopingBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::IsLoopingBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "IsLoopingBink");

	Params::TLBinkBlueprintLibrary_IsLoopingBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.IsPausedBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::IsPausedBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "IsPausedBink");

	Params::TLBinkBlueprintLibrary_IsPausedBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.IsPlayingBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::IsPlayingBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "IsPlayingBink");

	Params::TLBinkBlueprintLibrary_IsPlayingBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.IsStoppedBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::IsStoppedBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "IsStoppedBink");

	Params::TLBinkBlueprintLibrary_IsStoppedBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.OpenBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NewUrl                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::OpenBink(class UBinkMediaPlayer* InBinkMediaPlayer, const class FString& NewUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "OpenBink");

	Params::TLBinkBlueprintLibrary_OpenBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;
	Parms.NewUrl = std::move(NewUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.OpenUrlBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NewUrl                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::OpenUrlBink(class UBinkMediaPlayer* InBinkMediaPlayer, const class FString& NewUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "OpenUrlBink");

	Params::TLBinkBlueprintLibrary_OpenUrlBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;
	Parms.NewUrl = std::move(NewUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.PauseBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::PauseBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "PauseBink");

	Params::TLBinkBlueprintLibrary_PauseBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.PlayBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::PlayBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "PlayBink");

	Params::TLBinkBlueprintLibrary_PlayBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.RewindBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::RewindBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "RewindBink");

	Params::TLBinkBlueprintLibrary_RewindBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.SeekBink
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        InTime                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::SeekBink(class UBinkMediaPlayer* InBinkMediaPlayer, const struct FTimespan& InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "SeekBink");

	Params::TLBinkBlueprintLibrary_SeekBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;
	Parms.InTime = std::move(InTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.SetLoopingBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLooping                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::SetLoopingBink(class UBinkMediaPlayer* InBinkMediaPlayer, bool InLooping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "SetLoopingBink");

	Params::TLBinkBlueprintLibrary_SetLoopingBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;
	Parms.InLooping = InLooping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.SetRateBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::SetRateBink(class UBinkMediaPlayer* InBinkMediaPlayer, float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "SetRateBink");

	Params::TLBinkBlueprintLibrary_SetRateBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;
	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.StopBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::StopBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "StopBink");

	Params::TLBinkBlueprintLibrary_StopBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.SupportsRateBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rate                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Unthinned                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::SupportsRateBink(class UBinkMediaPlayer* InBinkMediaPlayer, float Rate, bool Unthinned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "SupportsRateBink");

	Params::TLBinkBlueprintLibrary_SupportsRateBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;
	Parms.Rate = Rate;
	Parms.Unthinned = Unthinned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.SupportsScrubbingBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::SupportsScrubbingBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "SupportsScrubbingBink");

	Params::TLBinkBlueprintLibrary_SupportsScrubbingBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBinkBlueprintLibrary.SupportsSeekingBink
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBinkBlueprintLibrary::SupportsSeekingBink(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBinkBlueprintLibrary", "SupportsSeekingBink");

	Params::TLBinkBlueprintLibrary_SupportsSeekingBink Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.ActivateCustomSceneCamera
// (Final, Native, Static, Public, HasDefaults)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableAdvance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableZoom                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          SceneOrigin                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        CameraCenterOffset                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraDistOffset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::ActivateCustomSceneCamera(class UObject* InWorldContextObject, bool bEnableAdvance, bool bEnableZoom, const struct FVector& SceneOrigin, const struct FVector2D& CameraCenterOffset, float CameraDistOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "ActivateCustomSceneCamera");

	Params::TLBlueprintLibrary_ActivateCustomSceneCamera Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.bEnableAdvance = bEnableAdvance;
	Parms.bEnableZoom = bEnableZoom;
	Parms.SceneOrigin = std::move(SceneOrigin);
	Parms.CameraCenterOffset = std::move(CameraCenterOffset);
	Parms.CameraDistOffset = CameraDistOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.ChangeGameCamera
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWarp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESnCameraType                           InCameraType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::ChangeGameCamera(class UObject* InWorldContextObject, bool bWarp, ESnCameraType InCameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "ChangeGameCamera");

	Params::TLBlueprintLibrary_ChangeGameCamera Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.bWarp = bWarp;
	Parms.InCameraType = InCameraType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.CreateMapEnvironmentAffector
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActivationTag                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverrideBlendDuration                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendInDuration                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnableWind                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AMapEnvironmentAffector*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AMapEnvironmentAffector* UTLBlueprintLibrary::CreateMapEnvironmentAffector(class UObject* InWorldContextObject, class FName ActivationTag, int32 Priority, bool bOverrideBlendDuration, float BlendInDuration, bool bEnableWind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "CreateMapEnvironmentAffector");

	Params::TLBlueprintLibrary_CreateMapEnvironmentAffector Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.ActivationTag = ActivationTag;
	Parms.Priority = Priority;
	Parms.bOverrideBlendDuration = bOverrideBlendDuration;
	Parms.BlendInDuration = BlendInDuration;
	Parms.bEnableWind = bEnableWind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.CreateWidget
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             InUIWidgetBPClass                                      (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UTLUserWidgetFrame* Widget)>InCompleteDel                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ETLUIWidgetAttachTarget                 InAttachTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDetachWithHide                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::CreateWidget(class UObject* InWorldContextObject, TSoftClassPtr<class UClass> InUIWidgetBPClass, const TDelegate<void(class UTLUserWidgetFrame* Widget)>& InCompleteDel, ETLUIWidgetAttachTarget InAttachTarget, bool bDetachWithHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "CreateWidget");

	Params::TLBlueprintLibrary_CreateWidget Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUIWidgetBPClass = InUIWidgetBPClass;
	Parms.InCompleteDel = InCompleteDel;
	Parms.InAttachTarget = InAttachTarget;
	Parms.bDetachWithHide = bDetachWithHide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.CreateWidgets
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TSoftClassPtr<class UClass>>     InUIWidgetBPClass                                      (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<class UTLUserWidgetFrame*>& Widgets)>InCompleteDel                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// ETLUIWidgetAttachTarget                 InAttachTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDetachWithHide                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::CreateWidgets(class UObject* InWorldContextObject, const TArray<TSoftClassPtr<class UClass>>& InUIWidgetBPClass, const TDelegate<void(TArray<class UTLUserWidgetFrame*>& Widgets)>& InCompleteDel, ETLUIWidgetAttachTarget InAttachTarget, bool bDetachWithHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "CreateWidgets");

	Params::TLBlueprintLibrary_CreateWidgets Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUIWidgetBPClass = std::move(InUIWidgetBPClass);
	Parms.InCompleteDel = InCompleteDel;
	Parms.InAttachTarget = InAttachTarget;
	Parms.bDetachWithHide = bDetachWithHide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.ExecuteReservedMagicDollSummon
// (Final, Native, Static, Public, BlueprintCallable)

void UTLBlueprintLibrary::ExecuteReservedMagicDollSummon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "ExecuteReservedMagicDollSummon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.ExistsDataAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDataAsset>           InDataAssetClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::ExistsDataAsset(class UObject* InWorldContextObject, TSubclassOf<class UDataAsset> InDataAssetClass, class FName InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "ExistsDataAsset");

	Params::TLBlueprintLibrary_ExistsDataAsset Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InDataAssetClass = InDataAssetClass;
	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.ForceWeatherTransition
// (Final, Native, Static, Public, BlueprintCallable)

void UTLBlueprintLibrary::ForceWeatherTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "ForceWeatherTransition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.GetAcquiredPolymorphDataList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCombatOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GradeFilterBitFlag                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SpeciesFilter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTLSchemePolymorph>       OutDataList                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::GetAcquiredPolymorphDataList(class UObject* InWorldContextObject, bool bCombatOnly, int32 GradeFilterBitFlag, class FName SpeciesFilter, TArray<struct FTLSchemePolymorph>* OutDataList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetAcquiredPolymorphDataList");

	Params::TLBlueprintLibrary_GetAcquiredPolymorphDataList Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.bCombatOnly = bCombatOnly;
	Parms.GradeFilterBitFlag = GradeFilterBitFlag;
	Parms.SpeciesFilter = SpeciesFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDataList != nullptr)
		*OutDataList = std::move(Parms.OutDataList);
}


// Function TLClient.TLBlueprintLibrary.GetAcquiredPolymorphDataUIDs
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCombatOnly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GradeFilterBitFlag                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SpeciesFilter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UTLBlueprintLibrary::GetAcquiredPolymorphDataUIDs(class UObject* InWorldContextObject, bool bCombatOnly, int32 GradeFilterBitFlag, class FName SpeciesFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetAcquiredPolymorphDataUIDs");

	Params::TLBlueprintLibrary_GetAcquiredPolymorphDataUIDs Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.bCombatOnly = bCombatOnly;
	Parms.GradeFilterBitFlag = GradeFilterBitFlag;
	Parms.SpeciesFilter = SpeciesFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetActionKeyIconMarkup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InActionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTLBlueprintLibrary::GetActionKeyIconMarkup(class UObject* InWorldContextObject, class FName InActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetActionKeyIconMarkup");

	Params::TLBlueprintLibrary_GetActionKeyIconMarkup Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InActionName = InActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetCharacterDeleteRemainTime
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTLCharacterData                 InCharacterData                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLBlueprintLibrary::GetCharacterDeleteRemainTime(const struct FTLCharacterData& InCharacterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetCharacterDeleteRemainTime");

	Params::TLBlueprintLibrary_GetCharacterDeleteRemainTime Parms{};

	Parms.InCharacterData = std::move(InCharacterData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetCustomizeScene
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATLCustomizeSceneControlActor*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATLCustomizeSceneControlActor* UTLBlueprintLibrary::GetCustomizeScene(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetCustomizeScene");

	Params::TLBlueprintLibrary_GetCustomizeScene Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetCustomizeSceneByType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLCustomizeSceneType                   InCustomizeSceneType                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATLCustomizeSceneControlActor*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATLCustomizeSceneControlActor* UTLBlueprintLibrary::GetCustomizeSceneByType(class UObject* InWorldContextObject, ETLCustomizeSceneType InCustomizeSceneType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetCustomizeSceneByType");

	Params::TLBlueprintLibrary_GetCustomizeSceneByType Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InCustomizeSceneType = InCustomizeSceneType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetCustomSceneActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSceneName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATLCustomSceneControlActor*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATLCustomSceneControlActor* UTLBlueprintLibrary::GetCustomSceneActor(class UObject* InWorldContextObject, class FName InSceneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetCustomSceneActor");

	Params::TLBlueprintLibrary_GetCustomSceneActor Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InSceneName = InSceneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetDataAsset
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDataAsset>           DataAssetClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Key                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTableRowBase                    OutData                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::GetDataAsset(class UObject* WorldContextObject, TSubclassOf<class UDataAsset> DataAssetClass, class FName Key, const struct FTableRowBase& OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetDataAsset");

	Params::TLBlueprintLibrary_GetDataAsset Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DataAssetClass = DataAssetClass;
	Parms.Key = Key;
	Parms.OutData = std::move(OutData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetDataAssetUID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDataAsset>           InDataAssetClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutUID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::GetDataAssetUID(class UObject* InWorldContextObject, TSubclassOf<class UDataAsset> InDataAssetClass, class FName InKey, int32* OutUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetDataAssetUID");

	Params::TLBlueprintLibrary_GetDataAssetUID Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InDataAssetClass = InDataAssetClass;
	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUID != nullptr)
		*OutUID = Parms.OutUID;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetFoData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTLInfoFo                        OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::GetFoData(class UObject* InWorldContextObject, class FName InKey, struct FTLInfoFo* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetFoData");

	Params::TLBlueprintLibrary_GetFoData Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetGameCamera
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESnCameraType                           InCameraType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AUnrealCameraActor*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AUnrealCameraActor* UTLBlueprintLibrary::GetGameCamera(class UObject* InWorldContextObject, ESnCameraType InCameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetGameCamera");

	Params::TLBlueprintLibrary_GetGameCamera Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InCameraType = InCameraType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetGameLobby
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLGameLobby*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLGameLobby* UTLBlueprintLibrary::GetGameLobby(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetGameLobby");

	Params::TLBlueprintLibrary_GetGameLobby Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetGameLobbyActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ATLGameLobbyActor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATLGameLobbyActor* UTLBlueprintLibrary::GetGameLobbyActor(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetGameLobbyActor");

	Params::TLBlueprintLibrary_GetGameLobbyActor Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetInGameUIStage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLUIStage                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLUIStage UTLBlueprintLibrary::GetInGameUIStage(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetInGameUIStage");

	Params::TLBlueprintLibrary_GetInGameUIStage Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetLevelSequenceOriginTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ALevelSequenceActor*              InSequenceActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UTLBlueprintLibrary::GetLevelSequenceOriginTransform(class ALevelSequenceActor* InSequenceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetLevelSequenceOriginTransform");

	Params::TLBlueprintLibrary_GetLevelSequenceOriginTransform Parms{};

	Parms.InSequenceActor = InSequenceActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetMyPCActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UTLBlueprintLibrary::GetMyPCActor(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetMyPCActor");

	Params::TLBlueprintLibrary_GetMyPCActor Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetMyPlatformType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPcPlatformType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPcPlatformType UTLBlueprintLibrary::GetMyPlatformType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetMyPlatformType");

	Params::TLBlueprintLibrary_GetMyPlatformType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetNPCData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InKey                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTLInfoNpc                       OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::GetNPCData(class UObject* InWorldContextObject, class FName InKey, struct FTLInfoNpc* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetNPCData");

	Params::TLBlueprintLibrary_GetNPCData Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InKey = InKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetPlayerTransformOrigin
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UTLBlueprintLibrary::GetPlayerTransformOrigin(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetPlayerTransformOrigin");

	Params::TLBlueprintLibrary_GetPlayerTransformOrigin Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetPlayingLevelSequence
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCutSceneID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ALevelSequenceActor*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ALevelSequenceActor* UTLBlueprintLibrary::GetPlayingLevelSequence(class UObject* InWorldContextObject, class FName InCutSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetPlayingLevelSequence");

	Params::TLBlueprintLibrary_GetPlayingLevelSequence Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InCutSceneID = InCutSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetPolymorphDataWithID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InUID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTLSchemePolymorph               OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::GetPolymorphDataWithID(class UObject* InWorldContextObject, int32 InUID, struct FTLSchemePolymorph* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetPolymorphDataWithID");

	Params::TLBlueprintLibrary_GetPolymorphDataWithID Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InUID = InUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);
}


// Function TLClient.TLBlueprintLibrary.GetTextFromTLStringUI
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           InKey                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLBlueprintLibrary::GetTextFromTLStringUI(const class FString& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetTextFromTLStringUI");

	Params::TLBlueprintLibrary_GetTextFromTLStringUI Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetTLGameInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLGameInstance*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLGameInstance* UTLBlueprintLibrary::GetTLGameInstance(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetTLGameInstance");

	Params::TLBlueprintLibrary_GetTLGameInstance Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetUIPlatform
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLUIPlatform                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLUIPlatform UTLBlueprintLibrary::GetUIPlatform(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetUIPlatform");

	Params::TLBlueprintLibrary_GetUIPlatform Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetWeaponCategoryText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponCategory                         InWeaponCategory                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLBlueprintLibrary::GetWeaponCategoryText(class UObject* InWorldContextObject, EWeaponCategory InWeaponCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetWeaponCategoryText");

	Params::TLBlueprintLibrary_GetWeaponCategoryText Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InWeaponCategory = InWeaponCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.GetWidgetFromUIManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InNameKey                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidget*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserWidget* UTLBlueprintLibrary::GetWidgetFromUIManager(class UObject* InWorldContextObject, const class FName InNameKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "GetWidgetFromUIManager");

	Params::TLBlueprintLibrary_GetWidgetFromUIManager Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InNameKey = InNameKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.IsContentsOpen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLContentsOpenType                     InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::IsContentsOpen(class UObject* InWorldContextObject, ETLContentsOpenType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "IsContentsOpen");

	Params::TLBlueprintLibrary_IsContentsOpen Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.IsCrosshairCameraMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::IsCrosshairCameraMode(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "IsCrosshairCameraMode");

	Params::TLBlueprintLibrary_IsCrosshairCameraMode Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.IsShowUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InNameKey                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::IsShowUI(class UObject* InWorldContextObject, const class FName InNameKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "IsShowUI");

	Params::TLBlueprintLibrary_IsShowUI Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InNameKey = InNameKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.IsValidAssetPath
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSoftObjectPath                  SoftObjPath                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::IsValidAssetPath(const struct FSoftObjectPath& SoftObjPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "IsValidAssetPath");

	Params::TLBlueprintLibrary_IsValidAssetPath Parms{};

	Parms.SoftObjPath = std::move(SoftObjPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.MakeAnimationBind
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidgetAnimation*                 InAnimation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTLWidgetAnimationBind           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FTLWidgetAnimationBind UTLBlueprintLibrary::MakeAnimationBind(class UWidgetAnimation* InAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "MakeAnimationBind");

	Params::TLBlueprintLibrary_MakeAnimationBind Parms{};

	Parms.InAnimation = InAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.MakeBrushFromRenderTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*           InRenderTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InWidth                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UTLBlueprintLibrary::MakeBrushFromRenderTarget(class UTextureRenderTarget2D* InRenderTarget, int32 InWidth, int32 InHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "MakeBrushFromRenderTarget");

	Params::TLBlueprintLibrary_MakeBrushFromRenderTarget Parms{};

	Parms.InRenderTarget = InRenderTarget;
	Parms.InWidth = InWidth;
	Parms.InHeight = InHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.OnOpenWayPoint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFogUid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::OnOpenWayPoint(class UObject* InWorldContextObject, int32 InFogUid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "OnOpenWayPoint");

	Params::TLBlueprintLibrary_OnOpenWayPoint Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InFogUid = InFogUid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.PlayCustomScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSceneName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::PlayCustomScene(class UObject* InWorldContextObject, class FName InSceneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "PlayCustomScene");

	Params::TLBlueprintLibrary_PlayCustomScene Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InSceneName = InSceneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.PlayCutscene
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCutSceneID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InExclusiveTag                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InControlUI                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class FName CutSceneID, class FName ExclusiveTag, ECutscenePlayResult PlayResult)>InFinishDel                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bInStopCurrentCutScene                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::PlayCutscene(class UObject* InWorldContextObject, class FName InCutSceneID, class FName InExclusiveTag, bool InControlUI, const TDelegate<void(class FName CutSceneID, class FName ExclusiveTag, ECutscenePlayResult PlayResult)>& InFinishDel, bool bInStopCurrentCutScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "PlayCutscene");

	Params::TLBlueprintLibrary_PlayCutscene Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InCutSceneID = InCutSceneID;
	Parms.InExclusiveTag = InExclusiveTag;
	Parms.InControlUI = InControlUI;
	Parms.InFinishDel = InFinishDel;
	Parms.bInStopCurrentCutScene = bInStopCurrentCutScene;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.PlayScenecontiOnMyPC
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  InSceneContiPath                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::PlayScenecontiOnMyPC(class UObject* InWorldContextObject, const struct FSoftObjectPath& InSceneContiPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "PlayScenecontiOnMyPC");

	Params::TLBlueprintLibrary_PlayScenecontiOnMyPC Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InSceneContiPath = std::move(InSceneContiPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.PlayScenecontiOnMyPCWithScenecontiKey
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  InSceneContiPath                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InScenecontiKey                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::PlayScenecontiOnMyPCWithScenecontiKey(class UObject* InWorldContextObject, const struct FSoftObjectPath& InSceneContiPath, class FName InScenecontiKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "PlayScenecontiOnMyPCWithScenecontiKey");

	Params::TLBlueprintLibrary_PlayScenecontiOnMyPCWithScenecontiKey Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InSceneContiPath = std::move(InSceneContiPath);
	Parms.InScenecontiKey = InScenecontiKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.ReadyToCutsceneWarpReq
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::ReadyToCutsceneWarpReq(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "ReadyToCutsceneWarpReq");

	Params::TLBlueprintLibrary_ReadyToCutsceneWarpReq Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.ReleasePreLoadingLevelSequence
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::ReleasePreLoadingLevelSequence(class UObject* InWorldContextObject, class FName InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "ReleasePreLoadingLevelSequence");

	Params::TLBlueprintLibrary_ReleasePreLoadingLevelSequence Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InTag = InTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.ReplaceAdvancedMarkup
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLBlueprintLibrary::ReplaceAdvancedMarkup(class UObject* InWorldContextObject, const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "ReplaceAdvancedMarkup");

	Params::TLBlueprintLibrary_ReplaceAdvancedMarkup Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.SetContentsEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTLContentsEventParameter        InNewParam                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::SetContentsEvent(class UObject* InWorldContextObject, const struct FTLContentsEventParameter& InNewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "SetContentsEvent");

	Params::TLBlueprintLibrary_SetContentsEvent Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InNewParam = std::move(InNewParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.SetLevelSequenceOriginTransform
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ALevelSequenceActor*              InSequenceActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       InTransform                                            (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::SetLevelSequenceOriginTransform(class ALevelSequenceActor* InSequenceActor, const struct FTransform& InTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "SetLevelSequenceOriginTransform");

	Params::TLBlueprintLibrary_SetLevelSequenceOriginTransform Parms{};

	Parms.InSequenceActor = InSequenceActor;
	Parms.InTransform = std::move(InTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.SetUIVisibleOnCutScene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::SetUIVisibleOnCutScene(class UObject* InWorldContextObject, bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "SetUIVisibleOnCutScene");

	Params::TLBlueprintLibrary_SetUIVisibleOnCutScene Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InVisible = InVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.ShowUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InNameKey                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::ShowUI(class UObject* InWorldContextObject, const class FName InNameKey, bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "ShowUI");

	Params::TLBlueprintLibrary_ShowUI Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InNameKey = InNameKey;
	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.StopCurrentCutscene
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::StopCurrentCutscene(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "StopCurrentCutscene");

	Params::TLBlueprintLibrary_StopCurrentCutscene Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.StopScenecontiOnMyPC
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::StopScenecontiOnMyPC(class UObject* InWorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "StopScenecontiOnMyPC");

	Params::TLBlueprintLibrary_StopScenecontiOnMyPC Parms{};

	Parms.InWorldContextObject = InWorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.StopScenecontiOnMyPCWithScenecontiKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InScenecontiKey                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::StopScenecontiOnMyPCWithScenecontiKey(class UObject* InWorldContextObject, class FName InScenecontiKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "StopScenecontiOnMyPCWithScenecontiKey");

	Params::TLBlueprintLibrary_StopScenecontiOnMyPCWithScenecontiKey Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InScenecontiKey = InScenecontiKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.SyncGameCameraToPOV
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESnCameraType                           InCameraType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::SyncGameCameraToPOV(class UObject* InWorldContextObject, ESnCameraType InCameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "SyncGameCameraToPOV");

	Params::TLBlueprintLibrary_SyncGameCameraToPOV Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InCameraType = InCameraType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.TerminateWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UTLUserWidget*>            InWidgets                                              (Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::TerminateWidget(class UObject* InWorldContextObject, const TArray<class UTLUserWidget*>& InWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "TerminateWidget");

	Params::TLBlueprintLibrary_TerminateWidget Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InWidgets = std::move(InWidgets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBlueprintLibrary.ToggleUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InNameKey                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBlueprintLibrary::ToggleUI(class UObject* InWorldContextObject, const class FName InNameKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "ToggleUI");

	Params::TLBlueprintLibrary_ToggleUI Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InNameKey = InNameKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBlueprintLibrary.TryLookAt
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           InCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InTargetPosition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBlueprintLibrary::TryLookAt(class AActor* InCharacter, const struct FVector& InTargetPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLBlueprintLibrary", "TryLookAt");

	Params::TLBlueprintLibrary_TryLookAt Parms{};

	Parms.InCharacter = InCharacter;
	Parms.InTargetPosition = std::move(InTargetPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsViewer.HandleMinimizeButtonOnCheck
// (Final, Native, Public)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsViewer::HandleMinimizeButtonOnCheck(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsViewer", "HandleMinimizeButtonOnCheck");

	Params::TLUserWidgetContentsViewer_HandleMinimizeButtonOnCheck Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsViewer.OnContentsAlarmOpen
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsViewer::OnContentsAlarmOpen(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsViewer", "OnContentsAlarmOpen");

	Params::TLUserWidgetContentsViewer_OnContentsAlarmOpen Parms{};

	Parms.bIsOpen = bIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsViewer.OnMinimizeEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bMinimize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsViewer::OnMinimizeEvent(bool bMinimize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsViewer", "OnMinimizeEvent");

	Params::TLUserWidgetContentsViewer_OnMinimizeEvent Parms{};

	Parms.bMinimize = bMinimize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsViewer.OnUpdateViewerTabType
// (Event, Public, BlueprintEvent)
// Parameters:
// EContentsAlarmViewerTab                 InTabType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsViewer::OnUpdateViewerTabType(EContentsAlarmViewerTab InTabType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsViewer", "OnUpdateViewerTabType");

	Params::TLUserWidgetContentsViewer_OnUpdateViewerTabType Parms{};

	Parms.InTabType = InTabType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsViewer.OnVisibleGuideEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InParentWidgetNodeName                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowGuideEvent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsViewer::OnVisibleGuideEvent(class FName InParentWidgetNodeName, bool bShowGuideEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsViewer", "OnVisibleGuideEvent");

	Params::TLUserWidgetContentsViewer_OnVisibleGuideEvent Parms{};

	Parms.InParentWidgetNodeName = InParentWidgetNodeName;
	Parms.bShowGuideEvent = bShowGuideEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreUnit.HandleCheckedFoldButtonEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCheck                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreUnit::HandleCheckedFoldButtonEvent(bool bCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreUnit", "HandleCheckedFoldButtonEvent");

	Params::TLUserWidgetExploreUnit_HandleCheckedFoldButtonEvent Parms{};

	Parms.bCheck = bCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreUnit.OnUnLockMemorial
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreUnit::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreUnit", "OnUnLockMemorial");

	Params::TLUserWidgetExploreUnit_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLBoutiqueSceneControlActor.OnBoutiqueModeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBoutiqueState                          Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLBoutiqueSceneControlActor::OnBoutiqueModeChanged(EBoutiqueState Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBoutiqueSceneControlActor", "OnBoutiqueModeChanged");

	Params::TLBoutiqueSceneControlActor_OnBoutiqueModeChanged Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLBoutiqueSceneControlActor.OnHidePolymorph
// (Event, Public, BlueprintEvent)

void ATLBoutiqueSceneControlActor::OnHidePolymorph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBoutiqueSceneControlActor", "OnHidePolymorph");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLBoutiqueSceneControlActor.OnSelectPolymorph
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InCustomSceneId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLBoutiqueSceneControlActor::OnSelectPolymorph(class FName InCustomSceneId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBoutiqueSceneControlActor", "OnSelectPolymorph");

	Params::TLBoutiqueSceneControlActor_OnSelectPolymorph Parms{};

	Parms.InCustomSceneId = InCustomSceneId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserMagicDollInfoWidget.OnChangeCountConditionLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESkillUseItemCountConditionLevel        InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserMagicDollInfoWidget::OnChangeCountConditionLevel(ESkillUseItemCountConditionLevel InLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserMagicDollInfoWidget", "OnChangeCountConditionLevel");

	Params::TLUserMagicDollInfoWidget_OnChangeCountConditionLevel Parms{};

	Parms.InLevel = InLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLBuilderCommandMacroDelay.TLMacroDelay
// (Final, Exec, Native, Public)
// Parameters:
// float                                   DelaySec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBuilderCommandMacroDelay::TLMacroDelay(float DelaySec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommandMacroDelay", "TLMacroDelay");

	Params::TLBuilderCommandMacroDelay_TLMacroDelay Parms{};

	Parms.DelaySec = DelaySec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBuilderCommandTP.TLTP
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             TLTeleportListName                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBuilderCommandTP::TLTP(class FName TLTeleportListName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommandTP", "TLTP");

	Params::TLBuilderCommandTP_TLTP Parms{};

	Parms.TLTeleportListName = TLTeleportListName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBuilderCommandCustomize.TLSaveCustomize
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLBuilderCommandCustomize::TLSaveCustomize(const class FString& Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommandCustomize", "TLSaveCustomize");

	Params::TLBuilderCommandCustomize_TLSaveCustomize Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLBuilderCommands.DebugStartNextChunk
// (Final, Exec, Native, Public)

void UTLBuilderCommands::DebugStartNextChunk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "DebugStartNextChunk");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.DisconnectFromGateServer
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bUnexpectedly                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::DisconnectFromGateServer(bool bUnexpectedly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "DisconnectFromGateServer");

	Params::TLBuilderCommands_DisconnectFromGateServer Parms{};

	Parms.bUnexpectedly = bUnexpectedly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.DisconnectFromWorldServer
// (Final, Exec, Native, Public)

void UTLBuilderCommands::DisconnectFromWorldServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "DisconnectFromWorldServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.OpenBrowserUploadedProfileImage
// (Final, Exec, Native, Public)

void UTLBuilderCommands::OpenBrowserUploadedProfileImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "OpenBrowserUploadedProfileImage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.RequestRemoveProfileImageInfo
// (Final, Exec, Native, Public)

void UTLBuilderCommands::RequestRemoveProfileImageInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "RequestRemoveProfileImageInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.RequestUploadedProfileImageInfo
// (Final, Exec, Native, Public)

void UTLBuilderCommands::RequestUploadedProfileImageInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "RequestUploadedProfileImageInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAccountStatus
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InAccountType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAddMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAccountStatus(class FName InAccountType, int32 InAddMin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAccountStatus");

	Params::TLBuilderCommands_TLAccountStatus Parms{};

	Parms.InAccountType = InAccountType;
	Parms.InAddMin = InAddMin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLActionGuideRefresh
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLActionGuideRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLActionGuideRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLActivateGlobalTag
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InActivationTag                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLActivateGlobalTag(const class FName InActivationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLActivateGlobalTag");

	Params::TLBuilderCommands_TLActivateGlobalTag Parms{};

	Parms.InActivationTag = InActivationTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLActiveEscrow
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLActiveEscrow(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLActiveEscrow");

	Params::TLBuilderCommands_TLActiveEscrow Parms{};

	Parms.InIsActive = InIsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLActiveMembership
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InUID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAddMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLActiveMembership(bool InIsActive, int32 InUID, int32 InAddMin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLActiveMembership");

	Params::TLBuilderCommands_TLActiveMembership Parms{};

	Parms.InIsActive = InIsActive;
	Parms.InUID = InUID;
	Parms.InAddMin = InAddMin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddCircleForceVolume
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   VolumeID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ForceSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddCircleForceVolume(int64 VolumeID, float DurationSec, float ForceSize, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddCircleForceVolume");

	Params::TLBuilderCommands_TLAddCircleForceVolume Parms{};

	Parms.VolumeID = VolumeID;
	Parms.DurationSec = DurationSec;
	Parms.ForceSize = ForceSize;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddDesignerPreset
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// class FString                           InParams                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddDesignerPreset(class FString* InParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddDesignerPreset");

	Params::TLBuilderCommands_TLAddDesignerPreset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InParams != nullptr)
		*InParams = std::move(Parms.InParams);
}


// Function TLClient.TLBuilderCommands.TLAddDirectionalForceVolume
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   VolumeID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PushOrPull                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ForceSize                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   X                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Width                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Length                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DirX                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DirY                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DirZ                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InvalidCenterCircleRadius                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddDirectionalForceVolume(int64 VolumeID, int32 InType, int32 PushOrPull, const float Duration, const float ForceSize, const float X, const float Y, const float Z, const float Width, const float Length, const float DirX, const float DirY, const float DirZ, const float InvalidCenterCircleRadius, const float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddDirectionalForceVolume");

	Params::TLBuilderCommands_TLAddDirectionalForceVolume Parms{};

	Parms.VolumeID = VolumeID;
	Parms.InType = InType;
	Parms.PushOrPull = PushOrPull;
	Parms.Duration = Duration;
	Parms.ForceSize = ForceSize;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Width = Width;
	Parms.Length = Length;
	Parms.DirX = DirX;
	Parms.DirY = DirY;
	Parms.DirZ = DirZ;
	Parms.InvalidCenterCircleRadius = InvalidCenterCircleRadius;
	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddDirectionalForceVolumeTest1
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   VolumeID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Width                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Length                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationSec                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InvalidCenterCircleRadius                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddDirectionalForceVolumeTest1(int64 VolumeID, int32 InType, const float Width, const float Length, const float DurationSec, const float InvalidCenterCircleRadius, const float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddDirectionalForceVolumeTest1");

	Params::TLBuilderCommands_TLAddDirectionalForceVolumeTest1 Parms{};

	Parms.VolumeID = VolumeID;
	Parms.InType = InType;
	Parms.Width = Width;
	Parms.Length = Length;
	Parms.DurationSec = DurationSec;
	Parms.InvalidCenterCircleRadius = InvalidCenterCircleRadius;
	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddDonutForceVolume
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   VolumeID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ForceSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IgnoreRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddDonutForceVolume(int64 VolumeID, float DurationSec, float ForceSize, float Radius, float IgnoreRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddDonutForceVolume");

	Params::TLBuilderCommands_TLAddDonutForceVolume Parms{};

	Parms.VolumeID = VolumeID;
	Parms.DurationSec = DurationSec;
	Parms.ForceSize = ForceSize;
	Parms.Radius = Radius;
	Parms.IgnoreRadius = IgnoreRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddItem
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EnchantLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddItem(int32 ClassId, int32 Count, int32 EnchantLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddItem");

	Params::TLBuilderCommands_TLAddItem Parms{};

	Parms.ClassId = ClassId;
	Parms.Count = Count;
	Parms.EnchantLevel = EnchantLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddItemByName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ItemName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EnchantLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddItemByName(class FName ItemName, int32 Count, int32 EnchantLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddItemByName");

	Params::TLBuilderCommands_TLAddItemByName Parms{};

	Parms.ItemName = ItemName;
	Parms.Count = Count;
	Parms.EnchantLevel = EnchantLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddMyOccupation
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLAddMyOccupation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddMyOccupation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddPartyTargetMarkerOnlyClient
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InMarkNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddPartyTargetMarkerOnlyClient(int32 InMarkNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddPartyTargetMarkerOnlyClient");

	Params::TLBuilderCommands_TLAddPartyTargetMarkerOnlyClient Parms{};

	Parms.InMarkNum = InMarkNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddTestDialogueMessage
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           TestMessageBody                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InMessageCategory                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMessageCount                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddTestDialogueMessage(const class FString& TestMessageBody, uint8 InMessageCategory, int32 InMessageCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddTestDialogueMessage");

	Params::TLBuilderCommands_TLAddTestDialogueMessage Parms{};

	Parms.TestMessageBody = std::move(TestMessageBody);
	Parms.InMessageCategory = InMessageCategory;
	Parms.InMessageCount = InMessageCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddTestSystemMessage
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           TestMessageBody                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddTestSystemMessage(const class FString& TestMessageBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddTestSystemMessage");

	Params::TLBuilderCommands_TLAddTestSystemMessage Parms{};

	Parms.TestMessageBody = std::move(TestMessageBody);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAddVirtualCurrencyExpiration
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAddMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAddVirtualCurrencyExpiration(int64 InAmount, int32 InAddMin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAddVirtualCurrencyExpiration");

	Params::TLBuilderCommands_TLAddVirtualCurrencyExpiration Parms{};

	Parms.InAmount = InAmount;
	Parms.InAddMin = InAddMin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAggressive
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bAggressive                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAggressive(bool bAggressive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAggressive");

	Params::TLBuilderCommands_TLAggressive Parms{};

	Parms.bAggressive = bAggressive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAlchemyPlayResultCutScene
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InGradeIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAlchemyPlayResultCutScene(int32 InGradeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAlchemyPlayResultCutScene");

	Params::TLBuilderCommands_TLAlchemyPlayResultCutScene Parms{};

	Parms.InGradeIndex = InGradeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAllUpdateDesignerPresetVersion
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLAllUpdateDesignerPresetVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAllUpdateDesignerPresetVersion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAnalogCursorDeadZone
// (Final, Exec, Native, Public)
// Parameters:
// float                                   DeadZone                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAnalogCursorDeadZone(float DeadZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAnalogCursorDeadZone");

	Params::TLBuilderCommands_TLAnalogCursorDeadZone Parms{};

	Parms.DeadZone = DeadZone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAnalogCursorEnable
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAnalogCursorEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAnalogCursorEnable");

	Params::TLBuilderCommands_TLAnalogCursorEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAnalogCursorInteractableRadius
// (Final, Exec, Native, Public)
// Parameters:
// float                                   CursorInteractableRadius                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAnalogCursorInteractableRadius(float CursorInteractableRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAnalogCursorInteractableRadius");

	Params::TLBuilderCommands_TLAnalogCursorInteractableRadius Parms{};

	Parms.CursorInteractableRadius = CursorInteractableRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAnalogCursorMaxSpeed
// (Final, Exec, Native, Public)
// Parameters:
// float                                   MaxSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAnalogCursorMaxSpeed(float MaxSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAnalogCursorMaxSpeed");

	Params::TLBuilderCommands_TLAnalogCursorMaxSpeed Parms{};

	Parms.MaxSpeed = MaxSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAnalogCursorMode
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Acceleration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAnalogCursorMode(int32 Mode, float Acceleration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAnalogCursorMode");

	Params::TLBuilderCommands_TLAnalogCursorMode Parms{};

	Parms.Mode = Mode;
	Parms.Acceleration = Acceleration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAnalogCursorStickySlowdown
// (Final, Exec, Native, Public)
// Parameters:
// float                                   StickySlowdownMin                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StickySlowdownMax                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StickySlowdownSecond                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAnalogCursorStickySlowdown(float StickySlowdownMin, float StickySlowdownMax, float StickySlowdownSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAnalogCursorStickySlowdown");

	Params::TLBuilderCommands_TLAnalogCursorStickySlowdown Parms{};

	Parms.StickySlowdownMin = StickySlowdownMin;
	Parms.StickySlowdownMax = StickySlowdownMax;
	Parms.StickySlowdownSecond = StickySlowdownSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLApplyForce
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   F                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLApplyForce(float X, float Y, float Z, float F)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLApplyForce");

	Params::TLBuilderCommands_TLApplyForce Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.F = F;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLArena
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLArena()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLArena");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLArenaClearMatchingInfo
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLArenaClearMatchingInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLArenaClearMatchingInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLArenaLogEscaperPenaltyStatus
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLArenaLogEscaperPenaltyStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLArenaLogEscaperPenaltyStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLArenaLogMatchingRegisterFailConditionStatus
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLArenaLogMatchingRegisterFailConditionStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLArenaLogMatchingRegisterFailConditionStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLArenaPlayTierChange
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   PrevTier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NextTier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLArenaPlayTierChange(int32 PrevTier, int32 NextTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLArenaPlayTierChange");

	Params::TLBuilderCommands_TLArenaPlayTierChange Parms{};

	Parms.PrevTier = PrevTier;
	Parms.NextTier = NextTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLArenaToggleForceEnableMatchingButtons
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLArenaToggleForceEnableMatchingButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLArenaToggleForceEnableMatchingButtons");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLArenaToggleMatchingConfirmPopup
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLArenaToggleMatchingConfirmPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLArenaToggleMatchingConfirmPopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLArenaToggleMatchingConfirmWaitingPopup
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLArenaToggleMatchingConfirmWaitingPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLArenaToggleMatchingConfirmWaitingPopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAttachUI
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InAttachUI                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAttachUI(const class FString& InAttachUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAttachUI");

	Params::TLBuilderCommands_TLAttachUI Parms{};

	Parms.InAttachUI = std::move(InAttachUI);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAutonDebug
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bDebug                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAutonDebug(bool bDebug)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAutonDebug");

	Params::TLBuilderCommands_TLAutonDebug Parms{};

	Parms.bDebug = bDebug;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLAutonSilencio
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bSilencio                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLAutonSilencio(bool bSilencio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLAutonSilencio");

	Params::TLBuilderCommands_TLAutonSilencio Parms{};

	Parms.bSilencio = bSilencio;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLBaseFsmState
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLBaseFsmState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLBaseFsmState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLBlackScreen
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsEnable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLBlackScreen(bool InIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLBlackScreen");

	Params::TLBuilderCommands_TLBlackScreen Parms{};

	Parms.InIsEnable = InIsEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLBMShop
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLBMShop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLBMShop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLBMWarehouse
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLBMWarehouse(int32 InPage, int32 InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLBMWarehouse");

	Params::TLBuilderCommands_TLBMWarehouse Parms{};

	Parms.InPage = InPage;
	Parms.InSize = InSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLBoutique
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLBoutique(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLBoutique");

	Params::TLBuilderCommands_TLBoutique Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLBreakThrough
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TargetX                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TargetY                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DurationMs                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLBreakThrough(const int32 ObjId, const float TargetX, const float TargetY, const int32 DurationMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLBreakThrough");

	Params::TLBuilderCommands_TLBreakThrough Parms{};

	Parms.ObjId = ObjId;
	Parms.TargetX = TargetX;
	Parms.TargetY = TargetY;
	Parms.DurationMs = DurationMs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLBrightness
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InBrightness                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLBrightness(float InBrightness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLBrightness");

	Params::TLBuilderCommands_TLBrightness Parms{};

	Parms.InBrightness = InBrightness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCalendar
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCalendar(int32 InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCalendar");

	Params::TLBuilderCommands_TLCalendar Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraBackView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraBackView(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraBackView");

	Params::TLBuilderCommands_TLCameraBackView Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraBlendDist
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InCamDist                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendInSec                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraBlendDist(float InCamDist, float InBlendInSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraBlendDist");

	Params::TLBuilderCommands_TLCameraBlendDist Parms{};

	Parms.InCamDist = InCamDist;
	Parms.InBlendInSec = InBlendInSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraBlendRot
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InPitch                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InYaw                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCamDist                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBlendInSec                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraBlendRot(float InPitch, float InYaw, float InCamDist, float InBlendInSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraBlendRot");

	Params::TLBuilderCommands_TLCameraBlendRot Parms{};

	Parms.InPitch = InPitch;
	Parms.InYaw = InYaw;
	Parms.InCamDist = InCamDist;
	Parms.InBlendInSec = InBlendInSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraBlendToTarget
// (Final, Exec, Native, Public)
// Parameters:
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   YawOffsetMin                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   YawOffsetMax                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraBlendToTarget(float BlendTime, float YawOffsetMin, float YawOffsetMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraBlendToTarget");

	Params::TLBuilderCommands_TLCameraBlendToTarget Parms{};

	Parms.BlendTime = BlendTime;
	Parms.YawOffsetMin = YawOffsetMin;
	Parms.YawOffsetMax = YawOffsetMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraEnableLag
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnableLag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraEnableLag(bool bEnableLag, float InSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraEnableLag");

	Params::TLBuilderCommands_TLCameraEnableLag Parms{};

	Parms.bEnableLag = bEnableLag;
	Parms.InSpeed = InSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraEnableRotationLag
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnableLag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraEnableRotationLag(bool bEnableLag, float InSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraEnableRotationLag");

	Params::TLBuilderCommands_TLCameraEnableRotationLag Parms{};

	Parms.bEnableLag = bEnableLag;
	Parms.InSpeed = InSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraFreeLag
// (Final, Exec, Native, Public)
// Parameters:
// float                                   RotSpeedMutifly                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraFreeLag(float RotSpeedMutifly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraFreeLag");

	Params::TLBuilderCommands_TLCameraFreeLag Parms{};

	Parms.RotSpeedMutifly = RotSpeedMutifly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraFreeLagLoad
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraFreeLagLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraFreeLagLoad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraFreeLagLoadSequence
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraFreeLagLoadSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraFreeLagLoadSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraFreeLagPlayStart
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraFreeLagPlayStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraFreeLagPlayStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraFreeLagPlayStop
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraFreeLagPlayStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraFreeLagPlayStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraFreeLagRecStart
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraFreeLagRecStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraFreeLagRecStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraFreeLagRecStop
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraFreeLagRecStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraFreeLagRecStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraFreeLagSave
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraFreeLagSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraFreeLagSave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraFreeLagSaveSequence
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraFreeLagSaveSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraFreeLagSaveSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraLookAtModelDir
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraLookAtModelDir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraLookAtModelDir");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraMouseRotateSpeedScale
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InVal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraMouseRotateSpeedScale(float InVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraMouseRotateSpeedScale");

	Params::TLBuilderCommands_TLCameraMouseRotateSpeedScale Parms{};

	Parms.InVal = InVal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraMyPcFrontTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraMyPcFrontTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraMyPcFrontTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraProducer
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraProducer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraProducer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraReset
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraSpeedScale
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraSpeedScale(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraSpeedScale");

	Params::TLBuilderCommands_TLCameraSpeedScale Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraSpeedScaleStep
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InScaleStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraSpeedScaleStep(float InScaleStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraSpeedScaleStep");

	Params::TLBuilderCommands_TLCameraSpeedScaleStep Parms{};

	Parms.InScaleStep = InScaleStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraTargetArmLength
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InTargetArmLength                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCameraTargetArmLength(float InTargetArmLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraTargetArmLength");

	Params::TLBuilderCommands_TLCameraTargetArmLength Parms{};

	Parms.InTargetArmLength = InTargetArmLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCameraTLGame
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCameraTLGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCameraTLGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCarrierChangeState
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InCarrierState                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCarrierChangeState(const class FString& InCarrierState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCarrierChangeState");

	Params::TLBuilderCommands_TLCarrierChangeState Parms{};

	Parms.InCarrierState = std::move(InCarrierState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChairSitDown
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLChairSitDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChairSitDown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChairStandUp
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLChairStandUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChairStandUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeCollisionSizeInfo
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CollisionSizeInfoName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeCollisionSizeInfo(int32 ObjId, class FName CollisionSizeInfoName, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeCollisionSizeInfo");

	Params::TLBuilderCommands_TLChangeCollisionSizeInfo Parms{};

	Parms.ObjId = ObjId;
	Parms.CollisionSizeInfoName = CollisionSizeInfoName;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeColSize
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InRad                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeColSize(float InRad, float InHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeColSize");

	Params::TLBuilderCommands_TLChangeColSize Parms{};

	Parms.InRad = InRad;
	Parms.InHeight = InHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeCombatStatus
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bCombat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeCombatStatus(bool bCombat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeCombatStatus");

	Params::TLBuilderCommands_TLChangeCombatStatus Parms{};

	Parms.bCombat = bCombat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeInteractionType
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InteractionTypeIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeInteractionType(const int32 ObjId, int32 InteractionTypeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeInteractionType");

	Params::TLBuilderCommands_TLChangeInteractionType Parms{};

	Parms.ObjId = ObjId;
	Parms.InteractionTypeIndex = InteractionTypeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeMap
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   MapID                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeMap(const int32 MapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeMap");

	Params::TLBuilderCommands_TLChangeMap Parms{};

	Parms.MapID = MapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeMapPos
// (Final, Exec, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// int32                                   MapID                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Pos                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeMapPos(const int32 MapID, const struct FVector& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeMapPos");

	Params::TLBuilderCommands_TLChangeMapPos Parms{};

	Parms.MapID = MapID;
	Parms.Pos = std::move(Pos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeMapPos1
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   MapID                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeMapPos1(const int32 MapID, float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeMapPos1");

	Params::TLBuilderCommands_TLChangeMapPos1 Parms{};

	Parms.MapID = MapID;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeMatchingParty
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bMatchingParty                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeMatchingParty(bool bMatchingParty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeMatchingParty");

	Params::TLBuilderCommands_TLChangeMatchingParty Parms{};

	Parms.bMatchingParty = bMatchingParty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeMyCollisionSize
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Rad                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeMyCollisionSize(float Rad, float Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeMyCollisionSize");

	Params::TLBuilderCommands_TLChangeMyCollisionSize Parms{};

	Parms.Rad = Rad;
	Parms.Height = Height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeNavState
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           NavPoly                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsOn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeNavState(const class FString& NavPoly, bool InIsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeNavState");

	Params::TLBuilderCommands_TLChangeNavState Parms{};

	Parms.NavPoly = std::move(NavPoly);
	Parms.InIsOn = InIsOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangePlayTimeNoti
// (Final, Exec, Native, Public)
// Parameters:
// double                                  InNotiMinute                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangePlayTimeNoti(double InNotiMinute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangePlayTimeNoti");

	Params::TLBuilderCommands_TLChangePlayTimeNoti Parms{};

	Parms.InNotiMinute = InNotiMinute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChangeTribeRelation
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TribeRelationIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TribeRelationCoverIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TribeRelationBackwardIndex                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChangeTribeRelation(const int32 ObjId, int32 TribeRelationIndex, int32 TribeRelationCoverIndex, int32 TribeRelationBackwardIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChangeTribeRelation");

	Params::TLBuilderCommands_TLChangeTribeRelation Parms{};

	Parms.ObjId = ObjId;
	Parms.TribeRelationIndex = TribeRelationIndex;
	Parms.TribeRelationCoverIndex = TribeRelationCoverIndex;
	Parms.TribeRelationBackwardIndex = TribeRelationBackwardIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCharDel
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCharDel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCharDel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatAcceptGroupInvitation
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InInvitationId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatAcceptGroupInvitation(const int64 InInvitationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatAcceptGroupInvitation");

	Params::TLBuilderCommands_TLChatAcceptGroupInvitation Parms{};

	Parms.InInvitationId = InInvitationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatGetInvitationList
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLChatGetInvitationList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatGetInvitationList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatJoinGroupChat
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InRoomKey                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InPassword                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatJoinGroupChat(const class FString& InRoomKey, const class FString& InPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatJoinGroupChat");

	Params::TLBuilderCommands_TLChatJoinGroupChat Parms{};

	Parms.InRoomKey = std::move(InRoomKey);
	Parms.InPassword = std::move(InPassword);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatLog
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InStart                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatLog(bool InStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatLog");

	Params::TLBuilderCommands_TLChatLog Parms{};

	Parms.InStart = InStart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatRefuseGroupInvitation
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InInvitationId                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatRefuseGroupInvitation(const int64 InInvitationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatRefuseGroupInvitation");

	Params::TLBuilderCommands_TLChatRefuseGroupInvitation Parms{};

	Parms.InInvitationId = InInvitationId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatRoomCreate
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLChatRoomCreate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatRoomCreate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatRoomInvite
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InGroupNum                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InInviteUserName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatRoomInvite(const int32 InGroupNum, const class FString& InInviteUserName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatRoomInvite");

	Params::TLBuilderCommands_TLChatRoomInvite Parms{};

	Parms.InGroupNum = InGroupNum;
	Parms.InInviteUserName = std::move(InInviteUserName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatSendGroupMessage
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InGroupNum                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatSendGroupMessage(const int32 InGroupNum, const class FString& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatSendGroupMessage");

	Params::TLBuilderCommands_TLChatSendGroupMessage Parms{};

	Parms.InGroupNum = InGroupNum;
	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatTransferOwner
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InGroupNum                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InTransferUserName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatTransferOwner(const int32 InGroupNum, const class FString& InTransferUserName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatTransferOwner");

	Params::TLBuilderCommands_TLChatTransferOwner Parms{};

	Parms.InGroupNum = InGroupNum;
	Parms.InTransferUserName = std::move(InTransferUserName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatUpdateGroupInfo
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InGroupNum                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InNewInfo                                              (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsPassword                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatUpdateGroupInfo(const int32 InGroupNum, const class FString& InNewInfo, bool InIsPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatUpdateGroupInfo");

	Params::TLBuilderCommands_TLChatUpdateGroupInfo Parms{};

	Parms.InGroupNum = InGroupNum;
	Parms.InNewInfo = std::move(InNewInfo);
	Parms.InIsPassword = InIsPassword;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatUpdateUserRole
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InGroupNum                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InUpdateUserName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsGradeUp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatUpdateUserRole(const int32 InGroupNum, const class FString& InUpdateUserName, bool InIsGradeUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatUpdateUserRole");

	Params::TLBuilderCommands_TLChatUpdateUserRole Parms{};

	Parms.InGroupNum = InGroupNum;
	Parms.InUpdateUserName = std::move(InUpdateUserName);
	Parms.InIsGradeUp = InIsGradeUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatUserBan
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InGroupNum                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InBanUserName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatUserBan(const int32 InGroupNum, const class FString& InBanUserName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatUserBan");

	Params::TLBuilderCommands_TLChatUserBan Parms{};

	Parms.InGroupNum = InGroupNum;
	Parms.InBanUserName = std::move(InBanUserName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatUserDeport
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InGroupNum                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InDeportUserName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatUserDeport(const int32 InGroupNum, const class FString& InDeportUserName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatUserDeport");

	Params::TLBuilderCommands_TLChatUserDeport Parms{};

	Parms.InGroupNum = InGroupNum;
	Parms.InDeportUserName = std::move(InDeportUserName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLChatUserUnBan
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InGroupNum                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InUnBanUserName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLChatUserUnBan(const int32 InGroupNum, const class FString& InUnBanUserName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLChatUserUnBan");

	Params::TLBuilderCommands_TLChatUserUnBan Parms{};

	Parms.InGroupNum = InGroupNum;
	Parms.InUnBanUserName = std::move(InUnBanUserName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCheckMeshLine
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCheckMeshLine(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCheckMeshLine");

	Params::TLBuilderCommands_TLCheckMeshLine Parms{};

	Parms.InIsActive = InIsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClearContentsAlarm
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLClearContentsAlarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClearContentsAlarm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClearContentsOpen
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLClearContentsOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClearContentsOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClearItemTrait
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InItemUid                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLClearItemTrait(uint64 InItemUid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClearItemTrait");

	Params::TLBuilderCommands_TLClearItemTrait Parms{};

	Parms.InItemUid = InItemUid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClearMembership
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLClearMembership()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClearMembership");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClearPolymorphNotification
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLClearPolymorphNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClearPolymorphNotification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClearScreenMsgAll
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLClearScreenMsgAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClearScreenMsgAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClearSpecialShopNoti
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLClearSpecialShopNoti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClearSpecialShopNoti");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClearSubtitle
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLClearSubtitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClearSubtitle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClearUI
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InIgnoreClearWidgetKeys                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLClearUI(const class FString& InIgnoreClearWidgetKeys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClearUI");

	Params::TLBuilderCommands_TLClearUI Parms{};

	Parms.InIgnoreClearWidgetKeys = std::move(InIgnoreClearWidgetKeys);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClearVirtualCurrencyExpiration
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLClearVirtualCurrencyExpiration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClearVirtualCurrencyExpiration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClickWidgetLog
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLClickWidgetLog(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClickWidgetLog");

	Params::TLBuilderCommands_TLClickWidgetLog Parms{};

	Parms.InIsShow = InIsShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLClientMoveReq
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLClientMoveReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLClientMoveReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCloseTerritoryFog
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InUID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCloseTerritoryFog(int32 InUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCloseTerritoryFog");

	Params::TLBuilderCommands_TLCloseTerritoryFog Parms{};

	Parms.InUID = InUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmCastleTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmCastleTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmCastleTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdActionLockOn
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InTargetObjId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdActionLockOn(int32 InTargetObjId, float InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdActionLockOn");

	Params::TLBuilderCommands_TLCmdActionLockOn Parms{};

	Parms.InTargetObjId = InTargetObjId;
	Parms.InDuration = InDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdActionLockOnClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmdActionLockOnClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdActionLockOnClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdActionLockOnDir
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InLockAngle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdActionLockOnDir(float InLockAngle, float InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdActionLockOnDir");

	Params::TLBuilderCommands_TLCmdActionLockOnDir Parms{};

	Parms.InLockAngle = InLockAngle;
	Parms.InDuration = InDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdCameraLagTagsDelete
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdCameraLagTagsDelete(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdCameraLagTagsDelete");

	Params::TLBuilderCommands_TLCmdCameraLagTagsDelete Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdCameraLagTagsInsert
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdCameraLagTagsInsert(class FName InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdCameraLagTagsInsert");

	Params::TLBuilderCommands_TLCmdCameraLagTagsInsert Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdCarrierUseSkill
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InSkillId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdCarrierUseSkill(int32 InSkillId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdCarrierUseSkill");

	Params::TLBuilderCommands_TLCmdCarrierUseSkill Parms{};

	Parms.InSkillId = InSkillId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdCrowdControlImmuneGaugeStart
// (Final, Exec, Native, Public)
// Parameters:
// float                                   StartPercentage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndPercentage                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RemainDurationSec                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdCrowdControlImmuneGaugeStart(float StartPercentage, float EndPercentage, float RemainDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdCrowdControlImmuneGaugeStart");

	Params::TLBuilderCommands_TLCmdCrowdControlImmuneGaugeStart Parms{};

	Parms.StartPercentage = StartPercentage;
	Parms.EndPercentage = EndPercentage;
	Parms.RemainDurationSec = RemainDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdCrowdControlImmuneGaugeStop
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmdCrowdControlImmuneGaugeStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdCrowdControlImmuneGaugeStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdCutsceneSkipForce
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmdCutsceneSkipForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdCutsceneSkipForce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdDrawArrow
// (Final, Exec, Native, Public)
// Parameters:
// float                                   DistCm                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ArrowSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTimeSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdDrawArrow(float DistCm, float ArrowSize, float LifeTimeSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdDrawArrow");

	Params::TLBuilderCommands_TLCmdDrawArrow Parms{};

	Parms.DistCm = DistCm;
	Parms.ArrowSize = ArrowSize;
	Parms.LifeTimeSec = LifeTimeSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdDrawCylinder
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTimeSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdDrawCylinder(float X, float Y, float Z, float Height, float Radius, float Thickness, float LifeTimeSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdDrawCylinder");

	Params::TLBuilderCommands_TLCmdDrawCylinder Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Height = Height;
	Parms.Radius = Radius;
	Parms.Thickness = Thickness;
	Parms.LifeTimeSec = LifeTimeSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdEffectFail
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectPropId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EffectFailReason                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdEffectFail(int32 EffectPropId, int32 EffectFailReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdEffectFail");

	Params::TLBuilderCommands_TLCmdEffectFail Parms{};

	Parms.EffectPropId = EffectPropId;
	Parms.EffectFailReason = EffectFailReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdHideHelmetByInteractionDialogue
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInHideHelmet                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdHideHelmetByInteractionDialogue(bool bInHideHelmet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdHideHelmetByInteractionDialogue");

	Params::TLBuilderCommands_TLCmdHideHelmetByInteractionDialogue Parms{};

	Parms.bInHideHelmet = bInHideHelmet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdHighlightAbnormalStateCount
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InEffectName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InShowCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdHighlightAbnormalStateCount(class FName InEffectName, int32 InCount, bool InShowCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdHighlightAbnormalStateCount");

	Params::TLBuilderCommands_TLCmdHighlightAbnormalStateCount Parms{};

	Parms.InEffectName = InEffectName;
	Parms.InCount = InCount;
	Parms.InShowCount = InShowCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdMiniMapAddObject
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAdd                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdMiniMapAddObject(int32 ObjId, bool bAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdMiniMapAddObject");

	Params::TLBuilderCommands_TLCmdMiniMapAddObject Parms{};

	Parms.ObjId = ObjId;
	Parms.bAdd = bAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdQuickSlotClear
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdQuickSlotClear(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdQuickSlotClear");

	Params::TLBuilderCommands_TLCmdQuickSlotClear Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdQuickWeaponQuickSlotClear
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdQuickWeaponQuickSlotClear(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdQuickWeaponQuickSlotClear");

	Params::TLBuilderCommands_TLCmdQuickWeaponQuickSlotClear Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdQuickWeaponQuickSlotSet
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InComplexGuid                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdQuickWeaponQuickSlotSet(int32 InIndex, int32 InComplexGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdQuickWeaponQuickSlotSet");

	Params::TLBuilderCommands_TLCmdQuickWeaponQuickSlotSet Parms{};

	Parms.InIndex = InIndex;
	Parms.InComplexGuid = InComplexGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdQuickWeaponQuickSlotSwap
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InIndex1                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InIndex2                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdQuickWeaponQuickSlotSwap(int32 InIndex1, int32 InIndex2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdQuickWeaponQuickSlotSwap");

	Params::TLBuilderCommands_TLCmdQuickWeaponQuickSlotSwap Parms{};

	Parms.InIndex1 = InIndex1;
	Parms.InIndex2 = InIndex2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdSetCriminalType
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InSelfDefenseRemainMs                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCriminalTypeIndex                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdSetCriminalType(int32 InSelfDefenseRemainMs, int32 InCriminalTypeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdSetCriminalType");

	Params::TLBuilderCommands_TLCmdSetCriminalType Parms{};

	Parms.InSelfDefenseRemainMs = InSelfDefenseRemainMs;
	Parms.InCriminalTypeIndex = InCriminalTypeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdShootProjectile
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SkillId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdShootProjectile(int32 SkillId, uint8 SkillLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdShootProjectile");

	Params::TLBuilderCommands_TLCmdShootProjectile Parms{};

	Parms.SkillId = SkillId;
	Parms.SkillLevel = SkillLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdShowAmmoList
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmdShowAmmoList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdShowAmmoList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdShowHelmet
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShowHelmet                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdShowHelmet(bool bInShowHelmet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdShowHelmet");

	Params::TLBuilderCommands_TLCmdShowHelmet Parms{};

	Parms.bInShowHelmet = bInShowHelmet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdShowHyperLinkSkill
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SkillId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ContextUid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkillTrait                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdShowHyperLinkSkill(int32 SkillId, int32 ContextUid, int32 SkillLevel, int32 SkillTrait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdShowHyperLinkSkill");

	Params::TLBuilderCommands_TLCmdShowHyperLinkSkill Parms{};

	Parms.SkillId = SkillId;
	Parms.ContextUid = ContextUid;
	Parms.SkillLevel = SkillLevel;
	Parms.SkillTrait = SkillTrait;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdSkillContextSwapOff
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ComplexId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdSkillContextSwapOff(int32 ComplexId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdSkillContextSwapOff");

	Params::TLBuilderCommands_TLCmdSkillContextSwapOff Parms{};

	Parms.ComplexId = ComplexId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdSkillContextSwapOn
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ComplexId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RemainSec                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdSkillContextSwapOn(int32 ComplexId, float DurationSec, float RemainSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdSkillContextSwapOn");

	Params::TLBuilderCommands_TLCmdSkillContextSwapOn Parms{};

	Parms.ComplexId = ComplexId;
	Parms.DurationSec = DurationSec;
	Parms.RemainSec = RemainSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdSkillCooldownUpdate
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InSkillId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRemainSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTotalSec                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInGlobal                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdSkillCooldownUpdate(int32 InSkillId, float InRemainSec, float InTotalSec, bool bInGlobal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdSkillCooldownUpdate");

	Params::TLBuilderCommands_TLCmdSkillCooldownUpdate Parms{};

	Parms.InSkillId = InSkillId;
	Parms.InRemainSec = InRemainSec;
	Parms.InTotalSec = InTotalSec;
	Parms.bInGlobal = bInGlobal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdSkillQuickWeaponPresetIndex
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPresetIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdSkillQuickWeaponPresetIndex(int32 InPresetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdSkillQuickWeaponPresetIndex");

	Params::TLBuilderCommands_TLCmdSkillQuickWeaponPresetIndex Parms{};

	Parms.InPresetIndex = InPresetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdSkillQuickWeaponPresetIndexReq
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPresetIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdSkillQuickWeaponPresetIndexReq(int32 InPresetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdSkillQuickWeaponPresetIndexReq");

	Params::TLBuilderCommands_TLCmdSkillQuickWeaponPresetIndexReq Parms{};

	Parms.InPresetIndex = InPresetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdSkillRemainTimeUpdate
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InSkillId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRemainSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTotalSec                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdSkillRemainTimeUpdate(int32 InSkillId, float InRemainSec, float InTotalSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdSkillRemainTimeUpdate");

	Params::TLBuilderCommands_TLCmdSkillRemainTimeUpdate Parms{};

	Parms.InSkillId = InSkillId;
	Parms.InRemainSec = InRemainSec;
	Parms.InTotalSec = InTotalSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdTargetAttackResultFix
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdTargetAttackResultFix(int32 InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdTargetAttackResultFix");

	Params::TLBuilderCommands_TLCmdTargetAttackResultFix Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdTLImageTraceBrushImageName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InImageName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEmpty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdTLImageTraceBrushImageName(class FName InImageName, bool InEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdTLImageTraceBrushImageName");

	Params::TLBuilderCommands_TLCmdTLImageTraceBrushImageName Parms{};

	Parms.InImageName = InImageName;
	Parms.InEmpty = InEmpty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdTLImageTraceBrushParentName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InWidgetName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEmpty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdTLImageTraceBrushParentName(class FName InWidgetName, bool InEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdTLImageTraceBrushParentName");

	Params::TLBuilderCommands_TLCmdTLImageTraceBrushParentName Parms{};

	Parms.InWidgetName = InWidgetName;
	Parms.InEmpty = InEmpty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdUpdateCooldownByGroup
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InCooldownGroupId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRemainMs                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InDurationMs                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdUpdateCooldownByGroup(int32 InCooldownGroupId, int32 InRemainMs, int32 InDurationMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdUpdateCooldownByGroup");

	Params::TLBuilderCommands_TLCmdUpdateCooldownByGroup Parms{};

	Parms.InCooldownGroupId = InCooldownGroupId;
	Parms.InRemainMs = InRemainMs;
	Parms.InDurationMs = InDurationMs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdUpdateGlobalCooldownByGroup
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InCooldownGroupId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InRemainMs                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InDurationMs                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdUpdateGlobalCooldownByGroup(int32 InCooldownGroupId, int32 InRemainMs, int32 InDurationMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdUpdateGlobalCooldownByGroup");

	Params::TLBuilderCommands_TLCmdUpdateGlobalCooldownByGroup Parms{};

	Parms.InCooldownGroupId = InCooldownGroupId;
	Parms.InRemainMs = InRemainMs;
	Parms.InDurationMs = InDurationMs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdUpdateStackCooldownByGroup
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InCooldownGroupId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UnitStackValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentStackValue                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxStackValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdUpdateStackCooldownByGroup(int32 InCooldownGroupId, int32 UnitStackValue, int32 CurrentStackValue, int32 MaxStackValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdUpdateStackCooldownByGroup");

	Params::TLBuilderCommands_TLCmdUpdateStackCooldownByGroup Parms{};

	Parms.InCooldownGroupId = InCooldownGroupId;
	Parms.UnitStackValue = UnitStackValue;
	Parms.CurrentStackValue = CurrentStackValue;
	Parms.MaxStackValue = MaxStackValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdUserWidgetTraceAnimationParentWidgetName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InWidgetName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEmpty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdUserWidgetTraceAnimationParentWidgetName(class FName InWidgetName, bool InEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdUserWidgetTraceAnimationParentWidgetName");

	Params::TLBuilderCommands_TLCmdUserWidgetTraceAnimationParentWidgetName Parms{};

	Parms.InWidgetName = InWidgetName;
	Parms.InEmpty = InEmpty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdUserWidgetTraceAnimationSkiptName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InAnimationName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEmpty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdUserWidgetTraceAnimationSkiptName(class FName InAnimationName, bool InEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdUserWidgetTraceAnimationSkiptName");

	Params::TLBuilderCommands_TLCmdUserWidgetTraceAnimationSkiptName Parms{};

	Parms.InAnimationName = InAnimationName;
	Parms.InEmpty = InEmpty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmdUserWidgetTraceAnimationWidgetName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InWidgetName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEmpty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCmdUserWidgetTraceAnimationWidgetName(class FName InWidgetName, bool InEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmdUserWidgetTraceAnimationWidgetName");

	Params::TLBuilderCommands_TLCmdUserWidgetTraceAnimationWidgetName Parms{};

	Parms.InWidgetName = InWidgetName;
	Parms.InEmpty = InEmpty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmEMD
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmEMD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmEMD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmForgottenTemple
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmForgottenTemple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmForgottenTemple");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmGludioDungeon
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmGludioDungeon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmGludioDungeon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmGludioHarbor
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmGludioHarbor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmGludioHarbor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmGludioTown
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmGludioTown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmGludioTown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmInteractionTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmInteractionTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmInteractionTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmJumpTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmJumpTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmJumpTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmMapRegionTypeConflict
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmMapRegionTypeConflict()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmMapRegionTypeConflict");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmMovementTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmMovementTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmMovementTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmRebaseTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmRebaseTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmRebaseTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmSilverKnightTown
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmSilverKnightTown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmSilverKnightTown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmt
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmt");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmt1
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmt1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmt1");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmt11
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmt11()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmt11");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmt2
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmt2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmt2");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmTalkingIsland
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmTalkingIsland()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmTalkingIsland");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmTalkingIslandStartPos
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmTalkingIslandStartPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmTalkingIslandStartPos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCmWoodbeck
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCmWoodbeck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCmWoodbeck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCodex
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCodex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCodex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCollideSlidingCheckMargin
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InDist                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCollideSlidingCheckMargin(const float InDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCollideSlidingCheckMargin");

	Params::TLBuilderCommands_TLCollideSlidingCheckMargin Parms{};

	Parms.InDist = InDist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCollideStampede
// (Final, Exec, Native, Public)
// Parameters:
// float                                   MoveDurationSec                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCollideStampede(float MoveDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCollideStampede");

	Params::TLBuilderCommands_TLCollideStampede Parms{};

	Parms.MoveDurationSec = MoveDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCommandObj
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// class FString                           InParams                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCommandObj(class FString* InParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCommandObj");

	Params::TLBuilderCommands_TLCommandObj Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InParams != nullptr)
		*InParams = std::move(Parms.InParams);
}


// Function TLClient.TLBuilderCommands.TLCompleteContentsOpen
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCompleteContentsOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCompleteContentsOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCompleteCutsceneFromServer
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             CutSceneID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCompleteCutsceneFromServer(class FName CutSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCompleteCutsceneFromServer");

	Params::TLBuilderCommands_TLCompleteCutsceneFromServer Parms{};

	Parms.CutSceneID = CutSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCompleteInstanceMapGuideEvent
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InUnitGuid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCompleteInstanceMapGuideEvent(int64 InUnitGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCompleteInstanceMapGuideEvent");

	Params::TLBuilderCommands_TLCompleteInstanceMapGuideEvent Parms{};

	Parms.InUnitGuid = InUnitGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLConsoleHudScaleStep
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   StepValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLConsoleHudScaleStep(int32 StepValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLConsoleHudScaleStep");

	Params::TLBuilderCommands_TLConsoleHudScaleStep Parms{};

	Parms.StepValue = StepValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLConsoleLaunchURL
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInExternal                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLConsoleLaunchURL(bool bInExternal, const class FString& InUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLConsoleLaunchURL");

	Params::TLBuilderCommands_TLConsoleLaunchURL Parms{};

	Parms.bInExternal = bInExternal;
	Parms.InUrl = std::move(InUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLConsoleTargetPriorityR1KeyEnable
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLConsoleTargetPriorityR1KeyEnable(int32 bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLConsoleTargetPriorityR1KeyEnable");

	Params::TLBuilderCommands_TLConsoleTargetPriorityR1KeyEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLConsoleUIIngameMode
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLConsoleUIIngameMode(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLConsoleUIIngameMode");

	Params::TLBuilderCommands_TLConsoleUIIngameMode Parms{};

	Parms.bValue = bValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLContentsMarker
// (Final, Exec, Native, Public)
// Parameters:
// ETLContentsMarkerType                   InContentsMarkerType                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSet                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLContentsMarker(ETLContentsMarkerType InContentsMarkerType, bool bSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLContentsMarker");

	Params::TLBuilderCommands_TLContentsMarker Parms{};

	Parms.InContentsMarkerType = InContentsMarkerType;
	Parms.bSet = bSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLContentsOpen
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InContentName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLContentsOpen(class FName InContentName, bool bInOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLContentsOpen");

	Params::TLBuilderCommands_TLContentsOpen Parms{};

	Parms.InContentName = InContentName;
	Parms.bInOpen = bInOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLContentsOpenList
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLContentsOpenList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLContentsOpenList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCooldown
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCooldown(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCooldown");

	Params::TLBuilderCommands_TLCooldown Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCopyShowDebugStrToClipboard
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCopyShowDebugStrToClipboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCopyShowDebugStrToClipboard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCountClassObj
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ClassName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCountClassObj(const class FString& ClassName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCountClassObj");

	Params::TLBuilderCommands_TLCountClassObj Parms{};

	Parms.ClassName = std::move(ClassName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCrafting
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCrafting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCrafting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCraftingBook
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCraftingBook(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCraftingBook");

	Params::TLBuilderCommands_TLCraftingBook Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCraftingTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCraftingTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCraftingTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCrash
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCrash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCreateLevelLoadPin
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCreateLevelLoadPin(const float X, const float Y, const float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCreateLevelLoadPin");

	Params::TLBuilderCommands_TLCreateLevelLoadPin Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCreateLevelLoadPinMyPcPos
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCreateLevelLoadPinMyPcPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCreateLevelLoadPinMyPcPos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCreateMyPcGhost
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLCreateMyPcGhost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCreateMyPcGhost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCreateSavedPlace
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCreateSavedPlace(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCreateSavedPlace");

	Params::TLBuilderCommands_TLCreateSavedPlace Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCustomSceneChangeCamera
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InCameraIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCustomSceneChangeCamera(int32 InCameraIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCustomSceneChangeCamera");

	Params::TLBuilderCommands_TLCustomSceneChangeCamera Parms{};

	Parms.InCameraIndex = InCameraIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLCutsceneView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLCutsceneView(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLCutsceneView");

	Params::TLBuilderCommands_TLCutsceneView Parms{};

	Parms.bDisplay = bDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDeactivateGlobalTag
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InActivationTag                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDeactivateGlobalTag(const class FName InActivationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDeactivateGlobalTag");

	Params::TLBuilderCommands_TLDeactivateGlobalTag Parms{};

	Parms.InActivationTag = InActivationTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDebugClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDebugClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDebugClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDebugDrawReset
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDebugDrawReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDebugDrawReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDebugFavorite
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDebugFavorite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDebugFavorite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDeleteAITermsAgreeReset
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDeleteAITermsAgreeReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDeleteAITermsAgreeReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDelObjForce
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDelObjForce(const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDelObjForce");

	Params::TLBuilderCommands_TLDelObjForce Parms{};

	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDestroyLevelLoadPin
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDestroyLevelLoadPin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDestroyLevelLoadPin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDie
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieAll
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDieAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieAllExcept
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDieAllExcept(int32 ClassId, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieAllExcept");

	Params::TLBuilderCommands_TLDieAllExcept Parms{};

	Parms.ClassId = ClassId;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieAllForce
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDieAllForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieAllForce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieAllOnly
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDieAllOnly(int32 ClassId, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieAllOnly");

	Params::TLBuilderCommands_TLDieAllOnly Parms{};

	Parms.ClassId = ClassId;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieEffect
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FinalSaturation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FinalBrightness                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDieEffect(bool bShow, float BlendTime, float FinalSaturation, float FinalBrightness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieEffect");

	Params::TLBuilderCommands_TLDieEffect Parms{};

	Parms.bShow = bShow;
	Parms.BlendTime = BlendTime;
	Parms.FinalSaturation = FinalSaturation;
	Parms.FinalBrightness = FinalBrightness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieForce
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDieForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieForce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieObj
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDieObj(const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieObj");

	Params::TLBuilderCommands_TLDieObj Parms{};

	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieObjForce
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDieObjForce(const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieObjForce");

	Params::TLBuilderCommands_TLDieObjForce Parms{};

	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieObjTarget
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDieObjTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieObjTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieObjTargetForce
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDieObjTargetForce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieObjTargetForce");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDieRagdoll
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDieRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDieRagdoll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDirectDamage
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDirectDamage(int32 InDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDirectDamage");

	Params::TLBuilderCommands_TLDirectDamage Parms{};

	Parms.InDamage = InDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDisabilityClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDisabilityClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDisabilityClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDisabilityRemove
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             DisabilityName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDisabilityRemove(class FName DisabilityName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDisabilityRemove");

	Params::TLBuilderCommands_TLDisabilityRemove Parms{};

	Parms.DisabilityName = DisabilityName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDisabilitySet
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   DisabilityType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DisabilityName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DurationMs                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDisabilitySet(int32 DisabilityType, class FName DisabilityName, int32 DurationMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDisabilitySet");

	Params::TLBuilderCommands_TLDisabilitySet Parms{};

	Parms.DisabilityType = DisabilityType;
	Parms.DisabilityName = DisabilityName;
	Parms.DurationMs = DurationMs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDispelAll
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDispelAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDispelAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDispelAllMySelf
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDispelAllMySelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDispelAllMySelf");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDispelMySelf
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectUid                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDispelMySelf(int32 EffectUid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDispelMySelf");

	Params::TLBuilderCommands_TLDispelMySelf Parms{};

	Parms.EffectUid = EffectUid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDispelTarget
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InObjId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EffectUid                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDispelTarget(int32 InObjId, int32 EffectUid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDispelTarget");

	Params::TLBuilderCommands_TLDispelTarget Parms{};

	Parms.InObjId = InObjId;
	Parms.EffectUid = EffectUid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDM
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDM(int32 InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDM");

	Params::TLBuilderCommands_TLDM Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDM1
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InModeName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDM1(class FName InModeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDM1");

	Params::TLBuilderCommands_TLDM1 Parms{};

	Parms.InModeName = InModeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDM1Set
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InModeName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDM1Set(class FName InModeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDM1Set");

	Params::TLBuilderCommands_TLDM1Set Parms{};

	Parms.InModeName = InModeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDMClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMClearBit
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDMClearBit(int32 InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMClearBit");

	Params::TLBuilderCommands_TLDMClearBit Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDmDebugFontColorClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDmDebugFontColorClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDmDebugFontColorClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDmDebugFontColorSet
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InR                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InG                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InB                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDmDebugFontColorSet(int32 InR, int32 InG, int32 InB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDmDebugFontColorSet");

	Params::TLBuilderCommands_TLDmDebugFontColorSet Parms{};

	Parms.InR = InR;
	Parms.InG = InG;
	Parms.InB = InB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDmDebugStringOffsetClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDmDebugStringOffsetClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDmDebugStringOffsetClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDmDebugStringOffsetSet
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InOffsetX                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetY                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InOffsetZ                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDmDebugStringOffsetSet(float InOffsetX, float InOffsetY, float InOffsetZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDmDebugStringOffsetSet");

	Params::TLBuilderCommands_TLDmDebugStringOffsetSet Parms{};

	Parms.InOffsetX = InOffsetX;
	Parms.InOffsetY = InOffsetY;
	Parms.InOffsetZ = InOffsetZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMFixTarget
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InOn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDMFixTarget(bool InOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMFixTarget");

	Params::TLBuilderCommands_TLDMFixTarget Parms{};

	Parms.InOn = InOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMSet
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDMSet(int32 InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMSet");

	Params::TLBuilderCommands_TLDMSet Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMTarget
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   TargetId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDMTarget(int32 TargetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMTarget");

	Params::TLBuilderCommands_TLDMTarget Parms{};

	Parms.TargetId = TargetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMTargetBoss
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDMTargetBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMTargetBoss");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMTargetClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDMTargetClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMTargetClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMTargetGuid
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  TargetGuid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDMTargetGuid(uint64 TargetGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMTargetGuid");

	Params::TLBuilderCommands_TLDMTargetGuid Parms{};

	Parms.TargetGuid = TargetGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMTargetMyPC
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDMTargetMyPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMTargetMyPC");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMTargetOnCursor
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDMTargetOnCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMTargetOnCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDMToLogDuration
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   DurationMsec                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDMToLogDuration(int64 DurationMsec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDMToLogDuration");

	Params::TLBuilderCommands_TLDMToLogDuration Parms{};

	Parms.DurationMsec = DurationMsec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDoCheck
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDoCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDoCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDoEnsure
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDoEnsure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDoEnsure");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDoVerify
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDoVerify()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDoVerify");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDrawDebugBox
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           X                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Y                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Z                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ExtentSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NeedRebase                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSolid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDrawDebugBox(const class FString& X, const class FString& Y, const class FString& Z, float ExtentSize, float LifeTime, bool NeedRebase, bool bSolid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDrawDebugBox");

	Params::TLBuilderCommands_TLDrawDebugBox Parms{};

	Parms.X = std::move(X);
	Parms.Y = std::move(Y);
	Parms.Z = std::move(Z);
	Parms.ExtentSize = ExtentSize;
	Parms.LifeTime = LifeTime;
	Parms.NeedRebase = NeedRebase;
	Parms.bSolid = bSolid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDrawDebugBox2
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDrawDebugBox2(float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDrawDebugBox2");

	Params::TLBuilderCommands_TLDrawDebugBox2 Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDrawDirection
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Length                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDrawDirection(float X, float Y, float Z, float Length, float Thickness, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDrawDirection");

	Params::TLBuilderCommands_TLDrawDirection Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Length = Length;
	Parms.Thickness = Thickness;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDrawLine
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           X1                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Y1                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Z1                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           X2                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Y2                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Z2                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDrawLine(const class FString& X1, const class FString& Y1, const class FString& Z1, const class FString& X2, const class FString& Y2, const class FString& Z2, float Thickness, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDrawLine");

	Params::TLBuilderCommands_TLDrawLine Parms{};

	Parms.X1 = std::move(X1);
	Parms.Y1 = std::move(Y1);
	Parms.Z1 = std::move(Z1);
	Parms.X2 = std::move(X2);
	Parms.Y2 = std::move(Y2);
	Parms.Z2 = std::move(Z2);
	Parms.Thickness = Thickness;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDrawLine1
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDrawLine1(float X, float Y, float Z, float Thickness, float LifeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDrawLine1");

	Params::TLBuilderCommands_TLDrawLine1 Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;
	Parms.Thickness = Thickness;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDrawMovePacket
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDrawMovePacket(const int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDrawMovePacket");

	Params::TLBuilderCommands_TLDrawMovePacket Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDropItem
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDropItem(int32 ClassId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDropItem");

	Params::TLBuilderCommands_TLDropItem Parms{};

	Parms.ClassId = ClassId;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDropItemByName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ItemName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDropItemByName(class FName ItemName, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDropItemByName");

	Params::TLBuilderCommands_TLDropItemByName Parms{};

	Parms.ItemName = ItemName;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDumpActorTagMap
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDumpActorTagMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDumpActorTagMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDumpOption
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDumpOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDumpOption");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDumpTargetMaterialParamCtrl
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDumpTargetMaterialParamCtrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDumpTargetMaterialParamCtrl");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDynamicEventEffectObject
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    IsAdd                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ObjectId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             QuestEffectLooksKey                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDynamicEventEffectObject(bool IsAdd, int32 ObjectId, class FName QuestEffectLooksKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDynamicEventEffectObject");

	Params::TLBuilderCommands_TLDynamicEventEffectObject Parms{};

	Parms.IsAdd = IsAdd;
	Parms.ObjectId = ObjectId;
	Parms.QuestEffectLooksKey = QuestEffectLooksKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDynamicEventResult
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDynamicEventResult(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDynamicEventResult");

	Params::TLBuilderCommands_TLDynamicEventResult Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDynamicEventShowHud
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLDynamicEventShowHud()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDynamicEventShowHud");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDynamicEventSummary
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             LooksTableId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLRewardGroup                          RewardGroup                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDynamicEventSummary(class FName LooksTableId, ETLRewardGroup RewardGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDynamicEventSummary");

	Params::TLBuilderCommands_TLDynamicEventSummary Parms{};

	Parms.LooksTableId = LooksTableId;
	Parms.RewardGroup = RewardGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLDynamicEventTarget
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    IsEnter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Hp                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxHp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLDynamicEventTarget(bool IsEnter, float Hp, float MaxHp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLDynamicEventTarget");

	Params::TLBuilderCommands_TLDynamicEventTarget Parms{};

	Parms.IsEnter = IsEnter;
	Parms.Hp = Hp;
	Parms.MaxHp = MaxHp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEEAlert
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInAlert                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEEAlert(bool bInAlert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEEAlert");

	Params::TLBuilderCommands_TLEEAlert Parms{};

	Parms.bInAlert = bInAlert;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEECount
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InObjId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInStackable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InEffectId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEECount(int32 InObjId, bool bInStackable, const int32 InCount, class FName InEffectId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEECount");

	Params::TLBuilderCommands_TLEECount Parms{};

	Parms.InObjId = InObjId;
	Parms.bInStackable = bInStackable;
	Parms.InCount = InCount;
	Parms.InEffectId = InEffectId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffect
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffect(int32 EffectID, uint8 SkillLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffect");

	Params::TLBuilderCommands_TLEffect Parms{};

	Parms.EffectID = EffectID;
	Parms.SkillLevel = SkillLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectDirectDamageDetail
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectPropId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CasterId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InDamage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RetHp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   HitType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectDirectDamageDetail(int32 EffectPropId, int32 CasterId, int32 TargetId, int32 InDamage, int32 RetHp, int32 HitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectDirectDamageDetail");

	Params::TLBuilderCommands_TLEffectDirectDamageDetail Parms{};

	Parms.EffectPropId = EffectPropId;
	Parms.CasterId = CasterId;
	Parms.TargetId = TargetId;
	Parms.InDamage = InDamage;
	Parms.RetHp = RetHp;
	Parms.HitType = HitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectExpire
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   AbnormalInstanceId                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectExpire(int32 AbnormalInstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectExpire");

	Params::TLBuilderCommands_TLEffectExpire Parms{};

	Parms.AbnormalInstanceId = AbnormalInstanceId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectMiss
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLEffectMiss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectMiss");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectStart
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalMs                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AbnormalInstanceId                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OverlapCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectStart(int32 EffectID, int32 TotalMs, int32 AbnormalInstanceId, int32 OverlapCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectStart");

	Params::TLBuilderCommands_TLEffectStart Parms{};

	Parms.EffectID = EffectID;
	Parms.TotalMs = TotalMs;
	Parms.AbnormalInstanceId = AbnormalInstanceId;
	Parms.OverlapCount = OverlapCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectToMe
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectToMe(int32 EffectID, uint8 SkillLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectToMe");

	Params::TLBuilderCommands_TLEffectToMe Parms{};

	Parms.EffectID = EffectID;
	Parms.SkillLevel = SkillLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectToMeByName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             EffectName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectToMeByName(class FName EffectName, uint8 SkillLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectToMeByName");

	Params::TLBuilderCommands_TLEffectToMeByName Parms{};

	Parms.EffectName = EffectName;
	Parms.SkillLevel = SkillLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectToMyself
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectToMyself(int32 EffectID, uint8 SkillLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectToMyself");

	Params::TLBuilderCommands_TLEffectToMyself Parms{};

	Parms.EffectID = EffectID;
	Parms.SkillLevel = SkillLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectToMyselfByName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             EffectName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectToMyselfByName(class FName EffectName, uint8 SkillLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectToMyselfByName");

	Params::TLBuilderCommands_TLEffectToMyselfByName Parms{};

	Parms.EffectName = EffectName;
	Parms.SkillLevel = SkillLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectToTarget
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectToTarget(int32 EffectID, uint8 SkillLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectToTarget");

	Params::TLBuilderCommands_TLEffectToTarget Parms{};

	Parms.EffectID = EffectID;
	Parms.SkillLevel = SkillLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectToTargetByName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             EffectName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectToTargetByName(class FName EffectName, uint8 SkillLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectToTargetByName");

	Params::TLBuilderCommands_TLEffectToTargetByName Parms{};

	Parms.EffectName = EffectName;
	Parms.SkillLevel = SkillLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectToTargetSelf
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectToTargetSelf(int32 EffectID, uint8 SkillLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectToTargetSelf");

	Params::TLBuilderCommands_TLEffectToTargetSelf Parms{};

	Parms.EffectID = EffectID;
	Parms.SkillLevel = SkillLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectToTargetSelfByName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             EffectName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectToTargetSelfByName(class FName EffectName, uint8 SkillLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectToTargetSelfByName");

	Params::TLBuilderCommands_TLEffectToTargetSelfByName Parms{};

	Parms.EffectName = EffectName;
	Parms.SkillLevel = SkillLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEffectUpdate
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalMs                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldAbnormalInstanceId                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AbnormalInstanceId                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OverlapCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEffectUpdate(int32 EffectID, int32 TotalMs, int32 OldAbnormalInstanceId, int32 AbnormalInstanceId, int32 OverlapCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEffectUpdate");

	Params::TLBuilderCommands_TLEffectUpdate Parms{};

	Parms.EffectID = EffectID;
	Parms.TotalMs = TotalMs;
	Parms.OldAbnormalInstanceId = OldAbnormalInstanceId;
	Parms.AbnormalInstanceId = AbnormalInstanceId;
	Parms.OverlapCount = OverlapCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEnablePerfChart
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           FullPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReplayFileName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEnablePerfChart(const class FString& FullPath, const class FString& ReplayFileName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEnablePerfChart");

	Params::TLBuilderCommands_TLEnablePerfChart Parms{};

	Parms.FullPath = std::move(FullPath);
	Parms.ReplayFileName = std::move(ReplayFileName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEnchant
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLEnchant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEnchant");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEnchantChangeItem
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ItemName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEnchantChangeItem(class FName ItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEnchantChangeItem");

	Params::TLBuilderCommands_TLEnchantChangeItem Parms{};

	Parms.ItemName = ItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEnchantPlayTestSct
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLEnchantPlayTestSct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEnchantPlayTestSct");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEnchantTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLEnchantTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEnchantTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEndDeathwork
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLEndDeathwork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEndDeathwork");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEndStandbyAll
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLEndStandbyAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEndStandbyAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEnterRegion
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Guid                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEnterRegion(const class FString& Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEnterRegion");

	Params::TLBuilderCommands_TLEnterRegion Parms{};

	Parms.Guid = std::move(Guid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEOE
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEOE(int32 InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEOE");

	Params::TLBuilderCommands_TLEOE Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEquipArmor
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InTargetUniqueID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEquipArmor(int32 InTargetUniqueID, int32 InItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEquipArmor");

	Params::TLBuilderCommands_TLEquipArmor Parms{};

	Parms.InTargetUniqueID = InTargetUniqueID;
	Parms.InItemID = InItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEquipCostume
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InTargetUniqueID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InCostumeID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEquipCostume(int32 InTargetUniqueID, class FName InCostumeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEquipCostume");

	Params::TLBuilderCommands_TLEquipCostume Parms{};

	Parms.InTargetUniqueID = InTargetUniqueID;
	Parms.InCostumeID = InCostumeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEquipWeapon
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InTargetUniqueID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEquipWeapon(int32 InTargetUniqueID, int32 InItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEquipWeapon");

	Params::TLBuilderCommands_TLEquipWeapon Parms{};

	Parms.InTargetUniqueID = InTargetUniqueID;
	Parms.InItemID = InItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLEventScene
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InRowName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLEventScene(class FName InRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLEventScene");

	Params::TLBuilderCommands_TLEventScene Parms{};

	Parms.InRowName = InRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFindAllIntersctedSceneNode
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X1                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y1                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z1                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   X2                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y2                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z2                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLFindAllIntersctedSceneNode(const float X1, const float Y1, const float Z1, const float X2, const float Y2, const float Z2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFindAllIntersctedSceneNode");

	Params::TLBuilderCommands_TLFindAllIntersctedSceneNode Parms{};

	Parms.X1 = X1;
	Parms.Y1 = Y1;
	Parms.Z1 = Z1;
	Parms.X2 = X2;
	Parms.Y2 = Y2;
	Parms.Z2 = Z2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFindNaviPath
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLFindNaviPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFindNaviPath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFindNaviPathMouseGraphCitizen
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLFindNaviPathMouseGraphCitizen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFindNaviPathMouseGraphCitizen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFindNaviPathMouseGraphCitizenPos
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLFindNaviPathMouseGraphCitizenPos(float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFindNaviPathMouseGraphCitizenPos");

	Params::TLBuilderCommands_TLFindNaviPathMouseGraphCitizenPos Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFindNaviPathMouseGraphMonster
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLFindNaviPathMouseGraphMonster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFindNaviPathMouseGraphMonster");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFindNaviPathMouseGraphMonsterPos
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLFindNaviPathMouseGraphMonsterPos(float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFindNaviPathMouseGraphMonsterPos");

	Params::TLBuilderCommands_TLFindNaviPathMouseGraphMonsterPos Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFindNaviPathMouseGraphPlayer
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLFindNaviPathMouseGraphPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFindNaviPathMouseGraphPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFindNaviPathMouseGraphPlayerPos
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLFindNaviPathMouseGraphPlayerPos(float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFindNaviPathMouseGraphPlayerPos");

	Params::TLBuilderCommands_TLFindNaviPathMouseGraphPlayerPos Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFindNaviPathPos
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLFindNaviPathPos(float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFindNaviPathPos");

	Params::TLBuilderCommands_TLFindNaviPathPos Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFlushLines
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLFlushLines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFlushLines");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFOChangeContiState
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ContiState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLFOChangeContiState(class FName ContiState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFOChangeContiState");

	Params::TLBuilderCommands_TLFOChangeContiState Parms{};

	Parms.ContiState = ContiState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFollowObjectStart
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLFollowObjectStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFollowObjectStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFollowObjectStop
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLFollowObjectStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFollowObjectStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFoPlayCueSheet
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             CueSheetName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLFoPlayCueSheet(class FName CueSheetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFoPlayCueSheet");

	Params::TLBuilderCommands_TLFoPlayCueSheet Parms{};

	Parms.CueSheetName = CueSheetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLForcefeedBack
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// class FString                           ForceFeedback                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLForcefeedBack(class FString* ForceFeedback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLForcefeedBack");

	Params::TLBuilderCommands_TLForcefeedBack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ForceFeedback != nullptr)
		*ForceFeedback = std::move(Parms.ForceFeedback);
}


// Function TLClient.TLBuilderCommands.TLForceFeedbackIgnore
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bIgnore                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLForceFeedbackIgnore(bool bIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLForceFeedbackIgnore");

	Params::TLBuilderCommands_TLForceFeedbackIgnore Parms{};

	Parms.bIgnore = bIgnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFoRevive
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   LifePercentage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLFoRevive(int32 LifePercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFoRevive");

	Params::TLBuilderCommands_TLFoRevive Parms{};

	Parms.LifePercentage = LifePercentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFreeCameraRollStep
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InStep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLFreeCameraRollStep(float InStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFreeCameraRollStep");

	Params::TLBuilderCommands_TLFreeCameraRollStep Parms{};

	Parms.InStep = InStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLFRUpdateMemberStatus
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InPcId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InOnline                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLFRUpdateMemberStatus(int64 InPcId, bool InOnline)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLFRUpdateMemberStatus");

	Params::TLBuilderCommands_TLFRUpdateMemberStatus Parms{};

	Parms.InPcId = InPcId;
	Parms.InOnline = InOnline;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGacha
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInActivate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GachaItemId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGacha(bool bInActivate, int32 GachaItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGacha");

	Params::TLBuilderCommands_TLGacha Parms{};

	Parms.bInActivate = bInActivate;
	Parms.GachaItemId = GachaItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGacha2
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInActivate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGachaItemLevel                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGacha2(bool bInActivate, int32 InItemCount, int32 InGachaItemLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGacha2");

	Params::TLBuilderCommands_TLGacha2 Parms{};

	Parms.bInActivate = bInActivate;
	Parms.InItemCount = InItemCount;
	Parms.InGachaItemLevel = InGachaItemLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGameFlowView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGameFlowView(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGameFlowView");

	Params::TLBuilderCommands_TLGameFlowView Parms{};

	Parms.bDisplay = bDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGamepadFreeMouseCursor
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bFree                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGamepadFreeMouseCursor(bool bFree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGamepadFreeMouseCursor");

	Params::TLBuilderCommands_TLGamepadFreeMouseCursor Parms{};

	Parms.bFree = bFree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGamepadType
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InXbox                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGamepadType(bool InXbox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGamepadType");

	Params::TLBuilderCommands_TLGamepadType Parms{};

	Parms.InXbox = InXbox;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGameValueGet
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InGameValueName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGameValueGet(class FName InGameValueName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGameValueGet");

	Params::TLBuilderCommands_TLGameValueGet Parms{};

	Parms.InGameValueName = InGameValueName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGameValueSet
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InGameValueName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InGameValueString                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGameValueSet(class FName InGameValueName, const class FString& InGameValueString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGameValueSet");

	Params::TLBuilderCommands_TLGameValueSet Parms{};

	Parms.InGameValueName = InGameValueName;
	Parms.InGameValueString = std::move(InGameValueString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGarbageCollectionReferenceCheck
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLGarbageCollectionReferenceCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGarbageCollectionReferenceCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGarbageCollectionReferenceCheckAbnormalLooks
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InAbnormalLooksName                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGarbageCollectionReferenceCheckAbnormalLooks(class FName InAbnormalLooksName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGarbageCollectionReferenceCheckAbnormalLooks");

	Params::TLBuilderCommands_TLGarbageCollectionReferenceCheckAbnormalLooks Parms{};

	Parms.InAbnormalLooksName = InAbnormalLooksName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGetAITermsAgreeInfo
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLGetAITermsAgreeInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGetAITermsAgreeInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGetPlayerCatalog
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLGetPlayerCatalog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGetPlayerCatalog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGetProfileImage
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLGetProfileImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGetProfileImage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGetSpecialShopGameCategories
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLGetSpecialShopGameCategories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGetSpecialShopGameCategories");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGetUserExpiringCurrency
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLGetUserExpiringCurrency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGetUserExpiringCurrency");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGetUserPrivacySettings
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLGetUserPrivacySettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGetUserPrivacySettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGlidingSetIgnoreGravitySec
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InSec                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGlidingSetIgnoreGravitySec(float InSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGlidingSetIgnoreGravitySec");

	Params::TLBuilderCommands_TLGlidingSetIgnoreGravitySec Parms{};

	Parms.InSec = InSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGlobalSettingChange
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Param                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGlobalSettingChange(class FName Param, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGlobalSettingChange");

	Params::TLBuilderCommands_TLGlobalSettingChange Parms{};

	Parms.Param = Param;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGod
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bGod                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGod(bool bGod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGod");

	Params::TLBuilderCommands_TLGod Parms{};

	Parms.bGod = bGod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGodAll
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bGod                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGodAll(bool bGod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGodAll");

	Params::TLBuilderCommands_TLGodAll Parms{};

	Parms.bGod = bGod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGodMe
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bGod                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGodMe(bool bGod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGodMe");

	Params::TLBuilderCommands_TLGodMe Parms{};

	Parms.bGod = bGod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGoTo
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGoTo(const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGoTo");

	Params::TLBuilderCommands_TLGoTo Parms{};

	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGridMouseGround
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GridCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGridMouseGround(bool bShow, int32 GridCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGridMouseGround");

	Params::TLBuilderCommands_TLGridMouseGround Parms{};

	Parms.bShow = bShow;
	Parms.GridCount = GridCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGridObject
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GridCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGridObject(int32 ObjId, bool bOn, int32 GridCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGridObject");

	Params::TLBuilderCommands_TLGridObject Parms{};

	Parms.ObjId = ObjId;
	Parms.bOn = bOn;
	Parms.GridCount = GridCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGridObjectMouse
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GridCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGridObjectMouse(bool bShow, int32 GridCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGridObjectMouse");

	Params::TLBuilderCommands_TLGridObjectMouse Parms{};

	Parms.bShow = bShow;
	Parms.GridCount = GridCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGridObjectTarget
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GridCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGridObjectTarget(bool bShow, int32 GridCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGridObjectTarget");

	Params::TLBuilderCommands_TLGridObjectTarget Parms{};

	Parms.bShow = bShow;
	Parms.GridCount = GridCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGuildContractComplete
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InContractGuid                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InContractGroupGuid                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGuildContractComplete(const class FString& InContractGuid, const class FString& InContractGroupGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGuildContractComplete");

	Params::TLBuilderCommands_TLGuildContractComplete Parms{};

	Parms.InContractGuid = std::move(InContractGuid);
	Parms.InContractGroupGuid = std::move(InContractGroupGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGuildContractStart
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InContractGuid                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InContractGroupGuid                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGuildContractStart(const class FString& InContractGuid, const class FString& InContractGroupGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGuildContractStart");

	Params::TLBuilderCommands_TLGuildContractStart Parms{};

	Parms.InContractGuid = std::move(InContractGuid);
	Parms.InContractGroupGuid = std::move(InContractGroupGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGuildEmblemUpdate
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EmblemIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EmblemColorIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGuildEmblemUpdate(int32 EmblemIndex, int32 EmblemColorIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGuildEmblemUpdate");

	Params::TLBuilderCommands_TLGuildEmblemUpdate Parms{};

	Parms.EmblemIndex = EmblemIndex;
	Parms.EmblemColorIndex = EmblemColorIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGuildMasterDelegate
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGuildMasterDelegate(int32 InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGuildMasterDelegate");

	Params::TLBuilderCommands_TLGuildMasterDelegate Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGuildRaidChange
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InUID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGuildRaidChange(int32 InUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGuildRaidChange");

	Params::TLBuilderCommands_TLGuildRaidChange Parms{};

	Parms.InUID = InUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGuildRaidResurrection
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsExitGuildRaid                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGuildRaidResurrection(bool InIsExitGuildRaid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGuildRaidResurrection");

	Params::TLBuilderCommands_TLGuildRaidResurrection Parms{};

	Parms.InIsExitGuildRaid = InIsExitGuildRaid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGuildRaidToggle
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLGuildRaidToggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGuildRaidToggle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLGuildSkillResurrection
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsAdd                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLGuildSkillResurrection(bool InIsAdd, int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLGuildSkillResurrection");

	Params::TLBuilderCommands_TLGuildSkillResurrection Parms{};

	Parms.InIsAdd = InIsAdd;
	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHideHpUI
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideHp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLHideHpUI(int32 ID, bool bHideHp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHideHpUI");

	Params::TLBuilderCommands_TLHideHpUI Parms{};

	Parms.ID = ID;
	Parms.bHideHp = bHideHp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHideInGameRootChild
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ChildIdx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLHideInGameRootChild(int32 ChildIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHideInGameRootChild");

	Params::TLBuilderCommands_TLHideInGameRootChild Parms{};

	Parms.ChildIdx = ChildIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHideInGameRootChildChild
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ChildIdx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChildChildIdx                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLHideInGameRootChildChild(int32 ChildIdx, int32 ChildChildIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHideInGameRootChildChild");

	Params::TLBuilderCommands_TLHideInGameRootChildChild Parms{};

	Parms.ChildIdx = ChildIdx;
	Parms.ChildChildIdx = ChildChildIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHideLayerAll
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInHide                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLHideLayerAll(bool bInHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHideLayerAll");

	Params::TLBuilderCommands_TLHideLayerAll Parms{};

	Parms.bInHide = bInHide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHideRadial
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLHideRadial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHideRadial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHideWidgetChild
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InWidgetKey                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChildIdx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLHideWidgetChild(class FName InWidgetKey, int32 ChildIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHideWidgetChild");

	Params::TLBuilderCommands_TLHideWidgetChild Parms{};

	Parms.InWidgetKey = InWidgetKey;
	Parms.ChildIdx = ChildIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHitNavPoint
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ScreenX                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ScreenY                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLHitNavPoint(int32 ScreenX, int32 ScreenY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHitNavPoint");

	Params::TLBuilderCommands_TLHitNavPoint Parms{};

	Parms.ScreenX = ScreenX;
	Parms.ScreenY = ScreenY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHudCust
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLHudCust(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHudCust");

	Params::TLBuilderCommands_TLHudCust Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHudCustAnchors
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLHudCustAnchors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHudCustAnchors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHudCustClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLHudCustClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHudCustClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHudCustForceClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLHudCustForceClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHudCustForceClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHudScale
// (Final, Exec, Native, Public)
// Parameters:
// float                                   ScaleValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLHudScale(float ScaleValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHudScale");

	Params::TLBuilderCommands_TLHudScale Parms{};

	Parms.ScaleValue = ScaleValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLHudScaleStep
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   StepValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLHudScaleStep(int32 StepValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLHudScaleStep");

	Params::TLBuilderCommands_TLHudScaleStep Parms{};

	Parms.StepValue = StepValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLIgnoreInput
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLIgnoreInput(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLIgnoreInput");

	Params::TLBuilderCommands_TLIgnoreInput Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInputStack
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLInputStack(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInputStack");

	Params::TLBuilderCommands_TLInputStack Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInputStackAnyKey
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLInputStackAnyKey(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInputStackAnyKey");

	Params::TLBuilderCommands_TLInputStackAnyKey Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInputStackAnyKeyAllEvent
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLInputStackAnyKeyAllEvent(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInputStackAnyKeyAllEvent");

	Params::TLBuilderCommands_TLInputStackAnyKeyAllEvent Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInputStackAnyKeyExcepBase
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllEvent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLInputStackAnyKeyExcepBase(bool InShow, bool bAllEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInputStackAnyKeyExcepBase");

	Params::TLBuilderCommands_TLInputStackAnyKeyExcepBase Parms{};

	Parms.InShow = InShow;
	Parms.bAllEvent = bAllEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInputStackKey
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             KeyName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLInputStackKey(bool InShow, class FName KeyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInputStackKey");

	Params::TLBuilderCommands_TLInputStackKey Parms{};

	Parms.InShow = InShow;
	Parms.KeyName = KeyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInputStackKeyAllEvent
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             KeyName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLInputStackKeyAllEvent(bool InShow, class FName KeyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInputStackKeyAllEvent");

	Params::TLBuilderCommands_TLInputStackKeyAllEvent Parms{};

	Parms.InShow = InShow;
	Parms.KeyName = KeyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInspectionEventScene
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ObjectiveHexGuids                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLInspectionEventScene(const class FString& ObjectiveHexGuids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInspectionEventScene");

	Params::TLBuilderCommands_TLInspectionEventScene Parms{};

	Parms.ObjectiveHexGuids = std::move(ObjectiveHexGuids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInteractionCamera
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Preset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ScreenMessageTitle                                     (Parm, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLInteractionCamera(class FName Preset, float Duration, const class FText& ScreenMessageTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInteractionCamera");

	Params::TLBuilderCommands_TLInteractionCamera Parms{};

	Parms.Preset = Preset;
	Parms.Duration = Duration;
	Parms.ScreenMessageTitle = std::move(ScreenMessageTitle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInteractionCameraStop
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLInteractionCameraStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInteractionCameraStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInteractionCameraWithScreenMessage
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Preset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ScreenMessageTitle                                     (Parm, NativeAccessSpecifierPublic)
// float                                   InDelayTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLInteractionCameraWithScreenMessage(class FName Preset, float Duration, const class FText& ScreenMessageTitle, float InDelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInteractionCameraWithScreenMessage");

	Params::TLBuilderCommands_TLInteractionCameraWithScreenMessage Parms{};

	Parms.Preset = Preset;
	Parms.Duration = Duration;
	Parms.ScreenMessageTitle = std::move(ScreenMessageTitle);
	Parms.InDelayTime = InDelayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLInvisibleObject
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bMyPc                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOtherPc                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNpc                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFo                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bItem                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCarrier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExtraObject                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLInvisibleObject(bool bMyPc, bool bOtherPc, bool bNpc, bool bFo, bool bItem, bool bCarrier, bool bExtraObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLInvisibleObject");

	Params::TLBuilderCommands_TLInvisibleObject Parms{};

	Parms.bMyPc = bMyPc;
	Parms.bOtherPc = bOtherPc;
	Parms.bNpc = bNpc;
	Parms.bFo = bFo;
	Parms.bItem = bItem;
	Parms.bCarrier = bCarrier;
	Parms.bExtraObject = bExtraObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLIsOpenDungeonWaypoint
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InUID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLIsOpenDungeonWaypoint(int32 InUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLIsOpenDungeonWaypoint");

	Params::TLBuilderCommands_TLIsOpenDungeonWaypoint Parms{};

	Parms.InUID = InUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLItemCollection
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLItemCollection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLItemCollection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLItemDecomposition
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLItemDecomposition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLItemDecomposition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLItemDropAction
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLItemDropAction(const int32 ObjId, float DurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLItemDropAction");

	Params::TLBuilderCommands_TLItemDropAction Parms{};

	Parms.ObjId = ObjId;
	Parms.DurationSec = DurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLItemEquip
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemClassId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLItemEquip(int32 SlotIndex, int32 ItemClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLItemEquip");

	Params::TLBuilderCommands_TLItemEquip Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.ItemClassId = ItemClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLItemOwnerPcId
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OwnerPcId                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLItemOwnerPcId(const int32 ObjId, const int32 OwnerPcId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLItemOwnerPcId");

	Params::TLBuilderCommands_TLItemOwnerPcId Parms{};

	Parms.ObjId = ObjId;
	Parms.OwnerPcId = OwnerPcId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLItemSetAttackSpeedBaseline
// (Final, Exec, Native, Public)
// Parameters:
// float                                   AttackSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLItemSetAttackSpeedBaseline(float AttackSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLItemSetAttackSpeedBaseline");

	Params::TLBuilderCommands_TLItemSetAttackSpeedBaseline Parms{};

	Parms.AttackSpeed = AttackSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLItemUnequip
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLItemUnequip(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLItemUnequip");

	Params::TLBuilderCommands_TLItemUnequip Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLeaveEnterAtOnce
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjectId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLLeaveEnterAtOnce(int32 ObjectId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLeaveEnterAtOnce");

	Params::TLBuilderCommands_TLLeaveEnterAtOnce Parms{};

	Parms.ObjectId = ObjectId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLevel
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLLevel(int32 InLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLevel");

	Params::TLBuilderCommands_TLLevel Parms{};

	Parms.InLevel = InLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLobbyCharacterRotateAmount
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLLobbyCharacterRotateAmount(float InAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLobbyCharacterRotateAmount");

	Params::TLBuilderCommands_TLLobbyCharacterRotateAmount Parms{};

	Parms.InAmount = InAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLobbyCharacterRotateSpeed
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLLobbyCharacterRotateSpeed(float InSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLobbyCharacterRotateSpeed");

	Params::TLBuilderCommands_TLLobbyCharacterRotateSpeed Parms{};

	Parms.InSpeed = InSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLockOnTarget
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLLockOnTarget(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLockOnTarget");

	Params::TLBuilderCommands_TLLockOnTarget Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLogFlagClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLLogFlagClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLogFlagClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLogFlagSet
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ShowFlagIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLLogFlagSet(int32 ShowFlagIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLogFlagSet");

	Params::TLBuilderCommands_TLLogFlagSet Parms{};

	Parms.ShowFlagIndex = ShowFlagIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLogFlagToggle
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ShowFlagIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLLogFlagToggle(int32 ShowFlagIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLogFlagToggle");

	Params::TLBuilderCommands_TLLogFlagToggle Parms{};

	Parms.ShowFlagIndex = ShowFlagIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLoginQueueUpdateCapacity
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   MaxCapacity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BatchCapacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RealmID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLLoginQueueUpdateCapacity(int32 MaxCapacity, int32 BatchCapacity, int32 RealmID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLoginQueueUpdateCapacity");

	Params::TLBuilderCommands_TLLoginQueueUpdateCapacity Parms{};

	Parms.MaxCapacity = MaxCapacity;
	Parms.BatchCapacity = BatchCapacity;
	Parms.RealmID = RealmID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLogTarget
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   TargetId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLLogTarget(int32 TargetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLogTarget");

	Params::TLBuilderCommands_TLLogTarget Parms{};

	Parms.TargetId = TargetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLogTeardown
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLLogTeardown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLogTeardown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLLookAtTargetCameraZOffset
// (Final, Exec, Native, Public)
// Parameters:
// float                                   ZOffset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLLookAtTargetCameraZOffset(float ZOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLLookAtTargetCameraZOffset");

	Params::TLBuilderCommands_TLLookAtTargetCameraZOffset Parms{};

	Parms.ZOffset = ZOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMacro
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             MacroId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMacro(class FName MacroId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMacro");

	Params::TLBuilderCommands_TLMacro Parms{};

	Parms.MacroId = MacroId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMacroLoop
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             MacroId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StepDelay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LastStepDelay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMacroLoop(class FName MacroId, float StepDelay, float LastStepDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMacroLoop");

	Params::TLBuilderCommands_TLMacroLoop Parms{};

	Parms.MacroId = MacroId;
	Parms.StepDelay = StepDelay;
	Parms.LastStepDelay = LastStepDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMacroStop
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLMacroStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMacroStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMagicDollDialogEvent
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InDialogEvent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMagicDollDialogEvent(class FName InDialogEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMagicDollDialogEvent");

	Params::TLBuilderCommands_TLMagicDollDialogEvent Parms{};

	Parms.InDialogEvent = InDialogEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMapGraphPathCitizen
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLMapGraphPathCitizen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMapGraphPathCitizen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMapGraphPathCitizen1
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMapGraphPathCitizen1(const float X, const float Y, const float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMapGraphPathCitizen1");

	Params::TLBuilderCommands_TLMapGraphPathCitizen1 Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMapGraphPathMonster
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLMapGraphPathMonster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMapGraphPathMonster");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMapGraphPathMonster1
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMapGraphPathMonster1(const float X, const float Y, const float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMapGraphPathMonster1");

	Params::TLBuilderCommands_TLMapGraphPathMonster1 Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMapIconCollisionTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLMapIconCollisionTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMapIconCollisionTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMapNpcInfo
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InNpcRaceKey                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMapNpcInfo(class FName InNpcRaceKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMapNpcInfo");

	Params::TLBuilderCommands_TLMapNpcInfo Parms{};

	Parms.InNpcRaceKey = InNpcRaceKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMapScaleMax
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMapScaleMax(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMapScaleMax");

	Params::TLBuilderCommands_TLMapScaleMax Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMapScaleMin
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMapScaleMin(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMapScaleMin");

	Params::TLBuilderCommands_TLMapScaleMin Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMapSceneContiOff
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMapSceneContiOff(int32 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMapSceneContiOff");

	Params::TLBuilderCommands_TLMapSceneContiOff Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMapSceneContiOn
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InX                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InY                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InZ                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMapSceneContiOn(int32 Guid, float InX, float InY, float InZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMapSceneContiOn");

	Params::TLBuilderCommands_TLMapSceneContiOn Parms{};

	Parms.Guid = Guid;
	Parms.InX = InX;
	Parms.InY = InY;
	Parms.InZ = InZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMasterVolume
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InVolume                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMasterVolume(int32 InVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMasterVolume");

	Params::TLBuilderCommands_TLMasterVolume Parms{};

	Parms.InVolume = InVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMemorialInfo
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLMemorialInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMemorialInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMemorialRecordCountChanged
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InGuid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMemorialRecordCountChanged(uint64 InGuid, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMemorialRecordCountChanged");

	Params::TLBuilderCommands_TLMemorialRecordCountChanged Parms{};

	Parms.InGuid = InGuid;
	Parms.InCount = InCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMemoryDelete
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLMemoryDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMemoryDelete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMemoryLeakInt32
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ArraySize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMemoryLeakInt32(int32 ArraySize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMemoryLeakInt32");

	Params::TLBuilderCommands_TLMemoryLeakInt32 Parms{};

	Parms.ArraySize = ArraySize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMemoryLeakMB
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumMB                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMemoryLeakMB(int32 NumMB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMemoryLeakMB");

	Params::TLBuilderCommands_TLMemoryLeakMB Parms{};

	Parms.NumMB = NumMB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMemoryNewMB
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumMB                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMemoryNewMB(int32 NumMB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMemoryNewMB");

	Params::TLBuilderCommands_TLMemoryNewMB Parms{};

	Parms.NumMB = NumMB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMessage
// (Final, Exec, Native, Public)
// Parameters:
// class FText                             Message                                                (Parm, NativeAccessSpecifierPublic)
// class FText                             Argument0                                              (Parm, NativeAccessSpecifierPublic)
// class FText                             Argument1                                              (Parm, NativeAccessSpecifierPublic)
// class FText                             Argument2                                              (Parm, NativeAccessSpecifierPublic)
// class FText                             Argument3                                              (Parm, NativeAccessSpecifierPublic)
// class FText                             Argument4                                              (Parm, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMessage(const class FText& Message, const class FText& Argument0, const class FText& Argument1, const class FText& Argument2, const class FText& Argument3, const class FText& Argument4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMessage");

	Params::TLBuilderCommands_TLMessage Parms{};

	Parms.Message = std::move(Message);
	Parms.Argument0 = std::move(Argument0);
	Parms.Argument1 = std::move(Argument1);
	Parms.Argument2 = std::move(Argument2);
	Parms.Argument3 = std::move(Argument3);
	Parms.Argument4 = std::move(Argument4);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMiniMapScaleMax
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMiniMapScaleMax(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMiniMapScaleMax");

	Params::TLBuilderCommands_TLMiniMapScaleMax Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMiniMapScaleMin
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMiniMapScaleMin(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMiniMapScaleMin");

	Params::TLBuilderCommands_TLMiniMapScaleMin Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLModelSocketPointName
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SocketPointIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLModelSocketPointName(int32 SocketPointIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLModelSocketPointName");

	Params::TLBuilderCommands_TLModelSocketPointName Parms{};

	Parms.SocketPointIndex = SocketPointIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMouseCaptureMode
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMouseCaptureMode(int32 InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMouseCaptureMode");

	Params::TLBuilderCommands_TLMouseCaptureMode Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMouseDragOn
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMouseDragOn(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMouseDragOn");

	Params::TLBuilderCommands_TLMouseDragOn Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMouseIgnoreInput
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIgnore                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMouseIgnoreInput(bool InIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMouseIgnoreInput");

	Params::TLBuilderCommands_TLMouseIgnoreInput Parms{};

	Parms.InIgnore = InIgnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMouseInputMode
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InOn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMouseInputMode(bool InOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMouseInputMode");

	Params::TLBuilderCommands_TLMouseInputMode Parms{};

	Parms.InOn = InOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMouseLockMode
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMouseLockMode(int32 InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMouseLockMode");

	Params::TLBuilderCommands_TLMouseLockMode Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMouseSetHideCursorDuringCapture
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InHideCursor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMouseSetHideCursorDuringCapture(bool InHideCursor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMouseSetHideCursorDuringCapture");

	Params::TLBuilderCommands_TLMouseSetHideCursorDuringCapture Parms{};

	Parms.InHideCursor = InHideCursor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMouseShowCursor
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMouseShowCursor(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMouseShowCursor");

	Params::TLBuilderCommands_TLMouseShowCursor Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMoveDirect
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLMoveDirect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMoveDirect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMoveObjectToObject
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   DurationMs                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DestObjId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMoveObjectToObject(int32 DurationMs, int32 DestObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMoveObjectToObject");

	Params::TLBuilderCommands_TLMoveObjectToObject Parms{};

	Parms.DurationMs = DurationMs;
	Parms.DestObjId = DestObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMoveStop
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLMoveStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMoveStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMoveSync
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    MoveSyncOn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMoveSync(bool MoveSyncOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMoveSync");

	Params::TLBuilderCommands_TLMoveSync Parms{};

	Parms.MoveSyncOn = MoveSyncOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMoveToLobby
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLMoveToLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMoveToLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMoveToObj
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMoveToObj(const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMoveToObj");

	Params::TLBuilderCommands_TLMoveToObj Parms{};

	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMoveToTarget
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   DurationMs                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMoveToTarget(int32 DurationMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMoveToTarget");

	Params::TLBuilderCommands_TLMoveToTarget Parms{};

	Parms.DurationMs = DurationMs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMoviePlayerView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMoviePlayerView(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMoviePlayerView");

	Params::TLBuilderCommands_TLMoviePlayerView Parms{};

	Parms.bDisplay = bDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMsgBox
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InTypeIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InString01                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InStyleKey                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMsgBox(int32 InTypeIndex, const class FString& InString01, const class FString& InStyleKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMsgBox");

	Params::TLBuilderCommands_TLMsgBox Parms{};

	Parms.InTypeIndex = InTypeIndex;
	Parms.InString01 = std::move(InString01);
	Parms.InStyleKey = std::move(InStyleKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMsgBoxReward
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLMsgBoxReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMsgBoxReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLMyPcDynamicStatChange
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Uid                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Multiplier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Adder                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLMyPcDynamicStatChange(int32 Uid, float Multiplier, float Adder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLMyPcDynamicStatChange");

	Params::TLBuilderCommands_TLMyPcDynamicStatChange Parms{};

	Parms.Uid = Uid;
	Parms.Multiplier = Multiplier;
	Parms.Adder = Adder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLNavMeshUsageMode
// (Final, Exec, Native, Public)
// Parameters:
// ENavMeshUsageMode                       InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLNavMeshUsageMode(ENavMeshUsageMode InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLNavMeshUsageMode");

	Params::TLBuilderCommands_TLNavMeshUsageMode Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLNextConquestCountDown
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLNextConquestCountDown(int32 InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLNextConquestCountDown");

	Params::TLBuilderCommands_TLNextConquestCountDown Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLNpcUseSkill
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SkillId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UseInterval                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLNpcUseSkill(int32 SkillId, int32 UseInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLNpcUseSkill");

	Params::TLBuilderCommands_TLNpcUseSkill Parms{};

	Parms.SkillId = SkillId;
	Parms.UseInterval = UseInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLNpcUseSkillAll
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SkillId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UseInterval                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLNpcUseSkillAll(int32 SkillId, int32 UseInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLNpcUseSkillAll");

	Params::TLBuilderCommands_TLNpcUseSkillAll Parms{};

	Parms.SkillId = SkillId;
	Parms.UseInterval = UseInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLNpcUseSkillByName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InSkillName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UseInterval                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLNpcUseSkillByName(class FName InSkillName, int32 UseInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLNpcUseSkillByName");

	Params::TLBuilderCommands_TLNpcUseSkillByName Parms{};

	Parms.InSkillName = InSkillName;
	Parms.UseInterval = UseInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLNpcUseSkillObj
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkillId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UseInterval                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLNpcUseSkillObj(int32 ObjId, int32 SkillId, int32 UseInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLNpcUseSkillObj");

	Params::TLBuilderCommands_TLNpcUseSkillObj Parms{};

	Parms.ObjId = ObjId;
	Parms.SkillId = SkillId;
	Parms.UseInterval = UseInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLNpcUseSkillObjByName
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InSkillName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UseInterval                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLNpcUseSkillObjByName(int32 ObjId, class FName InSkillName, int32 UseInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLNpcUseSkillObjByName");

	Params::TLBuilderCommands_TLNpcUseSkillObjByName Parms{};

	Parms.ObjId = ObjId;
	Parms.InSkillName = InSkillName;
	Parms.UseInterval = UseInterval;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLObjSocketShow
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SocketIndexStart                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SocketIndexEnd                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLObjSocketShow(int32 SocketIndexStart, int32 SocketIndexEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLObjSocketShow");

	Params::TLBuilderCommands_TLObjSocketShow Parms{};

	Parms.SocketIndexStart = SocketIndexStart;
	Parms.SocketIndexEnd = SocketIndexEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLObjSocketShowClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLObjSocketShowClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLObjSocketShowClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLOpacityStateAdd
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   OpacityKey                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TargetOpacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLOpacityStateAdd(int32 OpacityKey, float TargetOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLOpacityStateAdd");

	Params::TLBuilderCommands_TLOpacityStateAdd Parms{};

	Parms.OpacityKey = OpacityKey;
	Parms.TargetOpacity = TargetOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLOpacityStateObjRemove
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OpacityKey                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLOpacityStateObjRemove(const int32 ObjId, int32 OpacityKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLOpacityStateObjRemove");

	Params::TLBuilderCommands_TLOpacityStateObjRemove Parms{};

	Parms.ObjId = ObjId;
	Parms.OpacityKey = OpacityKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLOpacityStateRemove
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   OpacityKey                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLOpacityStateRemove(int32 OpacityKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLOpacityStateRemove");

	Params::TLBuilderCommands_TLOpacityStateRemove Parms{};

	Parms.OpacityKey = OpacityKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLOpenEventBoard
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InRowName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLOpenEventBoard(class FName InRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLOpenEventBoard");

	Params::TLBuilderCommands_TLOpenEventBoard Parms{};

	Parms.InRowName = InRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLOpenTerritoryFog
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InUID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLOpenTerritoryFog(int32 InUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLOpenTerritoryFog");

	Params::TLBuilderCommands_TLOpenTerritoryFog Parms{};

	Parms.InUID = InUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLOverlayMapOpacity
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLOverlayMapOpacity(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLOverlayMapOpacity");

	Params::TLBuilderCommands_TLOverlayMapOpacity Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLOverlaymapRoadAlphaWhite
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLOverlaymapRoadAlphaWhite(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLOverlaymapRoadAlphaWhite");

	Params::TLBuilderCommands_TLOverlaymapRoadAlphaWhite Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLOverlayRoadAdditive
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLOverlayRoadAdditive(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLOverlayRoadAdditive");

	Params::TLBuilderCommands_TLOverlayRoadAdditive Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLOverlayRoadBrightness
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLOverlayRoadBrightness(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLOverlayRoadBrightness");

	Params::TLBuilderCommands_TLOverlayRoadBrightness Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPacketLog
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   PacketLogMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPacketLog(int32 PacketLogMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPacketLog");

	Params::TLBuilderCommands_TLPacketLog Parms{};

	Parms.PacketLogMode = PacketLogMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPacketLogMyPc
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLPacketLogMyPc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPacketLogMyPc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPacketLogTargetId
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPacketLogTargetId(const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPacketLogTargetId");

	Params::TLBuilderCommands_TLPacketLogTargetId Parms{};

	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPacketLogTargetId2
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPacketLogTargetId2(const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPacketLogTargetId2");

	Params::TLBuilderCommands_TLPacketLogTargetId2 Parms{};

	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPacketLogTargetIdCheck
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInCheck                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPacketLogTargetIdCheck(bool bInCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPacketLogTargetIdCheck");

	Params::TLBuilderCommands_TLPacketLogTargetIdCheck Parms{};

	Parms.bInCheck = bInCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPacketLogTargetIdClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLPacketLogTargetIdClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPacketLogTargetIdClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPartyCommanderSelect
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   PartyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPartyCommanderSelect(int32 PartyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPartyCommanderSelect");

	Params::TLBuilderCommands_TLPartyCommanderSelect Parms{};

	Parms.PartyIndex = PartyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPartyInvite
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLPartyInvite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPartyInvite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPartyInviteByName
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPartyInviteByName(const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPartyInviteByName");

	Params::TLBuilderCommands_TLPartyInviteByName Parms{};

	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPartyTestAddMemeber
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   PcId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPartyTestAddMemeber(int64 PcId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPartyTestAddMemeber");

	Params::TLBuilderCommands_TLPartyTestAddMemeber Parms{};

	Parms.PcId = PcId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPartyTestInvite
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPartyTestInvite(const class FString& Name_0, float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPartyTestInvite");

	Params::TLBuilderCommands_TLPartyTestInvite Parms{};

	Parms.Name_0 = std::move(Name_0);
	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPartyTestStart
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLPartyTestStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPartyTestStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPartyWithdraw
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLPartyWithdraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPartyWithdraw");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPauseCarrierRouteSequence
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPauseCarrierRouteSequence(int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPauseCarrierRouteSequence");

	Params::TLBuilderCommands_TLPauseCarrierRouteSequence Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPauseCarrierTransformSequence
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPauseCarrierTransformSequence(int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPauseCarrierTransformSequence");

	Params::TLBuilderCommands_TLPauseCarrierTransformSequence Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlatformCheckServiceStatus
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLPlatformCheckServiceStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlatformCheckServiceStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlatformInviteWithUI
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLPlatformInviteWithUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlatformInviteWithUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlatformLoginFail
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLPlatformLoginFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlatformLoginFail");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayActionTree
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ActionTreePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayActionTree(const class FString& ActionTreePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayActionTree");

	Params::TLBuilderCommands_TLPlayActionTree Parms{};

	Parms.ActionTreePath = std::move(ActionTreePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayActionTreeAll
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ActionTreePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayInterval                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeMyPc                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayActionTreeAll(const class FString& ActionTreePath, float PlayInterval, bool bIncludeMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayActionTreeAll");

	Params::TLBuilderCommands_TLPlayActionTreeAll Parms{};

	Parms.ActionTreePath = std::move(ActionTreePath);
	Parms.PlayInterval = PlayInterval;
	Parms.bIncludeMyPc = bIncludeMyPc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayActionTreeMagicDoll
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ActionTreePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayActionTreeMagicDoll(const class FString& ActionTreePath, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayActionTreeMagicDoll");

	Params::TLBuilderCommands_TLPlayActionTreeMagicDoll Parms{};

	Parms.ActionTreePath = std::move(ActionTreePath);
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayActionTreeObj
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ActionTreePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayActionTreeObj(const class FString& ActionTreePath, const int32 ObjId, float DurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayActionTreeObj");

	Params::TLBuilderCommands_TLPlayActionTreeObj Parms{};

	Parms.ActionTreePath = std::move(ActionTreePath);
	Parms.ObjId = ObjId;
	Parms.DurationSec = DurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayActionTreeObjWithCondition
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ActionTreePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InConditional                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayActionTreeObjWithCondition(const class FString& ActionTreePath, const int32 ObjId, float DurationSec, class FName InConditional)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayActionTreeObjWithCondition");

	Params::TLBuilderCommands_TLPlayActionTreeObjWithCondition Parms{};

	Parms.ActionTreePath = std::move(ActionTreePath);
	Parms.ObjId = ObjId;
	Parms.DurationSec = DurationSec;
	Parms.InConditional = InConditional;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayActionTreeToTaggedObj
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// class FString                           ActionTreePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CasterObjId                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CasterObjTag                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetObjId                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetObjTag                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayActionTreeToTaggedObj(const class FString& ActionTreePath, const int32 CasterObjId, const class FName& CasterObjTag, const int32 TargetObjId, const class FName& TargetObjTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayActionTreeToTaggedObj");

	Params::TLBuilderCommands_TLPlayActionTreeToTaggedObj Parms{};

	Parms.ActionTreePath = std::move(ActionTreePath);
	Parms.CasterObjId = CasterObjId;
	Parms.CasterObjTag = CasterObjTag;
	Parms.TargetObjId = TargetObjId;
	Parms.TargetObjTag = TargetObjTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayActionTreeWithCondition
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ActionTreePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Condition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayActionTreeWithCondition(const class FString& ActionTreePath, class FName Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayActionTreeWithCondition");

	Params::TLBuilderCommands_TLPlayActionTreeWithCondition Parms{};

	Parms.ActionTreePath = std::move(ActionTreePath);
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayCinematicDialog
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InTableId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayCinematicDialog(class FName InTableId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayCinematicDialog");

	Params::TLBuilderCommands_TLPlayCinematicDialog Parms{};

	Parms.InTableId = InTableId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayCueSheet
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InCueSheetKey                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDurationSec                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayCueSheet(class FName InCueSheetKey, const float InDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayCueSheet");

	Params::TLBuilderCommands_TLPlayCueSheet Parms{};

	Parms.InCueSheetKey = InCueSheetKey;
	Parms.InDurationSec = InDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayCutscene
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InCutSceneID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayCutscene(class FName InCutSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayCutscene");

	Params::TLBuilderCommands_TLPlayCutscene Parms{};

	Parms.InCutSceneID = InCutSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayCutsceneFromServer
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             CutSceneID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ExclusiveTag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayCutsceneFromServer(class FName CutSceneID, class FName ExclusiveTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayCutsceneFromServer");

	Params::TLBuilderCommands_TLPlayCutsceneFromServer Parms{};

	Parms.CutSceneID = CutSceneID;
	Parms.ExclusiveTag = ExclusiveTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayEffectCallArea
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EffectPropId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayEffectCallArea(int32 EffectPropId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayEffectCallArea");

	Params::TLBuilderCommands_TLPlayEffectCallArea Parms{};

	Parms.EffectPropId = EffectPropId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayLoopMotion
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NpcObjId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MotionUid                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MotionTypeInt                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetObjId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayLoopMotion(int32 NpcObjId, int32 MotionUid, int32 MotionTypeInt, int32 TargetObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayLoopMotion");

	Params::TLBuilderCommands_TLPlayLoopMotion Parms{};

	Parms.NpcObjId = NpcObjId;
	Parms.MotionUid = MotionUid;
	Parms.MotionTypeInt = MotionTypeInt;
	Parms.TargetObjId = TargetObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayMovie
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InMovieTableKey                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInAllowEngineTick                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayMovie(class FName InMovieTableKey, bool bInAllowEngineTick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayMovie");

	Params::TLBuilderCommands_TLPlayMovie Parms{};

	Parms.InMovieTableKey = InMovieTableKey;
	Parms.bInAllowEngineTick = bInAllowEngineTick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayMusic
// (Final, Exec, Native, Public, HasDefaults)
// Parameters:
// struct FSoftObjectPath                  InMusicPath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayMusic(const struct FSoftObjectPath& InMusicPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayMusic");

	Params::TLBuilderCommands_TLPlayMusic Parms{};

	Parms.InMusicPath = std::move(InMusicPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayRawVoice
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             DialogueId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayRawVoice(class FName DialogueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayRawVoice");

	Params::TLBuilderCommands_TLPlayRawVoice Parms{};

	Parms.DialogueId = DialogueId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySct
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SctPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySct(const class FString& SctPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySct");

	Params::TLBuilderCommands_TLPlaySct Parms{};

	Parms.SctPath = std::move(SctPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySctAll
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SctPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayInterval                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeMyPc                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySctAll(const class FString& SctPath, float PlayInterval, bool bIncludeMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySctAll");

	Params::TLBuilderCommands_TLPlaySctAll Parms{};

	Parms.SctPath = std::move(SctPath);
	Parms.PlayInterval = PlayInterval;
	Parms.bIncludeMyPc = bIncludeMyPc;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySctMagicDoll
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SctPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySctMagicDoll(const class FString& SctPath, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySctMagicDoll");

	Params::TLBuilderCommands_TLPlaySctMagicDoll Parms{};

	Parms.SctPath = std::move(SctPath);
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySctObj
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SctPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySctObj(const class FString& SctPath, const int32 ObjId, float DurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySctObj");

	Params::TLBuilderCommands_TLPlaySctObj Parms{};

	Parms.SctPath = std::move(SctPath);
	Parms.ObjId = ObjId;
	Parms.DurationSec = DurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySctObjWithCondition
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SctPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InConditional                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySctObjWithCondition(const class FString& SctPath, const int32 ObjId, float DurationSec, class FName InConditional)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySctObjWithCondition");

	Params::TLBuilderCommands_TLPlaySctObjWithCondition Parms{};

	Parms.SctPath = std::move(SctPath);
	Parms.ObjId = ObjId;
	Parms.DurationSec = DurationSec;
	Parms.InConditional = InConditional;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySctToTaggedObj
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// class FString                           ActionTreePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CasterObjId                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CasterObjTag                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetObjId                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetObjTag                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySctToTaggedObj(const class FString& ActionTreePath, const int32 CasterObjId, const class FName& CasterObjTag, const int32 TargetObjId, const class FName& TargetObjTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySctToTaggedObj");

	Params::TLBuilderCommands_TLPlaySctToTaggedObj Parms{};

	Parms.ActionTreePath = std::move(ActionTreePath);
	Parms.CasterObjId = CasterObjId;
	Parms.CasterObjTag = CasterObjTag;
	Parms.TargetObjId = TargetObjId;
	Parms.TargetObjTag = TargetObjTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySctWithCondition
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SctPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Condition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySctWithCondition(const class FString& SctPath, class FName Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySctWithCondition");

	Params::TLBuilderCommands_TLPlaySctWithCondition Parms{};

	Parms.SctPath = std::move(SctPath);
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySkill
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SkillId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkillLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SkillSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsHeavyAttackToMe                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySkill(int32 SkillId, int32 SkillLevel, float SkillSpeed, int32 TargetId, bool IsHeavyAttackToMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySkill");

	Params::TLBuilderCommands_TLPlaySkill Parms{};

	Parms.SkillId = SkillId;
	Parms.SkillLevel = SkillLevel;
	Parms.SkillSpeed = SkillSpeed;
	Parms.TargetId = TargetId;
	Parms.IsHeavyAttackToMe = IsHeavyAttackToMe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySystemActionTree
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ActionTreeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySystemActionTree(class FName ActionTreeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySystemActionTree");

	Params::TLBuilderCommands_TLPlaySystemActionTree Parms{};

	Parms.ActionTreeId = ActionTreeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySystemActionTreeAll
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ActionTreeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySystemActionTreeAll(class FName ActionTreeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySystemActionTreeAll");

	Params::TLBuilderCommands_TLPlaySystemActionTreeAll Parms{};

	Parms.ActionTreeId = ActionTreeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySystemActionTreeObj
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ActionTreeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySystemActionTreeObj(class FName ActionTreeId, const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySystemActionTreeObj");

	Params::TLBuilderCommands_TLPlaySystemActionTreeObj Parms{};

	Parms.ActionTreeId = ActionTreeId;
	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySystemActionTreeWithIFFParam
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ActionTreeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   R                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   G                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   B                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   A                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Desaturation                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySystemActionTreeWithIFFParam(class FName ActionTreeId, const float R, const float G, const float B, const float A, const float Desaturation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySystemActionTreeWithIFFParam");

	Params::TLBuilderCommands_TLPlaySystemActionTreeWithIFFParam Parms{};

	Parms.ActionTreeId = ActionTreeId;
	Parms.R = R;
	Parms.G = G;
	Parms.B = B;
	Parms.A = A;
	Parms.Desaturation = Desaturation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySystemActionTreeWithTargetGroupIndex
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ActionTreeId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySystemActionTreeWithTargetGroupIndex(class FName ActionTreeId, int32 GroupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySystemActionTreeWithTargetGroupIndex");

	Params::TLBuilderCommands_TLPlaySystemActionTreeWithTargetGroupIndex Parms{};

	Parms.ActionTreeId = ActionTreeId;
	Parms.GroupIndex = GroupIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySystemSct
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             SctId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySystemSct(class FName SctId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySystemSct");

	Params::TLBuilderCommands_TLPlaySystemSct Parms{};

	Parms.SctId = SctId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySystemSctAll
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             SctId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySystemSctAll(class FName SctId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySystemSctAll");

	Params::TLBuilderCommands_TLPlaySystemSctAll Parms{};

	Parms.SctId = SctId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySystemSctObj
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             SctId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySystemSctObj(class FName SctId, const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySystemSctObj");

	Params::TLBuilderCommands_TLPlaySystemSctObj Parms{};

	Parms.SctId = SctId;
	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySystemSctWithIFFParam
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             SctId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   R                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   G                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   B                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   A                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Desaturation                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySystemSctWithIFFParam(class FName SctId, const float R, const float G, const float B, const float A, const float Desaturation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySystemSctWithIFFParam");

	Params::TLBuilderCommands_TLPlaySystemSctWithIFFParam Parms{};

	Parms.SctId = SctId;
	Parms.R = R;
	Parms.G = G;
	Parms.B = B;
	Parms.A = A;
	Parms.Desaturation = Desaturation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlaySystemSctWithTargetGroupIndex
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             SctId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlaySystemSctWithTargetGroupIndex(class FName SctId, int32 GroupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlaySystemSctWithTargetGroupIndex");

	Params::TLBuilderCommands_TLPlaySystemSctWithTargetGroupIndex Parms{};

	Parms.SctId = SctId;
	Parms.GroupIndex = GroupIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayVoice
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Event                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayVoice(const class FString& Event, uint8 Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayVoice");

	Params::TLBuilderCommands_TLPlayVoice Parms{};

	Parms.Event = std::move(Event);
	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayWorldActionTree
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ActionTreePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   X                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayWorldActionTree(const class FString& ActionTreePath, const float X, const float Y, const float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayWorldActionTree");

	Params::TLBuilderCommands_TLPlayWorldActionTree Parms{};

	Parms.ActionTreePath = std::move(ActionTreePath);
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayWorldActionTreeAtMouseWithCondition
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ActionTreePath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Condition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayWorldActionTreeAtMouseWithCondition(const class FString& ActionTreePath, class FName Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayWorldActionTreeAtMouseWithCondition");

	Params::TLBuilderCommands_TLPlayWorldActionTreeAtMouseWithCondition Parms{};

	Parms.ActionTreePath = std::move(ActionTreePath);
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayWorldSct
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SctPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   X                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayWorldSct(const class FString& SctPath, const float X, const float Y, const float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayWorldSct");

	Params::TLBuilderCommands_TLPlayWorldSct Parms{};

	Parms.SctPath = std::move(SctPath);
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPlayWorldSctAtMouseWithCondition
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SctPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Condition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPlayWorldSctAtMouseWithCondition(const class FString& SctPath, class FName Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPlayWorldSctAtMouseWithCondition");

	Params::TLBuilderCommands_TLPlayWorldSctAtMouseWithCondition Parms{};

	Parms.SctPath = std::move(SctPath);
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPolymorphClientOnly
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             PolymorphId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowConti                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPolymorphClientOnly(class FName PolymorphId, bool bShowConti)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPolymorphClientOnly");

	Params::TLBuilderCommands_TLPolymorphClientOnly Parms{};

	Parms.PolymorphId = PolymorphId;
	Parms.bShowConti = bShowConti;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPolymorphClientOnly1
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   PolymorphUid                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowConti                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPolymorphClientOnly1(int32 PolymorphUid, bool bShowConti)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPolymorphClientOnly1");

	Params::TLBuilderCommands_TLPolymorphClientOnly1 Parms{};

	Parms.PolymorphUid = PolymorphUid;
	Parms.bShowConti = bShowConti;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPolymorphGacha
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInActivate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GachaItemId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPolymorphGacha(bool bInActivate, int32 GachaItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPolymorphGacha");

	Params::TLBuilderCommands_TLPolymorphGacha Parms{};

	Parms.bInActivate = bInActivate;
	Parms.GachaItemId = GachaItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPolymorphOriginalTemp
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPolymorphOriginalTemp(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPolymorphOriginalTemp");

	Params::TLBuilderCommands_TLPolymorphOriginalTemp Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPostTest
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPostCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPostTest(int32 InPostCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPostTest");

	Params::TLBuilderCommands_TLPostTest Parms{};

	Parms.InPostCount = InPostCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPreloadCutscene
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             CutSceneID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPreloadCutscene(class FName CutSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPreloadCutscene");

	Params::TLBuilderCommands_TLPreloadCutscene Parms{};

	Parms.CutSceneID = CutSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPreventCanSeeFromMyPc
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjectCanSeeType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPreventCanSeeFromMyPc(int32 ObjectCanSeeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPreventCanSeeFromMyPc");

	Params::TLBuilderCommands_TLPreventCanSeeFromMyPc Parms{};

	Parms.ObjectCanSeeType = ObjectCanSeeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPurchaseRetailSteamItem
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InAppId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPurchaseRetailSteamItem(const class FString& InAppId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPurchaseRetailSteamItem");

	Params::TLBuilderCommands_TLPurchaseRetailSteamItem Parms{};

	Parms.InAppId = std::move(InAppId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPurchaseUseTestDisplayKey
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInUseTestDisplayKey                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPurchaseUseTestDisplayKey(bool bInUseTestDisplayKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPurchaseUseTestDisplayKey");

	Params::TLBuilderCommands_TLPurchaseUseTestDisplayKey Parms{};

	Parms.bInUseTestDisplayKey = bInUseTestDisplayKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPVPHistoryTest
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPageSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPVPHistoryTest(int32 InPageSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPVPHistoryTest");

	Params::TLBuilderCommands_TLPVPHistoryTest Parms{};

	Parms.InPageSize = InPageSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLPvpMode
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InOnPvpMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLPvpMode(bool InOnPvpMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLPvpMode");

	Params::TLBuilderCommands_TLPvpMode Parms{};

	Parms.InOnPvpMode = InOnPvpMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLQOSView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLQOSView(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLQOSView");

	Params::TLBuilderCommands_TLQOSView Parms{};

	Parms.bDisplay = bDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLQueryCapsule
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Sx                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Sy                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Sz                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Ex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Ey                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Ez                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Rad                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Hei                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLQueryCapsule(float Sx, float Sy, float Sz, float Ex, float Ey, float Ez, float Rad, float Hei, float Thickness, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLQueryCapsule");

	Params::TLBuilderCommands_TLQueryCapsule Parms{};

	Parms.Sx = Sx;
	Parms.Sy = Sy;
	Parms.Sz = Sz;
	Parms.Ex = Ex;
	Parms.Ey = Ey;
	Parms.Ez = Ez;
	Parms.Rad = Rad;
	Parms.Hei = Hei;
	Parms.Thickness = Thickness;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLQueryValidAltitude
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InX                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InY                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InZ                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SearchHeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLQueryValidAltitude(const float InX, const float InY, const float InZ, float SearchHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLQueryValidAltitude");

	Params::TLBuilderCommands_TLQueryValidAltitude Parms{};

	Parms.InX = InX;
	Parms.InY = InY;
	Parms.InZ = InZ;
	Parms.SearchHeight = SearchHeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRankingTest
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPageSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRankingTest(int32 InPageSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRankingTest");

	Params::TLBuilderCommands_TLRankingTest Parms{};

	Parms.InPageSize = InPageSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRankingTestExpRankingList
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPageSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRankingTestExpRankingList(int32 InPageSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRankingTestExpRankingList");

	Params::TLBuilderCommands_TLRankingTestExpRankingList Parms{};

	Parms.InPageSize = InPageSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRankingTestExpRankingListScroll
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPageSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStartListNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRankingTestExpRankingListScroll(int32 InPageSize, int32 InStartListNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRankingTestExpRankingListScroll");

	Params::TLBuilderCommands_TLRankingTestExpRankingListScroll Parms{};

	Parms.InPageSize = InPageSize;
	Parms.InStartListNum = InStartListNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRankingTestNowExpRankingList
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPageSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRankingTestNowExpRankingList(int32 InPageSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRankingTestNowExpRankingList");

	Params::TLBuilderCommands_TLRankingTestNowExpRankingList Parms{};

	Parms.InPageSize = InPageSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRankingTestNowExpRankingListScroll
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPageSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStartListNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRankingTestNowExpRankingListScroll(int32 InPageSize, int32 InStartListNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRankingTestNowExpRankingListScroll");

	Params::TLBuilderCommands_TLRankingTestNowExpRankingListScroll Parms{};

	Parms.InPageSize = InPageSize;
	Parms.InStartListNum = InStartListNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRankingTestNowPvpRankingList
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPageSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRankingTestNowPvpRankingList(int32 InPageSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRankingTestNowPvpRankingList");

	Params::TLBuilderCommands_TLRankingTestNowPvpRankingList Parms{};

	Parms.InPageSize = InPageSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRankingTestNowPvpRankingListScroll
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPageSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStartListNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRankingTestNowPvpRankingListScroll(int32 InPageSize, int32 InStartListNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRankingTestNowPvpRankingListScroll");

	Params::TLBuilderCommands_TLRankingTestNowPvpRankingListScroll Parms{};

	Parms.InPageSize = InPageSize;
	Parms.InStartListNum = InStartListNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRankingTestPvpRankingList
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPageSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRankingTestPvpRankingList(int32 InPageSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRankingTestPvpRankingList");

	Params::TLBuilderCommands_TLRankingTestPvpRankingList Parms{};

	Parms.InPageSize = InPageSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRankingTestPvpRankingListScroll
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InPageSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStartListNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRankingTestPvpRankingListScroll(int32 InPageSize, int32 InStartListNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRankingTestPvpRankingListScroll");

	Params::TLBuilderCommands_TLRankingTestPvpRankingListScroll Parms{};

	Parms.InPageSize = InPageSize;
	Parms.InStartListNum = InStartListNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRayHitTest
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bSet                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowMesh                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRayHitTest(bool bSet, bool bShowMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRayHitTest");

	Params::TLBuilderCommands_TLRayHitTest Parms{};

	Parms.bSet = bSet;
	Parms.bShowMesh = bShowMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReadyToPlayReqSend
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLReadyToPlayReqSend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReadyToPlayReqSend");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReadyToPlayView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLReadyToPlayView(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReadyToPlayView");

	Params::TLBuilderCommands_TLReadyToPlayView Parms{};

	Parms.bDisplay = bDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReceiveContractShare
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InTransactionId                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InCharacterId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InContractId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InContractGroupId                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLReceiveContractShare(const class FString& InTransactionId, const class FString& InCharacterId, const class FString& InContractId, const class FString& InContractGroupId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReceiveContractShare");

	Params::TLBuilderCommands_TLReceiveContractShare Parms{};

	Parms.InTransactionId = std::move(InTransactionId);
	Parms.InCharacterId = std::move(InCharacterId);
	Parms.InContractId = std::move(InContractId);
	Parms.InContractGroupId = std::move(InContractGroupId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRefreshDeathwork
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLRefreshDeathwork()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRefreshDeathwork");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRefreshDiamond
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLRefreshDiamond()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRefreshDiamond");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRefreshPurchaseGoodsList
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InDisplayKey                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRefreshPurchaseGoodsList(const class FString& InDisplayKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRefreshPurchaseGoodsList");

	Params::TLBuilderCommands_TLRefreshPurchaseGoodsList Parms{};

	Parms.InDisplayKey = std::move(InDisplayKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRegionChatRoomJoinUseClient
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    IsUseClient                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRegionChatRoomJoinUseClient(bool IsUseClient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRegionChatRoomJoinUseClient");

	Params::TLBuilderCommands_TLRegionChatRoomJoinUseClient Parms{};

	Parms.IsUseClient = IsUseClient;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReleasePcSubtitle
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLReleasePcSubtitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReleasePcSubtitle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReloadGamepadInputConfig
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLReloadGamepadInputConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReloadGamepadInputConfig");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReloadUI
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InReloadType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLReloadUI(int32 InReloadType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReloadUI");

	Params::TLBuilderCommands_TLReloadUI Parms{};

	Parms.InReloadType = InReloadType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRemoveAllBucketData
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLRemoveAllBucketData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRemoveAllBucketData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRemoveDirectionalForceVolume
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   VolumeID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRemoveDirectionalForceVolume(int64 VolumeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRemoveDirectionalForceVolume");

	Params::TLBuilderCommands_TLRemoveDirectionalForceVolume Parms{};

	Parms.VolumeID = VolumeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRemoveMyPcGhost
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLRemoveMyPcGhost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRemoveMyPcGhost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRemovePartyTargetMarkerAllOnlyClient
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLRemovePartyTargetMarkerAllOnlyClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRemovePartyTargetMarkerAllOnlyClient");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRemovePartyTargetMarkerOnlyClient
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InMarkNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRemovePartyTargetMarkerOnlyClient(int32 InMarkNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRemovePartyTargetMarkerOnlyClient");

	Params::TLBuilderCommands_TLRemovePartyTargetMarkerOnlyClient Parms{};

	Parms.InMarkNum = InMarkNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRemoveSystemRegist
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLRemoveSystemRegist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRemoveSystemRegist");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReplayPacketDump
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ReplayPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLReplayPacketDump(const class FString& ReplayPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReplayPacketDump");

	Params::TLBuilderCommands_TLReplayPacketDump Parms{};

	Parms.ReplayPath = std::move(ReplayPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReplayPacketRecordBegin
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLReplayPacketRecordBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReplayPacketRecordBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReplayPacketRecordEnd
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLReplayPacketRecordEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReplayPacketRecordEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReplayPacketStart
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ReplayPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RecordStatStartTime                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RecordStatDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLReplayPacketStart(const class FString& ReplayPath, float RecordStatStartTime, float RecordStatDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReplayPacketStart");

	Params::TLBuilderCommands_TLReplayPacketStart Parms{};

	Parms.ReplayPath = std::move(ReplayPath);
	Parms.RecordStatStartTime = RecordStatStartTime;
	Parms.RecordStatDuration = RecordStatDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReplayPacketStartWithUpdateCamera
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ReplayPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RecordStatStartTime                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RecordStatDuration                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLReplayPacketStartWithUpdateCamera(const class FString& ReplayPath, float RecordStatStartTime, float RecordStatDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReplayPacketStartWithUpdateCamera");

	Params::TLBuilderCommands_TLReplayPacketStartWithUpdateCamera Parms{};

	Parms.ReplayPath = std::move(ReplayPath);
	Parms.RecordStatStartTime = RecordStatStartTime;
	Parms.RecordStatDuration = RecordStatDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReplayPacketStop
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLReplayPacketStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReplayPacketStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReplayPacketUpdateCamera
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    UpdateCamera                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLReplayPacketUpdateCamera(bool UpdateCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReplayPacketUpdateCamera");

	Params::TLBuilderCommands_TLReplayPacketUpdateCamera Parms{};

	Parms.UpdateCamera = UpdateCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReplayPacketUpgrade
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ReplayPath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLReplayPacketUpgrade(const class FString& ReplayPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReplayPacketUpgrade");

	Params::TLBuilderCommands_TLReplayPacketUpgrade Parms{};

	Parms.ReplayPath = std::move(ReplayPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLReplayPacketUpgradeDirectory
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ReplayDirectory                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLReplayPacketUpgradeDirectory(const class FString& ReplayDirectory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLReplayPacketUpgradeDirectory");

	Params::TLBuilderCommands_TLReplayPacketUpgradeDirectory Parms{};

	Parms.ReplayDirectory = std::move(ReplayDirectory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLResetEntryPolymorph
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLResetEntryPolymorph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLResetEntryPolymorph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLResetEventBoardShowCount
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLResetEventBoardShowCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLResetEventBoardShowCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLResetFirstLoginFlag
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLResetFirstLoginFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLResetFirstLoginFlag");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLResetPacketCount
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLResetPacketCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLResetPacketCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLResetPin
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             MapIconId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLResetPin(class FName MapIconId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLResetPin");

	Params::TLBuilderCommands_TLResetPin Parms{};

	Parms.MapIconId = MapIconId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLResetShowFirstSetting
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLResetShowFirstSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLResetShowFirstSetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLResonanceSelectChange
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInSuccess                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLResonanceSelectChange(bool bInSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLResonanceSelectChange");

	Params::TLBuilderCommands_TLResonanceSelectChange Parms{};

	Parms.bInSuccess = bInSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLResumeCarrierRouteSequence
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLResumeCarrierRouteSequence(int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLResumeCarrierRouteSequence");

	Params::TLBuilderCommands_TLResumeCarrierRouteSequence Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLResumeCarrierTransformSequence
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLResumeCarrierTransformSequence(int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLResumeCarrierTransformSequence");

	Params::TLBuilderCommands_TLResumeCarrierTransformSequence Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRuneTestOpen
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRuneTestOpen(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRuneTestOpen");

	Params::TLBuilderCommands_TLRuneTestOpen Parms{};

	Parms.InIsOpen = InIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLRunTestUI
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InCommand                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLRunTestUI(int32 InCommand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLRunTestUI");

	Params::TLBuilderCommands_TLRunTestUI Parms{};

	Parms.InCommand = InCommand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSandbag
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSandbag(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSandbag");

	Params::TLBuilderCommands_TLSandbag Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSandbagAroundMe
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSandbagAroundMe(float Radius, int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSandbagAroundMe");

	Params::TLBuilderCommands_TLSandbagAroundMe Parms{};

	Parms.Radius = Radius;
	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSandbagAtMouse
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSandbagAtMouse(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSandbagAtMouse");

	Params::TLBuilderCommands_TLSandbagAtMouse Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSandbagAttacker
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSandbagAttacker(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSandbagAttacker");

	Params::TLBuilderCommands_TLSandbagAttacker Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSandbagMass
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Row                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDist                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSandbagMass(int32 Row, int32 Column, float InDist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSandbagMass");

	Params::TLBuilderCommands_TLSandbagMass Parms{};

	Parms.Row = Row;
	Parms.Column = Column;
	Parms.InDist = InDist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLScreenMsg
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           MsgType                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLScreenMsg(const class FString& MsgType, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLScreenMsg");

	Params::TLBuilderCommands_TLScreenMsg Parms{};

	Parms.MsgType = std::move(MsgType);
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLScreenMsgClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLScreenMsgClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLScreenMsgClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLScreenMsgSiegeSide
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             MsgId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAllySide                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLScreenMsgSiegeSide(class FName MsgId, bool bIsAllySide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLScreenMsgSiegeSide");

	Params::TLBuilderCommands_TLScreenMsgSiegeSide Parms{};

	Parms.MsgId = MsgId;
	Parms.bIsAllySide = bIsAllySide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLScreenMsgTeamBattle
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             MsgId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLTeamBattleMessageType                Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLScreenMsgTeamBattle(class FName MsgId, ETLTeamBattleMessageType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLScreenMsgTeamBattle");

	Params::TLBuilderCommands_TLScreenMsgTeamBattle Parms{};

	Parms.MsgId = MsgId;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLScreenMsgWorldEffect
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsEffectStart                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  NpcUid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EffectUid                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLWorldEffectType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLScreenMsgWorldEffect(bool InIsEffectStart, uint32 NpcUid, int32 EffectUid, ETLWorldEffectType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLScreenMsgWorldEffect");

	Params::TLBuilderCommands_TLScreenMsgWorldEffect Parms{};

	Parms.InIsEffectStart = InIsEffectStart;
	Parms.NpcUid = NpcUid;
	Parms.EffectUid = EffectUid;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSearchTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSearchTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSearchTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSeasonPassSpecialShop
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InSeasonPassGuid                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSeasonPassSpecialShop(uint64 InSeasonPassGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSeasonPassSpecialShop");

	Params::TLBuilderCommands_TLSeasonPassSpecialShop Parms{};

	Parms.InSeasonPassGuid = InSeasonPassGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSeasonPassTicketFirstAction
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InPassGuid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSeasonPassTicketFirstAction(uint64 InPassGuid, bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSeasonPassTicketFirstAction");

	Params::TLBuilderCommands_TLSeasonPassTicketFirstAction Parms{};

	Parms.InPassGuid = InPassGuid;
	Parms.InIsActive = InIsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSeasonRewardGetReward
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InSeasonId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InObjectiveGuid                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSeasonRewardGetReward(int32 InSeasonId, uint64 InObjectiveGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSeasonRewardGetReward");

	Params::TLBuilderCommands_TLSeasonRewardGetReward Parms{};

	Parms.InSeasonId = InSeasonId;
	Parms.InObjectiveGuid = InObjectiveGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSeasonRewardMissionCount
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InSeasonId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InObjectiveGuid                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSeasonRewardMissionCount(int32 InSeasonId, uint64 InObjectiveGuid, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSeasonRewardMissionCount");

	Params::TLBuilderCommands_TLSeasonRewardMissionCount Parms{};

	Parms.InSeasonId = InSeasonId;
	Parms.InObjectiveGuid = InObjectiveGuid;
	Parms.InCount = InCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSeasonRewardShowReward
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InSeasonId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InObjectiveGuid                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSeasonRewardShowReward(int32 InSeasonId, uint64 InObjectiveGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSeasonRewardShowReward");

	Params::TLBuilderCommands_TLSeasonRewardShowReward Parms{};

	Parms.InSeasonId = InSeasonId;
	Parms.InObjectiveGuid = InObjectiveGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSeasonRewardTestData
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSeasonRewardTestData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSeasonRewardTestData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSelectCinematicDialogIndex
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InSelectIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSelectCinematicDialogIndex(int32 InSelectIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSelectCinematicDialogIndex");

	Params::TLBuilderCommands_TLSelectCinematicDialogIndex Parms{};

	Parms.InSelectIndex = InSelectIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSendMapLogCustom
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InCategory                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSendMapLogCustom(const class FString& InName, const class FString& InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSendMapLogCustom");

	Params::TLBuilderCommands_TLSendMapLogCustom Parms{};

	Parms.InName = std::move(InName);
	Parms.InCategory = std::move(InCategory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSendMapLogInstall
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSendMapLogInstall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSendMapLogInstall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSendMapLogStart
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSendMapLogStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSendMapLogStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSendSpellPolymorphReq
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             PolymorphId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSendSpellPolymorphReq(class FName PolymorphId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSendSpellPolymorphReq");

	Params::TLBuilderCommands_TLSendSpellPolymorphReq Parms{};

	Parms.PolymorphId = PolymorphId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLServerBuilder
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Arg1                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLServerBuilder(const class FString& Arg1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLServerBuilder");

	Params::TLBuilderCommands_TLServerBuilder Parms{};

	Parms.Arg1 = std::move(Arg1);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLServerRuntimeDebugEnable
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLServerRuntimeDebugEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLServerRuntimeDebugEnable");

	Params::TLBuilderCommands_TLServerRuntimeDebugEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetAudioLanguage
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InLanguage                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetAudioLanguage(const class FString& InLanguage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetAudioLanguage");

	Params::TLBuilderCommands_TLSetAudioLanguage Parms{};

	Parms.InLanguage = std::move(InLanguage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetBlockAll
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetBlockAll(int32 ObjId, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetBlockAll");

	Params::TLBuilderCommands_TLSetBlockAll Parms{};

	Parms.ObjId = ObjId;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetCastingInteractionCollision
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InObjId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InVal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetCastingInteractionCollision(int32 InObjId, bool InVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetCastingInteractionCollision");

	Params::TLBuilderCommands_TLSetCastingInteractionCollision Parms{};

	Parms.InObjId = InObjId;
	Parms.InVal = InVal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetCombatPolymorph
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PolymorphUid                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetCombatPolymorph(int32 Type, int32 PolymorphUid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetCombatPolymorph");

	Params::TLBuilderCommands_TLSetCombatPolymorph Parms{};

	Parms.Type = Type;
	Parms.PolymorphUid = PolymorphUid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetCost
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Cost                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetCost(int32 Cost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetCost");

	Params::TLBuilderCommands_TLSetCost Parms{};

	Parms.Cost = Cost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetCostPercent
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   CostPercent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetCostPercent(int32 CostPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetCostPercent");

	Params::TLBuilderCommands_TLSetCostPercent Parms{};

	Parms.CostPercent = CostPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetDir
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Dir                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetDir(int32 Dir, float DurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetDir");

	Params::TLBuilderCommands_TLSetDir Parms{};

	Parms.Dir = Dir;
	Parms.DurationSec = DurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetEscrowDiamond
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetEscrowDiamond(int64 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetEscrowDiamond");

	Params::TLBuilderCommands_TLSetEscrowDiamond Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetFloating
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetFloating(int32 ObjId, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetFloating");

	Params::TLBuilderCommands_TLSetFloating Parms{};

	Parms.ObjId = ObjId;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetFoOptimized
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOptimized                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetFoOptimized(const int32 ObjId, const bool bOptimized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetFoOptimized");

	Params::TLBuilderCommands_TLSetFoOptimized Parms{};

	Parms.ObjId = ObjId;
	Parms.bOptimized = bOptimized;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetFoTickInterval
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InInterval                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOptimizedComponentOnly                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetFoTickInterval(const int32 ObjId, const float InInterval, const bool bOptimizedComponentOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetFoTickInterval");

	Params::TLBuilderCommands_TLSetFoTickInterval Parms{};

	Parms.ObjId = ObjId;
	Parms.InInterval = InInterval;
	Parms.bOptimizedComponentOnly = bOptimizedComponentOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetHp
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Hp                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetHp(int32 Hp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetHp");

	Params::TLBuilderCommands_TLSetHp Parms{};

	Parms.Hp = Hp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetHpPercent
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   HpPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetHpPercent(int32 HpPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetHpPercent");

	Params::TLBuilderCommands_TLSetHpPercent Parms{};

	Parms.HpPercent = HpPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetLoadObjNextTick
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetLoadObjNextTick(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetLoadObjNextTick");

	Params::TLBuilderCommands_TLSetLoadObjNextTick Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetMapRegionType
// (Final, Exec, Native, Public)
// Parameters:
// EMapRegionType                          MapRegionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetMapRegionType(EMapRegionType MapRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetMapRegionType");

	Params::TLBuilderCommands_TLSetMapRegionType Parms{};

	Parms.MapRegionType = MapRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetMaxStepHeightAndWalkableFloorAngle
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InObjId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InStepHeight                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFloorAngle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetMaxStepHeightAndWalkableFloorAngle(int32 InObjId, float InStepHeight, float InFloorAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetMaxStepHeightAndWalkableFloorAngle");

	Params::TLBuilderCommands_TLSetMaxStepHeightAndWalkableFloorAngle Parms{};

	Parms.InObjId = InObjId;
	Parms.InStepHeight = InStepHeight;
	Parms.InFloorAngle = InFloorAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetOpacity
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TargetOpacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionTime                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetOpacity(const int32 ObjId, float TargetOpacity, const float TransitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetOpacity");

	Params::TLBuilderCommands_TLSetOpacity Parms{};

	Parms.ObjId = ObjId;
	Parms.TargetOpacity = TargetOpacity;
	Parms.TransitionTime = TransitionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetPcSubtitle
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   PcSubtitleUid                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetPcSubtitle(int32 PcSubtitleUid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetPcSubtitle");

	Params::TLBuilderCommands_TLSetPcSubtitle Parms{};

	Parms.PcSubtitleUid = PcSubtitleUid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetPhotoSensitize
// (Final, Exec, Native, Public)
// Parameters:
// float                                   PhotoSensitize                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetPhotoSensitize(float PhotoSensitize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetPhotoSensitize");

	Params::TLBuilderCommands_TLSetPhotoSensitize Parms{};

	Parms.PhotoSensitize = PhotoSensitize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetPin
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             MapIconId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetPin(class FName MapIconId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetPin");

	Params::TLBuilderCommands_TLSetPin Parms{};

	Parms.MapIconId = MapIconId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetRotation
// (Final, Exec, Native, Public)
// Parameters:
// float                                   StartX                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartY                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClockwise                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetRotation(float StartX, float StartY, float EndX, float EndY, bool bClockwise, float Duration, float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetRotation");

	Params::TLBuilderCommands_TLSetRotation Parms{};

	Parms.StartX = StartX;
	Parms.StartY = StartY;
	Parms.EndX = EndX;
	Parms.EndY = EndY;
	Parms.bClockwise = bClockwise;
	Parms.Duration = Duration;
	Parms.Delay = Delay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetRotation1
// (Final, Exec, Native, Public)
// Parameters:
// float                                   EndX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClockwise                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetRotation1(float EndX, float EndY, bool bClockwise, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetRotation1");

	Params::TLBuilderCommands_TLSetRotation1 Parms{};

	Parms.EndX = EndX;
	Parms.EndY = EndY;
	Parms.bClockwise = bClockwise;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetRotation2
// (Final, Exec, Native, Public)
// Parameters:
// float                                   StartRad                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndRad                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClockwise                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetRotation2(float StartRad, float EndRad, bool bClockwise, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetRotation2");

	Params::TLBuilderCommands_TLSetRotation2 Parms{};

	Parms.StartRad = StartRad;
	Parms.EndRad = EndRad;
	Parms.bClockwise = bClockwise;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetSeasonPassPointAnimation
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetSeasonPassPointAnimation(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetSeasonPassPointAnimation");

	Params::TLBuilderCommands_TLSetSeasonPassPointAnimation Parms{};

	Parms.InIsActive = InIsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetSuperSamplingMethod
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Method                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetSuperSamplingMethod(int32 Method)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetSuperSamplingMethod");

	Params::TLBuilderCommands_TLSetSuperSamplingMethod Parms{};

	Parms.Method = Method;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetTargetAsTauntTarget
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetTargetAsTauntTarget(bool bOn, const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetTargetAsTauntTarget");

	Params::TLBuilderCommands_TLSetTargetAsTauntTarget Parms{};

	Parms.bOn = bOn;
	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetTargetOpacity
// (Final, Exec, Native, Public)
// Parameters:
// float                                   TargetOpacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionTime                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetTargetOpacity(float TargetOpacity, const float TransitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetTargetOpacity");

	Params::TLBuilderCommands_TLSetTargetOpacity Parms{};

	Parms.TargetOpacity = TargetOpacity;
	Parms.TransitionTime = TransitionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetTargetOpacity1
// (Final, Exec, Native, Public)
// Parameters:
// float                                   TargetOpacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionTime                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetTargetOpacity1(float TargetOpacity, const float TransitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetTargetOpacity1");

	Params::TLBuilderCommands_TLSetTargetOpacity1 Parms{};

	Parms.TargetOpacity = TargetOpacity;
	Parms.TransitionTime = TransitionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetTargetVisibility
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionTime                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetTargetVisibility(const int32 ObjId, bool bVisible, const float TransitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetTargetVisibility");

	Params::TLBuilderCommands_TLSetTargetVisibility Parms{};

	Parms.ObjId = ObjId;
	Parms.bVisible = bVisible;
	Parms.TransitionTime = TransitionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetText
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// class FString                           FilePath                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetText(class FString* FilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetText");

	Params::TLBuilderCommands_TLSetText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FilePath != nullptr)
		*FilePath = std::move(Parms.FilePath);
}


// Function TLClient.TLBuilderCommands.TLSetTimeline
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             TimelineId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Score1                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharName1                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Score2                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharName2                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   Score3                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CharName3                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetTimeline(class FName TimelineId, const int64 Score1, const class FString& CharName1, const int64 Score2, const class FString& CharName2, const int64 Score3, const class FString& CharName3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetTimeline");

	Params::TLBuilderCommands_TLSetTimeline Parms{};

	Parms.TimelineId = TimelineId;
	Parms.Score1 = Score1;
	Parms.CharName1 = std::move(CharName1);
	Parms.Score2 = Score2;
	Parms.CharName2 = std::move(CharName2);
	Parms.Score3 = Score3;
	Parms.CharName3 = std::move(CharName3);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetUIHideMode
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetUIHideMode(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetUIHideMode");

	Params::TLBuilderCommands_TLSetUIHideMode Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetupDiamond
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InBalance                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetupDiamond(int64 InBalance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetupDiamond");

	Params::TLBuilderCommands_TLSetupDiamond Parms{};

	Parms.InBalance = InBalance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetUseHoverForPresetView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetUseHoverForPresetView(bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetUseHoverForPresetView");

	Params::TLBuilderCommands_TLSetUseHoverForPresetView Parms{};

	Parms.bInEnable = bInEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetUserPrivacySettings
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSetUserPrivacySettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetUserPrivacySettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetVisibility
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TransitionTime                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetVisibility(bool bVisible, const float TransitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetVisibility");

	Params::TLBuilderCommands_TLSetVisibility Parms{};

	Parms.bVisible = bVisible;
	Parms.TransitionTime = TransitionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSetVoiceChatEnableActiveConnectMute
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bConnect                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMute                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSetVoiceChatEnableActiveConnectMute(bool bEnable, bool bActive, bool bConnect, bool bMute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSetVoiceChatEnableActiveConnectMute");

	Params::TLBuilderCommands_TLSetVoiceChatEnableActiveConnectMute Parms{};

	Parms.bEnable = bEnable;
	Parms.bActive = bActive;
	Parms.bConnect = bConnect;
	Parms.bMute = bMute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowCharacterList
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowCharacterList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowCharacterList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowColMesh
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   FileId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowColMesh(int32 FileId, const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowColMesh");

	Params::TLBuilderCommands_TLShowColMesh Parms{};

	Parms.FileId = FileId;
	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowDebug
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Command                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowDebug(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowDebug");

	Params::TLBuilderCommands_TLShowDebug Parms{};

	Parms.Command = std::move(Command);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowDebugReset
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowDebugReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowDebugReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowDefaultMapTex
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowDefaultMapTex(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowDefaultMapTex");

	Params::TLBuilderCommands_TLShowDefaultMapTex Parms{};

	Parms.bInValue = bInValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowDungeonWaypointUI
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InUID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowDungeonWaypointUI(int32 InUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowDungeonWaypointUI");

	Params::TLBuilderCommands_TLShowDungeonWaypointUI Parms{};

	Parms.InUID = InUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowDynamicEventUI
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowDynamicEventUI(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowDynamicEventUI");

	Params::TLBuilderCommands_TLShowDynamicEventUI Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowEnterContentRegionEventScreenMessage
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// class FName                             InDynamicTableId                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InCurRegionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowEnterContentRegionEventScreenMessage(const class FName& InDynamicTableId, uint8 InCurRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowEnterContentRegionEventScreenMessage");

	Params::TLBuilderCommands_TLShowEnterContentRegionEventScreenMessage Parms{};

	Parms.InDynamicTableId = InDynamicTableId;
	Parms.InCurRegionType = InCurRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowFloatingTest
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowFloatingTest(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowFloatingTest");

	Params::TLBuilderCommands_TLShowFloatingTest Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowFoColMesh
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowFoColMesh(const int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowFoColMesh");

	Params::TLBuilderCommands_TLShowFoColMesh Parms{};

	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowFocusTooltip
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowFocusTooltip(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowFocusTooltip");

	Params::TLBuilderCommands_TLShowFocusTooltip Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowGameCode
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowGameCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowGameCode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowHighResTex1024
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowHighResTex1024(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowHighResTex1024");

	Params::TLBuilderCommands_TLShowHighResTex1024 Parms{};

	Parms.bInValue = bInValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowHighResTex256
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowHighResTex256(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowHighResTex256");

	Params::TLBuilderCommands_TLShowHighResTex256 Parms{};

	Parms.bInValue = bInValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowHighResTex512
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowHighResTex512(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowHighResTex512");

	Params::TLBuilderCommands_TLShowHighResTex512 Parms{};

	Parms.bInValue = bInValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowInfinityDungeon
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    IsJoin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DungeonUid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFloorIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowInfinityDungeon(bool IsJoin, int32 DungeonUid, int32 InFloorIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowInfinityDungeon");

	Params::TLBuilderCommands_TLShowInfinityDungeon Parms{};

	Parms.IsJoin = IsJoin;
	Parms.DungeonUid = DungeonUid;
	Parms.InFloorIndex = InFloorIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowInfinityDungeonComplete
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    IsJoin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DungeonUid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InFloorIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowInfinityDungeonComplete(bool IsJoin, int32 DungeonUid, int32 InFloorIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowInfinityDungeonComplete");

	Params::TLBuilderCommands_TLShowInfinityDungeonComplete Parms{};

	Parms.IsJoin = IsJoin;
	Parms.DungeonUid = DungeonUid;
	Parms.InFloorIndex = InFloorIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowInfoConntecdRealmGroup
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowInfoConntecdRealmGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowInfoConntecdRealmGroup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowItemComposition
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowItemComposition(int32 InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowItemComposition");

	Params::TLBuilderCommands_TLShowItemComposition Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowItemDropInfo
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowItemDropInfo(bool bInShow, int32 InItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowItemDropInfo");

	Params::TLBuilderCommands_TLShowItemDropInfo Parms{};

	Parms.bInShow = bInShow;
	Parms.InItemID = InItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowItemUid
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowItemUid(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowItemUid");

	Params::TLBuilderCommands_TLShowItemUid Parms{};

	Parms.InIsShow = InIsShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowJoinDynamicEventScreenMessage
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// class FName                             InDynamicTableId                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InCurRegionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowJoinDynamicEventScreenMessage(const class FName& InDynamicTableId, uint8 InCurRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowJoinDynamicEventScreenMessage");

	Params::TLBuilderCommands_TLShowJoinDynamicEventScreenMessage Parms{};

	Parms.InDynamicTableId = InDynamicTableId;
	Parms.InCurRegionType = InCurRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowLatencyInfo
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowLatencyInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowLatencyInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowLevelHpCost
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowLevelHpCost(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowLevelHpCost");

	Params::TLBuilderCommands_TLShowLevelHpCost Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowLoadingScreen
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowLoadingScreen(int32 InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowLoadingScreen");

	Params::TLBuilderCommands_TLShowLoadingScreen Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowLoadingScreenMovie
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InMovieTableKey                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowLoadingScreenMovie(bool bInShow, class FName InMovieTableKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowLoadingScreenMovie");

	Params::TLBuilderCommands_TLShowLoadingScreenMovie Parms{};

	Parms.bInShow = bInShow;
	Parms.InMovieTableKey = InMovieTableKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowMagicDollInteraction
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowMagicDollInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowMagicDollInteraction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowMapDebugShape
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowMapDebugShape(int32 InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowMapDebugShape");

	Params::TLBuilderCommands_TLShowMapDebugShape Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowMapDebugShapeByGUID
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InStringGUID                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowMapDebugShapeByGUID(const class FString& InStringGUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowMapDebugShapeByGUID");

	Params::TLBuilderCommands_TLShowMapDebugShapeByGUID Parms{};

	Parms.InStringGUID = std::move(InStringGUID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowMapDebugShapeDetail
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InShapeType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowMapDebugShapeDetail(int32 InShow, int32 InShapeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowMapDebugShapeDetail");

	Params::TLBuilderCommands_TLShowMapDebugShapeDetail Parms{};

	Parms.InShow = InShow;
	Parms.InShapeType = InShapeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowMapIcon
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowMapIcon(int32 InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowMapIcon");

	Params::TLBuilderCommands_TLShowMapIcon Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowMapRegionInfo
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InWorldHierarchyGUID                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowMapRegionInfo(uint64 InWorldHierarchyGUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowMapRegionInfo");

	Params::TLBuilderCommands_TLShowMapRegionInfo Parms{};

	Parms.InWorldHierarchyGUID = InWorldHierarchyGUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowMapScale
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowMapScale(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowMapScale");

	Params::TLBuilderCommands_TLShowMapScale Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowMyPcCapeEmblem
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowMyPcCapeEmblem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowMyPcCapeEmblem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowNCSPenaltyMessage
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InBanReasonCode                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInPermanentBan                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowNCSPenaltyMessage(const int32 InBanReasonCode, const bool bInPermanentBan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowNCSPenaltyMessage");

	Params::TLBuilderCommands_TLShowNCSPenaltyMessage Parms{};

	Parms.InBanReasonCode = InBanReasonCode;
	Parms.bInPermanentBan = bInPermanentBan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowNowUTCOffset
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowNowUTCOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowNowUTCOffset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowPenaltyMessage
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bIsLobby                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InPolicyTypeAlias                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InAcknowledgeId                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InExpireMilliseconds                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowPenaltyMessage(bool bIsLobby, const class FString& InPolicyTypeAlias, const class FString& InAcknowledgeId, int32 InExpireMilliseconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowPenaltyMessage");

	Params::TLBuilderCommands_TLShowPenaltyMessage Parms{};

	Parms.bIsLobby = bIsLobby;
	Parms.InPolicyTypeAlias = std::move(InPolicyTypeAlias);
	Parms.InAcknowledgeId = std::move(InAcknowledgeId);
	Parms.InExpireMilliseconds = InExpireMilliseconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowPlatformStore
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ProductId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowPlatformStore(const class FString& ProductId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowPlatformStore");

	Params::TLBuilderCommands_TLShowPlatformStore Parms{};

	Parms.ProductId = std::move(ProductId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowRadialOtherPcMenu
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InParty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    PartyReader                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowRadialOtherPcMenu(bool InParty, bool PartyReader)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowRadialOtherPcMenu");

	Params::TLBuilderCommands_TLShowRadialOtherPcMenu Parms{};

	Parms.InParty = InParty;
	Parms.PartyReader = PartyReader;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowRanking
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowRanking(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowRanking");

	Params::TLBuilderCommands_TLShowRanking Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowRealmGroupDataIDList
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowRealmGroupDataIDList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowRealmGroupDataIDList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowRealmIDList
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowRealmIDList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowRealmIDList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowRealmInfo
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InRealmID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowRealmInfo(int32 InRealmID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowRealmInfo");

	Params::TLBuilderCommands_TLShowRealmInfo Parms{};

	Parms.InRealmID = InRealmID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowRegionScreenMessage
// (Final, Exec, Native, Public)
// Parameters:
// uint8                                   InCurRegionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowRegionScreenMessage(uint8 InCurRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowRegionScreenMessage");

	Params::TLBuilderCommands_TLShowRegionScreenMessage Parms{};

	Parms.InCurRegionType = InCurRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowRegionTypeChangeScreenMessage
// (Final, Exec, Native, Public)
// Parameters:
// uint8                                   InPrevRegionType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InCurRegionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowRegionTypeChangeScreenMessage(uint8 InPrevRegionType, uint8 InCurRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowRegionTypeChangeScreenMessage");

	Params::TLBuilderCommands_TLShowRegionTypeChangeScreenMessage Parms{};

	Parms.InPrevRegionType = InPrevRegionType;
	Parms.InCurRegionType = InCurRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowRuneEnchantLevel
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowRuneEnchantLevel(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowRuneEnchantLevel");

	Params::TLBuilderCommands_TLShowRuneEnchantLevel Parms{};

	Parms.InIsActive = InIsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowSeasonPassAction
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InPassGuid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAddPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAddBonusPoint                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowSeasonPassAction(uint64 InPassGuid, int32 InAddPoint, int32 InAddBonusPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowSeasonPassAction");

	Params::TLBuilderCommands_TLShowSeasonPassAction Parms{};

	Parms.InPassGuid = InPassGuid;
	Parms.InAddPoint = InAddPoint;
	Parms.InAddBonusPoint = InAddBonusPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowServerStatus
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   PageSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PageNo                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowServerStatus(int32 PageSize, int32 PageNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowServerStatus");

	Params::TLBuilderCommands_TLShowServerStatus Parms{};

	Parms.PageSize = PageSize;
	Parms.PageNo = PageNo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowSpecificUI
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowSpecificUI(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowSpecificUI");

	Params::TLBuilderCommands_TLShowSpecificUI Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowSubtitle
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InMsg                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InSpeakerText                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowSubtitle(const class FString& InMsg, const class FString& InSpeakerText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowSubtitle");

	Params::TLBuilderCommands_TLShowSubtitle Parms{};

	Parms.InMsg = std::move(InMsg);
	Parms.InSpeakerText = std::move(InSpeakerText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowSystemMessage
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Args                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowSystemMessage(class FName Name_0, const class FString& Args)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowSystemMessage");

	Params::TLBuilderCommands_TLShowSystemMessage Parms{};

	Parms.Name_0 = Name_0;
	Parms.Args = std::move(Args);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowSystemMessageEmblem
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsRelationMark                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowSystemMessageEmblem(bool InIsRelationMark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowSystemMessageEmblem");

	Params::TLBuilderCommands_TLShowSystemMessageEmblem Parms{};

	Parms.InIsRelationMark = InIsRelationMark;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowSystemMessageWithRepeatCheck
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Name_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowSystemMessageWithRepeatCheck(class FName Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowSystemMessageWithRepeatCheck");

	Params::TLBuilderCommands_TLShowSystemMessageWithRepeatCheck Parms{};

	Parms.Name_0 = Name_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowUI
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InTableUIKey                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowUI(class FName InTableUIKey, bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowUI");

	Params::TLBuilderCommands_TLShowUI Parms{};

	Parms.InTableUIKey = InTableUIKey;
	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowWebView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLShowWebView(bool bInVisibility, const class FString& InUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowWebView");

	Params::TLBuilderCommands_TLShowWebView Parms{};

	Parms.bInVisibility = bInVisibility;
	Parms.InUrl = std::move(InUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLShowWorldCommunity
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLShowWorldCommunity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLShowWorldCommunity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSiegetheDayArenaSetting
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Team1ID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Team2ID                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSiegetheDayArenaSetting(const class FString& Team1ID, const class FString& Team2ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSiegetheDayArenaSetting");

	Params::TLBuilderCommands_TLSiegetheDayArenaSetting Parms{};

	Parms.Team1ID = std::move(Team1ID);
	Parms.Team2ID = std::move(Team2ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSiegetheDayArenaSettingClear
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSiegetheDayArenaSettingClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSiegetheDayArenaSettingClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSiegetheDayTeamAdd
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InGuildId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InRowName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSiegetheDayTeamAdd(int64 InGuildId, class FName InRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSiegetheDayTeamAdd");

	Params::TLBuilderCommands_TLSiegetheDayTeamAdd Parms{};

	Parms.InGuildId = InGuildId;
	Parms.InRowName = InRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSiegetheDayTeamAllRemove
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSiegetheDayTeamAllRemove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSiegetheDayTeamAllRemove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSiegetheDayTeamRemove
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InGuildId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSiegetheDayTeamRemove(int64 InGuildId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSiegetheDayTeamRemove");

	Params::TLBuilderCommands_TLSiegetheDayTeamRemove Parms{};

	Parms.InGuildId = InGuildId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSiegeWarfareUsurpingMark
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InObjectId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InShowCrown                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSiegeWarfareUsurpingMark(int32 InObjectId, bool InShowCrown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSiegeWarfareUsurpingMark");

	Params::TLBuilderCommands_TLSiegeWarfareUsurpingMark Parms{};

	Parms.InObjectId = InObjectId;
	Parms.InShowCrown = InShowCrown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSkillContextRefreshFormulaValues
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSkillContextRefreshFormulaValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSkillContextRefreshFormulaValues");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSkillContextStatusChange
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToggle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSkillContextStatusChange(int32 SlotId, int32 SlotStatus, bool bToggle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSkillContextStatusChange");

	Params::TLBuilderCommands_TLSkillContextStatusChange Parms{};

	Parms.SlotId = SlotId;
	Parms.SlotStatus = SlotStatus;
	Parms.bToggle = bToggle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSkillGather
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSkillGather(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSkillGather");

	Params::TLBuilderCommands_TLSkillGather Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSkillGatherResult
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSkillGatherResult(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSkillGatherResult");

	Params::TLBuilderCommands_TLSkillGatherResult Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSkillLevelUpSceneResult
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSkillLevelUpSceneResult(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSkillLevelUpSceneResult");

	Params::TLBuilderCommands_TLSkillLevelUpSceneResult Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSkillMoveDebug
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSkillMoveDebug(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSkillMoveDebug");

	Params::TLBuilderCommands_TLSkillMoveDebug Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSkillUnlockScreenMessage
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EquipWeaponSkillComplexId1                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EquipWeaponSkillComplexId2                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewAcquiredSkillNum                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSkillUnlockScreenMessage(int32 EquipWeaponSkillComplexId1, int32 EquipWeaponSkillComplexId2, int32 NewAcquiredSkillNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSkillUnlockScreenMessage");

	Params::TLBuilderCommands_TLSkillUnlockScreenMessage Parms{};

	Parms.EquipWeaponSkillComplexId1 = EquipWeaponSkillComplexId1;
	Parms.EquipWeaponSkillComplexId2 = EquipWeaponSkillComplexId2;
	Parms.NewAcquiredSkillNum = NewAcquiredSkillNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSoundToggleDebugAlert
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSoundToggleDebugAlert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSoundToggleDebugAlert");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSpeakDialogue
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DialogueId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSpeakDialogue(const int32 ObjId, class FName DialogueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSpeakDialogue");

	Params::TLBuilderCommands_TLSpeakDialogue Parms{};

	Parms.ObjId = ObjId;
	Parms.DialogueId = DialogueId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSpeakDialogueTarget
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             DialogueId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSpeakDialogueTarget(class FName DialogueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSpeakDialogueTarget");

	Params::TLBuilderCommands_TLSpeakDialogueTarget Parms{};

	Parms.DialogueId = DialogueId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSpecialShop
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InGoodsName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSpecialShop(class FName InGoodsName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSpecialShop");

	Params::TLBuilderCommands_TLSpecialShop Parms{};

	Parms.InGoodsName = InGoodsName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSpecialShopCategoryFromNP
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSpecialShopCategoryFromNP(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSpecialShopCategoryFromNP");

	Params::TLBuilderCommands_TLSpecialShopCategoryFromNP Parms{};

	Parms.InIsActive = InIsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStartCasting
// (Final, Exec, Native, Public)
// Parameters:
// float                                   DurationSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartSec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLStartCasting(float DurationSec, float StartSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStartCasting");

	Params::TLBuilderCommands_TLStartCasting Parms{};

	Parms.DurationSec = DurationSec;
	Parms.StartSec = StartSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStartInstanceMapGuideEvent
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InUnitGuid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLStartInstanceMapGuideEvent(int64 InUnitGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStartInstanceMapGuideEvent");

	Params::TLBuilderCommands_TLStartInstanceMapGuideEvent Parms{};

	Parms.InUnitGuid = InUnitGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStartMapId
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ForceStartMapId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLStartMapId(int32 ForceStartMapId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStartMapId");

	Params::TLBuilderCommands_TLStartMapId Parms{};

	Parms.ForceStartMapId = ForceStartMapId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStartMapIdPosition
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ForceStartMapId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLStartMapIdPosition(int32 ForceStartMapId, float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStartMapIdPosition");

	Params::TLBuilderCommands_TLStartMapIdPosition Parms{};

	Parms.ForceStartMapId = ForceStartMapId;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStopActionTreeAll
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLStopActionTreeAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStopActionTreeAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStopCasting
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLStopCasting(int32 Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStopCasting");

	Params::TLBuilderCommands_TLStopCasting Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStopCinematicDialog
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLStopCinematicDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStopCinematicDialog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStopCueSheet
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InCueSheetKey                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDurationSec                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLStopCueSheet(class FName InCueSheetKey, const float InDurationSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStopCueSheet");

	Params::TLBuilderCommands_TLStopCueSheet Parms{};

	Parms.InCueSheetKey = InCueSheetKey;
	Parms.InDurationSec = InDurationSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStopCutscene
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLStopCutscene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStopCutscene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStopCutsceneFromServer
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             CutSceneID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLStopCutsceneFromServer(class FName CutSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStopCutsceneFromServer");

	Params::TLBuilderCommands_TLStopCutsceneFromServer Parms{};

	Parms.CutSceneID = CutSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStopMovie
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLStopMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStopMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStopMusic
// (Final, Exec, Native, Public)
// Parameters:
// uint32                                  InMusicPlayingID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLStopMusic(uint32 InMusicPlayingID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStopMusic");

	Params::TLBuilderCommands_TLStopMusic Parms{};

	Parms.InMusicPlayingID = InMusicPlayingID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStopSctAll
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLStopSctAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStopSctAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStorage
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLStorage(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStorage");

	Params::TLBuilderCommands_TLStorage Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLStringUtil
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InArgs                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLStringUtil(const class FString& InArgs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLStringUtil");

	Params::TLBuilderCommands_TLStringUtil Parms{};

	Parms.InArgs = std::move(InArgs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSubStanceChange
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             SubStanceName                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSubStanceChange(const class FName SubStanceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSubStanceChange");

	Params::TLBuilderCommands_TLSubStanceChange Parms{};

	Parms.SubStanceName = SubStanceName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSubStanceReset
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSubStanceReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSubStanceReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonCarrier
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonCarrier(int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonCarrier");

	Params::TLBuilderCommands_TLSummonCarrier Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonCarrierPos
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonCarrierPos(int32 InID, float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonCarrierPos");

	Params::TLBuilderCommands_TLSummonCarrierPos Parms{};

	Parms.InID = InID;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonFo
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonFo(int32 ClassId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonFo");

	Params::TLBuilderCommands_TLSummonFo Parms{};

	Parms.ClassId = ClassId;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonFoByName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             FoName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonFoByName(class FName FoName, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonFoByName");

	Params::TLBuilderCommands_TLSummonFoByName Parms{};

	Parms.FoName = FoName;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonFoWithAngle
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Degree                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonFoWithAngle(int32 ClassId, int32 Degree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonFoWithAngle");

	Params::TLBuilderCommands_TLSummonFoWithAngle Parms{};

	Parms.ClassId = ClassId;
	Parms.Degree = Degree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonMagicDoll
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InTableUid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonMagicDoll(int32 InTableUid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonMagicDoll");

	Params::TLBuilderCommands_TLSummonMagicDoll Parms{};

	Parms.InTableUid = InTableUid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonNpc
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonNpc(int32 ClassId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonNpc");

	Params::TLBuilderCommands_TLSummonNpc Parms{};

	Parms.ClassId = ClassId;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonNPCAroundMe
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Num                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonNPCAroundMe(int32 ClassId, float Radius, int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonNPCAroundMe");

	Params::TLBuilderCommands_TLSummonNPCAroundMe Parms{};

	Parms.ClassId = ClassId;
	Parms.Radius = Radius;
	Parms.Num = Num;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonNpcAtMouse
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonNpcAtMouse(int32 ClassId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonNpcAtMouse");

	Params::TLBuilderCommands_TLSummonNpcAtMouse Parms{};

	Parms.ClassId = ClassId;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonNpcByName
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             NpcName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonNpcByName(class FName NpcName, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonNpcByName");

	Params::TLBuilderCommands_TLSummonNpcByName Parms{};

	Parms.NpcName = NpcName;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonNpcWithMotion
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EntryMotionId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LoopMotionId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LoopMotionDurationMs                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonNpcWithMotion(int32 ClassId, int32 EntryMotionId, int32 LoopMotionId, int32 LoopMotionDurationMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonNpcWithMotion");

	Params::TLBuilderCommands_TLSummonNpcWithMotion Parms{};

	Parms.ClassId = ClassId;
	Parms.EntryMotionId = EntryMotionId;
	Parms.LoopMotionId = LoopMotionId;
	Parms.LoopMotionDurationMs = LoopMotionDurationMs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonNpcWithMotionAngle
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MotionId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonNpcWithMotionAngle(int32 ClassId, int32 MotionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonNpcWithMotionAngle");

	Params::TLBuilderCommands_TLSummonNpcWithMotionAngle Parms{};

	Parms.ClassId = ClassId;
	Parms.MotionId = MotionId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSummonNpcWithMotionAngle1
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ClassId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EntryMotionId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LoopMotionId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AngleDegree                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LoopMotionDurationMs                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLSummonNpcWithMotionAngle1(int32 ClassId, int32 EntryMotionId, int32 LoopMotionId, int32 AngleDegree, int32 LoopMotionDurationMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSummonNpcWithMotionAngle1");

	Params::TLBuilderCommands_TLSummonNpcWithMotionAngle1 Parms{};

	Parms.ClassId = ClassId;
	Parms.EntryMotionId = EntryMotionId;
	Parms.LoopMotionId = LoopMotionId;
	Parms.AngleDegree = AngleDegree;
	Parms.LoopMotionDurationMs = LoopMotionDurationMs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLSystemMenu
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLSystemMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLSystemMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTableAssetShowDebug
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    Show                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTableAssetShowDebug(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTableAssetShowDebug");

	Params::TLBuilderCommands_TLTableAssetShowDebug Parms{};

	Parms.Show = Show;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTargetHp
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Hp                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTargetHp(int32 Hp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTargetHp");

	Params::TLBuilderCommands_TLTargetHp Parms{};

	Parms.Hp = Hp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTargetHpAll
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Hp                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTargetHpAll(int32 Hp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTargetHpAll");

	Params::TLBuilderCommands_TLTargetHpAll Parms{};

	Parms.Hp = Hp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTargetHpPercent
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   HpPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTargetHpPercent(int32 HpPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTargetHpPercent");

	Params::TLBuilderCommands_TLTargetHpPercent Parms{};

	Parms.HpPercent = HpPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTargetHpPercentAll
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   HpPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTargetHpPercentAll(int32 HpPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTargetHpPercentAll");

	Params::TLBuilderCommands_TLTargetHpPercentAll Parms{};

	Parms.HpPercent = HpPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTargetMarkerColor
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InR                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InG                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InB                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTargetMarkerColor(int32 InR, int32 InG, int32 InB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTargetMarkerColor");

	Params::TLBuilderCommands_TLTargetMarkerColor Parms{};

	Parms.InR = InR;
	Parms.InG = InG;
	Parms.InB = InB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTargetScanAuto
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   IntervalSec                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTargetScanAuto(int32 IntervalSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTargetScanAuto");

	Params::TLBuilderCommands_TLTargetScanAuto Parms{};

	Parms.IntervalSec = IntervalSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTaxDeliveryUITestJoin
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InGuid                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTaxDeliveryUITestJoin(const class FString& InGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTaxDeliveryUITestJoin");

	Params::TLBuilderCommands_TLTaxDeliveryUITestJoin Parms{};

	Parms.InGuid = std::move(InGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTaxDeliveryUITestLeave
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InGuid                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTaxDeliveryUITestLeave(const class FString& InGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTaxDeliveryUITestLeave");

	Params::TLBuilderCommands_TLTaxDeliveryUITestLeave Parms{};

	Parms.InGuid = std::move(InGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTaxResultTest
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InRowName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTaxResultTest(class FName InRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTaxResultTest");

	Params::TLBuilderCommands_TLTaxResultTest Parms{};

	Parms.InRowName = InRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTechTestBuild1
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InParm1                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InParm2                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTechTestBuild1(int32 InParm1, int32 InParm2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTechTestBuild1");

	Params::TLBuilderCommands_TLTechTestBuild1 Parms{};

	Parms.InParm1 = InParm1;
	Parms.InParm2 = InParm2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTechTestBuild2
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InParm1                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InParm2                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTechTestBuild2(int32 InParm1, int32 InParm2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTechTestBuild2");

	Params::TLBuilderCommands_TLTechTestBuild2 Parms{};

	Parms.InParm1 = InParm1;
	Parms.InParm2 = InParm2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTeleport
// (Final, Exec, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                          Pos                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTeleport(const struct FVector& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTeleport");

	Params::TLBuilderCommands_TLTeleport Parms{};

	Parms.Pos = std::move(Pos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTeleportClipboardCopy
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTeleportClipboardCopy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTeleportClipboardCopy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTeleportClipboardPaste
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTeleportClipboardPaste()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTeleportClipboardPaste");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTeleportFixedPos
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InObjId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InX                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InY                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InZ                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTeleportFixedPos(int32 InObjId, float InX, float InY, float InZ, int32 InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTeleportFixedPos");

	Params::TLBuilderCommands_TLTeleportFixedPos Parms{};

	Parms.InObjId = InObjId;
	Parms.InX = InX;
	Parms.InY = InY;
	Parms.InZ = InZ;
	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTeleportMyPcToTarget
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTeleportMyPcToTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTeleportMyPcToTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTempInventoryAdd
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTempInventoryAdd(float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTempInventoryAdd");

	Params::TLBuilderCommands_TLTempInventoryAdd Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTempInventoryRemove
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InUID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTempInventoryRemove(int64 InUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTempInventoryRemove");

	Params::TLBuilderCommands_TLTempInventoryRemove Parms{};

	Parms.InUID = InUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTerminateUI
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InTableUIKey                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTerminateUI(class FName InTableUIKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTerminateUI");

	Params::TLBuilderCommands_TLTerminateUI Parms{};

	Parms.InTableUIKey = InTableUIKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTerminateUIAll
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTerminateUIAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTerminateUIAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestAcquiredMsgExp
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestAcquiredMsgExp(int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestAcquiredMsgExp");

	Params::TLBuilderCommands_TLTestAcquiredMsgExp Parms{};

	Parms.InCount = InCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestAddGuildRewardBox
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InBoxId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAddMinute                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestAddGuildRewardBox(int64 InBoxId, int32 InAddMinute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestAddGuildRewardBox");

	Params::TLBuilderCommands_TLTestAddGuildRewardBox Parms{};

	Parms.InBoxId = InBoxId;
	Parms.InAddMinute = InAddMinute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestClearSiegeDistribution
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTestClearSiegeDistribution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestClearSiegeDistribution");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestEmblemColor
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EmblemId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InColor0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InColor1                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestEmblemColor(int32 EmblemId, int32 InColor0, int32 InColor1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestEmblemColor");

	Params::TLBuilderCommands_TLTestEmblemColor Parms{};

	Parms.EmblemId = EmblemId;
	Parms.InColor0 = InColor0;
	Parms.InColor1 = InColor1;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestGlobalPayment
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTestGlobalPayment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestGlobalPayment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestGuildDistribution
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestGuildDistribution(int32 InCount, int32 InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestGuildDistribution");

	Params::TLBuilderCommands_TLTestGuildDistribution Parms{};

	Parms.InCount = InCount;
	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestGuildPointReward
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTestGuildPointReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestGuildPointReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestGuildViewer
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InGuildId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestGuildViewer(int64 InGuildId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestGuildViewer");

	Params::TLBuilderCommands_TLTestGuildViewer Parms{};

	Parms.InGuildId = InGuildId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestHotDeal
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InUseTest                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestHotDeal(bool InUseTest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestHotDeal");

	Params::TLBuilderCommands_TLTestHotDeal Parms{};

	Parms.InUseTest = InUseTest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestKMeans
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTestKMeans()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestKMeans");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestNotification
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTestNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestNotification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestNotificationLoop
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InIntervalSec                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestNotificationLoop(float InIntervalSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestNotificationLoop");

	Params::TLBuilderCommands_TLTestNotificationLoop Parms{};

	Parms.InIntervalSec = InIntervalSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestRefPoseAndCurPoseLoc
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestRefPoseAndCurPoseLoc(float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestRefPoseAndCurPoseLoc");

	Params::TLBuilderCommands_TLTestRefPoseAndCurPoseLoc Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestRotationEvent
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InRankCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestRotationEvent(int32 InRankCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestRotationEvent");

	Params::TLBuilderCommands_TLTestRotationEvent Parms{};

	Parms.InRankCount = InRankCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestShowUI
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InTableKey                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInStack                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestShowUI(class FName InTableKey, bool bInShow, bool bInStack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestShowUI");

	Params::TLBuilderCommands_TLTestShowUI Parms{};

	Parms.InTableKey = InTableKey;
	Parms.bInShow = bInShow;
	Parms.bInStack = bInStack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestSiegeDistribution
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTestSiegeDistribution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestSiegeDistribution");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestSiegeDistributionEx
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InGold                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   InDiamond                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InGuildMember1                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InGuildMember2                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InGuildMember3                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InGuildMember4                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestSiegeDistributionEx(int64 InGold, int64 InDiamond, const class FString& InGuildMember1, const class FString& InGuildMember2, const class FString& InGuildMember3, const class FString& InGuildMember4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestSiegeDistributionEx");

	Params::TLBuilderCommands_TLTestSiegeDistributionEx Parms{};

	Parms.InGold = InGold;
	Parms.InDiamond = InDiamond;
	Parms.InGuildMember1 = std::move(InGuildMember1);
	Parms.InGuildMember2 = std::move(InGuildMember2);
	Parms.InGuildMember3 = std::move(InGuildMember3);
	Parms.InGuildMember4 = std::move(InGuildMember4);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestSiegeDistributionGuildMemberCounts
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   InGold                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   InDiamond                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           JoinedGuildMemberCounts                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           TotalGuildMemberCounts                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestSiegeDistributionGuildMemberCounts(int64 InGold, int64 InDiamond, const TArray<int32>& JoinedGuildMemberCounts, const TArray<int32>& TotalGuildMemberCounts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestSiegeDistributionGuildMemberCounts");

	Params::TLBuilderCommands_TLTestSiegeDistributionGuildMemberCounts Parms{};

	Parms.InGold = InGold;
	Parms.InDiamond = InDiamond;
	Parms.JoinedGuildMemberCounts = std::move(JoinedGuildMemberCounts);
	Parms.TotalGuildMemberCounts = std::move(TotalGuildMemberCounts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestTimeline
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             TimelineId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTestTimeline(class FName TimelineId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestTimeline");

	Params::TLBuilderCommands_TLTestTimeline Parms{};

	Parms.TimelineId = TimelineId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTestTradeTop
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTestTradeTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTestTradeTop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimeLapse
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   CycleDays                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetGameHour                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFastForward                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimeLapse(int32 CycleDays, int32 TargetGameHour, bool bFastForward, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimeLapse");

	Params::TLBuilderCommands_TLTimeLapse Parms{};

	Parms.CycleDays = CycleDays;
	Parms.TargetGameHour = TargetGameHour;
	Parms.bFastForward = bFastForward;
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimerJob
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInRun                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InIntervalSeconds                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimerJob(bool bInRun, float InIntervalSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimerJob");

	Params::TLBuilderCommands_TLTimerJob Parms{};

	Parms.bInRun = bInRun;
	Parms.InIntervalSeconds = InIntervalSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimerTest
// (Final, Exec, Native, Public)
// Parameters:
// float                                   DelaySec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimerTest(float DelaySec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimerTest");

	Params::TLBuilderCommands_TLTimerTest Parms{};

	Parms.DelaySec = DelaySec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimerTest1
// (Final, Exec, Native, Public)
// Parameters:
// float                                   DelaySec                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DelayFirstSec                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimerTest1(float DelaySec, float DelayFirstSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimerTest1");

	Params::TLBuilderCommands_TLTimerTest1 Parms{};

	Parms.DelaySec = DelaySec;
	Parms.DelayFirstSec = DelayFirstSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimerTestCallByHandle
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTimerTestCallByHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimerTestCallByHandle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimeTableEventComplete
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InEventGuid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimeTableEventComplete(uint64 InEventGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimeTableEventComplete");

	Params::TLBuilderCommands_TLTimeTableEventComplete Parms{};

	Parms.InEventGuid = InEventGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimeTableEventStart
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InEventGuid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimeTableEventStart(uint64 InEventGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimeTableEventStart");

	Params::TLBuilderCommands_TLTimeTableEventStart Parms{};

	Parms.InEventGuid = InEventGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimeTableInsert
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InEventGuid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimeTableInsert(uint64 InEventGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimeTableInsert");

	Params::TLBuilderCommands_TLTimeTableInsert Parms{};

	Parms.InEventGuid = InEventGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimeTableInsertInterServerEvent
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InEventGuid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimeTableInsertInterServerEvent(uint64 InEventGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimeTableInsertInterServerEvent");

	Params::TLBuilderCommands_TLTimeTableInsertInterServerEvent Parms{};

	Parms.InEventGuid = InEventGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimeTableInsertM
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  InEventGuid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMinute                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimeTableInsertM(uint64 InEventGuid, int32 InMinute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimeTableInsertM");

	Params::TLBuilderCommands_TLTimeTableInsertM Parms{};

	Parms.InEventGuid = InEventGuid;
	Parms.InMinute = InMinute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimeTableOutputSchedule
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTimeTableOutputSchedule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimeTableOutputSchedule");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTimeTableRemove
// (Final, Exec, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// uint64                                  InEventGuid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        InTimestamp                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimeTableRemove(uint64 InEventGuid, struct FDateTime* InTimestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimeTableRemove");

	Params::TLBuilderCommands_TLTimeTableRemove Parms{};

	Parms.InEventGuid = InEventGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InTimestamp != nullptr)
		*InTimestamp = std::move(Parms.InTimestamp);
}


// Function TLClient.TLBuilderCommands.TLTimeTableUpdate
// (Final, Exec, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// uint64                                  InEventGuid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        InTimestamp                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTimeTableUpdate(uint64 InEventGuid, struct FDateTime* InTimestamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTimeTableUpdate");

	Params::TLBuilderCommands_TLTimeTableUpdate Parms{};

	Parms.InEventGuid = InEventGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InTimestamp != nullptr)
		*InTimestamp = std::move(Parms.InTimestamp);
}


// Function TLClient.TLBuilderCommands.TLToggleGameUI
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLToggleGameUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLToggleGameUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLToggleInstanceMapGuideEvent
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLToggleInstanceMapGuideEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLToggleInstanceMapGuideEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLToggleInventoryUIType
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLToggleInventoryUIType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLToggleInventoryUIType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLToggleLobbyUI
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLToggleLobbyUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLToggleLobbyUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLToggleObjectCollision
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InType                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InOn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLToggleObjectCollision(const int32 ObjId, const int32 InType, bool InOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLToggleObjectCollision");

	Params::TLBuilderCommands_TLToggleObjectCollision Parms{};

	Parms.ObjId = ObjId;
	Parms.InType = InType;
	Parms.InOn = InOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTogglePurchase
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTogglePurchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTogglePurchase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLToggleSavedPlace
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLToggleSavedPlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLToggleSavedPlace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLToggleSeasonRewardUI
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLToggleSeasonRewardUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLToggleSeasonRewardUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLToggleTutorialMagicDoll
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InMagicDollName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLToggleTutorialMagicDoll(class FName InMagicDollName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLToggleTutorialMagicDoll");

	Params::TLBuilderCommands_TLToggleTutorialMagicDoll Parms{};

	Parms.InMagicDollName = InMagicDollName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTPByWorldmap
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTPByWorldmap(float X, float Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTPByWorldmap");

	Params::TLBuilderCommands_TLTPByWorldmap Parms{};

	Parms.X = X;
	Parms.Y = Y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTpLocal
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTpLocal(int32 ObjId, float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTpLocal");

	Params::TLBuilderCommands_TLTpLocal Parms{};

	Parms.ObjId = ObjId;
	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTraceAllObjectId
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTraceAllObjectId(int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTraceAllObjectId");

	Params::TLBuilderCommands_TLTraceAllObjectId Parms{};

	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTraceEnterClassObject
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjClassId                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTraceEnterClassObject(const int32 ObjClassId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTraceEnterClassObject");

	Params::TLBuilderCommands_TLTraceEnterClassObject Parms{};

	Parms.ObjClassId = ObjClassId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTraceEnterObjectGuid
// (Final, Exec, Native, Public)
// Parameters:
// uint64                                  TargetGuid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTraceEnterObjectGuid(uint64 TargetGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTraceEnterObjectGuid");

	Params::TLBuilderCommands_TLTraceEnterObjectGuid Parms{};

	Parms.TargetGuid = TargetGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTraceLastEnterObject
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bSet                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTraceLastEnterObject(bool bSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTraceLastEnterObject");

	Params::TLBuilderCommands_TLTraceLastEnterObject Parms{};

	Parms.bSet = bSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTraceProblemLevel
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTraceProblemLevel(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTraceProblemLevel");

	Params::TLBuilderCommands_TLTraceProblemLevel Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTraceSceneWorldObject
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   TargetId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTraceSceneWorldObject(int32 TargetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTraceSceneWorldObject");

	Params::TLBuilderCommands_TLTraceSceneWorldObject Parms{};

	Parms.TargetId = TargetId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTradeSalesOrEarning
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTradeSalesOrEarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTradeSalesOrEarning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTransformNpc
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NewNpcId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTransformNpc(int32 NewNpcId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTransformNpc");

	Params::TLBuilderCommands_TLTransformNpc Parms{};

	Parms.NewNpcId = NewNpcId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTribeMonster
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTribeMonster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTribeMonster");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTribePc
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTribePc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTribePc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTryContractShare
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InContractGuid                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTryContractShare(const class FString& InContractGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTryContractShare");

	Params::TLBuilderCommands_TLTryContractShare Parms{};

	Parms.InContractGuid = std::move(InContractGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTTSEnable
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTTSEnable(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTTSEnable");

	Params::TLBuilderCommands_TLTTSEnable Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTurnToDirReq
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTurnToDirReq()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTurnToDirReq");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTutorialComplete
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             TutorialId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkip                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTutorialComplete(class FName TutorialId, bool bSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTutorialComplete");

	Params::TLBuilderCommands_TLTutorialComplete Parms{};

	Parms.TutorialId = TutorialId;
	Parms.bSkip = bSkip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTutorialCompleteAll
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTutorialCompleteAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTutorialCompleteAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTutorialResetAll
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLTutorialResetAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTutorialResetAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTutorialShow
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTutorialShow(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTutorialShow");

	Params::TLBuilderCommands_TLTutorialShow Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLTutorialStart
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             TutorialId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLTutorialStart(class FName TutorialId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLTutorialStart");

	Params::TLBuilderCommands_TLTutorialStart Parms{};

	Parms.TutorialId = TutorialId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUIGamepadType
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    Xbox                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUIGamepadType(bool Xbox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUIGamepadType");

	Params::TLBuilderCommands_TLUIGamepadType Parms{};

	Parms.Xbox = Xbox;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUIHiddenState
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InNameKey                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInHiddenState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUIHiddenState(class FName InNameKey, bool bInHiddenState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUIHiddenState");

	Params::TLBuilderCommands_TLUIHiddenState Parms{};

	Parms.InNameKey = InNameKey;
	Parms.bInHiddenState = bInHiddenState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUIHudShow
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUIHudShow(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUIHudShow");

	Params::TLBuilderCommands_TLUIHudShow Parms{};

	Parms.bInShow = bInShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUILoaderView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUILoaderView(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUILoaderView");

	Params::TLBuilderCommands_TLUILoaderView Parms{};

	Parms.bDisplay = bDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUIManagerView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUIManagerView(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUIManagerView");

	Params::TLBuilderCommands_TLUIManagerView Parms{};

	Parms.bDisplay = bDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUIPlatform
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUIPlatform(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUIPlatform");

	Params::TLBuilderCommands_TLUIPlatform Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUISoundUseUniqueObjectId
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InUse                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUISoundUseUniqueObjectId(bool InUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUISoundUseUniqueObjectId");

	Params::TLBuilderCommands_TLUISoundUseUniqueObjectId Parms{};

	Parms.InUse = InUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUIStackTest
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InTestType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUIStackTest(int32 InTestType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUIStackTest");

	Params::TLBuilderCommands_TLUIStackTest Parms{};

	Parms.InTestType = InTestType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUIStage
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InStage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUIStage(int32 InStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUIStage");

	Params::TLBuilderCommands_TLUIStage Parms{};

	Parms.InStage = InStage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUnloadCutscene
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             CutSceneID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUnloadCutscene(class FName CutSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUnloadCutscene");

	Params::TLBuilderCommands_TLUnloadCutscene Parms{};

	Parms.CutSceneID = CutSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUpdateAnimation
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ToPause                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUpdateAnimation(int32 ObjId, int32 ToPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUpdateAnimation");

	Params::TLBuilderCommands_TLUpdateAnimation Parms{};

	Parms.ObjId = ObjId;
	Parms.ToPause = ToPause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUpdateDrawMapArea
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLUpdateDrawMapArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUpdateDrawMapArea");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUpdateNextSiegeTime
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InMinute                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUpdateNextSiegeTime(int32 InMinute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUpdateNextSiegeTime");

	Params::TLBuilderCommands_TLUpdateNextSiegeTime Parms{};

	Parms.InMinute = InMinute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUpdatePcRelationshipMember
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   PcId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUpdatePcRelationshipMember(int64 PcId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUpdatePcRelationshipMember");

	Params::TLBuilderCommands_TLUpdatePcRelationshipMember Parms{};

	Parms.PcId = PcId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUpdateWind
// (Final, Exec, Native, Public)
// Parameters:
// uint8                                   InWindDir                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InWindSpeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUpdateWind(uint8 InWindDir, int32 InWindSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUpdateWind");

	Params::TLBuilderCommands_TLUpdateWind Parms{};

	Parms.InWindDir = InWindDir;
	Parms.InWindSpeed = InWindSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUseGravity
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InUse                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUseGravity(bool InUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUseGravity");

	Params::TLBuilderCommands_TLUseGravity Parms{};

	Parms.InUse = InUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUserCamera
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InUserCameraTableKey                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUserCamera(class FName InUserCameraTableKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUserCamera");

	Params::TLBuilderCommands_TLUserCamera Parms{};

	Parms.InUserCameraTableKey = InUserCameraTableKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUserCameraClearNpData
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLUserCameraClearNpData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUserCameraClearNpData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUserCameraFirstPersonView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUserCameraFirstPersonView(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUserCameraFirstPersonView");

	Params::TLBuilderCommands_TLUserCameraFirstPersonView Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUserCameraIndex
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUserCameraIndex(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUserCameraIndex");

	Params::TLBuilderCommands_TLUserCameraIndex Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUserCameraMaxDistPlus
// (Final, Exec, Native, Public)
// Parameters:
// float                                   CameraMaxDistPlus                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUserCameraMaxDistPlus(float CameraMaxDistPlus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUserCameraMaxDistPlus");

	Params::TLBuilderCommands_TLUserCameraMaxDistPlus Parms{};

	Parms.CameraMaxDistPlus = CameraMaxDistPlus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUserCameraTriggerArea
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             InEventName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUserCameraTriggerArea(class FName InEventName, bool bEnter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUserCameraTriggerArea");

	Params::TLBuilderCommands_TLUserCameraTriggerArea Parms{};

	Parms.InEventName = InEventName;
	Parms.bEnter = bEnter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUserCameraUpdate
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLUserCameraUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUserCameraUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLUsurpingGuildMasterObjectId
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ObjId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLUsurpingGuildMasterObjectId(int32 ObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLUsurpingGuildMasterObjectId");

	Params::TLBuilderCommands_TLUsurpingGuildMasterObjectId Parms{};

	Parms.ObjId = ObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLVersion
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLVersion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLVideoTest
// (Final, Exec, Native, Public)

void UTLBuilderCommands::TLVideoTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLVideoTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLVisibleInvenEquipItem
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLVisibleInvenEquipItem(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLVisibleInvenEquipItem");

	Params::TLBuilderCommands_TLVisibleInvenEquipItem Parms{};

	Parms.InVisible = InVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLWarpPartyDungeonEvent
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// class FString                           InEventGuid                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InDifficulty                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLWarpPartyDungeonEvent(class FString* InEventGuid, class FName InDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLWarpPartyDungeonEvent");

	Params::TLBuilderCommands_TLWarpPartyDungeonEvent Parms{};

	Parms.InDifficulty = InDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InEventGuid != nullptr)
		*InEventGuid = std::move(Parms.InEventGuid);
}


// Function TLClient.TLBuilderCommands.TLWarpTimeAttackDungeonMap
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InDungeonRevisionId                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLWarpTimeAttackDungeonMap(int32 InDungeonRevisionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLWarpTimeAttackDungeonMap");

	Params::TLBuilderCommands_TLWarpTimeAttackDungeonMap Parms{};

	Parms.InDungeonRevisionId = InDungeonRevisionId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLWarpToLandmark
// (Final, Exec, Native, Public)
// Parameters:
// int64                                   Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLWarpToLandmark(int64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLWarpToLandmark");

	Params::TLBuilderCommands_TLWarpToLandmark Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLWayPointState
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLWayPointState(int32 InID, int32 InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLWayPointState");

	Params::TLBuilderCommands_TLWayPointState Parms{};

	Parms.InID = InID;
	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLWidgetBankTimer
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InIntervalSeconds                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLWidgetBankTimer(float InIntervalSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLWidgetBankTimer");

	Params::TLBuilderCommands_TLWidgetBankTimer Parms{};

	Parms.InIntervalSeconds = InIntervalSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLWidgetBankView
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InParam                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLWidgetBankView(bool bDisplay, const class FString& InParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLWidgetBankView");

	Params::TLBuilderCommands_TLWidgetBankView Parms{};

	Parms.bDisplay = bDisplay;
	Parms.InParam = std::move(InParam);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLWidgetBugTest
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   InCase                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLWidgetBugTest(int32 InCase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLWidgetBugTest");

	Params::TLBuilderCommands_TLWidgetBugTest Parms{};

	Parms.InCase = InCase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLWorldCarnivalNpc
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLWorldCarnivalNpc(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLWorldCarnivalNpc");

	Params::TLBuilderCommands_TLWorldCarnivalNpc Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLBuilderCommands.TLWorldMapCloud
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLBuilderCommands::TLWorldMapCloud(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLBuilderCommands", "TLWorldMapCloud");

	Params::TLBuilderCommands_TLWorldMapCloud Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetDynamicEventGuideTitle01.OnPvpMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsInPvpMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventGuideTitle01::OnPvpMode(bool IsInPvpMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideTitle01", "OnPvpMode");

	Params::TLUserWidgetDynamicEventGuideTitle01_OnPvpMode Parms{};

	Parms.IsInPvpMode = IsInPvpMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventGuideTitle01.PlayWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideTitle01::PlayWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideTitle01", "PlayWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideTitle01.StopWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideTitle01::StopWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideTitle01", "StopWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInputCharacterName.EditableTextBoxInputName_OnTextChanged
// (Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetInputCharacterName::EditableTextBoxInputName_OnTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInputCharacterName", "EditableTextBoxInputName_OnTextChanged");

	Params::TLUserWidgetInputCharacterName_EditableTextBoxInputName_OnTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInputCharacterName.EditableTextBoxInputName_TextDelegate
// (Final, Native, Private)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLUserWidgetInputCharacterName::EditableTextBoxInputName_TextDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInputCharacterName", "EditableTextBoxInputName_TextDelegate");

	Params::TLUserWidgetInputCharacterName_EditableTextBoxInputName_TextDelegate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInputCharacterName.IsValidNameLength
// (Final, Native, Private)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetInputCharacterName::IsValidNameLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInputCharacterName", "IsValidNameLength");

	Params::TLUserWidgetInputCharacterName_IsValidNameLength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetDiscountCashPrice.OnDiscount
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsDiscount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDiscountCashPrice::OnDiscount(bool InIsDiscount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDiscountCashPrice", "OnDiscount");

	Params::TLUserWidgetDiscountCashPrice_OnDiscount Parms{};

	Parms.InIsDiscount = InIsDiscount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSimpleSkillSlot.OnSetSkillObject
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSimpleSkillSlot::OnSetSkillObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSimpleSkillSlot", "OnSetSkillObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSimpleSkillSlot.OnUpdateSkillObjectInSkillSlot
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESkillGrade                             SkillGrade                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSimpleSkillSlot::OnUpdateSkillObjectInSkillSlot(ESkillGrade SkillGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSimpleSkillSlot", "OnUpdateSkillObjectInSkillSlot");

	Params::TLUserWidgetSimpleSkillSlot_OnUpdateSkillObjectInSkillSlot Parms{};

	Parms.SkillGrade = SkillGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLSingleModelSceneControlActor.IsPlayingModelSceneConti
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATLSingleModelSceneControlActor::IsPlayingModelSceneConti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSingleModelSceneControlActor", "IsPlayingModelSceneConti");

	Params::TLSingleModelSceneControlActor_IsPlayingModelSceneConti Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLSingleModelSceneControlActor.PlayModelSceneConti
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  InSceneContiPath                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopCurrentSCT                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForcePlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLSingleModelSceneControlActor::PlayModelSceneConti(const struct FSoftObjectPath& InSceneContiPath, bool bStopCurrentSCT, bool bForcePlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSingleModelSceneControlActor", "PlayModelSceneConti");

	Params::TLSingleModelSceneControlActor_PlayModelSceneConti Parms{};

	Parms.InSceneContiPath = std::move(InSceneContiPath);
	Parms.bStopCurrentSCT = bStopCurrentSCT;
	Parms.bForcePlay = bForcePlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLSingleModelSceneControlActor.PlayModelSceneConties
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FSoftObjectPath>          InSctPathArray                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bStopCurrentSCT                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLSingleModelSceneControlActor::PlayModelSceneConties(const TArray<struct FSoftObjectPath>& InSctPathArray, bool bStopCurrentSCT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSingleModelSceneControlActor", "PlayModelSceneConties");

	Params::TLSingleModelSceneControlActor_PlayModelSceneConties Parms{};

	Parms.InSctPathArray = std::move(InSctPathArray);
	Parms.bStopCurrentSCT = bStopCurrentSCT;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLSingleModelSceneControlActor.SetModelMeshRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         InRotator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ATLSingleModelSceneControlActor::SetModelMeshRotation(const struct FRotator& InRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSingleModelSceneControlActor", "SetModelMeshRotation");

	Params::TLSingleModelSceneControlActor_SetModelMeshRotation Parms{};

	Parms.InRotator = std::move(InRotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLSingleModelSceneControlActor.SetVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLSingleModelSceneControlActor::SetVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSingleModelSceneControlActor", "SetVisible");

	Params::TLSingleModelSceneControlActor_SetVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLSingleModelSceneControlActor.StopModelSceneConti
// (Final, Native, Public, BlueprintCallable)

void ATLSingleModelSceneControlActor::StopModelSceneConti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSingleModelSceneControlActor", "StopModelSceneConti");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCharacterSubtitleObject.GetSubtitleUid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLCharacterSubtitleObject::GetSubtitleUid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCharacterSubtitleObject", "GetSubtitleUid");

	Params::TLCharacterSubtitleObject_GetSubtitleUid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetContentsAlarmObjectiveBase.OnUpdateViewType
// (Event, Public, BlueprintEvent)
// Parameters:
// EContentsAlarmViewType                  InViewType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsAlarmObjectiveBase::OnUpdateViewType(EContentsAlarmViewType InViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmObjectiveBase", "OnUpdateViewType");

	Params::TLUserWidgetContentsAlarmObjectiveBase_OnUpdateViewType Parms{};

	Parms.InViewType = InViewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLCinematicDialog.OnChoiceTakeCutSceneEnd
// (Final, Native, Private)
// Parameters:
// class FName                             CutSceneID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ExclusiveTag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECutscenePlayResult                     Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLCinematicDialog::OnChoiceTakeCutSceneEnd(class FName CutSceneID, class FName ExclusiveTag, ECutscenePlayResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCinematicDialog", "OnChoiceTakeCutSceneEnd");

	Params::TLCinematicDialog_OnChoiceTakeCutSceneEnd Parms{};

	Parms.CutSceneID = CutSceneID;
	Parms.ExclusiveTag = ExclusiveTag;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLCinematicDialog.OnTakeCutSceneEnd
// (Final, Native, Private)
// Parameters:
// class FName                             CutSceneID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ExclusiveTag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECutscenePlayResult                     Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLCinematicDialog::OnTakeCutSceneEnd(class FName CutSceneID, class FName ExclusiveTag, ECutscenePlayResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCinematicDialog", "OnTakeCutSceneEnd");

	Params::TLCinematicDialog_OnTakeCutSceneEnd Parms{};

	Parms.CutSceneID = CutSceneID;
	Parms.ExclusiveTag = ExclusiveTag;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRegionScreenMessage.OnSetRegionType
// (Event, Public, BlueprintEvent)
// Parameters:
// EMapRegionType                          InPrevRegionType                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMapRegionType                          InCurRegionType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRegionScreenMessage::OnSetRegionType(const EMapRegionType InPrevRegionType, const EMapRegionType InCurRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRegionScreenMessage", "OnSetRegionType");

	Params::TLUserWidgetRegionScreenMessage_OnSetRegionType Parms{};

	Parms.InPrevRegionType = InPrevRegionType;
	Parms.InCurRegionType = InCurRegionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreAlarmObjective.HandleCompleteObjAnimationFinished
// (Final, Native, Public)

void UTLUserWidgetExploreAlarmObjective::HandleCompleteObjAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarmObjective", "HandleCompleteObjAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetExploreAlarmObjective.OnCompleteObjectiveAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetExploreAlarmObjective::OnCompleteObjectiveAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarmObjective", "OnCompleteObjectiveAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreAlarmObjective.OnCountingCodeAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetExploreAlarmObjective::OnCountingCodeAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarmObjective", "OnCountingCodeAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreAlarmObjective.OnStateObjectiveAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCompleted                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreAlarmObjective::OnStateObjectiveAnim(bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarmObjective", "OnStateObjectiveAnim");

	Params::TLUserWidgetExploreAlarmObjective_OnStateObjectiveAnim Parms{};

	Parms.bCompleted = bCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetListViewEntry.HandleSelected
// (Native, Protected)
// Parameters:
// bool                                    Selected                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetListViewEntry::HandleSelected(bool Selected, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetListViewEntry", "HandleSelected");

	Params::TLUserWidgetListViewEntry_HandleSelected Parms{};

	Parms.Selected = Selected;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCodexCodeDetailPanel.OnRewardEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InbPlaying                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexCodeDetailPanel::OnRewardEvent(bool InbPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCodeDetailPanel", "OnRewardEvent");

	Params::TLUserWidgetCodexCodeDetailPanel_OnRewardEvent Parms{};

	Parms.InbPlaying = InbPlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMatchingDungeonListItem.IsLock
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetPartyMatchingDungeonListItem::IsLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingDungeonListItem", "IsLock");

	Params::TLUserWidgetPartyMatchingDungeonListItem_IsLock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyMatchingDungeonListItem.OnCheck
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCheck                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMatchingDungeonListItem::OnCheck(bool bCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingDungeonListItem", "OnCheck");

	Params::TLUserWidgetPartyMatchingDungeonListItem_OnCheck Parms{};

	Parms.bCheck = bCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMatchingDungeonListItem.OnLock
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bLock                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMatchingDungeonListItem::OnLock(bool bLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingDungeonListItem", "OnLock");

	Params::TLUserWidgetPartyMatchingDungeonListItem_OnLock Parms{};

	Parms.bLock = bLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLGameInstance.GetCommandLineValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTLGameInstance::GetCommandLineValue(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLGameInstance", "GetCommandLineValue");

	Params::TLGameInstance_GetCommandLineValue Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameInstance.IsModuleLoaded
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ModuleName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLGameInstance::IsModuleLoaded(class FName ModuleName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLGameInstance", "IsModuleLoaded");

	Params::TLGameInstance_IsModuleLoaded Parms{};

	Parms.ModuleName = ModuleName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameInstance.GetBuilderCommandSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLBuilderCommandSettings*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLBuilderCommandSettings* UTLGameInstance::GetBuilderCommandSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameInstance", "GetBuilderCommandSetting");

	Params::TLGameInstance_GetBuilderCommandSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameInstance.GetDebugSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLDebugSettings*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLDebugSettings* UTLGameInstance::GetDebugSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameInstance", "GetDebugSetting");

	Params::TLGameInstance_GetDebugSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameInstance.GetGamepadInputSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLUserKeyCombinationInputSettings*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserKeyCombinationInputSettings* UTLGameInstance::GetGamepadInputSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameInstance", "GetGamepadInputSetting");

	Params::TLGameInstance_GetGamepadInputSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameInstance.GetInputSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserInputSettings*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserInputSettings* UTLGameInstance::GetInputSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameInstance", "GetInputSetting");

	Params::TLGameInstance_GetInputSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameInstance.GetUserSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLGameUserSettings*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLGameUserSettings* UTLGameInstance::GetUserSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameInstance", "GetUserSetting");

	Params::TLGameInstance_GetUserSetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameInstance.GetUIPlatform
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETLUIPlatform                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLUIPlatform UTLGameInstance::GetUIPlatform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameInstance", "GetUIPlatform");

	Params::TLGameInstance_GetUIPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCommandObject.OnRunCommand
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FString                           InCommand                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Params_0                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTLCommandObject::OnRunCommand(const class FString& InCommand, const TArray<class FString>& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCommandObject", "OnRunCommand");

	Params::TLCommandObject_OnRunCommand Parms{};

	Parms.InCommand = std::move(InCommand);
	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildSkill.OnChangeUIPlatform
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLUIPlatform                           InUIPlatform                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildSkill::OnChangeUIPlatform(ETLUIPlatform InUIPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSkill", "OnChangeUIPlatform");

	Params::TLUserWidgetGuildSkill_OnChangeUIPlatform Parms{};

	Parms.InUIPlatform = InUIPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionObjectBase.GetCastleName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InCastleGuid                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetCastleName(uint64 InCastleGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetCastleName");

	Params::TLContentsConditionObjectBase_GetCastleName Parms{};

	Parms.InCastleGuid = InCastleGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetCurrentEnvTimeType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETLEnvTimeType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLEnvTimeType UTLContentsConditionObjectBase::GetCurrentEnvTimeType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetCurrentEnvTimeType");

	Params::TLContentsConditionObjectBase_GetCurrentEnvTimeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetCurrentEquipWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FTLWeaponSet                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTLWeaponSet UTLContentsConditionObjectBase::GetCurrentEquipWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetCurrentEquipWeapon");

	Params::TLContentsConditionObjectBase_GetCurrentEquipWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetCurrentJoinDynamicEventState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETLDynamicEventHUDType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLDynamicEventHUDType UTLContentsConditionObjectBase::GetCurrentJoinDynamicEventState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetCurrentJoinDynamicEventState");

	Params::TLContentsConditionObjectBase_GetCurrentJoinDynamicEventState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetCurrentRegionGuid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint64 UTLContentsConditionObjectBase::GetCurrentRegionGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetCurrentRegionGuid");

	Params::TLContentsConditionObjectBase_GetCurrentRegionGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetCurrentStaticRegionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETLJsonMapRegionType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLJsonMapRegionType UTLContentsConditionObjectBase::GetCurrentStaticRegionType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetCurrentStaticRegionType");

	Params::TLContentsConditionObjectBase_GetCurrentStaticRegionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetCurrentStaticRegionTypeDay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETLJsonMapRegionType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLJsonMapRegionType UTLContentsConditionObjectBase::GetCurrentStaticRegionTypeDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetCurrentStaticRegionTypeDay");

	Params::TLContentsConditionObjectBase_GetCurrentStaticRegionTypeDay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetCurrentStaticRegionTypeNight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETLJsonMapRegionType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLJsonMapRegionType UTLContentsConditionObjectBase::GetCurrentStaticRegionTypeNight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetCurrentStaticRegionTypeNight");

	Params::TLContentsConditionObjectBase_GetCurrentStaticRegionTypeNight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetDynamicEventEventEffectName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetDynamicEventEventEffectName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetDynamicEventEventEffectName");

	Params::TLContentsConditionObjectBase_GetDynamicEventEventEffectName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetDynamicEventTitle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InDECommonTableId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetDynamicEventTitle(class FName InDECommonTableId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetDynamicEventTitle");

	Params::TLContentsConditionObjectBase_GetDynamicEventTitle Parms{};

	Parms.InDECommonTableId = InDECommonTableId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetDynamicEventTribeName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetDynamicEventTribeName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetDynamicEventTribeName");

	Params::TLContentsConditionObjectBase_GetDynamicEventTribeName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetDynamicEventTribeNameByUid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InUID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetDynamicEventTribeNameByUid(int32 InUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetDynamicEventTribeNameByUid");

	Params::TLContentsConditionObjectBase_GetDynamicEventTribeNameByUid Parms{};

	Parms.InUID = InUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetEnteredSiegeWarfareCastleGuid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint64 UTLContentsConditionObjectBase::GetEnteredSiegeWarfareCastleGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetEnteredSiegeWarfareCastleGuid");

	Params::TLContentsConditionObjectBase_GetEnteredSiegeWarfareCastleGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetEquipAmmoType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemCategory                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EItemCategory UTLContentsConditionObjectBase::GetEquipAmmoType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetEquipAmmoType");

	Params::TLContentsConditionObjectBase_GetEquipAmmoType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetFieldBossName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InGuid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetFieldBossName(uint64 InGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetFieldBossName");

	Params::TLContentsConditionObjectBase_GetFieldBossName Parms{};

	Parms.InGuid = InGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetInventoryItemCountByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InItemRowName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLContentsConditionObjectBase::GetInventoryItemCountByName(class FName InItemRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetInventoryItemCountByName");

	Params::TLContentsConditionObjectBase_GetInventoryItemCountByName Parms{};

	Parms.InItemRowName = InItemRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetJoinDynamicEventCommonTableId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UTLContentsConditionObjectBase::GetJoinDynamicEventCommonTableId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetJoinDynamicEventCommonTableId");

	Params::TLContentsConditionObjectBase_GetJoinDynamicEventCommonTableId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetJoinDynamicEventGuid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint64 UTLContentsConditionObjectBase::GetJoinDynamicEventGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetJoinDynamicEventGuid");

	Params::TLContentsConditionObjectBase_GetJoinDynamicEventGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetJoinOccupationGuid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint64 UTLContentsConditionObjectBase::GetJoinOccupationGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetJoinOccupationGuid");

	Params::TLContentsConditionObjectBase_GetJoinOccupationGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLContentsConditionObjectBase::GetLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetLevel");

	Params::TLContentsConditionObjectBase_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetMapRegionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMapRegionType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EMapRegionType UTLContentsConditionObjectBase::GetMapRegionType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetMapRegionType");

	Params::TLContentsConditionObjectBase_GetMapRegionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetMyPcCriminalType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECriminalType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECriminalType UTLContentsConditionObjectBase::GetMyPcCriminalType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetMyPcCriminalType");

	Params::TLContentsConditionObjectBase_GetMyPcCriminalType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetOccupationName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InOccupationGuid                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetOccupationName(uint64 InOccupationGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetOccupationName");

	Params::TLContentsConditionObjectBase_GetOccupationName Parms{};

	Parms.InOccupationGuid = InOccupationGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetOccupationState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InOccupationGuid                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOccupationState                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOccupationState UTLContentsConditionObjectBase::GetOccupationState(uint64 InOccupationGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetOccupationState");

	Params::TLContentsConditionObjectBase_GetOccupationState Parms{};

	Parms.InOccupationGuid = InOccupationGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetPrevRegionGuid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint64 UTLContentsConditionObjectBase::GetPrevRegionGuid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetPrevRegionGuid");

	Params::TLContentsConditionObjectBase_GetPrevRegionGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetSiegePolymorphName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetSiegePolymorphName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetSiegePolymorphName");

	Params::TLContentsConditionObjectBase_GetSiegePolymorphName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetSiegeWarfareName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InCastleGuid                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetSiegeWarfareName(uint64 InCastleGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetSiegeWarfareName");

	Params::TLContentsConditionObjectBase_GetSiegeWarfareName Parms{};

	Parms.InCastleGuid = InCastleGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetStaticRegionType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InRegionGuid                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLJsonMapRegionType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLJsonMapRegionType UTLContentsConditionObjectBase::GetStaticRegionType(uint64 InRegionGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetStaticRegionType");

	Params::TLContentsConditionObjectBase_GetStaticRegionType Parms{};

	Parms.InRegionGuid = InRegionGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetStaticRegionTypeDay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InRegionGuid                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLJsonMapRegionType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLJsonMapRegionType UTLContentsConditionObjectBase::GetStaticRegionTypeDay(uint64 InRegionGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetStaticRegionTypeDay");

	Params::TLContentsConditionObjectBase_GetStaticRegionTypeDay Parms{};

	Parms.InRegionGuid = InRegionGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetStaticRegionTypeNight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InRegionGuid                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLJsonMapRegionType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLJsonMapRegionType UTLContentsConditionObjectBase::GetStaticRegionTypeNight(uint64 InRegionGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetStaticRegionTypeNight");

	Params::TLContentsConditionObjectBase_GetStaticRegionTypeNight Parms{};

	Parms.InRegionGuid = InRegionGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetSumCountByCategoryFromInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemCategory                           InItemCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTLContentsConditionObjectBase::GetSumCountByCategoryFromInventory(EItemCategory InItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetSumCountByCategoryFromInventory");

	Params::TLContentsConditionObjectBase_GetSumCountByCategoryFromInventory Parms{};

	Parms.InItemCategory = InItemCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetTaxDeliveryName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InGuid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetTaxDeliveryName(uint64 InGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetTaxDeliveryName");

	Params::TLContentsConditionObjectBase_GetTaxDeliveryName Parms{};

	Parms.InGuid = InGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetWorldBossName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InGuid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetWorldBossName(uint64 InGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetWorldBossName");

	Params::TLContentsConditionObjectBase_GetWorldBossName Parms{};

	Parms.InGuid = InGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.HasContract
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InGuid                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::HasContract(class FName InGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "HasContract");

	Params::TLContentsConditionObjectBase_HasContract Parms{};

	Parms.InGuid = InGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsAlive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsAlive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsAlive");

	Params::TLContentsConditionObjectBase_IsAlive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsEclipseStarted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsEclipseStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsEclipseStarted");

	Params::TLContentsConditionObjectBase_IsEclipseStarted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsEnteredContentsVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InEventName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsEnteredContentsVolume(class FName InEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsEnteredContentsVolume");

	Params::TLContentsConditionObjectBase_IsEnteredContentsVolume Parms{};

	Parms.InEventName = InEventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsEquipByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InItemRowName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsEquipByName(class FName InItemRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsEquipByName");

	Params::TLContentsConditionObjectBase_IsEquipByName Parms{};

	Parms.InItemRowName = InItemRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsInventoryItemByCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemCategory                           InItemCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsInventoryItemByCategory(EItemCategory InItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsInventoryItemByCategory");

	Params::TLContentsConditionObjectBase_IsInventoryItemByCategory Parms{};

	Parms.InItemCategory = InItemCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsInventoryItemByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InItemRowName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsInventoryItemByName(class FName InItemRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsInventoryItemByName");

	Params::TLContentsConditionObjectBase_IsInventoryItemByName Parms{};

	Parms.InItemRowName = InItemRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsJoinCombatContents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsJoinCombatContents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsJoinCombatContents");

	Params::TLContentsConditionObjectBase_IsJoinCombatContents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsJoinDynamicEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsJoinDynamicEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsJoinDynamicEvent");

	Params::TLContentsConditionObjectBase_IsJoinDynamicEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsJoinFieldBoss
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsJoinFieldBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsJoinFieldBoss");

	Params::TLContentsConditionObjectBase_IsJoinFieldBoss Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsJoinOccupation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsJoinOccupation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsJoinOccupation");

	Params::TLContentsConditionObjectBase_IsJoinOccupation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsJoinTaxDelivery
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsJoinTaxDelivery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsJoinTaxDelivery");

	Params::TLContentsConditionObjectBase_IsJoinTaxDelivery Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsJoinWorldBoss
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsJoinWorldBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsJoinWorldBoss");

	Params::TLContentsConditionObjectBase_IsJoinWorldBoss Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsSiegeEntered
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsSiegeEntered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsSiegeEntered");

	Params::TLContentsConditionObjectBase_IsSiegeEntered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsSiegePolymorph
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsSiegePolymorph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsSiegePolymorph");

	Params::TLContentsConditionObjectBase_IsSiegePolymorph Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsSiegeProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsSiegeProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsSiegeProgress");

	Params::TLContentsConditionObjectBase_IsSiegeProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.IsSiegeStandby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContentsConditionObjectBase::IsSiegeStandby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "IsSiegeStandby");

	Params::TLContentsConditionObjectBase_IsSiegeStandby Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionObjectBase.GetCurrentRegionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLContentsConditionObjectBase::GetCurrentRegionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionObjectBase", "GetCurrentRegionName");

	Params::TLContentsConditionObjectBase_GetCurrentRegionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetMagicDollExpeditionDepart.OnUpdateExpeditionState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLExpeditionState                      State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDollExpeditionDepart::OnUpdateExpeditionState(ETLExpeditionState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollExpeditionDepart", "OnUpdateExpeditionState");

	Params::TLUserWidgetMagicDollExpeditionDepart_OnUpdateExpeditionState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionActionKeyGuide.HideGuide
// (Final, Native, Public, BlueprintCallable)

void UTLContentsConditionActionKeyGuide::HideGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "HideGuide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionActionKeyGuide.HideGuideFishing
// (Final, Native, Public, BlueprintCallable)

void UTLContentsConditionActionKeyGuide::HideGuideFishing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "HideGuideFishing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionActionKeyGuide.OnChangePolymorph
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLMobiltyType                          MobilityType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionActionKeyGuide::OnChangePolymorph(class FName ID, ETLMobiltyType MobilityType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "OnChangePolymorph");

	Params::TLContentsConditionActionKeyGuide_OnChangePolymorph Parms{};

	Parms.ID = ID;
	Parms.MobilityType = MobilityType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionActionKeyGuide.OnChangeUIPlatform
// (Event, Public, BlueprintEvent)

void UTLContentsConditionActionKeyGuide::OnChangeUIPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "OnChangeUIPlatform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLContentsConditionActionKeyGuide.OnChangeUIPlatformFishing
// (Event, Public, BlueprintEvent)

void UTLContentsConditionActionKeyGuide::OnChangeUIPlatformFishing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "OnChangeUIPlatformFishing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLContentsConditionActionKeyGuide.OnEnterFishing
// (Event, Public, BlueprintEvent)

void UTLContentsConditionActionKeyGuide::OnEnterFishing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "OnEnterFishing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLContentsConditionActionKeyGuide.OnExitFishing
// (Event, Public, BlueprintEvent)

void UTLContentsConditionActionKeyGuide::OnExitFishing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "OnExitFishing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLContentsConditionActionKeyGuide.OnUpdateFishing
// (Event, Public, BlueprintEvent)

void UTLContentsConditionActionKeyGuide::OnUpdateFishing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "OnUpdateFishing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLContentsConditionActionKeyGuide.ShowGuide
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             GameValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTLActionKeyGuideInfo>    Items                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionActionKeyGuide::ShowGuide(class FName GameValue, const TArray<struct FTLActionKeyGuideInfo>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "ShowGuide");

	Params::TLContentsConditionActionKeyGuide_ShowGuide Parms{};

	Parms.GameValue = GameValue;
	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionActionKeyGuide.ShowGuideFishing
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FTLActionKeyGuideInfo>    Items                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionActionKeyGuide::ShowGuideFishing(const TArray<struct FTLActionKeyGuideInfo>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "ShowGuideFishing");

	Params::TLContentsConditionActionKeyGuide_ShowGuideFishing Parms{};

	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionActionKeyGuide.UpdateGuide
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             GameValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTLActionKeyGuideInfo>    Items                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionActionKeyGuide::UpdateGuide(class FName GameValue, const TArray<struct FTLActionKeyGuideInfo>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "UpdateGuide");

	Params::TLContentsConditionActionKeyGuide_UpdateGuide Parms{};

	Parms.GameValue = GameValue;
	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionActionKeyGuide.UpdateGuideFishing
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FTLActionKeyGuideInfo>    Items                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionActionKeyGuide::UpdateGuideFishing(const TArray<struct FTLActionKeyGuideInfo>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "UpdateGuideFishing");

	Params::TLContentsConditionActionKeyGuide_UpdateGuideFishing Parms{};

	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionActionKeyGuide.GetCurrentFishingState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETLFishingState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLFishingState UTLContentsConditionActionKeyGuide::GetCurrentFishingState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "GetCurrentFishingState");

	Params::TLContentsConditionActionKeyGuide_GetCurrentFishingState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLContentsConditionActionKeyGuide.GetCurrentPlatform
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETLUIPlatform                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLUIPlatform UTLContentsConditionActionKeyGuide::GetCurrentPlatform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionActionKeyGuide", "GetCurrentPlatform");

	Params::TLContentsConditionActionKeyGuide_GetCurrentPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnChangeScrollContentAutonFocus
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bFocus                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnChangeScrollContentAutonFocus(const bool bFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnChangeScrollContentAutonFocus");

	Params::TLUserWidgetItemTooltipBaseContent_OnChangeScrollContentAutonFocus Parms{};

	Parms.bFocus = bFocus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnCollectionButtonClick
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetItemTooltipBaseContent::OnCollectionButtonClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnCollectionButtonClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnItemLockUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InLock                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnItemLockUpdate(const bool InLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnItemLockUpdate");

	Params::TLUserWidgetItemTooltipBaseContent_OnItemLockUpdate Parms{};

	Parms.InLock = InLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnPosetUpdateContent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemTooltipBaseContent::OnPosetUpdateContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnPosetUpdateContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnPresetInfoUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsOtherPreset                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnPresetInfoUpdate(const bool InIsOtherPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnPresetInfoUpdate");

	Params::TLUserWidgetItemTooltipBaseContent_OnPresetInfoUpdate Parms{};

	Parms.InIsOtherPreset = InIsOtherPreset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUnLockMemorial
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUnLockMemorial");

	Params::TLUserWidgetItemTooltipBaseContent_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateCategoryName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateCategoryName(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateCategoryName");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateCategoryName Parms{};

	Parms.InName = std::move(InName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateCollectable
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLItemCollectableState                 InCollectableState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InConditionLevel                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateCollectable(ETLItemCollectableState InCollectableState, int32 InConditionLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateCollectable");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateCollectable Parms{};

	Parms.InCollectableState = InCollectableState;
	Parms.InConditionLevel = InConditionLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateDecomposable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsDecomposable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateDecomposable(bool bIsDecomposable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateDecomposable");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateDecomposable Parms{};

	Parms.bIsDecomposable = bIsDecomposable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateDestructible
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsDestructible                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateDestructible(bool bIsDestructible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateDestructible");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateDestructible Parms{};

	Parms.bIsDestructible = bIsDestructible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateEnchant
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsVisible                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsEnable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateEnchant(bool bInIsVisible, bool bInIsEnable, int32 InMaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateEnchant");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateEnchant Parms{};

	Parms.bInIsVisible = bInIsVisible;
	Parms.bInIsEnable = bInIsEnable;
	Parms.InMaxLevel = InMaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateEnchantLevelInfo
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateEnchantLevelInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateEnchantLevelInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateEnchantTransfer
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsVisible                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsEnable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateEnchantTransfer(bool bInIsVisible, bool bInIsEnable, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateEnchantTransfer");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateEnchantTransfer Parms{};

	Parms.bInIsVisible = bInIsVisible;
	Parms.bInIsEnable = bInIsEnable;
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateFocusMoveAreaGuide
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateFocusMoveAreaGuide(const bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateFocusMoveAreaGuide");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateFocusMoveAreaGuide Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateGradeColor
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InGradeName                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             InColorTableKey                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateGradeColor(const class FText& InGradeName, class FName InColorTableKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateGradeColor");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateGradeColor Parms{};

	Parms.InGradeName = std::move(InGradeName);
	Parms.InColorTableKey = InColorTableKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateItemName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateItemName(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateItemName");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateItemName Parms{};

	Parms.InName = std::move(InName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateRequireLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InRequireLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPcLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateRequireLevel(int32 InRequireLevel, int32 InPcLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateRequireLevel");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateRequireLevel Parms{};

	Parms.InRequireLevel = InRequireLevel;
	Parms.InPcLevel = InPcLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateStorable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsStorable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateStorable(bool bIsStorable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateStorable");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateStorable Parms{};

	Parms.bIsStorable = bIsStorable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateTotalMenu
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateTotalMenu(bool bInEnable, bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateTotalMenu");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateTotalMenu Parms{};

	Parms.bInEnable = bInEnable;
	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateTradableIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTradable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsOverwriteExchangeable                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateTradableIcon(bool bIsTradable, bool bIsOverwriteExchangeable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateTradableIcon");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateTradableIcon Parms{};

	Parms.bIsTradable = bIsTradable;
	Parms.bIsOverwriteExchangeable = bIsOverwriteExchangeable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipBaseContent.OnUpdateTradePriceInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    InShowTradePrice                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             RecentPriceText                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             SaleCountText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipBaseContent::OnUpdateTradePriceInfo(bool InShowTradePrice, const class FText& RecentPriceText, const class FText& SaleCountText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipBaseContent", "OnUpdateTradePriceInfo");

	Params::TLUserWidgetItemTooltipBaseContent_OnUpdateTradePriceInfo Parms{};

	Parms.InShowTradePrice = InShowTradePrice;
	Parms.RecentPriceText = std::move(RecentPriceText);
	Parms.SaleCountText = std::move(SaleCountText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMagicDollSlotTooltip.SetGuideTextTextBlockStyle
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EMagicDollGuideType                     InGuideType                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDollSlotTooltip::SetGuideTextTextBlockStyle(const EMagicDollGuideType& InGuideType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollSlotTooltip", "SetGuideTextTextBlockStyle");

	Params::TLUserWidgetMagicDollSlotTooltip_SetGuideTextTextBlockStyle Parms{};

	Parms.InGuideType = InGuideType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMagicDollGacha.CloseGacha
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetMagicDollGacha::CloseGacha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollGacha", "CloseGacha");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMagicDollGacha.SkipGacha
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetMagicDollGacha::SkipGacha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollGacha", "SkipGacha");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetHUDLayer.OnChangeMapModeType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLMapModeType                          InMapModeType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHUDLayer::OnChangeMapModeType(ETLMapModeType InMapModeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHUDLayer", "OnChangeMapModeType");

	Params::TLUserWidgetHUDLayer_OnChangeMapModeType Parms{};

	Parms.InMapModeType = InMapModeType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHUDLayer.OnPressedAlarmList
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInPressed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHUDLayer::OnPressedAlarmList(bool bInPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHUDLayer", "OnPressedAlarmList");

	Params::TLUserWidgetHUDLayer_OnPressedAlarmList Parms{};

	Parms.bInPressed = bInPressed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHUDLayer.OnTargetMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInTargetMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHUDLayer::OnTargetMode(bool bInTargetMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHUDLayer", "OnTargetMode");

	Params::TLUserWidgetHUDLayer_OnTargetMode Parms{};

	Parms.bInTargetMode = bInTargetMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHUDLayer.OnVisibleAlarmList
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHUDLayer::OnVisibleAlarmList(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHUDLayer", "OnVisibleAlarmList");

	Params::TLUserWidgetHUDLayer_OnVisibleAlarmList Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHUDLayer.OnVisibleRingMenu
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHUDLayer::OnVisibleRingMenu(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHUDLayer", "OnVisibleRingMenu");

	Params::TLUserWidgetHUDLayer_OnVisibleRingMenu Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnChangedDyanmicEventSideImpl
// (Event, Public, BlueprintEvent)
// Parameters:
// uint64                                  InSideGuid                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InNewTribeUid                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InOldTribeUid                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnChangedDyanmicEventSideImpl(uint64 InSideGuid, int32 InNewTribeUid, int32 InOldTribeUid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnChangedDyanmicEventSideImpl");

	Params::TLContentsConditionMessageObject_OnChangedDyanmicEventSideImpl Parms{};

	Parms.InSideGuid = InSideGuid;
	Parms.InNewTribeUid = InNewTribeUid;
	Parms.InOldTribeUid = InOldTribeUid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnChangeEclipseStatusImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnChangeEclipseStatusImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnChangeEclipseStatusImpl");

	Params::TLContentsConditionMessageObject_OnChangeEclipseStatusImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnChangeEnvTimeTypeImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnChangeEnvTimeTypeImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnChangeEnvTimeTypeImpl");

	Params::TLContentsConditionMessageObject_OnChangeEnvTimeTypeImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnEnterDynamicEventImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnEnterDynamicEventImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnEnterDynamicEventImpl");

	Params::TLContentsConditionMessageObject_OnEnterDynamicEventImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnEnterOccupationImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnEnterOccupationImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnEnterOccupationImpl");

	Params::TLContentsConditionMessageObject_OnEnterOccupationImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnEnterRegionImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnEnterRegionImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnEnterRegionImpl");

	Params::TLContentsConditionMessageObject_OnEnterRegionImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnEnterSiegeWarfareImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnEnterSiegeWarfareImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnEnterSiegeWarfareImpl");

	Params::TLContentsConditionMessageObject_OnEnterSiegeWarfareImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnJoinFieldBossImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnJoinFieldBossImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnJoinFieldBossImpl");

	Params::TLContentsConditionMessageObject_OnJoinFieldBossImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnJoinTaxDeliveryImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnJoinTaxDeliveryImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnJoinTaxDeliveryImpl");

	Params::TLContentsConditionMessageObject_OnJoinTaxDeliveryImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnJoinWorldBossImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnJoinWorldBossImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnJoinWorldBossImpl");

	Params::TLContentsConditionMessageObject_OnJoinWorldBossImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnLeaveDynamicEventImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnLeaveDynamicEventImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnLeaveDynamicEventImpl");

	Params::TLContentsConditionMessageObject_OnLeaveDynamicEventImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnLeaveFieldBossImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnLeaveFieldBossImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnLeaveFieldBossImpl");

	Params::TLContentsConditionMessageObject_OnLeaveFieldBossImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnLeaveOccupationImpl
// (Event, Public, BlueprintEvent)
// Parameters:
// uint64                                  InOccupationGuid                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnLeaveOccupationImpl(uint64 InOccupationGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnLeaveOccupationImpl");

	Params::TLContentsConditionMessageObject_OnLeaveOccupationImpl Parms{};

	Parms.InOccupationGuid = InOccupationGuid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnLeaveRegionImpl
// (Event, Public, BlueprintEvent)
// Parameters:
// uint64                                  InRegionGuid                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnLeaveRegionImpl(uint64 InRegionGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnLeaveRegionImpl");

	Params::TLContentsConditionMessageObject_OnLeaveRegionImpl Parms{};

	Parms.InRegionGuid = InRegionGuid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnLeaveSiegeWarfareImpl
// (Event, Public, BlueprintEvent)
// Parameters:
// uint64                                  InCastleGuid                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnLeaveSiegeWarfareImpl(uint64 InCastleGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnLeaveSiegeWarfareImpl");

	Params::TLContentsConditionMessageObject_OnLeaveSiegeWarfareImpl Parms{};

	Parms.InCastleGuid = InCastleGuid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnLeaveTaxDeliveryImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnLeaveTaxDeliveryImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnLeaveTaxDeliveryImpl");

	Params::TLContentsConditionMessageObject_OnLeaveTaxDeliveryImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnLeaveWorldBossImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnLeaveWorldBossImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnLeaveWorldBossImpl");

	Params::TLContentsConditionMessageObject_OnLeaveWorldBossImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnPreLeaveOccupationImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnPreLeaveOccupationImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnPreLeaveOccupationImpl");

	Params::TLContentsConditionMessageObject_OnPreLeaveOccupationImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnPreLeaveSiegeWarfareImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnPreLeaveSiegeWarfareImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnPreLeaveSiegeWarfareImpl");

	Params::TLContentsConditionMessageObject_OnPreLeaveSiegeWarfareImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnResultSiegeWarfareImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnResultSiegeWarfareImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnResultSiegeWarfareImpl");

	Params::TLContentsConditionMessageObject_OnResultSiegeWarfareImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.OnShowScreenMsgEnterContentsRegionEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             InSubTitle                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    InIsPeace                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnShowScreenMsgEnterContentsRegionEvent(const class FText& InTitle, const class FText& InSubTitle, const bool InIsPeace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnShowScreenMsgEnterContentsRegionEvent");

	Params::TLContentsConditionMessageObject_OnShowScreenMsgEnterContentsRegionEvent Parms{};

	Parms.InTitle = std::move(InTitle);
	Parms.InSubTitle = std::move(InSubTitle);
	Parms.InIsPeace = InIsPeace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionMessageObject.OnShowScreenMsgEnterRegionContentsEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             InSubTitle                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EMapRegionType                          InRegionType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnShowScreenMsgEnterRegionContentsEvent(const class FText& InTitle, const class FText& InSubTitle, const EMapRegionType& InRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnShowScreenMsgEnterRegionContentsEvent");

	Params::TLContentsConditionMessageObject_OnShowScreenMsgEnterRegionContentsEvent Parms{};

	Parms.InTitle = std::move(InTitle);
	Parms.InSubTitle = std::move(InSubTitle);
	Parms.InRegionType = InRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionMessageObject.OnShowScreenMsgJoinDynamicEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    InIsPeace                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnShowScreenMsgJoinDynamicEvent(const class FText& InTitle, const bool InIsPeace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnShowScreenMsgJoinDynamicEvent");

	Params::TLContentsConditionMessageObject_OnShowScreenMsgJoinDynamicEvent Parms{};

	Parms.InTitle = std::move(InTitle);
	Parms.InIsPeace = InIsPeace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionMessageObject.OnShowScreenMsgJoinRegionDynamicEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EMapRegionType                          InRegionType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnShowScreenMsgJoinRegionDynamicEvent(const class FText& InTitle, const EMapRegionType& InRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnShowScreenMsgJoinRegionDynamicEvent");

	Params::TLContentsConditionMessageObject_OnShowScreenMsgJoinRegionDynamicEvent Parms{};

	Parms.InTitle = std::move(InTitle);
	Parms.InRegionType = InRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionMessageObject.OnShowScreenMsgRegion
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EMapRegionType                          InRegionType                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnShowScreenMsgRegion(const class FText& InTitle, const EMapRegionType& InRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnShowScreenMsgRegion");

	Params::TLContentsConditionMessageObject_OnShowScreenMsgRegion Parms{};

	Parms.InTitle = std::move(InTitle);
	Parms.InRegionType = InRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionMessageObject.OnShowScreenMsgRegionTypeChange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EMapRegionType                          InPrevRegionType                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMapRegionType                          InCurRegionType                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnShowScreenMsgRegionTypeChange(const class FText& InTitle, const EMapRegionType& InPrevRegionType, const EMapRegionType& InCurRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnShowScreenMsgRegionTypeChange");

	Params::TLContentsConditionMessageObject_OnShowScreenMsgRegionTypeChange Parms{};

	Parms.InTitle = std::move(InTitle);
	Parms.InPrevRegionType = InPrevRegionType;
	Parms.InCurRegionType = InCurRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContentsConditionMessageObject.OnUpdateSiegeStatusImpl
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLContentsScreenMsgParams       InMsgParam                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::OnUpdateSiegeStatusImpl(const struct FTLContentsScreenMsgParams& InMsgParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "OnUpdateSiegeStatusImpl");

	Params::TLContentsConditionMessageObject_OnUpdateSiegeStatusImpl Parms{};

	Parms.InMsgParam = std::move(InMsgParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLContentsConditionMessageObject.ShowSystemMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SystemMessageId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             V1                                                     (Parm, NativeAccessSpecifierPublic)
// class FText                             V2                                                     (Parm, NativeAccessSpecifierPublic)
// class FText                             V3                                                     (Parm, NativeAccessSpecifierPublic)
// class FText                             V4                                                     (Parm, NativeAccessSpecifierPublic)
// class FText                             V5                                                     (Parm, NativeAccessSpecifierPublic)
// bool                                    bInShowScreenMsg                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContentsConditionMessageObject::ShowSystemMessage(class FName SystemMessageId, const class FText& V1, const class FText& V2, const class FText& V3, const class FText& V4, const class FText& V5, bool bInShowScreenMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContentsConditionMessageObject", "ShowSystemMessage");

	Params::TLContentsConditionMessageObject_ShowSystemMessage Parms{};

	Parms.SystemMessageId = SystemMessageId;
	Parms.V1 = std::move(V1);
	Parms.V2 = std::move(V2);
	Parms.V3 = std::move(V3);
	Parms.V4 = std::move(V4);
	Parms.V5 = std::move(V5);
	Parms.bInShowScreenMsg = bInShowScreenMsg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCraftingInterestAlarm.OnNewAlarmAdd
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCraftingInterestAlarm::OnNewAlarmAdd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingInterestAlarm", "OnNewAlarmAdd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLGV_EnumSet_GetROType.HandleButtonClicked
// (Final, Native, Protected)

void UTLGV_EnumSet_GetROType::HandleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGV_EnumSet_GetROType", "HandleButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContractObject.HandleUpdateContractState
// (Final, Native, Public)
// Parameters:
// EContractState                          InContractState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLContractObject::HandleUpdateContractState(EContractState InContractState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContractObject", "HandleUpdateContractState");

	Params::TLContractObject_HandleUpdateContractState Parms{};

	Parms.InContractState = InContractState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLContractObject.IsValid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLContractObject::IsValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLContractObject", "IsValid");

	Params::TLContractObject_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetCraftingMaterialPanel.ShowOnboarding
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingMaterialPanel::ShowOnboarding(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingMaterialPanel", "ShowOnboarding");

	Params::TLUserWidgetCraftingMaterialPanel_ShowOnboarding Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCustomizeProfilePhotoshoot.OnCapturePhoto
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCustomizeProfilePhotoshoot::OnCapturePhoto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeProfilePhotoshoot", "OnCapturePhoto");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingTargetPanel.OnGoToParentRecipe
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingTargetPanel::OnGoToParentRecipe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingTargetPanel", "OnGoToParentRecipe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPcCasting.OnCastingEnd
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECastingEndReason                       CastingEndReason                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcCasting::OnCastingEnd(ECastingEndReason CastingEndReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcCasting", "OnCastingEnd");

	Params::TLUserWidgetPcCasting_OnCastingEnd Parms{};

	Parms.CastingEndReason = CastingEndReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcCasting.OnCastingStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsMyPc                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcCasting::OnCastingStart(bool bIsMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcCasting", "OnCastingStart");

	Params::TLUserWidgetPcCasting_OnCastingStart Parms{};

	Parms.bIsMyPc = bIsMyPc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCinematicInputAction.OnClickCompleteForMobileStreaming
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetCinematicInputAction::OnClickCompleteForMobileStreaming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematicInputAction", "OnClickCompleteForMobileStreaming");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematicInputAction.StopCurrentTake
// (Final, Native, Public)

void UTLUserWidgetCinematicInputAction::StopCurrentTake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematicInputAction", "StopCurrentTake");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLHudComponentConditionObject.GetFrameWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InNameKey                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidgetFrame*               ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserWidgetFrame* UTLHudComponentConditionObject::GetFrameWidget(class FName InNameKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLHudComponentConditionObject", "GetFrameWidget");

	Params::TLHudComponentConditionObject_GetFrameWidget Parms{};

	Parms.InNameKey = InNameKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLHudComponentConditionObject.OnUpdateHudComponent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInCombatStatus                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInHpCostLessThanMax                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInInputSkillSlotGroup                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInInputQuickSlot                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInExpLessThanZero                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInExpChange                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInHubMenu                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInInputMoveCamera                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInInputExceptMoveCamera                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLHudComponentConditionObject::OnUpdateHudComponent(bool bInCombatStatus, bool bInHpCostLessThanMax, bool bInInputSkillSlotGroup, bool bInInputQuickSlot, bool bInExpLessThanZero, bool bInExpChange, bool bInHubMenu, bool bInInputMoveCamera, bool bInInputExceptMoveCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLHudComponentConditionObject", "OnUpdateHudComponent");

	Params::TLHudComponentConditionObject_OnUpdateHudComponent Parms{};

	Parms.bInCombatStatus = bInCombatStatus;
	Parms.bInHpCostLessThanMax = bInHpCostLessThanMax;
	Parms.bInInputSkillSlotGroup = bInInputSkillSlotGroup;
	Parms.bInInputQuickSlot = bInInputQuickSlot;
	Parms.bInExpLessThanZero = bInExpLessThanZero;
	Parms.bInExpChange = bInExpChange;
	Parms.bInHubMenu = bInHubMenu;
	Parms.bInInputMoveCamera = bInInputMoveCamera;
	Parms.bInInputExceptMoveCamera = bInInputExceptMoveCamera;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLHudComponentConditionObject.OnUpdateHudComponentUI
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLHudComponentUIType                   UIType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSatisfied                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLHudComponentConditionObject::OnUpdateHudComponentUI(ETLHudComponentUIType UIType, bool bSatisfied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLHudComponentConditionObject", "OnUpdateHudComponentUI");

	Params::TLHudComponentConditionObject_OnUpdateHudComponentUI Parms{};

	Parms.UIType = UIType;
	Parms.bSatisfied = bSatisfied;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLHudComponentConditionObject.SetVisibleFrameWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InNameKey                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLHudComponentConditionObject::SetVisibleFrameWidget(class FName InNameKey, bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLHudComponentConditionObject", "SetVisibleFrameWidget");

	Params::TLHudComponentConditionObject_SetVisibleFrameWidget Parms{};

	Parms.InNameKey = InNameKey;
	Parms.bInVisible = bInVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLHudComponentConditionObject.HasAnyConditionFlags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InFlags                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLHudComponentConditionObject::HasAnyConditionFlags(int32 InFlags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLHudComponentConditionObject", "HasAnyConditionFlags");

	Params::TLHudComponentConditionObject_HasAnyConditionFlags Parms{};

	Parms.InFlags = InFlags;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLHudComponentConditionObject.HasConditionFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETLHudComponentCondition                InCondition                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLHudComponentConditionObject::HasConditionFlag(ETLHudComponentCondition InCondition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLHudComponentConditionObject", "HasConditionFlag");

	Params::TLHudComponentConditionObject_HasConditionFlag Parms{};

	Parms.InCondition = InCondition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLCutScene.HandleWorldServerDisconnect
// (Final, Native, Public)

void UTLCutScene::HandleWorldServerDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLCutScene", "HandleWorldServerDisconnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetManorKeepingManorInfo.UpdateOnboarding
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetManorKeepingManorInfo::UpdateOnboarding(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetManorKeepingManorInfo", "UpdateOnboarding");

	Params::TLUserWidgetManorKeepingManorInfo_UpdateOnboarding Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLDebugSettings.IsNewMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLDebugSettings::IsNewMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLDebugSettings", "IsNewMove");

	Params::TLDebugSettings_IsNewMove Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetMenuEditItem.OnActivate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMenuEditItem::OnActivate(const bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMenuEditItem", "OnActivate");

	Params::TLUserWidgetMenuEditItem_OnActivate Parms{};

	Parms.bInValue = bInValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexAdventureChart.OnCompletePrologueCode
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCodexAdventureChart::OnCompletePrologueCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAdventureChart", "OnCompletePrologueCode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCodexAdventureChart.OnGroupBackgroundEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InbCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexAdventureChart::OnGroupBackgroundEvent(bool InbCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAdventureChart", "OnGroupBackgroundEvent");

	Params::TLUserWidgetCodexAdventureChart_OnGroupBackgroundEvent Parms{};

	Parms.InbCompleted = InbCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLInspectionSceneControlActor.OnSetup
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class UHiveEntityData*                  HiveEntity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  SctPath                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLInspectionSceneControlActor::OnSetup(class UHiveEntityData* HiveEntity, const struct FSoftObjectPath& SctPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLInspectionSceneControlActor", "OnSetup");

	Params::TLInspectionSceneControlActor_OnSetup Parms{};

	Parms.HiveEntity = HiveEntity;
	Parms.SctPath = std::move(SctPath);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLInspectionSceneControlActor.UpdateMouseMove
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLInspectionSceneControlActor::UpdateMouseMove(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLInspectionSceneControlActor", "UpdateMouseMove");

	Params::TLInspectionSceneControlActor_UpdateMouseMove Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildMemberListItem.OnMemoTextFocusLost
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildMemberListItem::OnMemoTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildMemberListItem", "OnMemoTextFocusLost");

	Params::TLUserWidgetGuildMemberListItem_OnMemoTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildMemberListItem.OnMemoTextFocusReceived
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildMemberListItem::OnMemoTextFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildMemberListItem", "OnMemoTextFocusReceived");

	Params::TLUserWidgetGuildMemberListItem_OnMemoTextFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildMemberListItem.OnUpdateOnlineMember
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsOnline                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsNonConnectedPlay                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildMemberListItem::OnUpdateOnlineMember(bool InIsOnline, bool InIsNonConnectedPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildMemberListItem", "OnUpdateOnlineMember");

	Params::TLUserWidgetGuildMemberListItem_OnUpdateOnlineMember Parms{};

	Parms.InIsOnline = InIsOnline;
	Parms.InIsNonConnectedPlay = InIsNonConnectedPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMainMenuTop.OnRedDotCountUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InRedDotCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMainMenuTop::OnRedDotCountUpdated(int32 InRedDotCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMainMenuTop", "OnRedDotCountUpdated");

	Params::TLUserWidgetMainMenuTop_OnRedDotCountUpdated Parms{};

	Parms.InRedDotCount = InRedDotCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleContentsViewer.OnUpdateGuideText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleContentsViewer::OnUpdateGuideText(bool bInVisible, const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleContentsViewer", "OnUpdateGuideText");

	Params::TLUserWidgetConsoleContentsViewer_OnUpdateGuideText Parms{};

	Parms.bInVisible = bInVisible;
	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleContentsViewer.OnVisibleTargetScan
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleContentsViewer::OnVisibleTargetScan(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleContentsViewer", "OnVisibleTargetScan");

	Params::TLUserWidgetConsoleContentsViewer_OnVisibleTargetScan Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuild.DoNextTab
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetGuild::DoNextTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuild", "DoNextTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuild.DoPrevTab
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetGuild::DoPrevTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuild", "DoPrevTab");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSeasonPassRewardItem.OnPurchaseTicketEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSeasonPassRewardItem::OnPurchaseTicketEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassRewardItem", "OnPurchaseTicketEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSeasonPassRewardItem.OnRewardEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSeasonPassRewardItem::OnRewardEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassRewardItem", "OnRewardEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSeasonPassRewardItem.OnUpdateIsHaveHiveEntity
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsHaveHiveEntity                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassRewardItem::OnUpdateIsHaveHiveEntity(bool bInIsHaveHiveEntity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassRewardItem", "OnUpdateIsHaveHiveEntity");

	Params::TLUserWidgetSeasonPassRewardItem_OnUpdateIsHaveHiveEntity Parms{};

	Parms.bInIsHaveHiveEntity = bInIsHaveHiveEntity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.IsMapIconStateChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetMapIcon::IsMapIconStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "IsMapIconStateChanged");

	Params::TLUserWidgetMapIcon_IsMapIconStateChanged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetMapIcon.IsPlayCreateAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetMapIcon::IsPlayCreateAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "IsPlayCreateAnimation");

	Params::TLUserWidgetMapIcon_IsPlayCreateAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetMapIcon.OnChildrenHideEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInHide                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::OnChildrenHideEvent(bool bInHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnChildrenHideEvent");

	Params::TLUserWidgetMapIcon_OnChildrenHideEvent Parms{};

	Parms.bInHide = bInHide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.OnCreated
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InCreateInMinimap                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::OnCreated(bool InCreateInMinimap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnCreated");

	Params::TLUserWidgetMapIcon_OnCreated Parms{};

	Parms.InCreateInMinimap = InCreateInMinimap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.OnDestroyAnimationFinished
// (Final, Native, Public)

void UTLUserWidgetMapIcon::OnDestroyAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnDestroyAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIcon.OnDestroyPlayAnim
// (Final, Native, Public)

void UTLUserWidgetMapIcon::OnDestroyPlayAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnDestroyPlayAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIcon.OnEmphasis
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMapIcon::OnEmphasis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnEmphasis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMapIcon.OnMapClosed
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMapIcon::OnMapClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnMapClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMapIcon.OnMapOpened
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMapIcon::OnMapOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnMapOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMapIcon.OnNpcFocusEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInFocusState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::OnNpcFocusEvent(bool bInFocusState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnNpcFocusEvent");

	Params::TLUserWidgetMapIcon_OnNpcFocusEvent Parms{};

	Parms.bInFocusState = bInFocusState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.OnOtherRegion
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsSet                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::OnOtherRegion(bool InIsSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnOtherRegion");

	Params::TLUserWidgetMapIcon_OnOtherRegion Parms{};

	Parms.InIsSet = InIsSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.OnPVPRevengeTargetEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMapIcon::OnPVPRevengeTargetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnPVPRevengeTargetEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMapIcon.OnStopEmphasis
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInPlayStopAnimation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::OnStopEmphasis(bool bInPlayStopAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnStopEmphasis");

	Params::TLUserWidgetMapIcon_OnStopEmphasis Parms{};

	Parms.bInPlayStopAnimation = bInPlayStopAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.OnUnderRoof
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInSet                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::OnUnderRoof(bool bInSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnUnderRoof");

	Params::TLUserWidgetMapIcon_OnUnderRoof Parms{};

	Parms.bInSet = bInSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.OnUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnUnLockMemorial");

	Params::TLUserWidgetMapIcon_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.OnUpdateVisibleSubWorldTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::OnUpdateVisibleSubWorldTarget(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "OnUpdateVisibleSubWorldTarget");

	Params::TLUserWidgetMapIcon_OnUpdateVisibleSubWorldTarget Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.SetCameraViewAngle
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::SetCameraViewAngle(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "SetCameraViewAngle");

	Params::TLUserWidgetMapIcon_SetCameraViewAngle Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.SetHighlight
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsSet                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::SetHighlight(bool IsSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "SetHighlight");

	Params::TLUserWidgetMapIcon_SetHighlight Parms{};

	Parms.IsSet = IsSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIcon.SetMapIconRotation
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIcon::SetMapIconRotation(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIcon", "SetMapIconRotation");

	Params::TLUserWidgetMapIcon_SetMapIconRotation Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconWorldBoss.OnFocusAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconWorldBoss::OnFocusAnimation(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconWorldBoss", "OnFocusAnimation");

	Params::TLUserWidgetMapIconWorldBoss_OnFocusAnimation Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconWorldBoss.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconWorldBoss::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconWorldBoss", "OnUpdateScheduleType");

	Params::TLUserWidgetMapIconWorldBoss_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphListItem.GetEntryType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETLPolymorphEntryType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLPolymorphEntryType UTLUserWidgetPolymorphListItem::GetEntryType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphListItem", "GetEntryType");

	Params::TLUserWidgetPolymorphListItem_GetEntryType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemSlotContextMenuObject.AddMenuItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InMenuId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnable                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLItemSlotContextMenuObject::AddMenuItem(const class FName InMenuId, const bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemSlotContextMenuObject", "AddMenuItem");

	Params::TLItemSlotContextMenuObject_AddMenuItem Parms{};

	Parms.InMenuId = InMenuId;
	Parms.InEnable = InEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLItemSlotContextMenuObject.AddMenuItemWithText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InMenuId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InMenuText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    InEnable                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLItemSlotContextMenuObject::AddMenuItemWithText(const class FName InMenuId, const class FText& InMenuText, const bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemSlotContextMenuObject", "AddMenuItemWithText");

	Params::TLItemSlotContextMenuObject_AddMenuItemWithText Parms{};

	Parms.InMenuId = InMenuId;
	Parms.InMenuText = std::move(InMenuText);
	Parms.InEnable = InEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLItemSlotContextMenuObject.AddSkillLevelUpMenuInItemSlotContextMenu
// (Final, Native, Public, BlueprintCallable)

void UTLItemSlotContextMenuObject::AddSkillLevelUpMenuInItemSlotContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemSlotContextMenuObject", "AddSkillLevelUpMenuInItemSlotContextMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLItemSlotContextMenuObject.OnContextMenuShow
// (Event, Public, BlueprintEvent)
// Parameters:
// EInvenModeType                          InInvenModeType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidgetItemSlot*            InItemWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCurrentPresetNum                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLUIPlatform                           UIPlatform                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLItemSlotContextMenuObject::OnContextMenuShow(EInvenModeType InInvenModeType, class UTLUserWidgetItemSlot* InItemWidget, int32 InCurrentPresetNum, ETLUIPlatform UIPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemSlotContextMenuObject", "OnContextMenuShow");

	Params::TLItemSlotContextMenuObject_OnContextMenuShow Parms{};

	Parms.InInvenModeType = InInvenModeType;
	Parms.InItemWidget = InItemWidget;
	Parms.InCurrentPresetNum = InCurrentPresetNum;
	Parms.UIPlatform = UIPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAGIDLink.SetForChild
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InForChild                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAGIDLink::SetForChild(bool InForChild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAGIDLink", "SetForChild");

	Params::TLUserWidgetAGIDLink_SetForChild Parms{};

	Parms.InForChild = InForChild;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.CallHoverBP
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetContentsAlarmDetailBase::CallHoverBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "CallHoverBP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.CallUnhoverBP
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetContentsAlarmDetailBase::CallUnhoverBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "CallUnhoverBP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.GetIsHoverBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetContentsAlarmDetailBase::GetIsHoverBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "GetIsHoverBP");

	Params::TLUserWidgetContentsAlarmDetailBase_GetIsHoverBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.OnAutoPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsOnAutoPlay                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsAlarmDetailBase::OnAutoPlay(bool IsOnAutoPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "OnAutoPlay");

	Params::TLUserWidgetContentsAlarmDetailBase_OnAutoPlay Parms{};

	Parms.IsOnAutoPlay = IsOnAutoPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.OnCompleteEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetContentsAlarmDetailBase::OnCompleteEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "OnCompleteEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.OnCreateEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetContentsAlarmDetailBase::OnCreateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "OnCreateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.OnHovered
// (Event, Public, BlueprintEvent)

void UTLUserWidgetContentsAlarmDetailBase::OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.OnPlayContentHighlight
// (Event, Public, BlueprintEvent)

void UTLUserWidgetContentsAlarmDetailBase::OnPlayContentHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "OnPlayContentHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.OnStopContentHighlight
// (Event, Public, BlueprintEvent)

void UTLUserWidgetContentsAlarmDetailBase::OnStopContentHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "OnStopContentHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.OnUnhovered
// (Event, Public, BlueprintEvent)

void UTLUserWidgetContentsAlarmDetailBase::OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContentsAlarmDetailBase.OnUpdateViewType
// (Event, Public, BlueprintEvent)
// Parameters:
// EContentsAlarmViewType                  InViewType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsAlarmDetailBase::OnUpdateViewType(EContentsAlarmViewType InViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmDetailBase", "OnUpdateViewType");

	Params::TLUserWidgetContentsAlarmDetailBase_OnUpdateViewType Parms{};

	Parms.InViewType = InViewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractDetailInfo.ButtonClickContractTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InbChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractDetailInfo::ButtonClickContractTarget(bool InbChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "ButtonClickContractTarget");

	Params::TLUserWidgetContractDetailInfo_ButtonClickContractTarget Parms{};

	Parms.InbChecked = InbChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractDetailInfo.GetContractReward
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetContractDetailInfo::GetContractReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "GetContractReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractDetailInfo.HandleRewardAnimationFinished
// (Final, Native, Public)

void UTLUserWidgetContractDetailInfo::HandleRewardAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "HandleRewardAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractDetailInfo.OnClickedDetailButton
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetContractDetailInfo::OnClickedDetailButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "OnClickedDetailButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractDetailInfo.OnContractTargetAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InbVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractDetailInfo::OnContractTargetAnimation(bool InbVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "OnContractTargetAnimation");

	Params::TLUserWidgetContractDetailInfo_OnContractTargetAnimation Parms{};

	Parms.InbVisible = InbVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractDetailInfo.OnTutorialActivateEvent
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLInfoTutorial                  InfoTutorial                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetContractDetailInfo::OnTutorialActivateEvent(const struct FTLInfoTutorial& InfoTutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "OnTutorialActivateEvent");

	Params::TLUserWidgetContractDetailInfo_OnTutorialActivateEvent Parms{};

	Parms.InfoTutorial = std::move(InfoTutorial);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractDetailInfo.OnTutorialDeactivateEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetContractDetailInfo::OnTutorialDeactivateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "OnTutorialDeactivateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContractDetailInfo.OnUpdateContractInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractDetailInfo::OnUpdateContractInfo(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "OnUpdateContractInfo");

	Params::TLUserWidgetContractDetailInfo_OnUpdateContractInfo Parms{};

	Parms.InObject = InObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractDetailInfo.OnUpdateContractInfoWithGuid
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InContractGuid                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractDetailInfo::OnUpdateContractInfoWithGuid(uint64 InContractGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "OnUpdateContractInfoWithGuid");

	Params::TLUserWidgetContractDetailInfo_OnUpdateContractInfoWithGuid Parms{};

	Parms.InContractGuid = InContractGuid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractDetailInfo.OnUpdateContractPercent
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractDetailInfo::OnUpdateContractPercent(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "OnUpdateContractPercent");

	Params::TLUserWidgetContractDetailInfo_OnUpdateContractPercent Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractDetailInfo.OnUpdateContractState
// (Event, Protected, BlueprintEvent)
// Parameters:
// EContractState                          InContractState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFinishTarget                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractDetailInfo::OnUpdateContractState(EContractState InContractState, bool bFinishTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "OnUpdateContractState");

	Params::TLUserWidgetContractDetailInfo_OnUpdateContractState Parms{};

	Parms.InContractState = InContractState;
	Parms.bFinishTarget = bFinishTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractDetailInfo.OnUpdateContractType
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetContractDetailInfo::OnUpdateContractType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "OnUpdateContractType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContractDetailInfo.OnUpdateRefreshContractList
// (Event, Protected, BlueprintEvent)
// Parameters:
// EContractRefreshListReason              InContractRefreshListReason                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractDetailInfo::OnUpdateRefreshContractList(EContractRefreshListReason InContractRefreshListReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "OnUpdateRefreshContractList");

	Params::TLUserWidgetContractDetailInfo_OnUpdateRefreshContractList Parms{};

	Parms.InContractRefreshListReason = InContractRefreshListReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractDetailInfo.SetContractInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbFinishTarget                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractDetailInfo::SetContractInfo(class UObject* InObject, bool InbFinishTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "SetContractInfo");

	Params::TLUserWidgetContractDetailInfo_SetContractInfo Parms{};

	Parms.InObject = InObject;
	Parms.InbFinishTarget = InbFinishTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractDetailInfo.SetContractInfoWithGuid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InContractGuid                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractDetailInfo::SetContractInfoWithGuid(uint64 InContractGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractDetailInfo", "SetContractInfoWithGuid");

	Params::TLUserWidgetContractDetailInfo_SetContractInfoWithGuid Parms{};

	Parms.InContractGuid = InContractGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.CameraZoomInOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InZoomIn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::CameraZoomInOut(int32 InZoomIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "CameraZoomInOut");

	Params::TLEnchantSceneControlActor_CameraZoomInOut Parms{};

	Parms.InZoomIn = InZoomIn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.FinishEnchantEffect
// (Event, Public, BlueprintEvent)

void ATLEnchantSceneControlActor::FinishEnchantEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "FinishEnchantEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLEnchantSceneControlActor.GetDefaultPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATLEnchantSceneControlActor::GetDefaultPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "GetDefaultPosition");

	Params::TLEnchantSceneControlActor_GetDefaultPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLEnchantSceneControlActor.GetLocationByTag
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ATLEnchantSceneControlActor::GetLocationByTag(class FName InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "GetLocationByTag");

	Params::TLEnchantSceneControlActor_GetLocationByTag Parms{};

	Parms.InTag = InTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLEnchantSceneControlActor.GetRotatorByTag
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator ATLEnchantSceneControlActor::GetRotatorByTag(class FName InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "GetRotatorByTag");

	Params::TLEnchantSceneControlActor_GetRotatorByTag Parms{};

	Parms.InTag = InTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLEnchantSceneControlActor.InitOriginPosition
// (Final, Native, Public, BlueprintCallable)

void ATLEnchantSceneControlActor::InitOriginPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "InitOriginPosition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.OnDragCustsceneReady
// (Final, Native, Public, BlueprintCallable)

void ATLEnchantSceneControlActor::OnDragCustsceneReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "OnDragCustsceneReady");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.OnShowLongPress
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bPress                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::OnShowLongPress(bool bPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "OnShowLongPress");

	Params::TLEnchantSceneControlActor_OnShowLongPress Parms{};

	Parms.bPress = bPress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLEnchantSceneControlActor.PlaySct
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InContiKey                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  InContiPath                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATLEnchantSceneControlActor::PlaySct(class FName InTag, class FName InContiKey, const struct FSoftObjectPath& InContiPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "PlaySct");

	Params::TLEnchantSceneControlActor_PlaySct Parms{};

	Parms.InTag = InTag;
	Parms.InContiKey = InContiKey;
	Parms.InContiPath = std::move(InContiPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLEnchantSceneControlActor.RotateItem
// (Final, Native, Public, BlueprintCallable)

void ATLEnchantSceneControlActor::RotateItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "RotateItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.RotateModelObjectByTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::RotateModelObjectByTag(class FName InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "RotateModelObjectByTag");

	Params::TLEnchantSceneControlActor_RotateModelObjectByTag Parms{};

	Parms.InTag = InTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.SetCombatStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InCombatStatus                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::SetCombatStatus(bool InCombatStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "SetCombatStatus");

	Params::TLEnchantSceneControlActor_SetCombatStatus Parms{};

	Parms.InCombatStatus = InCombatStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.SetDrawScaleByTag
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::SetDrawScaleByTag(class FName InTag, const struct FVector& InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "SetDrawScaleByTag");

	Params::TLEnchantSceneControlActor_SetDrawScaleByTag Parms{};

	Parms.InTag = InTag;
	Parms.InScale = std::move(InScale);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.SetEnchantTargetBeEmpty
// (Event, Public, BlueprintEvent)
// Parameters:
// EEnchantCategory                        InEnchantCategory                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::SetEnchantTargetBeEmpty(EEnchantCategory InEnchantCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "SetEnchantTargetBeEmpty");

	Params::TLEnchantSceneControlActor_SetEnchantTargetBeEmpty Parms{};

	Parms.InEnchantCategory = InEnchantCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLEnchantSceneControlActor.SetEnchantTargetItem
// (Event, Public, BlueprintEvent)
// Parameters:
// EEnchantCategory                        InEnchantCategory                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           InItemCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InWearing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::SetEnchantTargetItem(EEnchantCategory InEnchantCategory, EItemCategory InItemCategory, bool InWearing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "SetEnchantTargetItem");

	Params::TLEnchantSceneControlActor_SetEnchantTargetItem Parms{};

	Parms.InEnchantCategory = InEnchantCategory;
	Parms.InItemCategory = InItemCategory;
	Parms.InWearing = InWearing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLEnchantSceneControlActor.SetHiveTransformInfoByCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           InCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::SetHiveTransformInfoByCategory(class FName InTag, EItemCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "SetHiveTransformInfoByCategory");

	Params::TLEnchantSceneControlActor_SetHiveTransformInfoByCategory Parms{};

	Parms.InTag = InTag;
	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.SetPositionByTag
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InPositionOffset                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::SetPositionByTag(class FName InTag, const struct FVector& InPositionOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "SetPositionByTag");

	Params::TLEnchantSceneControlActor_SetPositionByTag Parms{};

	Parms.InTag = InTag;
	Parms.InPositionOffset = std::move(InPositionOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.SetRotationByTag
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::SetRotationByTag(class FName InTag, const struct FRotator& InRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "SetRotationByTag");

	Params::TLEnchantSceneControlActor_SetRotationByTag Parms{};

	Parms.InTag = InTag;
	Parms.InRotation = std::move(InRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.ShowScroll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::ShowScroll(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "ShowScroll");

	Params::TLEnchantSceneControlActor_ShowScroll Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLEnchantSceneControlActor.StartEnchantEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// EEnchantResultType                      InResultType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEnchantCategory                        InEnchantCategory                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           ItemCategory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEquipCategory                          EquipCategory                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTwoSlotsWeapon                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::StartEnchantEffect(EEnchantResultType InResultType, EEnchantCategory InEnchantCategory, EItemCategory ItemCategory, EEquipCategory EquipCategory, bool bTwoSlotsWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "StartEnchantEffect");

	Params::TLEnchantSceneControlActor_StartEnchantEffect Parms{};

	Parms.InResultType = InResultType;
	Parms.InEnchantCategory = InEnchantCategory;
	Parms.ItemCategory = ItemCategory;
	Parms.EquipCategory = EquipCategory;
	Parms.bTwoSlotsWeapon = bTwoSlotsWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLEnchantSceneControlActor.StartEnchantWaitingEffect
// (Event, Public, BlueprintEvent)

void ATLEnchantSceneControlActor::StartEnchantWaitingEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "StartEnchantWaitingEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLEnchantSceneControlActor.StartEquipEnchantEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// EEnchantResultType                      InResultType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEnchantCategory                        InEnchantCategory                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           ItemCategory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEquipCategory                          EquipCategory                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTwoSlotsWeapon                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::StartEquipEnchantEffect(EEnchantResultType InResultType, EEnchantCategory InEnchantCategory, EItemCategory ItemCategory, EEquipCategory EquipCategory, bool bTwoSlotsWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "StartEquipEnchantEffect");

	Params::TLEnchantSceneControlActor_StartEquipEnchantEffect Parms{};

	Parms.InResultType = InResultType;
	Parms.InEnchantCategory = InEnchantCategory;
	Parms.ItemCategory = ItemCategory;
	Parms.EquipCategory = EquipCategory;
	Parms.bTwoSlotsWeapon = bTwoSlotsWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLEnchantSceneControlActor.StartNonEquipEnchantEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// EEnchantResultType                      InResultType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEnchantCategory                        InEnchantCategory                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemCategory                           ItemCategory                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLEnchantSceneControlActor::StartNonEquipEnchantEffect(EEnchantResultType InResultType, EEnchantCategory InEnchantCategory, EItemCategory ItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLEnchantSceneControlActor", "StartNonEquipEnchantEffect");

	Params::TLEnchantSceneControlActor_StartNonEquipEnchantEffect Parms{};

	Parms.InResultType = InResultType;
	Parms.InEnchantCategory = InEnchantCategory;
	Parms.ItemCategory = ItemCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyDungeonObjective.HandleCompleteAnimationFinished
// (Final, Native, Public)

void UTLUserWidgetPartyDungeonObjective::HandleCompleteAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyDungeonObjective", "HandleCompleteAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLLobbyLevelSequenceChannel.OnLevelSequencePlayerFinished
// (Final, Native, Private)

void UTLLobbyLevelSequenceChannel::OnLevelSequencePlayerFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLLobbyLevelSequenceChannel", "OnLevelSequencePlayerFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconGuildFlag.Button_OnClicked
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconGuildFlag::Button_OnClicked(const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconGuildFlag", "Button_OnClicked");

	Params::TLUserWidgetMapIconGuildFlag_Button_OnClicked Parms{};

	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconGuildFlag.OnHoverButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Hover                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconGuildFlag::OnHoverButton(bool Hover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconGuildFlag", "OnHoverButton");

	Params::TLUserWidgetMapIconGuildFlag_OnHoverButton Parms{};

	Parms.Hover = Hover;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconGuildFlag.SetPossessGuildFlag
// (Final, Native, Public)
// Parameters:
// uint64                                  InGuildGuid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconGuildFlag::SetPossessGuildFlag(uint64 InGuildGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconGuildFlag", "SetPossessGuildFlag");

	Params::TLUserWidgetMapIconGuildFlag_SetPossessGuildFlag Parms{};

	Parms.InGuildGuid = InGuildGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconGuildFlag.UpdateStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InPossess                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InMyGuild                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconGuildFlag::UpdateStatus(bool InPossess, bool InMyGuild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconGuildFlag", "UpdateStatus");

	Params::TLUserWidgetMapIconGuildFlag_UpdateStatus Parms{};

	Parms.InPossess = InPossess;
	Parms.InMyGuild = InMyGuild;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractNpc.EventClickedContractActionBtn
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetContractNpc::EventClickedContractActionBtn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractNpc", "EventClickedContractActionBtn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContractNpc.EventClickedContractRefreshBtn
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetContractNpc::EventClickedContractRefreshBtn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractNpc", "EventClickedContractRefreshBtn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContractNpc.HandleRefreshContractList
// (Final, Native, Protected)
// Parameters:
// EContractRefreshListReason              InContractRefreshListReason                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InContractGuid                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractNpc::HandleRefreshContractList(EContractRefreshListReason InContractRefreshListReason, uint64 InContractGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractNpc", "HandleRefreshContractList");

	Params::TLUserWidgetContractNpc_HandleRefreshContractList Parms{};

	Parms.InContractRefreshListReason = InContractRefreshListReason;
	Parms.InContractGuid = InContractGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractNpc.HandleUpdateContractState
// (Final, Native, Protected)
// Parameters:
// EContractState                          InContractState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractNpc::HandleUpdateContractState(EContractState InContractState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractNpc", "HandleUpdateContractState");

	Params::TLUserWidgetContractNpc_HandleUpdateContractState Parms{};

	Parms.InContractState = InContractState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractNpc.SetSelectedContractInfo
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractNpc::SetSelectedContractInfo(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractNpc", "SetSelectedContractInfo");

	Params::TLUserWidgetContractNpc_SetSelectedContractInfo Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractNpc.UpdateRefreshContractList
// (Event, Protected, BlueprintEvent)
// Parameters:
// EContractRefreshListReason              InContractRefreshListReason                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractNpc::UpdateRefreshContractList(EContractRefreshListReason InContractRefreshListReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractNpc", "UpdateRefreshContractList");

	Params::TLUserWidgetContractNpc_UpdateRefreshContractList Parms{};

	Parms.InContractRefreshListReason = InContractRefreshListReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.ItemUtilities.GetItemGradeImage
// (Final, Native, Static, Private, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGrade                              InItemGrade                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftObjectPath UItemUtilities::GetItemGradeImage(class UObject* InWorldContextObject, EItemGrade InItemGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemUtilities", "GetItemGradeImage");

	Params::ItemUtilities_GetItemGradeImage Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InItemGrade = InItemGrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetActionKeyGuideItemBase.OnSet
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLActionKeyGuideInfo            InInfo                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetActionKeyGuideItemBase::OnSet(const struct FTLActionKeyGuideInfo& InInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionKeyGuideItemBase", "OnSet");

	Params::TLUserWidgetActionKeyGuideItemBase_OnSet Parms{};

	Parms.InInfo = std::move(InInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetActionKeyGuideItemBase.SetInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTLActionKeyGuideInfo            InInfo                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetActionKeyGuideItemBase::SetInfo(const struct FTLActionKeyGuideInfo& InInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionKeyGuideItemBase", "SetInfo");

	Params::TLUserWidgetActionKeyGuideItemBase_SetInfo Parms{};

	Parms.InInfo = std::move(InInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetActionKeyGuideItemKey.OnPressed
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetActionKeyGuideItemKey::OnPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionKeyGuideItemKey", "OnPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetActionKeyGuideItemKey.OnReleased
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetActionKeyGuideItemKey::OnReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionKeyGuideItemKey", "OnReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLMagicDollGachaSceneControlActor.EnableBoxCollision
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInEnableBoxCollision                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLMagicDollGachaSceneControlActor::EnableBoxCollision(bool bInEnableBoxCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMagicDollGachaSceneControlActor", "EnableBoxCollision");

	Params::TLMagicDollGachaSceneControlActor_EnableBoxCollision Parms{};

	Parms.bInEnableBoxCollision = bInEnableBoxCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLMagicDollGachaSceneControlActor.LevelSequenceFinished
// (Final, Native, Protected)

void ATLMagicDollGachaSceneControlActor::LevelSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMagicDollGachaSceneControlActor", "LevelSequenceFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLMagicDollGachaSceneControlActor.OnCreatedGachaUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTLUserWidgetMagicDollGacha*      InGachaWidget                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLMagicDollGachaSceneControlActor::OnCreatedGachaUI(class UTLUserWidgetMagicDollGacha* InGachaWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMagicDollGachaSceneControlActor", "OnCreatedGachaUI");

	Params::TLMagicDollGachaSceneControlActor_OnCreatedGachaUI Parms{};

	Parms.InGachaWidget = InGachaWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLMagicDollGachaSceneControlActor.OnLevelSequenceFinished
// (Event, Protected, BlueprintEvent)

void ATLMagicDollGachaSceneControlActor::OnLevelSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMagicDollGachaSceneControlActor", "OnLevelSequenceFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLMagicDollGachaSceneControlActor.OnRandomBoxClicked
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLMagicDollGachaSceneControlActor::OnRandomBoxClicked(class FName InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMagicDollGachaSceneControlActor", "OnRandomBoxClicked");

	Params::TLMagicDollGachaSceneControlActor_OnRandomBoxClicked Parms{};

	Parms.InTag = InTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLMagicDollGachaSceneControlActor.ShowRandomBoxes
// (Final, Native, Protected, BlueprintCallable)

void ATLMagicDollGachaSceneControlActor::ShowRandomBoxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMagicDollGachaSceneControlActor", "ShowRandomBoxes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInvenSlot.HideEquipImageImmediately
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInvenSlot::HideEquipImageImmediately()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "HideEquipImageImmediately");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInvenSlot.IsTwoSlotsAccessoryEquipTo01ByDefault
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetInvenSlot::IsTwoSlotsAccessoryEquipTo01ByDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "IsTwoSlotsAccessoryEquipTo01ByDefault");

	Params::TLUserWidgetInvenSlot_IsTwoSlotsAccessoryEquipTo01ByDefault Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInvenSlot.IsTwoSlotsWeaponEquipToMainHandByDefault
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetInvenSlot::IsTwoSlotsWeaponEquipToMainHandByDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "IsTwoSlotsWeaponEquipToMainHandByDefault");

	Params::TLUserWidgetInvenSlot_IsTwoSlotsWeaponEquipToMainHandByDefault Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInvenSlot.OnFixedTooltip
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsFixed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInvenSlot::OnFixedTooltip(bool InIsFixed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "OnFixedTooltip");

	Params::TLUserWidgetInvenSlot_OnFixedTooltip Parms{};

	Parms.InIsFixed = InIsFixed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInvenSlot.OnStartRemove
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInvenSlot::OnStartRemove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "OnStartRemove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInvenSlot.OnUpdateAutoUsable
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInvenSlot::OnUpdateAutoUsable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "OnUpdateAutoUsable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInvenSlot.PlayCheckAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCheck                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInvenSlot::PlayCheckAnim(bool bCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "PlayCheckAnim");

	Params::TLUserWidgetInvenSlot_PlayCheckAnim Parms{};

	Parms.bCheck = bCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInvenSlot.PlayEquipItemAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInvenSlot::PlayEquipItemAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "PlayEquipItemAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInvenSlot.PlayHighlightAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bHighlight                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInvenSlot::PlayHighlightAnim(bool bHighlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "PlayHighlightAnim");

	Params::TLUserWidgetInvenSlot_PlayHighlightAnim Parms{};

	Parms.bHighlight = bHighlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInvenSlot.PlayStackedItemAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInvenSlot::PlayStackedItemAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "PlayStackedItemAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInvenSlot.PlayUnequipItemAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInvenSlot::PlayUnequipItemAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "PlayUnequipItemAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInvenSlot.PlayUseItemAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemCategory                           InItemCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInvenSlot::PlayUseItemAnim(EItemCategory InItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "PlayUseItemAnim");

	Params::TLUserWidgetInvenSlot_PlayUseItemAnim Parms{};

	Parms.InItemCategory = InItemCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInvenSlot.PlayUseSelectPackageItemAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInvenSlot::PlayUseSelectPackageItemAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "PlayUseSelectPackageItemAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInvenSlot.ShowEquipImageImmediately
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInvenSlot::ShowEquipImageImmediately()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "ShowEquipImageImmediately");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInvenSlot.UpdateSlotChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bBigSlotMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInvenSlot::UpdateSlotChanged(bool bBigSlotMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "UpdateSlotChanged");

	Params::TLUserWidgetInvenSlot_UpdateSlotChanged Parms{};

	Parms.bBigSlotMode = bBigSlotMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInvenSlot.IsAutoUseOn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetInvenSlot::IsAutoUseOn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "IsAutoUseOn");

	Params::TLUserWidgetInvenSlot_IsAutoUseOn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInvenSlot.IsEquippedFirstPrest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetInvenSlot::IsEquippedFirstPrest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "IsEquippedFirstPrest");

	Params::TLUserWidgetInvenSlot_IsEquippedFirstPrest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInvenSlot.IsEquippedSecondPrest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetInvenSlot::IsEquippedSecondPrest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "IsEquippedSecondPrest");

	Params::TLUserWidgetInvenSlot_IsEquippedSecondPrest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInvenSlot.IsMaxLevelSkillBook
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetInvenSlot::IsMaxLevelSkillBook() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "IsMaxLevelSkillBook");

	Params::TLUserWidgetInvenSlot_IsMaxLevelSkillBook Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInvenSlot.IsWeaponSwapOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetInvenSlot::IsWeaponSwapOpened() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlot", "IsWeaponSwapOpened");

	Params::TLUserWidgetInvenSlot_IsWeaponSwapOpened Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetFacilityNpcSpeak.OnNpcSpeak
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EChatBalloonType                        InChatBalloonType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFacilityNpcSpeak::OnNpcSpeak(const class FText& InText, EChatBalloonType InChatBalloonType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFacilityNpcSpeak", "OnNpcSpeak");

	Params::TLUserWidgetFacilityNpcSpeak_OnNpcSpeak Parms{};

	Parms.InText = std::move(InText);
	Parms.InChatBalloonType = InChatBalloonType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFacilityNpcSpeak.OnUpdateNpcName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetFacilityNpcSpeak::OnUpdateNpcName(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFacilityNpcSpeak", "OnUpdateNpcName");

	Params::TLUserWidgetFacilityNpcSpeak_OnUpdateNpcName Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantInfoStat.OnEnchantMethodChange
// (Event, Public, BlueprintEvent)
// Parameters:
// EEnchantMethod                          InEnchantMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantInfoStat::OnEnchantMethodChange(EEnchantMethod InEnchantMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantInfoStat", "OnEnchantMethodChange");

	Params::TLUserWidgetEnchantInfoStat_OnEnchantMethodChange Parms{};

	Parms.InEnchantMethod = InEnchantMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantInfoStat.OnInfoFormChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bComparison                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantInfoStat::OnInfoFormChange(bool bComparison)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantInfoStat", "OnInfoFormChange");

	Params::TLUserWidgetEnchantInfoStat_OnInfoFormChange Parms{};

	Parms.bComparison = bComparison;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantInfoStat.OnShowOnlyDefaultStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInShowOnlyDefaultStat                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantInfoStat::OnShowOnlyDefaultStat(bool bInShowOnlyDefaultStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantInfoStat", "OnShowOnlyDefaultStat");

	Params::TLUserWidgetEnchantInfoStat_OnShowOnlyDefaultStat Parms{};

	Parms.bInShowOnlyDefaultStat = bInShowOnlyDefaultStat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetShopBuyListBase.GetSlotByIdx
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Idx                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidgetShopSlot*            ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserWidgetShopSlot* UTLUserWidgetShopBuyListBase::GetSlotByIdx(const int32 Idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShopBuyListBase", "GetSlotByIdx");

	Params::TLUserWidgetShopBuyListBase_GetSlotByIdx Parms{};

	Parms.Idx = Idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyListForWindow.OnUpdatePartyState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLPartyState                           InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyListForWindow::OnUpdatePartyState(ETLPartyState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyListForWindow", "OnUpdatePartyState");

	Params::TLUserWidgetPartyListForWindow_OnUpdatePartyState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyListForWindow.SetActiveMatchingGuideText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyListForWindow::SetActiveMatchingGuideText(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyListForWindow", "SetActiveMatchingGuideText");

	Params::TLUserWidgetPartyListForWindow_SetActiveMatchingGuideText Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyListForWindow.SetActiveMatchingPartyGuide
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyListForWindow::SetActiveMatchingPartyGuide(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyListForWindow", "SetActiveMatchingPartyGuide");

	Params::TLUserWidgetPartyListForWindow_SetActiveMatchingPartyGuide Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyListForWindow.GetPartyMemberCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetPartyListForWindow::GetPartyMemberCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyListForWindow", "GetPartyMemberCount");

	Params::TLUserWidgetPartyListForWindow_GetPartyMemberCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyListForWindow.IsMatchingParty
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetPartyListForWindow::IsMatchingParty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyListForWindow", "IsMatchingParty");

	Params::TLUserWidgetPartyListForWindow_IsMatchingParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGachaSceneControlActor.CreateGachaActors
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InGachaActorName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLGachaSceneControlActor::CreateGachaActors(class FName InGachaActorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGachaSceneControlActor", "CreateGachaActors");

	Params::TLGachaSceneControlActor_CreateGachaActors Parms{};

	Parms.InGachaActorName = InGachaActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGachaSceneControlActor.EnableBoxCollision
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInEnableBoxCollision                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLGachaSceneControlActor::EnableBoxCollision(bool bInEnableBoxCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGachaSceneControlActor", "EnableBoxCollision");

	Params::TLGachaSceneControlActor_EnableBoxCollision Parms{};

	Parms.bInEnableBoxCollision = bInEnableBoxCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGachaSceneControlActor.LevelSequenceFinished
// (Final, Native, Protected)

void ATLGachaSceneControlActor::LevelSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGachaSceneControlActor", "LevelSequenceFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGachaSceneControlActor.OnCreatedGachaUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTLUserWidgetGacha*               InGachaWidget                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLGachaSceneControlActor::OnCreatedGachaUI(class UTLUserWidgetGacha* InGachaWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGachaSceneControlActor", "OnCreatedGachaUI");

	Params::TLGachaSceneControlActor_OnCreatedGachaUI Parms{};

	Parms.InGachaWidget = InGachaWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLGachaSceneControlActor.OnLevelSequenceFinished
// (Event, Protected, BlueprintEvent)

void ATLGachaSceneControlActor::OnLevelSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGachaSceneControlActor", "OnLevelSequenceFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLGachaSceneControlActor.OnRandomBoxClicked
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             InTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLGachaSceneControlActor::OnRandomBoxClicked(class FName InTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGachaSceneControlActor", "OnRandomBoxClicked");

	Params::TLGachaSceneControlActor_OnRandomBoxClicked Parms{};

	Parms.InTag = InTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLGachaSceneControlActor.StartActionTree
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InActionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InTagName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLGachaSceneControlActor::StartActionTree(class FName InActionName, class FName InTagName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGachaSceneControlActor", "StartActionTree");

	Params::TLGachaSceneControlActor_StartActionTree Parms{};

	Parms.InActionName = InActionName;
	Parms.InTagName = InTagName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGachaSceneControlActor.StartSequenceStep
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InStepName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLoop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInPauseAtEnd                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequencePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULevelSequencePlayer* ATLGachaSceneControlActor::StartSequenceStep(class FName InStepName, bool bInLoop, bool bInPauseAtEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGachaSceneControlActor", "StartSequenceStep");

	Params::TLGachaSceneControlActor_StartSequenceStep Parms{};

	Parms.InStepName = InStepName;
	Parms.bInLoop = bInLoop;
	Parms.bInPauseAtEnd = bInPauseAtEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGachaSceneControlActor.UpdateItemIconInfo
// (Final, Native, Protected, BlueprintCallable)

void ATLGachaSceneControlActor::UpdateItemIconInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGachaSceneControlActor", "UpdateItemIconInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGachaSceneControlActor.UpdateItemIconUIInfo
// (Final, Native, Protected, BlueprintCallable)

void ATLGachaSceneControlActor::UpdateItemIconUIInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGachaSceneControlActor", "UpdateItemIconUIInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillQuickSlot.OnCooldownEnd
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillQuickSlot::OnCooldownEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "OnCooldownEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillQuickSlot.OnLock
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ON                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillQuickSlot::OnLock(bool ON)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "OnLock");

	Params::TLUserWidgetSkillQuickSlot_OnLock Parms{};

	Parms.ON = ON;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillQuickSlot.OnReserveToggleSlotOff
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UTLUserWidgetSkillQuickSlot::OnReserveToggleSlotOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "OnReserveToggleSlotOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillQuickSlot.OnReserveToggleSlotOn
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UTLUserWidgetSkillQuickSlot::OnReserveToggleSlotOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "OnReserveToggleSlotOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillQuickSlot.OnSetSkillObject
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillQuickSlot::OnSetSkillObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "OnSetSkillObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillQuickSlot.OnToggleSlotOff
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UTLUserWidgetSkillQuickSlot::OnToggleSlotOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "OnToggleSlotOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillQuickSlot.OnToggleSlotOn
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UTLUserWidgetSkillQuickSlot::OnToggleSlotOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "OnToggleSlotOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillQuickSlot.OnUpdateAutoUse
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillQuickSlot::OnUpdateAutoUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "OnUpdateAutoUse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillQuickSlot.OnUpdateToggleSlot
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillQuickSlot::OnUpdateToggleSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "OnUpdateToggleSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillQuickSlot.OnUse
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillQuickSlot::OnUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "OnUse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillQuickSlot.IsKeyPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetSkillQuickSlot::IsKeyPressed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillQuickSlot", "IsKeyPressed");

	Params::TLUserWidgetSkillQuickSlot_IsKeyPressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPrimeSkillSlot.OnMainHandEquipChangeEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemCategory                           InItemCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsInInit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPrimeSkillSlot::OnMainHandEquipChangeEvent(EItemCategory InItemCategory, bool bIsInInit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPrimeSkillSlot", "OnMainHandEquipChangeEvent");

	Params::TLUserWidgetPrimeSkillSlot_OnMainHandEquipChangeEvent Parms{};

	Parms.InItemCategory = InItemCategory;
	Parms.bIsInInit = bIsInInit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLGameFlowStateChangeRealmGroup.OnBlackscreenFadeInFinished
// (Final, Native, Private)

void UTLGameFlowStateChangeRealmGroup::OnBlackscreenFadeInFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameFlowStateChangeRealmGroup", "OnBlackscreenFadeInFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameFlowStateChangeRealmGroup.OnFailedProcess
// (Final, Native, Private)

void UTLGameFlowStateChangeRealmGroup::OnFailedProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameFlowStateChangeRealmGroup", "OnFailedProcess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphListPanel.HandleSearchTextBoxCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphListPanel::HandleSearchTextBoxCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphListPanel", "HandleSearchTextBoxCommitted");

	Params::TLUserWidgetPolymorphListPanel_HandleSearchTextBoxCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphListPanel.HandleSearchTextRemoveClicked
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetPolymorphListPanel::HandleSearchTextRemoveClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphListPanel", "HandleSearchTextRemoveClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphListPanel.OnShowGrowth
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Show_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphListPanel::OnShowGrowth(bool Show_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphListPanel", "OnShowGrowth");

	Params::TLUserWidgetPolymorphListPanel_OnShowGrowth Parms{};

	Parms.Show_0 = Show_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphListPanel.SelectPolymorphCategoryTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETLPolymorphEntryType                   InEntryType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphListPanel::SelectPolymorphCategoryTab(ETLPolymorphEntryType InEntryType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphListPanel", "SelectPolymorphCategoryTab");

	Params::TLUserWidgetPolymorphListPanel_SelectPolymorphCategoryTab Parms{};

	Parms.InEntryType = InEntryType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameFlowStateCharacterCustomization.OnStopSequence
// (Final, Native, Private)

void UTLGameFlowStateCharacterCustomization::OnStopSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameFlowStateCharacterCustomization", "OnStopSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLMovieSceneCapture.SetFinalize
// (Final, Native, Public, BlueprintCallable)

void UTLMovieSceneCapture::SetFinalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMovieSceneCapture", "SetFinalize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLMovieSceneCapture.StartCapture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InFilename                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLMovieSceneCapture::StartCapture(const class FString& InFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMovieSceneCapture", "StartCapture");

	Params::TLMovieSceneCapture_StartCapture Parms{};

	Parms.InFilename = std::move(InFilename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLMovieSceneCapture.StopCapture
// (Final, Native, Public, BlueprintCallable)

void UTLMovieSceneCapture::StopCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMovieSceneCapture", "StopCapture");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLMovieSceneCapture.GetFileName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTLMovieSceneCapture::GetFileName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMovieSceneCapture", "GetFileName");

	Params::TLMovieSceneCapture_GetFileName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLMovieSceneCapture.GetFilePath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTLMovieSceneCapture::GetFilePath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMovieSceneCapture", "GetFilePath");

	Params::TLMovieSceneCapture_GetFilePath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLMovieSceneCapture.IsFinalize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLMovieSceneCapture::IsFinalize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMovieSceneCapture", "IsFinalize");

	Params::TLMovieSceneCapture_IsFinalize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetComboBox.AddOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Option                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetComboBox::AddOption(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "AddOption");

	Params::TLUserWidgetComboBox_AddOption Parms{};

	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.AddUnusualOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Option                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetComboBox::AddUnusualOption(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "AddUnusualOption");

	Params::TLUserWidgetComboBox_AddUnusualOption Parms{};

	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.ClearOptions
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetComboBox::ClearOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "ClearOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.ClearSelection
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetComboBox::ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.HandleClosing
// (Final, Native, Protected)

void UTLUserWidgetComboBox::HandleClosing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "HandleClosing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.HandleGenerateWidget
// (Final, Native, Protected)
// Parameters:
// class FString                           StringItem                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UTLUserWidgetComboBox::HandleGenerateWidget(const class FString& StringItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "HandleGenerateWidget");

	Params::TLUserWidgetComboBox_HandleGenerateWidget Parms{};

	Parms.StringItem = std::move(StringItem);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetComboBox.HandleOpening
// (Final, Native, Protected)

void UTLUserWidgetComboBox::HandleOpening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "HandleOpening");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.HandleSelectionChanged
// (Final, Native, Protected)
// Parameters:
// class FString                           SelectedItem                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetComboBox::HandleSelectionChanged(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "HandleSelectionChanged");

	Params::TLUserWidgetComboBox_HandleSelectionChanged Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.RefreshOptions
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetComboBox::RefreshOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "RefreshOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.RemoveOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Option                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetComboBox::RemoveOption(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "RemoveOption");

	Params::TLUserWidgetComboBox_RemoveOption Parms{};

	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetComboBox.SetMenuPlacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMenuPlacement                          InMenuPlacement                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetComboBox::SetMenuPlacement(EMenuPlacement InMenuPlacement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "SetMenuPlacement");

	Params::TLUserWidgetComboBox_SetMenuPlacement Parms{};

	Parms.InMenuPlacement = InMenuPlacement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.SetSelectedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetComboBox::SetSelectedIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "SetSelectedIndex");

	Params::TLUserWidgetComboBox_SetSelectedIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.SetSelectedOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Option                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetComboBox::SetSelectedOption(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "SetSelectedOption");

	Params::TLUserWidgetComboBox_SetSelectedOption Parms{};

	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBox.FindOptionIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Option                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetComboBox::FindOptionIndex(const class FString& Option) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "FindOptionIndex");

	Params::TLUserWidgetComboBox_FindOptionIndex Parms{};

	Parms.Option = std::move(Option);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetComboBox.GetOptionAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTLUserWidgetComboBox::GetOptionAtIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "GetOptionAtIndex");

	Params::TLUserWidgetComboBox_GetOptionAtIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetComboBox.GetOptionCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetComboBox::GetOptionCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "GetOptionCount");

	Params::TLUserWidgetComboBox_GetOptionCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetComboBox.GetSelectedIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetComboBox::GetSelectedIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "GetSelectedIndex");

	Params::TLUserWidgetComboBox_GetSelectedIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetComboBox.GetSelectedOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTLUserWidgetComboBox::GetSelectedOption() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBox", "GetSelectedOption");

	Params::TLUserWidgetComboBox_GetSelectedOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemAcquireUXMotion.OnUpdateItemGrade
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemGrade                              InItemGrade                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemAcquireUXMotion::OnUpdateItemGrade(EItemGrade InItemGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemAcquireUXMotion", "OnUpdateItemGrade");

	Params::TLUserWidgetItemAcquireUXMotion_OnUpdateItemGrade Parms{};

	Parms.InItemGrade = InItemGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemAcquireUXMotion.OnUpdateItemGradeColor
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColor                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemAcquireUXMotion::OnUpdateItemGradeColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemAcquireUXMotion", "OnUpdateItemGradeColor");

	Params::TLUserWidgetItemAcquireUXMotion_OnUpdateItemGradeColor Parms{};

	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconThrone.Button_OnClicked
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconThrone::Button_OnClicked(const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconThrone", "Button_OnClicked");

	Params::TLUserWidgetMapIconThrone_Button_OnClicked Parms{};

	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconThrone.OnUpdateIconColor
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColor                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconThrone::OnUpdateIconColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconThrone", "OnUpdateIconColor");

	Params::TLUserWidgetMapIconThrone_OnUpdateIconColor Parms{};

	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconThrone.OnUpdateSiegeState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsSiegeWarfare                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconThrone::OnUpdateSiegeState(bool InIsSiegeWarfare)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconThrone", "OnUpdateSiegeState");

	Params::TLUserWidgetMapIconThrone_OnUpdateSiegeState Parms{};

	Parms.InIsSiegeWarfare = InIsSiegeWarfare;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleChangeEmptyQuickSlotPanel.OnChangeSlotPage
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetConsoleChangeEmptyQuickSlotPanel::OnChangeSlotPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleChangeEmptyQuickSlotPanel", "OnChangeSlotPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLGameLobby.GetCharacterDataByUID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTLCharacterData                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTLCharacterData UTLGameLobby::GetCharacterDataByUID(int64 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "GetCharacterDataByUID");

	Params::TLGameLobby_GetCharacterDataByUID Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.GetCurrentWorldServerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLGameLobby::GetCurrentWorldServerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "GetCurrentWorldServerName");

	Params::TLGameLobby_GetCurrentWorldServerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.IsServerAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InServerID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLGameLobby::IsServerAlive(int32 InServerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "IsServerAlive");

	Params::TLGameLobby_IsServerAlive Parms{};

	Parms.InServerID = InServerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.IsServerOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InServerID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLGameLobby::IsServerOpen(int32 InServerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "IsServerOpen");

	Params::TLGameLobby_IsServerOpen Parms{};

	Parms.InServerID = InServerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.IsValidServerID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InServerID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLGameLobby::IsValidServerID(int32 InServerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "IsValidServerID");

	Params::TLGameLobby_IsValidServerID Parms{};

	Parms.InServerID = InServerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.OnCustomizeBlackscreenFadeInFinishCallback
// (Final, Native, Private)

void UTLGameLobby::OnCustomizeBlackscreenFadeInFinishCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "OnCustomizeBlackscreenFadeInFinishCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobby.SetSelectedCharacterID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSelectedCharacterID                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLGameLobby::SetSelectedCharacterID(int32 InSelectedCharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "SetSelectedCharacterID");

	Params::TLGameLobby_SetSelectedCharacterID Parms{};

	Parms.InSelectedCharacterID = InSelectedCharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLGameLobby.GetCharacterDatas
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FTLCharacterData>   ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FTLCharacterData> UTLGameLobby::GetCharacterDatas() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "GetCharacterDatas");

	Params::TLGameLobby_GetCharacterDatas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.GetSelectedCharacterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTLGameLobby::GetSelectedCharacterID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "GetSelectedCharacterID");

	Params::TLGameLobby_GetSelectedCharacterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.GetSelectedRealmId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLGameLobby::GetSelectedRealmId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "GetSelectedRealmId");

	Params::TLGameLobby_GetSelectedRealmId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.GetSelectedServerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTLHomeServerData                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTLHomeServerData UTLGameLobby::GetSelectedServerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "GetSelectedServerData");

	Params::TLGameLobby_GetSelectedServerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.GetSelectedServerID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLGameLobby::GetSelectedServerID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "GetSelectedServerID");

	Params::TLGameLobby_GetSelectedServerID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.GetSelectedWorldID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLGameLobby::GetSelectedWorldID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "GetSelectedWorldID");

	Params::TLGameLobby_GetSelectedWorldID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameLobby.GetWorldServerDatas
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FTLWorldServerData> ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<struct FTLWorldServerData> UTLGameLobby::GetWorldServerDatas() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameLobby", "GetWorldServerDatas");

	Params::TLGameLobby_GetWorldServerDatas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetMapIconWaypoint.DoUseWaypoint
// (Final, Native, Public)

void UTLUserWidgetMapIconWaypoint::DoUseWaypoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconWaypoint", "DoUseWaypoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconWaypoint.OnCreatedWaypoint
// (Event, Public, BlueprintEvent)
// Parameters:
// EWaypointType                           InWaypointType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconWaypoint::OnCreatedWaypoint(EWaypointType InWaypointType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconWaypoint", "OnCreatedWaypoint");

	Params::TLUserWidgetMapIconWaypoint_OnCreatedWaypoint Parms{};

	Parms.InWaypointType = InWaypointType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconWaypoint.OnTerritoryFogWayPoint
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InOpend                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconWaypoint::OnTerritoryFogWayPoint(bool InOpend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconWaypoint", "OnTerritoryFogWayPoint");

	Params::TLUserWidgetMapIconWaypoint_OnTerritoryFogWayPoint Parms{};

	Parms.InOpend = InOpend;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconWaypoint.OnWayPointOpen
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMapIconWaypoint::OnWayPointOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconWaypoint", "OnWayPointOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMapIconWaypoint.SetDiscoverWaypoint
// (Final, Native, Public)
// Parameters:
// bool                                    InOpened                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconWaypoint::SetDiscoverWaypoint(bool InOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconWaypoint", "SetDiscoverWaypoint");

	Params::TLUserWidgetMapIconWaypoint_SetDiscoverWaypoint Parms{};

	Parms.InOpened = InOpened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconWaypoint.UpdateStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InDiscovery                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InResurrectionPoint                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconWaypoint::UpdateStatus(bool InDiscovery, bool InLock, bool InResurrectionPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconWaypoint", "UpdateStatus");

	Params::TLUserWidgetMapIconWaypoint_UpdateStatus Parms{};

	Parms.InDiscovery = InDiscovery;
	Parms.InLock = InLock;
	Parms.InResurrectionPoint = InResurrectionPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLGameUserSettings.IsShowHPBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLGameUserSettings::IsShowHPBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameUserSettings", "IsShowHPBar");

	Params::TLGameUserSettings_IsShowHPBar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLGameUserSettings.SetUseVSync
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUse                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLGameUserSettings::SetUseVSync(bool bUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLGameUserSettings", "SetUseVSync");

	Params::TLGameUserSettings_SetUseVSync Parms{};

	Parms.bUse = bUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRanking.HandleActiveWidgetChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRanking::HandleActiveWidgetChanged(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRanking", "HandleActiveWidgetChanged");

	Params::TLUserWidgetRanking_HandleActiveWidgetChanged Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRanking.HandleTabButtonGroupSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLRankingMainTabType                   InTabType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSelectedIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRanking::HandleTabButtonGroupSelected(ETLRankingMainTabType InTabType, int32 InSelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRanking", "HandleTabButtonGroupSelected");

	Params::TLUserWidgetRanking_HandleTabButtonGroupSelected Parms{};

	Parms.InTabType = InTabType;
	Parms.InSelectedIndex = InSelectedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAttendancePCSlot.OnPlayReceiveRewardAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetAttendancePCSlot::OnPlayReceiveRewardAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAttendancePCSlot", "OnPlayReceiveRewardAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetAttendancePCSlot.OnUpdateRewardType
// (Event, Public, BlueprintEvent)
// Parameters:
// EAttendancePcRewardType                 RewardType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAttendancePCSlot::OnUpdateRewardType(EAttendancePcRewardType RewardType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAttendancePCSlot", "OnUpdateRewardType");

	Params::TLUserWidgetAttendancePCSlot_OnUpdateRewardType Parms{};

	Parms.RewardType = RewardType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetBGEffect.PlayHpExhaust
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InHpDangerLevel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBGEffect::PlayHpExhaust(int32 InHpDangerLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBGEffect", "PlayHpExhaust");

	Params::TLUserWidgetBGEffect_PlayHpExhaust Parms{};

	Parms.InHpDangerLevel = InHpDangerLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetBGEffect.PlayMyPcDamageFromNpcWithValue
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InPlay                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBGEffect::PlayMyPcDamageFromNpcWithValue(bool InPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBGEffect", "PlayMyPcDamageFromNpcWithValue");

	Params::TLUserWidgetBGEffect_PlayMyPcDamageFromNpcWithValue Parms{};

	Parms.InPlay = InPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetBGEffect.PlayMyPcDamageWithValue
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InPlay                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBGEffect::PlayMyPcDamageWithValue(bool InPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBGEffect", "PlayMyPcDamageWithValue");

	Params::TLUserWidgetBGEffect_PlayMyPcDamageWithValue Parms{};

	Parms.InPlay = InPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetBGEffect.StopHpExhaust
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetBGEffect::StopHpExhaust()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBGEffect", "StopHpExhaust");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCustomizeMain.HandleHideUIImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInHideUI                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeMain::HandleHideUIImpl(bool bInHideUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeMain", "HandleHideUIImpl");

	Params::TLUserWidgetCustomizeMain_HandleHideUIImpl Parms{};

	Parms.bInHideUI = bInHideUI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCustomizeMain.OnChangeUIPlatformBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLUIPlatform                           InPlatform                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeMain::OnChangeUIPlatformBP(ETLUIPlatform InPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeMain", "OnChangeUIPlatformBP");

	Params::TLUserWidgetCustomizeMain_OnChangeUIPlatformBP Parms{};

	Parms.InPlatform = InPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCustomizeMain.OnEnterCustomize
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCustomizeMain::OnEnterCustomize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeMain", "OnEnterCustomize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCustomizeMain.OnToggleDetailFrame
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bImmediately                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeMain::OnToggleDetailFrame(bool bInOpen, bool bImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeMain", "OnToggleDetailFrame");

	Params::TLUserWidgetCustomizeMain_OnToggleDetailFrame Parms{};

	Parms.bInOpen = bInOpen;
	Parms.bImmediately = bImmediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCustomizeMain.OnUpdateContentEnable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInContentEnable                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeMain::OnUpdateContentEnable(bool bInContentEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeMain", "OnUpdateContentEnable");

	Params::TLUserWidgetCustomizeMain_OnUpdateContentEnable Parms{};

	Parms.bInContentEnable = bInContentEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCustomizeMain.IsHideUIState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetCustomizeMain::IsHideUIState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeMain", "IsHideUIState");

	Params::TLUserWidgetCustomizeMain_IsHideUIState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetOptionGameValueScreenResolution.HandleComboOpening
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueScreenResolution::HandleComboOpening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueScreenResolution", "HandleComboOpening");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueScreenResolution.HandleSelectionChanged
// (Final, Native, Protected)
// Parameters:
// class FString                           SelectedItem                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGameValueScreenResolution::HandleSelectionChanged(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueScreenResolution", "HandleSelectionChanged");

	Params::TLUserWidgetOptionGameValueScreenResolution_HandleSelectionChanged Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxNumericInput.OnSliderValueChanged
// (Final, Native, Protected)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxNumericInput::OnSliderValueChanged(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxNumericInput", "OnSliderValueChanged");

	Params::TLUserWidgetMsgBoxNumericInput_OnSliderValueChanged Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatSocial.OnShowEmojiTabButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInEmojiMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatSocial::OnShowEmojiTabButton(bool bInEmojiMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatSocial", "OnShowEmojiTabButton");

	Params::TLUserWidgetChatSocial_OnShowEmojiTabButton Parms{};

	Parms.bInEmojiMode = bInEmojiMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatToastMessage.OnCheckShowEllipsis
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsSystemMessage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatToastMessage::OnCheckShowEllipsis(bool IsSystemMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatToastMessage", "OnCheckShowEllipsis");

	Params::TLUserWidgetChatToastMessage_OnCheckShowEllipsis Parms{};

	Parms.IsSystemMessage = IsSystemMessage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxQuitGame.OnSetPreQuitGameType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLQuitGameMsgBoxType                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxQuitGame::OnSetPreQuitGameType(ETLQuitGameMsgBoxType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxQuitGame", "OnSetPreQuitGameType");

	Params::TLUserWidgetMsgBoxQuitGame_OnSetPreQuitGameType Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSeasonPassRewardPreview.OnChangePreviewEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSeasonPassRewardPreview::OnChangePreviewEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassRewardPreview", "OnChangePreviewEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChatVivoxVoiceChatButton.OnSetStateImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLVivoxVoiceChatState                  InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLVivoxVoiceChatChannelType            InChannelType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatVivoxVoiceChatButton::OnSetStateImpl(ETLVivoxVoiceChatState InMode, ETLVivoxVoiceChatChannelType InChannelType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatVivoxVoiceChatButton", "OnSetStateImpl");

	Params::TLUserWidgetChatVivoxVoiceChatButton_OnSetStateImpl Parms{};

	Parms.InMode = InMode;
	Parms.InChannelType = InChannelType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventCalenderDetails.OnUpdateCalenderType
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEventCalenderType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventCalenderDetails::OnUpdateCalenderType(EEventCalenderType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventCalenderDetails", "OnUpdateCalenderType");

	Params::TLUserWidgetEventCalenderDetails_OnUpdateCalenderType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatVoiceChatGroup.OnVoiceChatExpand
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InActiveNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatVoiceChatGroup::OnVoiceChatExpand(int32 InActiveNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatVoiceChatGroup", "OnVoiceChatExpand");

	Params::TLUserWidgetChatVoiceChatGroup_OnVoiceChatExpand Parms{};

	Parms.InActiveNum = InActiveNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterBriefInfo.OnShowMembership
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterBriefInfo::OnShowMembership(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterBriefInfo", "OnShowMembership");

	Params::TLUserWidgetCharacterBriefInfo_OnShowMembership Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterBriefInfo.OnUpdateStatusData
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InBrush                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterBriefInfo::OnUpdateStatusData(class FName InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterBriefInfo", "OnUpdateStatusData");

	Params::TLUserWidgetCharacterBriefInfo_OnUpdateStatusData Parms{};

	Parms.InBrush = InBrush;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterBriefInfo.SetCharacterData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTLCharacterData                 InData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterBriefInfo::SetCharacterData(const struct FTLCharacterData& InData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterBriefInfo", "SetCharacterData");

	Params::TLUserWidgetCharacterBriefInfo_SetCharacterData Parms{};

	Parms.InData = std::move(InData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterBriefInfo.SetLastPlayTimeText
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetCharacterBriefInfo::SetLastPlayTimeText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterBriefInfo", "SetLastPlayTimeText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLItemViewInterface.GetCount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 ITLItemViewInterface::GetCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "GetCount");

	Params::TLItemViewInterface_GetCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.GetLeftItemCollectionCount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ITLItemViewInterface::GetLeftItemCollectionCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "GetLeftItemCollectionCount");

	Params::TLItemViewInterface_GetLeftItemCollectionCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsAcquisitionExist
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsAcquisitionExist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsAcquisitionExist");

	Params::TLItemViewInterface_IsAcquisitionExist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsAmmoItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsAmmoItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsAmmoItem");

	Params::TLItemViewInterface_IsAmmoItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsAvailableItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsAvailableItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsAvailableItem");

	Params::TLItemViewInterface_IsAvailableItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsCanStore
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsCanStore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsCanStore");

	Params::TLItemViewInterface_IsCanStore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsChattingShare
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsChattingShare() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsChattingShare");

	Params::TLItemViewInterface_IsChattingShare Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsCompositionMaterial
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsCompositionMaterial() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsCompositionMaterial");

	Params::TLItemViewInterface_IsCompositionMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsDecomposable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsDecomposable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsDecomposable");

	Params::TLItemViewInterface_IsDecomposable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsDestructible
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsDestructible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsDestructible");

	Params::TLItemViewInterface_IsDestructible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsEnchantable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsEnchantable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsEnchantable");

	Params::TLItemViewInterface_IsEnchantable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsEnchantMaxLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsEnchantMaxLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsEnchantMaxLevel");

	Params::TLItemViewInterface_IsEnchantMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsEnchantPolymorphElixine
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsEnchantPolymorphElixine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsEnchantPolymorphElixine");

	Params::TLItemViewInterface_IsEnchantPolymorphElixine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsEnchantScroll
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsEnchantScroll() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsEnchantScroll");

	Params::TLItemViewInterface_IsEnchantScroll Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsEquipItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsEquipItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsEquipItem");

	Params::TLItemViewInterface_IsEquipItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsEquipItemOrRubbingScrollForEquipItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsEquipItemOrRubbingScrollForEquipItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsEquipItemOrRubbingScrollForEquipItem");

	Params::TLItemViewInterface_IsEquipItemOrRubbingScrollForEquipItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsEquipped
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsEquipped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsEquipped");

	Params::TLItemViewInterface_IsEquipped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsEquippedAt
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEquipCategory                          InEquipCategory                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsEquippedAt(EEquipCategory InEquipCategory) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsEquippedAt");

	Params::TLItemViewInterface_IsEquippedAt Parms{};

	Parms.InEquipCategory = InEquipCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsEquippedRune
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsEquippedRune() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsEquippedRune");

	Params::TLItemViewInterface_IsEquippedRune Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsFishingBaitItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsFishingBaitItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsFishingBaitItem");

	Params::TLItemViewInterface_IsFishingBaitItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsItemCollectable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsItemCollectable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsItemCollectable");

	Params::TLItemViewInterface_IsItemCollectable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsItemRubbingTargetItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    InIsShowSystemMessage                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsItemRubbingTargetItem(const bool InIsShowSystemMessage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsItemRubbingTargetItem");

	Params::TLItemViewInterface_IsItemRubbingTargetItem Parms{};

	Parms.InIsShowSystemMessage = InIsShowSystemMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsItemTraitExist
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsItemTraitExist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsItemTraitExist");

	Params::TLItemViewInterface_IsItemTraitExist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsLockable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsLockable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsLockable");

	Params::TLItemViewInterface_IsLockable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsLocked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsLocked");

	Params::TLItemViewInterface_IsLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsLotteryItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsLotteryItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsLotteryItem");

	Params::TLItemViewInterface_IsLotteryItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsOhterCombatPresetItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsOhterCombatPresetItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsOhterCombatPresetItem");

	Params::TLItemViewInterface_IsOhterCombatPresetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsOtherPresetItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsOtherPresetItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsOtherPresetItem");

	Params::TLItemViewInterface_IsOtherPresetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsReinforcer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsReinforcer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsReinforcer");

	Params::TLItemViewInterface_IsReinforcer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsRuneItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsRuneItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsRuneItem");

	Params::TLItemViewInterface_IsRuneItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsRuneSocketOpen
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsRuneSocketOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsRuneSocketOpen");

	Params::TLItemViewInterface_IsRuneSocketOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsRuneTargetItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsRuneTargetItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsRuneTargetItem");

	Params::TLItemViewInterface_IsRuneTargetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsSellable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsSellable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsSellable");

	Params::TLItemViewInterface_IsSellable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsTradable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsTradable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsTradable");

	Params::TLItemViewInterface_IsTradable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsTraitExtractItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsTraitExtractItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsTraitExtractItem");

	Params::TLItemViewInterface_IsTraitExtractItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsTreasureBoxKeyItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsTreasureBoxKeyItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsTreasureBoxKeyItem");

	Params::TLItemViewInterface_IsTreasureBoxKeyItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsTwoSlotsAccessary
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsTwoSlotsAccessary() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsTwoSlotsAccessary");

	Params::TLItemViewInterface_IsTwoSlotsAccessary Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsTwoSlotsWeapon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsTwoSlotsWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsTwoSlotsWeapon");

	Params::TLItemViewInterface_IsTwoSlotsWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsUsable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsUsable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsUsable");

	Params::TLItemViewInterface_IsUsable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLItemViewInterface.IsUsageExist
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ITLItemViewInterface::IsUsageExist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLItemViewInterface", "IsUsageExist");

	Params::TLItemViewInterface_IsUsageExist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetCharacterInfoStatSettingDefault.OnUpdateChangedStatListVisible
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterInfoStatSettingDefault::OnUpdateChangedStatListVisible(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterInfoStatSettingDefault", "OnUpdateChangedStatListVisible");

	Params::TLUserWidgetCharacterInfoStatSettingDefault_OnUpdateChangedStatListVisible Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterInfoStatSettingDefault.OnUpdateExpandStatSetting
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInExpand                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterInfoStatSettingDefault::OnUpdateExpandStatSetting(bool bInExpand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterInfoStatSettingDefault", "OnUpdateExpandStatSetting");

	Params::TLUserWidgetCharacterInfoStatSettingDefault_OnUpdateExpandStatSetting Parms{};

	Parms.bInExpand = bInExpand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLLevelStreamingHelper.OnLoadStreamLevelFinished
// (Final, Native, Private)
// Parameters:
// int32                                   Linkage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLLevelStreamingHelper::OnLoadStreamLevelFinished(int32 Linkage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLLevelStreamingHelper", "OnLoadStreamLevelFinished");

	Params::TLLevelStreamingHelper_OnLoadStreamLevelFinished Parms{};

	Parms.Linkage = Linkage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLLevelStreamingHelper.OnUnloadStreamLevelFinished
// (Final, Native, Private)
// Parameters:
// int32                                   Linkage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLLevelStreamingHelper::OnUnloadStreamLevelFinished(int32 Linkage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLLevelStreamingHelper", "OnUnloadStreamLevelFinished");

	Params::TLLevelStreamingHelper_OnUnloadStreamLevelFinished Parms{};

	Parms.Linkage = Linkage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionHistoryItem.OnAcquirePrivate
// (Event, Public, BlueprintEvent)

void UTLUserWidgetGuildDistributionHistoryItem::OnAcquirePrivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionHistoryItem", "OnAcquirePrivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGuildDistributionHistoryItem.OnDistributionState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShowDistribution                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionHistoryItem::OnDistributionState(bool InIsShowDistribution)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionHistoryItem", "OnDistributionState");

	Params::TLUserWidgetGuildDistributionHistoryItem_OnDistributionState Parms{};

	Parms.InIsShowDistribution = InIsShowDistribution;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionHistoryItem.OnExpriation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetGuildDistributionHistoryItem::OnExpriation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionHistoryItem", "OnExpriation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGuildDistributionHistoryItem.OnItemSlotUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionHistoryItem::OnItemSlotUpdate(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionHistoryItem", "OnItemSlotUpdate");

	Params::TLUserWidgetGuildDistributionHistoryItem_OnItemSlotUpdate Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterSubtitleListItem.OnUpdateCurrentSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InSelected                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterSubtitleListItem::OnUpdateCurrentSelected(const bool InSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterSubtitleListItem", "OnUpdateCurrentSelected");

	Params::TLUserWidgetCharacterSubtitleListItem_OnUpdateCurrentSelected Parms{};

	Parms.InSelected = InSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterSubtitleListItem.OnUpdateNewAcquire
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InNew                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterSubtitleListItem::OnUpdateNewAcquire(const bool InNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterSubtitleListItem", "OnUpdateNewAcquire");

	Params::TLUserWidgetCharacterSubtitleListItem_OnUpdateNewAcquire Parms{};

	Parms.InNew = InNew;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationGuideBossStoneCondition.OnChangedColor
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationGuideBossStoneCondition::OnChangedColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBossStoneCondition", "OnChangedColor");

	Params::TLUserWidgetOccupationGuideBossStoneCondition_OnChangedColor Parms{};

	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationGuideBossStoneCondition.OnChangedProperties
// (Event, Public, BlueprintEvent)

void UTLUserWidgetOccupationGuideBossStoneCondition::OnChangedProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBossStoneCondition", "OnChangedProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetOccupationGuideBossStoneCondition.OnGuildRelationByMe
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildRelationship                      InRelation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationGuideBossStoneCondition::OnGuildRelationByMe(EGuildRelationship InRelation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBossStoneCondition", "OnGuildRelationByMe");

	Params::TLUserWidgetOccupationGuideBossStoneCondition_OnGuildRelationByMe Parms{};

	Parms.InRelation = InRelation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationGuideBossStoneCondition.OnTopRank
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsTop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationGuideBossStoneCondition::OnTopRank(bool InIsTop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBossStoneCondition", "OnTopRank");

	Params::TLUserWidgetOccupationGuideBossStoneCondition_OnTopRank Parms{};

	Parms.InIsTop = InIsTop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconIndicator.OnCreated
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InCreateInMinimap                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconIndicator::OnCreated(bool InCreateInMinimap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconIndicator", "OnCreated");

	Params::TLUserWidgetMapIconIndicator_OnCreated Parms{};

	Parms.InCreateInMinimap = InCreateInMinimap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconIndicator.OnEmphasis
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMapIconIndicator::OnEmphasis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconIndicator", "OnEmphasis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMapIconIndicator.OnStopEmphasis
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInPlayStopAnimation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconIndicator::OnStopEmphasis(bool bInPlayStopAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconIndicator", "OnStopEmphasis");

	Params::TLUserWidgetMapIconIndicator_OnStopEmphasis Parms{};

	Parms.bInPlayStopAnimation = bInPlayStopAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLMagicDollSceneControlActor.OnGrowUpComplete
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FSoftObjectPath                  Sct                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   MaxLevelGrowUpLevelSequence                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLMagicDollSceneControlActor::OnGrowUpComplete(const struct FSoftObjectPath& Sct, class ULevelSequence* MaxLevelGrowUpLevelSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMagicDollSceneControlActor", "OnGrowUpComplete");

	Params::TLMagicDollSceneControlActor_OnGrowUpComplete Parms{};

	Parms.Sct = std::move(Sct);
	Parms.MaxLevelGrowUpLevelSequence = MaxLevelGrowUpLevelSequence;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLMagicDollSceneControlActor.OnSelect
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             CustomSceneId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHiveEntityData*                  HiveEntity                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  ChangeSct                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAcquire                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUnveiled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLMagicDollSceneControlActor::OnSelect(class FName CustomSceneId, const class UHiveEntityData* HiveEntity, const struct FSoftObjectPath& ChangeSct, bool bAcquire, bool bUnveiled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMagicDollSceneControlActor", "OnSelect");

	Params::TLMagicDollSceneControlActor_OnSelect Parms{};

	Parms.CustomSceneId = CustomSceneId;
	Parms.HiveEntity = HiveEntity;
	Parms.ChangeSct = std::move(ChangeSct);
	Parms.bAcquire = bAcquire;
	Parms.bUnveiled = bUnveiled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTabControl.HandleActiveWidgetChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   PrevIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTabControl::HandleActiveWidgetChanged(int32 PrevIndex, int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabControl", "HandleActiveWidgetChanged");

	Params::TLUserWidgetTabControl_HandleActiveWidgetChanged Parms{};

	Parms.PrevIndex = PrevIndex;
	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTabControl.SelectTabIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTabControl::SelectTabIndex(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabControl", "SelectTabIndex");

	Params::TLUserWidgetTabControl_SelectTabIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTabControl.SelectTabWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTabControl::SelectTabWidget(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabControl", "SelectTabWidget");

	Params::TLUserWidgetTabControl_SelectTabWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTabControl.GetActiveWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UTLUserWidgetTabControl::GetActiveWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabControl", "GetActiveWidget");

	Params::TLUserWidgetTabControl_GetActiveWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetTabControl.GetSelectTabIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetTabControl::GetSelectTabIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabControl", "GetSelectTabIndex");

	Params::TLUserWidgetTabControl_GetSelectTabIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetTabControl.GetWidgetSwitcher
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTLWidgetSwitcher*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLWidgetSwitcher* UTLUserWidgetTabControl::GetWidgetSwitcher() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabControl", "GetWidgetSwitcher");

	Params::TLUserWidgetTabControl_GetWidgetSwitcher Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetBeautyshopCustomizeBase.InitializeWidgetComponents
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetBeautyshopCustomizeBase::InitializeWidgetComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBeautyshopCustomizeBase", "InitializeWidgetComponents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBeautyshopCustomizeBase.OnPresetIconSelected
// (Final, Native, Public)
// Parameters:
// class UTLUserWidgetBeautyshopCustomizePresetIcon*SelectedWidget                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBeautyshopCustomizeBase::OnPresetIconSelected(class UTLUserWidgetBeautyshopCustomizePresetIcon* SelectedWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBeautyshopCustomizeBase", "OnPresetIconSelected");

	Params::TLUserWidgetBeautyshopCustomizeBase_OnPresetIconSelected Parms{};

	Parms.SelectedWidget = SelectedWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBeautyshopCustomizeBase.OnSwitchActivated
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSwitchActivated                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBeautyshopCustomizeBase::OnSwitchActivated(bool bSwitchActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBeautyshopCustomizeBase", "OnSwitchActivated");

	Params::TLUserWidgetBeautyshopCustomizeBase_OnSwitchActivated Parms{};

	Parms.bSwitchActivated = bSwitchActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCustomizeHistory.SelectIndex
// (Final, Native, Public)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeHistory::SelectIndex(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeHistory", "SelectIndex");

	Params::TLUserWidgetCustomizeHistory_SelectIndex Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildEmblemSlot.OnSetupLock
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildEmblemSlot::OnSetupLock(bool InIsLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildEmblemSlot", "OnSetupLock");

	Params::TLUserWidgetGuildEmblemSlot_OnSetupLock Parms{};

	Parms.InIsLock = InIsLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLMultiModelSceneControlActor.IsPlayingModelSceneConti
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTagName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ATLMultiModelSceneControlActor::IsPlayingModelSceneConti(class FName InTagName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMultiModelSceneControlActor", "IsPlayingModelSceneConti");

	Params::TLMultiModelSceneControlActor_IsPlayingModelSceneConti Parms{};

	Parms.InTagName = InTagName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLMultiModelSceneControlActor.PlayModelSceneConti
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTagName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  InSceneContiPath                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopCurrentSCT                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForcePlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLMultiModelSceneControlActor::PlayModelSceneConti(class FName InTagName, const struct FSoftObjectPath& InSceneContiPath, bool bStopCurrentSCT, bool bForcePlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMultiModelSceneControlActor", "PlayModelSceneConti");

	Params::TLMultiModelSceneControlActor_PlayModelSceneConti Parms{};

	Parms.InTagName = InTagName;
	Parms.InSceneContiPath = std::move(InSceneContiPath);
	Parms.bStopCurrentSCT = bStopCurrentSCT;
	Parms.bForcePlay = bForcePlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLMultiModelSceneControlActor.SetModelMeshRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             InTagName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotator                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ATLMultiModelSceneControlActor::SetModelMeshRotation(class FName InTagName, const struct FRotator& InRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMultiModelSceneControlActor", "SetModelMeshRotation");

	Params::TLMultiModelSceneControlActor_SetModelMeshRotation Parms{};

	Parms.InTagName = InTagName;
	Parms.InRotator = std::move(InRotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLMultiModelSceneControlActor.SetVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTagName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLMultiModelSceneControlActor::SetVisible(class FName InTagName, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMultiModelSceneControlActor", "SetVisible");

	Params::TLMultiModelSceneControlActor_SetVisible Parms{};

	Parms.InTagName = InTagName;
	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLMultiModelSceneControlActor.StopModelSceneConti
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTagName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLMultiModelSceneControlActor::StopModelSceneConti(class FName InTagName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLMultiModelSceneControlActor", "StopModelSceneConti");

	Params::TLMultiModelSceneControlActor_StopModelSceneConti Parms{};

	Parms.InTagName = InTagName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatMini.OnSetUseFloating
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInUseFloating                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatMini::OnSetUseFloating(bool bInUseFloating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatMini", "OnSetUseFloating");

	Params::TLUserWidgetChatMini_OnSetUseFloating Parms{};

	Parms.bInUseFloating = bInUseFloating;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScanSettingSlider.HandleMinusButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetTargetScanSettingSlider::HandleMinusButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanSettingSlider", "HandleMinusButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTargetScanSettingSlider.HandlePlusButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetTargetScanSettingSlider::HandlePlusButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanSettingSlider", "HandlePlusButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTargetScanSettingSlider.HandleSliderValueChanged
// (Final, Native, Protected)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScanSettingSlider::HandleSliderValueChanged(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanSettingSlider", "HandleSliderValueChanged");

	Params::TLUserWidgetTargetScanSettingSlider_HandleSliderValueChanged Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TLClient.TLUserWidgetTargetScanSettingSlider.SimpleDynamicMulticastDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTLUserWidgetTargetScanSettingSlider::SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanSettingSlider", "SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMsgBoxRecoveryDeathPenalty.OnShowMemberShipIcon
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMsgBoxRecoveryDeathPenalty::OnShowMemberShipIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxRecoveryDeathPenalty", "OnShowMemberShipIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetAccountStatusAlarmQuickButton.OnUpdateAlarmAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InPlay                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAccountStatusAlarmQuickButton::OnUpdateAlarmAnimation(bool InPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAccountStatusAlarmQuickButton", "OnUpdateAlarmAnimation");

	Params::TLUserWidgetAccountStatusAlarmQuickButton_OnUpdateAlarmAnimation Parms{};

	Parms.InPlay = InPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetActionGuideButton.OnKeyPressed
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetActionGuideButton::OnKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionGuideButton", "OnKeyPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetActionGuideButton.OnKeyReleased
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetActionGuideButton::OnKeyReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionGuideButton", "OnKeyReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetActionGuideButton.GetActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UTLUserWidgetActionGuideButton::GetActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionGuideButton", "GetActionName");

	Params::TLUserWidgetActionGuideButton_GetActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetArmorCostume.BP_HandleChangeUIPlatformImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLUIPlatform                           InPlatform                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostume::BP_HandleChangeUIPlatformImpl(ETLUIPlatform InPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostume", "BP_HandleChangeUIPlatformImpl");

	Params::TLUserWidgetArmorCostume_BP_HandleChangeUIPlatformImpl Parms{};

	Parms.InPlatform = InPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostume.OnUIToggleEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostume::OnUIToggleEvent(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostume", "OnUIToggleEvent");

	Params::TLUserWidgetArmorCostume_OnUIToggleEvent Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitOpenSlot.OnExistItemTrait
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InExistTrait                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitOpenSlot::OnExistItemTrait(bool InExistTrait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitOpenSlot", "OnExistItemTrait");

	Params::TLUserWidgetItemTraitOpenSlot_OnExistItemTrait Parms{};

	Parms.InExistTrait = InExistTrait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitOpenSlot.OnVisibleEnchantLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitOpenSlot::OnVisibleEnchantLevel(bool InIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitOpenSlot", "OnVisibleEnchantLevel");

	Params::TLUserWidgetItemTraitOpenSlot_OnVisibleEnchantLevel Parms{};

	Parms.InIsVisible = InIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDeveloperLetter.OnUpdateLetterTypeEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLDeveloperLetterType                  LetterType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeveloperLetter::OnUpdateLetterTypeEvent(ETLDeveloperLetterType LetterType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeveloperLetter", "OnUpdateLetterTypeEvent");

	Params::TLUserWidgetDeveloperLetter_OnUpdateLetterTypeEvent Parms{};

	Parms.LetterType = LetterType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLPolymorphSceneControlActor.OnGrowUpComplete
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FSoftObjectPath                  Sct                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelSequence*                   MaxLevelGrowUpLevelSequence                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLPolymorphSceneControlActor::OnGrowUpComplete(const struct FSoftObjectPath& Sct, class ULevelSequence* MaxLevelGrowUpLevelSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLPolymorphSceneControlActor", "OnGrowUpComplete");

	Params::TLPolymorphSceneControlActor_OnGrowUpComplete Parms{};

	Parms.Sct = std::move(Sct);
	Parms.MaxLevelGrowUpLevelSequence = MaxLevelGrowUpLevelSequence;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLPolymorphSceneControlActor.OnSelect
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class FName                             CustomSceneId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHiveEntityData*                  HiveEntity                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  ChangeSct                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAcquire                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUnveiled                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLPolymorphSceneControlActor::OnSelect(class FName CustomSceneId, const class UHiveEntityData* HiveEntity, const struct FSoftObjectPath& ChangeSct, bool bAcquire, bool bUnveiled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLPolymorphSceneControlActor", "OnSelect");

	Params::TLPolymorphSceneControlActor_OnSelect Parms{};

	Parms.CustomSceneId = CustomSceneId;
	Parms.HiveEntity = HiveEntity;
	Parms.ChangeSct = std::move(ChangeSct);
	Parms.bAcquire = bAcquire;
	Parms.bUnveiled = bUnveiled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOptionMacroPanel.FilterInput_OnTextChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionMacroPanel::FilterInput_OnTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionMacroPanel", "FilterInput_OnTextChanged");

	Params::TLUserWidgetOptionMacroPanel_FilterInput_OnTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizePatternSlotPanel.IsSelectedPatternSlot
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetArmorCostumeCustomizePatternSlotPanel::IsSelectedPatternSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizePatternSlotPanel", "IsSelectedPatternSlot");

	Params::TLUserWidgetArmorCostumeCustomizePatternSlotPanel_IsSelectedPatternSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizePatternSlotPanel.OnClickHideAndExpandButtonImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bExpand                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizePatternSlotPanel::OnClickHideAndExpandButtonImpl(bool bExpand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizePatternSlotPanel", "OnClickHideAndExpandButtonImpl");

	Params::TLUserWidgetArmorCostumeCustomizePatternSlotPanel_OnClickHideAndExpandButtonImpl Parms{};

	Parms.bExpand = bExpand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizePatternSlotPanel.OnShowPatternPalette
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizePatternSlotPanel::OnShowPatternPalette(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizePatternSlotPanel", "OnShowPatternPalette");

	Params::TLUserWidgetArmorCostumeCustomizePatternSlotPanel_OnShowPatternPalette Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatGroupOptionInvitation.HandleClickedInvite
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOptionInvitation::HandleClickedInvite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOptionInvitation", "HandleClickedInvite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOptionInvitation.OnInputTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetChatGroupOptionInvitation::OnInputTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOptionInvitation", "OnInputTextChanged");

	Params::TLUserWidgetChatGroupOptionInvitation_OnInputTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOptionInvitation.OnInputTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatGroupOptionInvitation::OnInputTextCommitted(const class FText& InInputText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOptionInvitation", "OnInputTextCommitted");

	Params::TLUserWidgetChatGroupOptionInvitation_OnInputTextCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTLUserWidgetMapIconIndoor.EventDungeonEnterBtnShow
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTLUserWidgetMapIconIndoor::EventDungeonEnterBtnShow(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTLUserWidgetMapIconIndoor", "EventDungeonEnterBtnShow");

	Params::TLTLUserWidgetMapIconIndoor_EventDungeonEnterBtnShow Parms{};

	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLTLUserWidgetMapIconIndoor.HandleDungeonEnterBtnClick
// (Final, Native, Public, BlueprintCallable)

void UTLTLUserWidgetMapIconIndoor::HandleDungeonEnterBtnClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTLUserWidgetMapIconIndoor", "HandleDungeonEnterBtnClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMinimapZoom.OnZoomScaleChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimapZoom::OnZoomScaleChanged(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapZoom", "OnZoomScaleChanged");

	Params::TLUserWidgetMinimapZoom_OnZoomScaleChanged Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconFieldBoss.OnFocusAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconFieldBoss::OnFocusAnimation(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconFieldBoss", "OnFocusAnimation");

	Params::TLUserWidgetMapIconFieldBoss_OnFocusAnimation Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconFieldBoss.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconFieldBoss::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconFieldBoss", "OnUpdateScheduleType");

	Params::TLUserWidgetMapIconFieldBoss_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAbnormalStateSlotTooltip.OnUpdateGroupText
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInIsGroup                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAbnormalStateSlotTooltip::OnUpdateGroupText(bool bInIsGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAbnormalStateSlotTooltip", "OnUpdateGroupText");

	Params::TLUserWidgetAbnormalStateSlotTooltip_OnUpdateGroupText Parms{};

	Parms.bInIsGroup = bInIsGroup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLSkillLevelUpSceneControlActor.OnFinishLevelupProgress
// (Event, Public, BlueprintEvent)

void ATLSkillLevelUpSceneControlActor::OnFinishLevelupProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSkillLevelUpSceneControlActor", "OnFinishLevelupProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLSkillLevelUpSceneControlActor.OnResult
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InSuccessIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLSkillLevelUpSceneControlActor::OnResult(int32 InSuccessIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSkillLevelUpSceneControlActor", "OnResult");

	Params::TLSkillLevelUpSceneControlActor_OnResult Parms{};

	Parms.InSuccessIndex = InSuccessIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLSkillLevelUpSceneControlActor.OnShowLevelUpUI
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLSkillLevelUpSceneControlActor::OnShowLevelUpUI(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSkillLevelUpSceneControlActor", "OnShowLevelUpUI");

	Params::TLSkillLevelUpSceneControlActor_OnShowLevelUpUI Parms{};

	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLSkillLevelUpSceneControlActor.OnShowLongPress
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bPress                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLSkillLevelUpSceneControlActor::OnShowLongPress(bool bPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSkillLevelUpSceneControlActor", "OnShowLongPress");

	Params::TLSkillLevelUpSceneControlActor_OnShowLongPress Parms{};

	Parms.bPress = bPress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArenaRecordEntry.SetRPDiff
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bUp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArenaRecordEntry::SetRPDiff(bool bUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaRecordEntry", "SetRPDiff");

	Params::TLUserWidgetArenaRecordEntry_SetRPDiff Parms{};

	Parms.bUp = bUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLSoundStatics.PostUIEvent
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLSoundEvent*                    In_pEvent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLSoundStatics::PostUIEvent(class UObject* WorldContextObject, class UTLSoundEvent* In_pEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLSoundStatics", "PostUIEvent");

	Params::TLSoundStatics_PostUIEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.In_pEvent = In_pEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLSoundStatics.StopAllUISounds
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLSoundStatics::StopAllUISounds(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLSoundStatics", "StopAllUISounds");

	Params::TLSoundStatics_StopAllUISounds Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLSpecialShopSceneControlActor.OnChangeSceneType
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ATLSpecialShopSceneControlActor::OnChangeSceneType(class FName InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLSpecialShopSceneControlActor", "OnChangeSceneType");

	Params::TLSpecialShopSceneControlActor_OnChangeSceneType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetActionCameraButton.OnUpdateActionCameraState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbActionCameraMode                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetActionCameraButton::OnUpdateActionCameraState(bool InbActionCameraMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionCameraButton", "OnUpdateActionCameraState");

	Params::TLUserWidgetActionCameraButton_OnUpdateActionCameraState Parms{};

	Parms.InbActionCameraMode = InbActionCameraMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCustomizeMidCategoryFrames.OnActiveWidgetChange
// (Final, Native, Public)
// Parameters:
// int32                                   InPrevIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCurIdx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeMidCategoryFrames::OnActiveWidgetChange(int32 InPrevIdx, int32 InCurIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeMidCategoryFrames", "OnActiveWidgetChange");

	Params::TLUserWidgetCustomizeMidCategoryFrames_OnActiveWidgetChange Parms{};

	Parms.InPrevIdx = InPrevIdx;
	Parms.InCurIdx = InCurIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnButtonClickedEvent
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnButtonClickedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnButtonClickedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnButtonHoverEvent
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnButtonHoverEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnButtonHoverEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnButtonPressedEvent
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnButtonPressedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnButtonPressedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnButtonReleasedEvent
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnButtonReleasedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnButtonReleasedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnCheckBoxComponentStateChanged
// (Final, Native, Public)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnCheckBoxComponentStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnCheckBoxComponentStateChanged");

	Params::TLTestUserWidgetLogger_Logger_FOnCheckBoxComponentStateChanged Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnControllerCaptureBeginEvent
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnControllerCaptureBeginEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnControllerCaptureBeginEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnControllerCaptureEndEvent
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnControllerCaptureEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnControllerCaptureEndEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnEditableTextBoxChangedEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnEditableTextBoxChangedEvent(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnEditableTextBoxChangedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnEditableTextBoxChangedEvent Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnEditableTextBoxCommittedEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnEditableTextBoxCommittedEvent(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnEditableTextBoxCommittedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnEditableTextBoxCommittedEvent Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnEditableTextChangedEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnEditableTextChangedEvent(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnEditableTextChangedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnEditableTextChangedEvent Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnEditableTextCommittedEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnEditableTextCommittedEvent(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnEditableTextCommittedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnEditableTextCommittedEvent Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnExpandableAreaExpansionChanged
// (Final, Native, Public)
// Parameters:
// class UExpandableArea*                  Area                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsExpanded                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnExpandableAreaExpansionChanged(class UExpandableArea* Area, bool bIsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnExpandableAreaExpansionChanged");

	Params::TLTestUserWidgetLogger_Logger_FOnExpandableAreaExpansionChanged Parms{};

	Parms.Area = Area;
	Parms.bIsExpanded = bIsExpanded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnFloatValueChangedEvent
// (Final, Native, Public)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnFloatValueChangedEvent(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnFloatValueChangedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnFloatValueChangedEvent Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnHoveredWidgetChanged
// (Final, Native, Public)
// Parameters:
// class UWidgetComponent*                 WidgetComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetComponent*                 PreviousWidgetComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnHoveredWidgetChanged(class UWidgetComponent* WidgetComponent, class UWidgetComponent* PreviousWidgetComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnHoveredWidgetChanged");

	Params::TLTestUserWidgetLogger_Logger_FOnHoveredWidgetChanged Parms{};

	Parms.WidgetComponent = WidgetComponent;
	Parms.PreviousWidgetComponent = PreviousWidgetComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnIsSelectingKeyChanged
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnIsSelectingKeyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnIsSelectingKeyChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnKeySelected
// (Final, Native, Public)
// Parameters:
// struct FInputChord                      SelectedKey                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnKeySelected(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnKeySelected");

	Params::TLTestUserWidgetLogger_Logger_FOnKeySelected Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnMenuOpenChangedEvent
// (Final, Native, Public)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnMenuOpenChangedEvent(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnMenuOpenChangedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnMenuOpenChangedEvent Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnMouseCaptureBeginEvent
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnMouseCaptureBeginEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnMouseCaptureBeginEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnMouseCaptureEndEvent
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnMouseCaptureEndEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnMouseCaptureEndEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnMultiLineEditableTextBoxChangedEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnMultiLineEditableTextBoxChangedEvent(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnMultiLineEditableTextBoxChangedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnMultiLineEditableTextBoxChangedEvent Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnMultiLineEditableTextBoxCommittedEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnMultiLineEditableTextBoxCommittedEvent(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnMultiLineEditableTextBoxCommittedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnMultiLineEditableTextBoxCommittedEvent Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnMultiLineEditableTextChangedEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnMultiLineEditableTextChangedEvent(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnMultiLineEditableTextChangedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnMultiLineEditableTextChangedEvent Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnMultiLineEditableTextCommittedEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnMultiLineEditableTextCommittedEvent(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnMultiLineEditableTextCommittedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnMultiLineEditableTextCommittedEvent Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnOpeningEvent
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnOpeningEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnOpeningEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnSelectionChangedEvent
// (Final, Native, Public)
// Parameters:
// class FString                           SelectedItem                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnSelectionChangedEvent(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnSelectionChangedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnSelectionChangedEvent Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnSpinBoxBeginSliderMovement
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_FOnSpinBoxBeginSliderMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnSpinBoxBeginSliderMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnSpinBoxValueChangedEvent
// (Final, Native, Public)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnSpinBoxValueChangedEvent(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnSpinBoxValueChangedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnSpinBoxValueChangedEvent Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnSpinBoxValueCommittedEvent
// (Final, Native, Public)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnSpinBoxValueCommittedEvent(float InValue, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnSpinBoxValueCommittedEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnSpinBoxValueCommittedEvent Parms{};

	Parms.InValue = InValue;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_FOnUserScrolledEvent
// (Final, Native, Public)
// Parameters:
// float                                   CurrentOffset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTestUserWidgetLogger::Logger_FOnUserScrolledEvent(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_FOnUserScrolledEvent");

	Params::TLTestUserWidgetLogger_Logger_FOnUserScrolledEvent Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTestUserWidgetLogger.Logger_WidgetEvent
// (Final, Native, Public)

void UTLTestUserWidgetLogger::Logger_WidgetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTestUserWidgetLogger", "Logger_WidgetEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPcInfo.OnClickedStatPoint
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetPcInfo::OnClickedStatPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnClickedStatPoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPcInfo.OnCostDecreased
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPcInfo::OnCostDecreased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnCostDecreased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPcInfo.OnCostIncreased
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPcInfo::OnCostIncreased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnCostIncreased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPcInfo.OnHpAbnormalStatusChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EHpAbnormalStatus                       InHpAbnormalStatus                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcInfo::OnHpAbnormalStatusChanged(const EHpAbnormalStatus& InHpAbnormalStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnHpAbnormalStatusChanged");

	Params::TLUserWidgetPcInfo_OnHpAbnormalStatusChanged Parms{};

	Parms.InHpAbnormalStatus = InHpAbnormalStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcInfo.OnHpDecreased
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPcInfo::OnHpDecreased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnHpDecreased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPcInfo.OnHpIncreased
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPcInfo::OnHpIncreased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnHpIncreased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPcInfo.OnHpIncreasedByContinuousHeal
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bStartAnimation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcInfo::OnHpIncreasedByContinuousHeal(bool bStartAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnHpIncreasedByContinuousHeal");

	Params::TLUserWidgetPcInfo_OnHpIncreasedByContinuousHeal Parms{};

	Parms.bStartAnimation = bStartAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcInfo.OnLevelCapStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InLevelCapState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcInfo::OnLevelCapStateChanged(bool InLevelCapState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnLevelCapStateChanged");

	Params::TLUserWidgetPcInfo_OnLevelCapStateChanged Parms{};

	Parms.InLevelCapState = InLevelCapState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcInfo.OnMyPcCombatStatusUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InCombatStatus                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcInfo::OnMyPcCombatStatusUpdate(const bool InCombatStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnMyPcCombatStatusUpdate");

	Params::TLUserWidgetPcInfo_OnMyPcCombatStatusUpdate Parms{};

	Parms.InCombatStatus = InCombatStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcInfo.OnMyPcDamaged
// (Event, Public, BlueprintEvent)
// Parameters:
// EFloaterCategory                        InDamageType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcInfo::OnMyPcDamaged(const EFloaterCategory InDamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnMyPcDamaged");

	Params::TLUserWidgetPcInfo_OnMyPcDamaged Parms{};

	Parms.InDamageType = InDamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcInfo.OnRestorableStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   MarkIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    HaveSomethingToRestore                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcInfo::OnRestorableStatusChanged(int32 MarkIndex, bool HaveSomethingToRestore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnRestorableStatusChanged");

	Params::TLUserWidgetPcInfo_OnRestorableStatusChanged Parms{};

	Parms.MarkIndex = MarkIndex;
	Parms.HaveSomethingToRestore = HaveSomethingToRestore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcInfo.OnSetupUIPlatformEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLUIPlatform                           InUIPlatform                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcInfo::OnSetupUIPlatformEvent(ETLUIPlatform InUIPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnSetupUIPlatformEvent");

	Params::TLUserWidgetPcInfo_OnSetupUIPlatformEvent Parms{};

	Parms.InUIPlatform = InUIPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcInfo.OnShowFriendlyTargetOnMe
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcInfo::OnShowFriendlyTargetOnMe(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnShowFriendlyTargetOnMe");

	Params::TLUserWidgetPcInfo_OnShowFriendlyTargetOnMe Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcInfo.OnStaminaDecreased
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPcInfo::OnStaminaDecreased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnStaminaDecreased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPcInfo.OnStaminaIncreased
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPcInfo::OnStaminaIncreased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnStaminaIncreased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPcInfo.OnUpdateCriminalType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECriminalType                           bInCriminalType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcInfo::OnUpdateCriminalType(ECriminalType bInCriminalType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnUpdateCriminalType");

	Params::TLUserWidgetPcInfo_OnUpdateCriminalType Parms{};

	Parms.bInCriminalType = bInCriminalType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcInfo.OnUpdateLevelUp
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InNewLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcInfo::OnUpdateLevelUp(int32 InNewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "OnUpdateLevelUp");

	Params::TLUserWidgetPcInfo_OnUpdateLevelUp Parms{};

	Parms.InNewLevel = InNewLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcInfo.PlayHpPercentStatusAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPcInfo::PlayHpPercentStatusAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "PlayHpPercentStatusAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPcInfo.StopHpPercentStatusAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPcInfo::StopHpPercentStatusAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcInfo", "StopHpPercentStatusAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCasting.OnStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bForward                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCasting::OnStart(bool bForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCasting", "OnStart");

	Params::TLUserWidgetCasting_OnStart Parms{};

	Parms.bForward = bForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCasting.OnStop
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLStopCastingReason                    Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCasting::OnStop(ETLStopCastingReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCasting", "OnStop");

	Params::TLUserWidgetCasting_OnStop Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeListItem.OnAcquisitionTypeUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLAcquisitionContentType               InAcquisitionType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeListItem::OnAcquisitionTypeUpdate(ETLAcquisitionContentType InAcquisitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeListItem", "OnAcquisitionTypeUpdate");

	Params::TLUserWidgetArmorCostumeListItem_OnAcquisitionTypeUpdate Parms{};

	Parms.InAcquisitionType = InAcquisitionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeListItem.OnPreviewEquipState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEquipped                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeListItem::OnPreviewEquipState(bool bEquipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeListItem", "OnPreviewEquipState");

	Params::TLUserWidgetArmorCostumeListItem_OnPreviewEquipState Parms{};

	Parms.bEquipped = bEquipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeListItem.OnSelectState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeListItem::OnSelectState(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeListItem", "OnSelectState");

	Params::TLUserWidgetArmorCostumeListItem_OnSelectState Parms{};

	Parms.bSelected = bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeListItem.OnUserEquipState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEquipped                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeListItem::OnUserEquipState(bool bEquipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeListItem", "OnUserEquipState");

	Params::TLUserWidgetArmorCostumeListItem_OnUserEquipState Parms{};

	Parms.bEquipped = bEquipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLObjectWorldProxy.IsCanSeeFromMyPc
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLObjectWorldProxy::IsCanSeeFromMyPc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLObjectWorldProxy", "IsCanSeeFromMyPc");

	Params::TLObjectWorldProxy_IsCanSeeFromMyPc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLObjectWorldProxy.IsValid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLObjectWorldProxy::IsValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLObjectWorldProxy", "IsValid");

	Params::TLObjectWorldProxy_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLObjectWorldProxy.GetDistToMyPc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLObjectWorldProxy::GetDistToMyPc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLObjectWorldProxy", "GetDistToMyPc");

	Params::TLObjectWorldProxy_GetDistToMyPc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLObjectWorldProxy.GetDistToMyPcC2C
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLObjectWorldProxy::GetDistToMyPcC2C() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLObjectWorldProxy", "GetDistToMyPcC2C");

	Params::TLObjectWorldProxy_GetDistToMyPcC2C Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLObjectWorldProxy.GetDistToMyPcSQ
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLObjectWorldProxy::GetDistToMyPcSQ() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLObjectWorldProxy", "GetDistToMyPcSQ");

	Params::TLObjectWorldProxy_GetDistToMyPcSQ Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLObjectWorldProxy.GetGuid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint64                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint64 UTLObjectWorldProxy::GetGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLObjectWorldProxy", "GetGuid");

	Params::TLObjectWorldProxy_GetGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLObjectWorldProxy.GetObjId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLObjectWorldProxy::GetObjId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLObjectWorldProxy", "GetObjId");

	Params::TLObjectWorldProxy_GetObjId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLObjectWorldProxy.GetObjRowName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UTLObjectWorldProxy::GetObjRowName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLObjectWorldProxy", "GetObjRowName");

	Params::TLObjectWorldProxy_GetObjRowName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLObjectWorldProxy.GetObjType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWorldObjectType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EWorldObjectType UTLObjectWorldProxy::GetObjType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLObjectWorldProxy", "GetObjType");

	Params::TLObjectWorldProxy_GetObjType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLObjectWorldProxy.GetObjTypeName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UTLObjectWorldProxy::GetObjTypeName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLObjectWorldProxy", "GetObjTypeName");

	Params::TLObjectWorldProxy_GetObjTypeName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObject.Advance
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InPageNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::Advance(int32 InPageNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "Advance");

	Params::TLTutorialConditionObject_Advance Parms{};

	Parms.InPageNum = InPageNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObject.AdvanceByID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPageNum                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::AdvanceByID(class FName InTutorialId, int32 InPageNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "AdvanceByID");

	Params::TLTutorialConditionObject_AdvanceByID Parms{};

	Parms.InTutorialId = InTutorialId;
	Parms.InPageNum = InPageNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObject.IsActivate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObject::IsActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "IsActivate");

	Params::TLTutorialConditionObject_IsActivate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObject.IsActivateByID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLTutorialConditionObject::IsActivateByID(class FName InTutorialId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "IsActivateByID");

	Params::TLTutorialConditionObject_IsActivateByID Parms{};

	Parms.InTutorialId = InTutorialId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLTutorialConditionObject.OnActivate
// (Event, Protected, BlueprintEvent)

void UTLTutorialConditionObject::OnActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "OnActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLTutorialConditionObject.OnActivateByID
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::OnActivateByID(class FName InTutorialId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "OnActivateByID");

	Params::TLTutorialConditionObject_OnActivateByID Parms{};

	Parms.InTutorialId = InTutorialId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLTutorialConditionObject.OnClear
// (Event, Protected, BlueprintEvent)

void UTLTutorialConditionObject::OnClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "OnClear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLTutorialConditionObject.OnComplete
// (Event, Protected, BlueprintEvent)

void UTLTutorialConditionObject::OnComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "OnComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLTutorialConditionObject.OnCompleteByID
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSkip                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::OnCompleteByID(class FName InTutorialId, bool bInSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "OnCompleteByID");

	Params::TLTutorialConditionObject_OnCompleteByID Parms{};

	Parms.InTutorialId = InTutorialId;
	Parms.bInSkip = bInSkip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLTutorialConditionObject.OnCreate
// (Event, Protected, BlueprintEvent)

void UTLTutorialConditionObject::OnCreate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "OnCreate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLTutorialConditionObject.OnDestroy
// (Event, Protected, BlueprintEvent)

void UTLTutorialConditionObject::OnDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "OnDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLTutorialConditionObject.OnSetup
// (Event, Protected, BlueprintEvent)

void UTLTutorialConditionObject::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLTutorialConditionObject.RegisterObjectTickInterval
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InObjId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::RegisterObjectTickInterval(int32 InObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "RegisterObjectTickInterval");

	Params::TLTutorialConditionObject_RegisterObjectTickInterval Parms{};

	Parms.InObjId = InObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObject.RegisterObjectTickIntervalByID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InObjId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::RegisterObjectTickIntervalByID(class FName InTutorialId, int32 InObjId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "RegisterObjectTickIntervalByID");

	Params::TLTutorialConditionObject_RegisterObjectTickIntervalByID Parms{};

	Parms.InTutorialId = InTutorialId;
	Parms.InObjId = InObjId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObject.SetActivate
// (Final, Native, Protected, BlueprintCallable)

void UTLTutorialConditionObject::SetActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "SetActivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObject.SetActivateByID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::SetActivateByID(class FName InTutorialId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "SetActivateByID");

	Params::TLTutorialConditionObject_SetActivateByID Parms{};

	Parms.InTutorialId = InTutorialId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObject.SetComplete
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InDelayTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::SetComplete(int32 InDelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "SetComplete");

	Params::TLTutorialConditionObject_SetComplete Parms{};

	Parms.InDelayTime = InDelayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObject.SetCompleteByID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InDelayTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::SetCompleteByID(class FName InTutorialId, int32 InDelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "SetCompleteByID");

	Params::TLTutorialConditionObject_SetCompleteByID Parms{};

	Parms.InTutorialId = InTutorialId;
	Parms.InDelayTime = InDelayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObject.SetSkip
// (Final, Native, Protected, BlueprintCallable)

void UTLTutorialConditionObject::SetSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "SetSkip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObject.SetSkipByID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             InTutorialId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::SetSkipByID(class FName InTutorialId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "SetSkipByID");

	Params::TLTutorialConditionObject_SetSkipByID Parms{};

	Parms.InTutorialId = InTutorialId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLTutorialConditionObject.TutorialLog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InMsg                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLTutorialConditionObject::TutorialLog(const class FString& InMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLTutorialConditionObject", "TutorialLog");

	Params::TLTutorialConditionObject_TutorialLog Parms{};

	Parms.InMsg = std::move(InMsg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetArenaCountDown.OnCountDown
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   CoundDownSeconds                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArenaCountDown::OnCountDown(int32 CoundDownSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaCountDown", "OnCountDown");

	Params::TLUserWidgetArenaCountDown_OnCountDown Parms{};

	Parms.CoundDownSeconds = CoundDownSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArenaCountDown.OnStartAnimFinish
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetArenaCountDown::OnStartAnimFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaCountDown", "OnStartAnimFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetArenaDailyScheduleElem.SetHighlightFX
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSet                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArenaDailyScheduleElem::SetHighlightFX(bool bSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaDailyScheduleElem", "SetHighlightFX");

	Params::TLUserWidgetArenaDailyScheduleElem_SetHighlightFX Parms{};

	Parms.bSet = bSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserStateInterface.BP_OnChangeCharacterAlive
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InAlive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLSetAliveSource                       InAliveSource                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ITLUserStateInterface::BP_OnChangeCharacterAlive(bool InAlive, ETLSetAliveSource InAliveSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserStateInterface", "BP_OnChangeCharacterAlive");

	Params::TLUserStateInterface_BP_OnChangeCharacterAlive Parms{};

	Parms.InAlive = InAlive;
	Parms.InAliveSource = InAliveSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGacha.HandleActionCancel
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetGacha::HandleActionCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGacha", "HandleActionCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGacha.OnShowButtonClickGuide
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGacha::OnShowButtonClickGuide(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGacha", "OnShowButtonClickGuide");

	Params::TLUserWidgetGacha_OnShowButtonClickGuide Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGacha.OnShowResultWidget
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInGachaSkipStep                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGacha::OnShowResultWidget(bool bInVisible, bool bInGachaSkipStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGacha", "OnShowResultWidget");

	Params::TLUserWidgetGacha_OnShowResultWidget Parms{};

	Parms.bInVisible = bInVisible;
	Parms.bInGachaSkipStep = bInGachaSkipStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGacha.OnShowSkipGacha
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGacha::OnShowSkipGacha(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGacha", "OnShowSkipGacha");

	Params::TLUserWidgetGacha_OnShowSkipGacha Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGacha.SetGachaSkipStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSkip                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGacha::SetGachaSkipStep(bool bInSkip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGacha", "SetGachaSkipStep");

	Params::TLUserWidgetGacha_SetGachaSkipStep Parms{};

	Parms.bInSkip = bInSkip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGacha.ShowButtonClickGuide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGacha::ShowButtonClickGuide(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGacha", "ShowButtonClickGuide");

	Params::TLUserWidgetGacha_ShowButtonClickGuide Parms{};

	Parms.bInVisible = bInVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGacha.ShowResultWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGacha::ShowResultWidget(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGacha", "ShowResultWidget");

	Params::TLUserWidgetGacha_ShowResultWidget Parms{};

	Parms.bInVisible = bInVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGacha.ShowSkipGacha
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGacha::ShowSkipGacha(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGacha", "ShowSkipGacha");

	Params::TLUserWidgetGacha_ShowSkipGacha Parms{};

	Parms.bInVisible = bInVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGacha.SkipGacha
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetGacha::SkipGacha()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGacha", "SkipGacha");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetHeadUI.OnUpdateCombatAlert
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCombatAlertType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHeadUI::OnUpdateCombatAlert(ETLCombatAlertType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHeadUI", "OnUpdateCombatAlert");

	Params::TLUserWidgetHeadUI_OnUpdateCombatAlert Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneSocketPanel.OnActiveRuneStatEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketPanel::OnActiveRuneStatEffect(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketPanel", "OnActiveRuneStatEffect");

	Params::TLUserWidgetRuneSocketPanel_OnActiveRuneStatEffect Parms{};

	Parms.InIsActive = InIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneSocketPanel.OnActiveRuneSynergy
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGrade                              InSynergyGrade                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketPanel::OnActiveRuneSynergy(bool InIsActive, EItemGrade InSynergyGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketPanel", "OnActiveRuneSynergy");

	Params::TLUserWidgetRuneSocketPanel_OnActiveRuneSynergy Parms{};

	Parms.InIsActive = InIsActive;
	Parms.InSynergyGrade = InSynergyGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneSocketPanel.OnEmptyTargetItem
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsEmpty                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketPanel::OnEmptyTargetItem(bool InIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketPanel", "OnEmptyTargetItem");

	Params::TLUserWidgetRuneSocketPanel_OnEmptyTargetItem Parms{};

	Parms.InIsEmpty = InIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneSocketPanel.OnTargetItemWating
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketPanel::OnTargetItemWating(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketPanel", "OnTargetItemWating");

	Params::TLUserWidgetRuneSocketPanel_OnTargetItemWating Parms{};

	Parms.InIsActive = InIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSeasonPassLevelUnit.OnChangedPassLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsMyLevelUnit                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassLevelUnit::OnChangedPassLevel(bool InIsMyLevelUnit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelUnit", "OnChangedPassLevel");

	Params::TLUserWidgetSeasonPassLevelUnit_OnChangedPassLevel Parms{};

	Parms.InIsMyLevelUnit = InIsMyLevelUnit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSeasonPassLevelUnit.OnGuidePointShop
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InHasPassTicket                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassLevelUnit::OnGuidePointShop(bool bInShow, bool InHasPassTicket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelUnit", "OnGuidePointShop");

	Params::TLUserWidgetSeasonPassLevelUnit_OnGuidePointShop Parms{};

	Parms.bInShow = bInShow;
	Parms.InHasPassTicket = InHasPassTicket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSeasonPassLevelUnit.OnSetupLevelInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassLevelUnit::OnSetupLevelInfo(int32 InLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelUnit", "OnSetupLevelInfo");

	Params::TLUserWidgetSeasonPassLevelUnit_OnSetupLevelInfo Parms{};

	Parms.InLevel = InLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSeasonPassLevelUnit.OnUpdatePassPointEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbLevelUp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassLevelUnit::OnUpdatePassPointEvent(bool InbLevelUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelUnit", "OnUpdatePassPointEvent");

	Params::TLUserWidgetSeasonPassLevelUnit_OnUpdatePassPointEvent Parms{};

	Parms.InbLevelUp = InbLevelUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipWorldBoss.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipWorldBoss::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipWorldBoss", "OnUpdateScheduleType");

	Params::TLUserWidgetTooltipWorldBoss_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitmentInfo.IsMyPartyFulled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetPartyRecruitmentInfo::IsMyPartyFulled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentInfo", "IsMyPartyFulled");

	Params::TLUserWidgetPartyRecruitmentInfo_IsMyPartyFulled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyRecruitmentInfo.IsPartyMaster
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetPartyRecruitmentInfo::IsPartyMaster()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentInfo", "IsPartyMaster");

	Params::TLUserWidgetPartyRecruitmentInfo_IsPartyMaster Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyRecruitmentInfo.OnState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLPartyState                           InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentInfo::OnState(ETLPartyState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentInfo", "OnState");

	Params::TLUserWidgetPartyRecruitmentInfo_OnState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitmentInfo.OnUpdateInfo
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPartyRecruitmentInfo::OnUpdateInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentInfo", "OnUpdateInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPartyRecruitmentInfo.OnVisibleExpireInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentInfo::OnVisibleExpireInfo(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentInfo", "OnVisibleExpireInfo");

	Params::TLUserWidgetPartyRecruitmentInfo_OnVisibleExpireInfo Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyAssistFrame.OnShowAssistance
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPartyAssistFrame::OnShowAssistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyAssistFrame", "OnShowAssistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetActionKeyGuideItemDash.OnPressed
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetActionKeyGuideItemDash::OnPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionKeyGuideItemDash", "OnPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetActionKeyGuideItemDash.OnReleased
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetActionKeyGuideItemDash::OnReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionKeyGuideItemDash", "OnReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetActionKeyGuideItemAxis.OnPressed
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLActionKeyGuideAxisEventType          Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetActionKeyGuideItemAxis::OnPressed(ETLActionKeyGuideAxisEventType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionKeyGuideItemAxis", "OnPressed");

	Params::TLUserWidgetActionKeyGuideItemAxis_OnPressed Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetActionKeyGuideItemAxis.OnReleased
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLActionKeyGuideAxisEventType          Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetActionKeyGuideItemAxis::OnReleased(ETLActionKeyGuideAxisEventType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionKeyGuideItemAxis", "OnReleased");

	Params::TLUserWidgetActionKeyGuideItemAxis_OnReleased Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetActionKeyGuide.OnCreateGuide
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLActionKeyGuideInfo            InInfo                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetActionKeyGuide::OnCreateGuide(const struct FTLActionKeyGuideInfo& InInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetActionKeyGuide", "OnCreateGuide");

	Params::TLUserWidgetActionKeyGuide_OnCreateGuide Parms{};

	Parms.InInfo = std::move(InInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAICustomAgreement.OnClickLinkBP
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bOpen                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAICustomAgreement::OnClickLinkBP(bool bOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAICustomAgreement", "OnClickLinkBP");

	Params::TLUserWidgetAICustomAgreement_OnClickLinkBP Parms{};

	Parms.bOpen = bOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAICustomAgreement.IsOpenedLinkDesc
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetAICustomAgreement::IsOpenedLinkDesc() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAICustomAgreement", "IsOpenedLinkDesc");

	Params::TLUserWidgetAICustomAgreement_IsOpenedLinkDesc Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSelectableFixedPackage.OnConfirmStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InCanConfirm                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSelectableFixedPackage::OnConfirmStatusChanged(bool InCanConfirm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSelectableFixedPackage", "OnConfirmStatusChanged");

	Params::TLUserWidgetSelectableFixedPackage_OnConfirmStatusChanged Parms{};

	Parms.InCanConfirm = InCanConfirm;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipFieldBoss.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipFieldBoss::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipFieldBoss", "OnUpdateScheduleType");

	Params::TLUserWidgetTooltipFieldBoss_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAlchemy.OnAlchemyTotalPointUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InTotalPoint                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsIncrease                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAlchemy::OnAlchemyTotalPointUpdated(const int32 InTotalPoint, const bool InIsIncrease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAlchemy", "OnAlchemyTotalPointUpdated");

	Params::TLUserWidgetAlchemy_OnAlchemyTotalPointUpdated Parms{};

	Parms.InTotalPoint = InTotalPoint;
	Parms.InIsIncrease = InIsIncrease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAlchemy.OnIncreaseAlchemyStep
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsLastStep                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAlchemy::OnIncreaseAlchemyStep(const bool InIsLastStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAlchemy", "OnIncreaseAlchemyStep");

	Params::TLUserWidgetAlchemy_OnIncreaseAlchemyStep Parms{};

	Parms.InIsLastStep = InIsLastStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRefreshButton.EnableRefreshButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRefreshButton::EnableRefreshButton(bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRefreshButton", "EnableRefreshButton");

	Params::TLUserWidgetRefreshButton_EnableRefreshButton Parms{};

	Parms.InEnable = InEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetShopCurrency.GetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTLUserWidgetShopCurrency::GetValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShopCurrency", "GetValue");

	Params::TLUserWidgetShopCurrency_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetShopCurrency.OnCurrencyTypeChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// EShopCurrencyType                       InCurrencyType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetShopCurrency::OnCurrencyTypeChange(EShopCurrencyType InCurrencyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShopCurrency", "OnCurrencyTypeChange");

	Params::TLUserWidgetShopCurrency_OnCurrencyTypeChange Parms{};

	Parms.InCurrencyType = InCurrencyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetShopCurrency.ShowTooltipWithValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetShopCurrency::ShowTooltipWithValue(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShopCurrency", "ShowTooltipWithValue");

	Params::TLUserWidgetShopCurrency_ShowTooltipWithValue Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetAlchemyResult.OnPlayAnim
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLAlchemySceneGradeType                InCutSceneGradeType                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAlchemyResult::OnPlayAnim(const ETLAlchemySceneGradeType InCutSceneGradeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAlchemyResult", "OnPlayAnim");

	Params::TLUserWidgetAlchemyResult_OnPlayAnim Parms{};

	Parms.InCutSceneGradeType = InCutSceneGradeType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMagicDollDialog.UpdateMagicDollDialog
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLMagicDollStringDialogType            Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDollDialog::UpdateMagicDollDialog(ETLMagicDollStringDialogType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollDialog", "UpdateMagicDollDialog");

	Params::TLUserWidgetMagicDollDialog_UpdateMagicDollDialog Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAmount.SetEnoughCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnoughCost                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAmount::SetEnoughCost(bool bInEnoughCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAmount", "SetEnoughCost");

	Params::TLUserWidgetAmount_SetEnoughCost Parms{};

	Parms.bInEnoughCost = bInEnoughCost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetAmount.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAmount::SetValue(int64 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAmount", "SetValue");

	Params::TLUserWidgetAmount_SetValue Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyHud.OnAddRecruitmentApplicant
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPartyHud::OnAddRecruitmentApplicant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyHud", "OnAddRecruitmentApplicant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPartyHud.OnMatchingSuccess
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPartyHud::OnMatchingSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyHud", "OnMatchingSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPartyHud.OnRemoveRecruitmentApplicant
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPartyHud::OnRemoveRecruitmentApplicant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyHud", "OnRemoveRecruitmentApplicant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPartyHud.OnUpdatePartyState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLPartyState                           InPartyState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyHud::OnUpdatePartyState(ETLPartyState InPartyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyHud", "OnUpdatePartyState");

	Params::TLUserWidgetPartyHud_OnUpdatePartyState Parms{};

	Parms.InPartyState = InPartyState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyHud.IsMatchingParty
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetPartyHud::IsMatchingParty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyHud", "IsMatchingParty");

	Params::TLUserWidgetPartyHud_IsMatchingParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetArenaPartyIcon.OnSetPartyType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLArenaPartyType                       InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArenaPartyIcon::OnSetPartyType(ETLArenaPartyType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaPartyIcon", "OnSetPartyType");

	Params::TLUserWidgetArenaPartyIcon_OnSetPartyType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArenaTierChangeEffect.PlayPartyTypeIconEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLArenaPartyType                       InPartyType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArenaTierChangeEffect::PlayPartyTypeIconEffect(ETLArenaPartyType InPartyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaTierChangeEffect", "PlayPartyTypeIconEffect");

	Params::TLUserWidgetArenaTierChangeEffect_PlayPartyTypeIconEffect Parms{};

	Parms.InPartyType = InPartyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipItemTraitInfo.OnTraitResonanceState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsOpened                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipItemTraitInfo::OnTraitResonanceState(bool IsOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipItemTraitInfo", "OnTraitResonanceState");

	Params::TLUserWidgetTooltipItemTraitInfo_OnTraitResonanceState Parms{};

	Parms.IsOpened = IsOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemPackageResultSlotInterface.OnPlayShowAnim
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemGrade                              InGrade                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ITLUserWidgetItemPackageResultSlotInterface::OnPlayShowAnim(EItemGrade InGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemPackageResultSlotInterface", "OnPlayShowAnim");

	Params::TLUserWidgetItemPackageResultSlotInterface_OnPlayShowAnim Parms{};

	Parms.InGrade = InGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemPackageResultSlotInterface.OnPrepareShowAnim
// (Event, Protected, BlueprintEvent)

void ITLUserWidgetItemPackageResultSlotInterface::OnPrepareShowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemPackageResultSlotInterface", "OnPrepareShowAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGuildDonateItem.OnEnableDonate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsEnable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDonateItem::OnEnableDonate(bool InIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDonateItem", "OnEnableDonate");

	Params::TLUserWidgetGuildDonateItem_OnEnableDonate Parms{};

	Parms.InIsEnable = InIsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDonateItem.OnReqDonation
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InDonationText                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDonateItem::OnReqDonation(const class FText& InDonationText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDonateItem", "OnReqDonation");

	Params::TLUserWidgetGuildDonateItem_OnReqDonation Parms{};

	Parms.InDonationText = std::move(InDonationText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDonateItem.OnUpdateRecommend
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsRecommend                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDonateItem::OnUpdateRecommend(bool IsRecommend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDonateItem", "OnUpdateRecommend");

	Params::TLUserWidgetGuildDonateItem_OnUpdateRecommend Parms{};

	Parms.IsRecommend = IsRecommend;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsAlramGuideBase.OnFoldGuide
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsAlramGuideBase::OnFoldGuide(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlramGuideBase", "OnFoldGuide");

	Params::TLUserWidgetContentsAlramGuideBase_OnFoldGuide Parms{};

	Parms.InIsOpen = InIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemPackageResultList.OnTitleSet
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetItemPackageResultList::OnTitleSet(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemPackageResultList", "OnTitleSet");

	Params::TLUserWidgetItemPackageResultList_OnTitleSet Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArenaHUD.TriggerEndGameCountDown
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetArenaHUD::TriggerEndGameCountDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaHUD", "TriggerEndGameCountDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetArenaDailyScheduleSlot.SetDayHighlightFX
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSet                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArenaDailyScheduleSlot::SetDayHighlightFX(bool bSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaDailyScheduleSlot", "SetDayHighlightFX");

	Params::TLUserWidgetArenaDailyScheduleSlot_SetDayHighlightFX Parms{};

	Parms.bSet = bSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArenaMatchingConfirmPopup.UpdateAcceptAndCancelButtonVisibility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArenaMatchingConfirmPopup::UpdateAcceptAndCancelButtonVisibility(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaMatchingConfirmPopup", "UpdateAcceptAndCancelButtonVisibility");

	Params::TLUserWidgetArenaMatchingConfirmPopup_UpdateAcceptAndCancelButtonVisibility Parms{};

	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArenaMatchingConfirmStatusListItem.OnUpdateColorType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLArenaMatchingConfirmStatusListItemColorTypeInColorType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArenaMatchingConfirmStatusListItem::OnUpdateColorType(ETLArenaMatchingConfirmStatusListItemColorType InColorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaMatchingConfirmStatusListItem", "OnUpdateColorType");

	Params::TLUserWidgetArenaMatchingConfirmStatusListItem_OnUpdateColorType Parms{};

	Parms.InColorType = InColorType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArenaMatchingConfirmStatusListItem.OnUpdateStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLArenaMatchingConfirmStatus           InConfirmStatus                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArenaMatchingConfirmStatusListItem::OnUpdateStatus(ETLArenaMatchingConfirmStatus InConfirmStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArenaMatchingConfirmStatusListItem", "OnUpdateStatus");

	Params::TLUserWidgetArenaMatchingConfirmStatusListItem_OnUpdateStatus Parms{};

	Parms.InConfirmStatus = InConfirmStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitExtractMaterialSlot.OnAddItem
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsUpdated                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitExtractMaterialSlot::OnAddItem(bool InIsUpdated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitExtractMaterialSlot", "OnAddItem");

	Params::TLUserWidgetItemTraitExtractMaterialSlot_OnAddItem Parms{};

	Parms.InIsUpdated = InIsUpdated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitExtractMaterialSlot.OnLackMaterial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsLack                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitExtractMaterialSlot::OnLackMaterial(bool InIsLack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitExtractMaterialSlot", "OnLackMaterial");

	Params::TLUserWidgetItemTraitExtractMaterialSlot_OnLackMaterial Parms{};

	Parms.InIsLack = InIsLack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitExtractMaterialSlot.OnRemoveItem
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsUpdated                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitExtractMaterialSlot::OnRemoveItem(bool InIsUpdated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitExtractMaterialSlot", "OnRemoveItem");

	Params::TLUserWidgetItemTraitExtractMaterialSlot_OnRemoveItem Parms{};

	Parms.InIsUpdated = InIsUpdated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildOccupationApplicationItem.OnClickRegionSelectButton
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetGuildOccupationApplicationItem::OnClickRegionSelectButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupationApplicationItem", "OnClickRegionSelectButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetArmorCostumeCostItem.OnAvailableCost
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsAvailable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCostItem::OnAvailableCost(bool IsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCostItem", "OnAvailableCost");

	Params::TLUserWidgetArmorCostumeCostItem_OnAvailableCost Parms{};

	Parms.IsAvailable = IsAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizeConfirmListCostItem.OnAvailableCost
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsAvailable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizeConfirmListCostItem::OnAvailableCost(bool IsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizeConfirmListCostItem", "OnAvailableCost");

	Params::TLUserWidgetArmorCostumeCustomizeConfirmListCostItem_OnAvailableCost Parms{};

	Parms.IsAvailable = IsAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTradeItemSearch.OnSearchTextBoxCommit
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTradeItemSearch::OnSearchTextBoxCommit(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTradeItemSearch", "OnSearchTextBoxCommit");

	Params::TLUserWidgetTradeItemSearch_OnSearchTextBoxCommit Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTradeItemSearch.SetSearchHyperlinkVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShowSecondary                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowThird                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTradeItemSearch::SetSearchHyperlinkVisible(bool bShowSecondary, bool bShowThird)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTradeItemSearch", "SetSearchHyperlinkVisible");

	Params::TLUserWidgetTradeItemSearch_SetSearchHyperlinkVisible Parms{};

	Parms.bShowSecondary = bShowSecondary;
	Parms.bShowThird = bShowThird;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDragSlot.OnDragStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTLUserWidgetIcon*                SourceWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDragSlot::OnDragStart(class UTLUserWidgetIcon* SourceWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDragSlot", "OnDragStart");

	Params::TLUserWidgetDragSlot_OnDragStart Parms{};

	Parms.SourceWidget = SourceWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizeColorSlotPanel.IsSelectedCustomizeColorSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetArmorCostumeCustomizeColorSlotPanel::IsSelectedCustomizeColorSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizeColorSlotPanel", "IsSelectedCustomizeColorSlot");

	Params::TLUserWidgetArmorCostumeCustomizeColorSlotPanel_IsSelectedCustomizeColorSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizeColorSlotPanel.OnClickHideAndExpandButtonImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bExpand                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizeColorSlotPanel::OnClickHideAndExpandButtonImpl(bool bExpand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizeColorSlotPanel", "OnClickHideAndExpandButtonImpl");

	Params::TLUserWidgetArmorCostumeCustomizeColorSlotPanel_OnClickHideAndExpandButtonImpl Parms{};

	Parms.bExpand = bExpand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizeColorSlotPanel.OnShowColorPalette
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizeColorSlotPanel::OnShowColorPalette(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizeColorSlotPanel", "OnShowColorPalette");

	Params::TLUserWidgetArmorCostumeCustomizeColorSlotPanel_OnShowColorPalette Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizePatternColorSlotPanel.OnClickHideAndExpandButtonImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bExpand                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizePatternColorSlotPanel::OnClickHideAndExpandButtonImpl(bool bExpand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizePatternColorSlotPanel", "OnClickHideAndExpandButtonImpl");

	Params::TLUserWidgetArmorCostumeCustomizePatternColorSlotPanel_OnClickHideAndExpandButtonImpl Parms{};

	Parms.bExpand = bExpand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizePanel.HandleChangeUIPlatformImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLUIPlatform                           InUIPlatform                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizePanel::HandleChangeUIPlatformImpl(ETLUIPlatform InUIPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizePanel", "HandleChangeUIPlatformImpl");

	Params::TLUserWidgetArmorCostumeCustomizePanel_HandleChangeUIPlatformImpl Parms{};

	Parms.InUIPlatform = InUIPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizePanel.OnActiveCustomizingPanel
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizePanel::OnActiveCustomizingPanel(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizePanel", "OnActiveCustomizingPanel");

	Params::TLUserWidgetArmorCostumeCustomizePanel_OnActiveCustomizingPanel Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizePanel.OnExpandColorGroupImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizePanel::OnExpandColorGroupImpl(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizePanel", "OnExpandColorGroupImpl");

	Params::TLUserWidgetArmorCostumeCustomizePanel_OnExpandColorGroupImpl Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizePanel.OnExpandColorLayerImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizePanel::OnExpandColorLayerImpl(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizePanel", "OnExpandColorLayerImpl");

	Params::TLUserWidgetArmorCostumeCustomizePanel_OnExpandColorLayerImpl Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizePanel.OnExpandPatternImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizePanel::OnExpandPatternImpl(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizePanel", "OnExpandPatternImpl");

	Params::TLUserWidgetArmorCostumeCustomizePanel_OnExpandPatternImpl Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeCustomizePanel.OnExpandStyleImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeCustomizePanel::OnExpandStyleImpl(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeCustomizePanel", "OnExpandStyleImpl");

	Params::TLUserWidgetArmorCostumeCustomizePanel_OnExpandStyleImpl Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSeasonPassUnit.OnPassGradePeriod
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsPeriod                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassUnit::OnPassGradePeriod(bool InIsPeriod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassUnit", "OnPassGradePeriod");

	Params::TLUserWidgetSeasonPassUnit_OnPassGradePeriod Parms{};

	Parms.InIsPeriod = InIsPeriod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeTooltip.GetActionGuideAttachPanel
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTLSizeBox*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLSizeBox* UTLUserWidgetArmorCostumeTooltip::GetActionGuideAttachPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeTooltip", "GetActionGuideAttachPanel");

	Params::TLUserWidgetArmorCostumeTooltip_GetActionGuideAttachPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetArmorCostumeEquippedIconSlot.ActiveFocusFX
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeEquippedIconSlot::ActiveFocusFX(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeEquippedIconSlot", "ActiveFocusFX");

	Params::TLUserWidgetArmorCostumeEquippedIconSlot_ActiveFocusFX Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumeEquippedIconSlot.OnClickIcon
// (Final, Native, Private)

void UTLUserWidgetArmorCostumeEquippedIconSlot::OnClickIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeEquippedIconSlot", "OnClickIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetArmorCostumeEquippedIconSlot.SetDisableState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bDisable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetArmorCostumeEquippedIconSlot::SetDisableState(bool bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumeEquippedIconSlot", "SetDisableState");

	Params::TLUserWidgetArmorCostumeEquippedIconSlot_SetDisableState Parms{};

	Parms.bDisable = bDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeTableEventGroup.OnTimeStamp
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeTableEventGroup::OnTimeStamp(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableEventGroup", "OnTimeStamp");

	Params::TLUserWidgetTimeTableEventGroup_OnTimeStamp Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetArmorCostumePreviewIcon.OnClickUnEquip
// (Final, Native, Private)

void UTLUserWidgetArmorCostumePreviewIcon::OnClickUnEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetArmorCostumePreviewIcon", "OnClickUnEquip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyDungeonRewardPopup.OnUpdateDungeonReward
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPartyDungeonRewardPopup::OnUpdateDungeonReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyDungeonRewardPopup", "OnUpdateDungeonReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetAttendanceRewardSlot.OnPlayReceiveRewardAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetAttendanceRewardSlot::OnPlayReceiveRewardAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAttendanceRewardSlot", "OnPlayReceiveRewardAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetAttendanceRewardSlot.OnResetAnimation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetAttendanceRewardSlot::OnResetAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAttendanceRewardSlot", "OnResetAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetAttendanceRewardSlot.OnUpdateRewardType
// (Event, Public, BlueprintEvent)
// Parameters:
// EAttendanceRewardType                   InRewardType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAttendanceRewardSlot::OnUpdateRewardType(EAttendanceRewardType InRewardType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAttendanceRewardSlot", "OnUpdateRewardType");

	Params::TLUserWidgetAttendanceRewardSlot_OnUpdateRewardType Parms{};

	Parms.InRewardType = InRewardType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAzulejoCanvasFrame.OnCanvasPaddingChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   PaddingSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAzulejoCanvasFrame::OnCanvasPaddingChanged(float PaddingSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAzulejoCanvasFrame", "OnCanvasPaddingChanged");

	Params::TLUserWidgetAzulejoCanvasFrame_OnCanvasPaddingChanged Parms{};

	Parms.PaddingSize = PaddingSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAzulejoDecoy.OnLinkGravityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bLinkGravity                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAzulejoDirection                       GravityDirection                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAzulejoDecoy::OnLinkGravityChanged(bool bLinkGravity, EAzulejoDirection GravityDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAzulejoDecoy", "OnLinkGravityChanged");

	Params::TLUserWidgetAzulejoDecoy_OnLinkGravityChanged Parms{};

	Parms.bLinkGravity = bLinkGravity;
	Parms.GravityDirection = GravityDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAzulejoDecoy.OnLinkStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bLink                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAzulejoDirection                       LinkDirection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAzulejoDecoy::OnLinkStatusChanged(bool bLink, EAzulejoDirection LinkDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAzulejoDecoy", "OnLinkStatusChanged");

	Params::TLUserWidgetAzulejoDecoy_OnLinkStatusChanged Parms{};

	Parms.bLink = bLink;
	Parms.LinkDirection = LinkDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAzulejoDecoy.OnMouseDowned
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIndirect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAzulejoDecoy::OnMouseDowned(bool bIndirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAzulejoDecoy", "OnMouseDowned");

	Params::TLUserWidgetAzulejoDecoy_OnMouseDowned Parms{};

	Parms.bIndirect = bIndirect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAzulejoDecoy.OnMouseDragBegan
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIndirect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAzulejoDecoy::OnMouseDragBegan(bool bIndirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAzulejoDecoy", "OnMouseDragBegan");

	Params::TLUserWidgetAzulejoDecoy_OnMouseDragBegan Parms{};

	Parms.bIndirect = bIndirect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAzulejoDecoy.OnMouseHovered
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIndirect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAzulejoDecoy::OnMouseHovered(bool bIndirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAzulejoDecoy", "OnMouseHovered");

	Params::TLUserWidgetAzulejoDecoy_OnMouseHovered Parms{};

	Parms.bIndirect = bIndirect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAzulejoDecoy.OnMouseUnhovered
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIndirect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAzulejoDecoy::OnMouseUnhovered(bool bIndirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAzulejoDecoy", "OnMouseUnhovered");

	Params::TLUserWidgetAzulejoDecoy_OnMouseUnhovered Parms{};

	Parms.bIndirect = bIndirect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAzulejoDecoy.OnMouseUpped
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIndirect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAzulejoDecoy::OnMouseUpped(bool bIndirect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAzulejoDecoy", "OnMouseUpped");

	Params::TLUserWidgetAzulejoDecoy_OnMouseUpped Parms{};

	Parms.bIndirect = bIndirect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyDungeonDifficultyTag.OnUpdateDifficulty
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPartyDungeonDifficultyTag::OnUpdateDifficulty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyDungeonDifficultyTag", "OnUpdateDifficulty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetAzulejoLinker.OnLinkDirectionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EAzulejoDirection                       LinkDirection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAzulejoLinker::OnLinkDirectionChanged(EAzulejoDirection LinkDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAzulejoLinker", "OnLinkDirectionChanged");

	Params::TLUserWidgetAzulejoLinker_OnLinkDirectionChanged Parms{};

	Parms.LinkDirection = LinkDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAzulejoLinker.OnLinkStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bLinkedOrLinkable                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAzulejoDirection                       LinkDirection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAzulejoLinker::OnLinkStatusChanged(bool bLinkedOrLinkable, EAzulejoDirection LinkDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAzulejoLinker", "OnLinkStatusChanged");

	Params::TLUserWidgetAzulejoLinker_OnLinkStatusChanged Parms{};

	Parms.bLinkedOrLinkable = bLinkedOrLinkable;
	Parms.LinkDirection = LinkDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillMasterySkillSlot.HandleOpenConfirmAnimFinish
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetSkillMasterySkillSlot::HandleOpenConfirmAnimFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasterySkillSlot", "HandleOpenConfirmAnimFinish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillMasterySkillSlot.OnConnectNode
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillMasterySkillSlot::OnConnectNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasterySkillSlot", "OnConnectNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillMasterySkillSlot.OnDisconnectNode
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillMasterySkillSlot::OnDisconnectNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasterySkillSlot", "OnDisconnectNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillMasterySkillSlot.OnShowSkillSlotAblePassive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInAblePassive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillMasterySkillSlot::OnShowSkillSlotAblePassive(bool bInAblePassive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasterySkillSlot", "OnShowSkillSlotAblePassive");

	Params::TLUserWidgetSkillMasterySkillSlot_OnShowSkillSlotAblePassive Parms{};

	Parms.bInAblePassive = bInAblePassive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillMasterySkillSlot.OnUpdateStatNodeTitle
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillMasterySkillSlot::OnUpdateStatNodeTitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasterySkillSlot", "OnUpdateStatNodeTitle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillMasterySkillSlot.SetStatIconImage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        InStatIconImage                                        (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillMasterySkillSlot::SetStatIconImage(TSoftObjectPtr<class UTexture2D> InStatIconImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasterySkillSlot", "SetStatIconImage");

	Params::TLUserWidgetSkillMasterySkillSlot_SetStatIconImage Parms{};

	Parms.InStatIconImage = InStatIconImage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetLobbyCharacterSelect.GetSlotByCharacterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidgetLobbyCharacterSlotChkBtn*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserWidgetLobbyCharacterSlotChkBtn* UTLUserWidgetLobbyCharacterSelect::GetSlotByCharacterID(int32 InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLobbyCharacterSelect", "GetSlotByCharacterID");

	Params::TLUserWidgetLobbyCharacterSelect_GetSlotByCharacterID Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetLobbyCharacterSelect.OnReturnToMainMenu
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetLobbyCharacterSelect::OnReturnToMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLobbyCharacterSelect", "OnReturnToMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetLobbyCharacterSelect.UpdateSlots
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetLobbyCharacterSelect::UpdateSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLobbyCharacterSelect", "UpdateSlots");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBasicStatTypeWeaponCategory.OnActivate
// (Event, Public, BlueprintEvent)

void UTLUserWidgetBasicStatTypeWeaponCategory::OnActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBasicStatTypeWeaponCategory", "OnActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetBasicStatTypeWeaponCategory.OnDeactivate
// (Event, Public, BlueprintEvent)

void UTLUserWidgetBasicStatTypeWeaponCategory::OnDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBasicStatTypeWeaponCategory", "OnDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetBasicStatTypeWeaponCategory.SetImageFromItemCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EItemCategory                           InItemCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBasicStatTypeWeaponCategory::SetImageFromItemCategory(EItemCategory InItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBasicStatTypeWeaponCategory", "SetImageFromItemCategory");

	Params::TLUserWidgetBasicStatTypeWeaponCategory_SetImageFromItemCategory Parms{};

	Parms.InItemCategory = InItemCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillMasteryPointScreenMessage.OnEventUpdateSkillMasteryPoint
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemCategory                           InWeaponSetType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillMasteryPointScreenMessage::OnEventUpdateSkillMasteryPoint(EItemCategory InWeaponSetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryPointScreenMessage", "OnEventUpdateSkillMasteryPoint");

	Params::TLUserWidgetSkillMasteryPointScreenMessage_OnEventUpdateSkillMasteryPoint Parms{};

	Parms.InWeaponSetType = InWeaponSetType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSiegeDistributionInput.UpdateItemCount
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSiegeDistributionInput::UpdateItemCount(int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeDistributionInput", "UpdateItemCount");

	Params::TLUserWidgetSiegeDistributionInput_UpdateItemCount Parms{};

	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRollingText.ResetTooltip
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetRollingText::ResetTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRollingText", "ResetTooltip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRollingText.SetTargetWrapTextAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRollingText::SetTargetWrapTextAt(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRollingText", "SetTargetWrapTextAt");

	Params::TLUserWidgetRollingText_SetTargetWrapTextAt Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRollingText.SetTextBlockStylePath
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  InTLTextBlockStylePath                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRollingText::SetTextBlockStylePath(const struct FSoftObjectPath& InTLTextBlockStylePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRollingText", "SetTextBlockStylePath");

	Params::TLUserWidgetRollingText_SetTextBlockStylePath Parms{};

	Parms.InTLTextBlockStylePath = std::move(InTLTextBlockStylePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBeautyshopCustomizePresetIcon.OnSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSelect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBeautyshopCustomizePresetIcon::OnSelected(bool bInSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBeautyshopCustomizePresetIcon", "OnSelected");

	Params::TLUserWidgetBeautyshopCustomizePresetIcon_OnSelected Parms{};

	Parms.bInSelect = bInSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBeautyshopCustomizePresetIcon.GetPresetIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetBeautyshopCustomizePresetIcon::GetPresetIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBeautyshopCustomizePresetIcon", "GetPresetIndex");

	Params::TLUserWidgetBeautyshopCustomizePresetIcon_GetPresetIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetBeautyshopPolymorphFrame.OnSelectCancel
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetBeautyshopPolymorphFrame::OnSelectCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBeautyshopPolymorphFrame", "OnSelectCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBeautyshopPolymorphFrame.OnSelectConfirm
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetBeautyshopPolymorphFrame::OnSelectConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBeautyshopPolymorphFrame", "OnSelectConfirm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBeautyshopPolymorphFrame.OnUpdateGradeFilter
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetBeautyshopPolymorphFrame::OnUpdateGradeFilter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBeautyshopPolymorphFrame", "OnUpdateGradeFilter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetAlive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsAlive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetAlive(bool bInIsAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetAlive");

	Params::TLUserWidgetBindingTest_SetAlive Parms{};

	Parms.bInIsAlive = bInIsAlive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetClassColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetClassColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetClassColor");

	Params::TLUserWidgetBindingTest_SetClassColor Parms{};

	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetClassIcon
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath                  SpritePath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetClassIcon(const struct FSoftObjectPath& SpritePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetClassIcon");

	Params::TLUserWidgetBindingTest_SetClassIcon Parms{};

	Parms.SpritePath = std::move(SpritePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetClassText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             InClassText                                            (Parm, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetClassText(const class FText& InClassText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetClassText");

	Params::TLUserWidgetBindingTest_SetClassText Parms{};

	Parms.InClassText = std::move(InClassText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetClassTextFontStyleId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InClassTextFontStyleId                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetClassTextFontStyleId(class FName InClassTextFontStyleId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetClassTextFontStyleId");

	Params::TLUserWidgetBindingTest_SetClassTextFontStyleId Parms{};

	Parms.InClassTextFontStyleId = InClassTextFontStyleId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetClassTextId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InClassTextId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetClassTextId(class FName InClassTextId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetClassTextId");

	Params::TLUserWidgetBindingTest_SetClassTextId Parms{};

	Parms.InClassTextId = InClassTextId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetEnumTest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETestEnum                               InEnumTest                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetEnumTest(ETestEnum InEnumTest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetEnumTest");

	Params::TLUserWidgetBindingTest_SetEnumTest Parms{};

	Parms.InEnumTest = InEnumTest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetExp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InExp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InExpMin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InExpMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetExp(int32 InExp, int32 InExpMin, int32 InExpMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetExp");

	Params::TLUserWidgetBindingTest_SetExp Parms{};

	Parms.InExp = InExp;
	Parms.InExpMin = InExpMin;
	Parms.InExpMax = InExpMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetHpPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetHpPercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetHpPercent");

	Params::TLUserWidgetBindingTest_SetHpPercent Parms{};

	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetHpPercentTest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetHpPercentTest(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetHpPercentTest");

	Params::TLUserWidgetBindingTest_SetHpPercentTest Parms{};

	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetBindingTest.SetLock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInLock                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetBindingTest::SetLock(bool bInLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetBindingTest", "SetLock");

	Params::TLUserWidgetBindingTest_SetLock Parms{};

	Parms.bInLock = bInLock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCustomizeLightSelect.HandleLightSequencePlay
// (Final, Native, Protected)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeLightSelect::HandleLightSequencePlay(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeLightSelect", "HandleLightSequencePlay");

	Params::TLUserWidgetCustomizeLightSelect_HandleLightSequencePlay Parms{};

	Parms.InIndex = InIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetResultItemSelectSlotItem.OnItemNameUpdate
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetResultItemSelectSlotItem::OnItemNameUpdate(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetResultItemSelectSlotItem", "OnItemNameUpdate");

	Params::TLUserWidgetResultItemSelectSlotItem_OnItemNameUpdate Parms{};

	Parms.InName = std::move(InName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetResultItemSelectSlotItem.PlayShowAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemGrade                              InGrade                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetResultItemSelectSlotItem::PlayShowAnim(EItemGrade InGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetResultItemSelectSlotItem", "PlayShowAnim");

	Params::TLUserWidgetResultItemSelectSlotItem_PlayShowAnim Parms{};

	Parms.InGrade = InGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChallengePartyDungeonObjective.HandleCompleteAnimationFinished
// (Final, Native, Public)

void UTLUserWidgetChallengePartyDungeonObjective::HandleCompleteAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChallengePartyDungeonObjective", "HandleCompleteAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChallengePartyDungeonRankingSlot.OnUpdateRanking
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bMyRanking                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChallengePartyDungeonRankingSlot::OnUpdateRanking(bool bMyRanking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChallengePartyDungeonRankingSlot", "OnUpdateRanking");

	Params::TLUserWidgetChallengePartyDungeonRankingSlot_OnUpdateRanking Parms{};

	Parms.bMyRanking = bMyRanking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphGrowthCollectionEffectSlot.PlayLevelUpdateEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAcquired                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsMaxLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphGrowthCollectionEffectSlot::PlayLevelUpdateEffect(bool bAcquired, bool bIsMaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthCollectionEffectSlot", "PlayLevelUpdateEffect");

	Params::TLUserWidgetPolymorphGrowthCollectionEffectSlot_PlayLevelUpdateEffect Parms{};

	Parms.bAcquired = bAcquired;
	Parms.bIsMaxLevel = bIsMaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphGrowthCollectionEffectSlot.PlayOnShow
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPolymorphGrowthCollectionEffectSlot::PlayOnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthCollectionEffectSlot", "PlayOnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChallengePartyDungeonTimeLimit.OnPrepare
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChallengePartyDungeonTimeLimit::OnPrepare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChallengePartyDungeonTimeLimit", "OnPrepare");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChallengePartyDungeonTimeLimit.OnStart
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChallengePartyDungeonTimeLimit::OnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChallengePartyDungeonTimeLimit", "OnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChallengePartyDungeonTimeLimit.PlayFailAnimation
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChallengePartyDungeonTimeLimit::PlayFailAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChallengePartyDungeonTimeLimit", "PlayFailAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChallengePartyDungeonTimeLimit.PlayFailSound
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChallengePartyDungeonTimeLimit::PlayFailSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChallengePartyDungeonTimeLimit", "PlayFailSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChallengePartyDungeonTimeLimit.PlaySuccessAnimation
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChallengePartyDungeonTimeLimit::PlaySuccessAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChallengePartyDungeonTimeLimit", "PlaySuccessAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChallengePartyDungeonTimeLimit.PlaySuccessSound
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChallengePartyDungeonTimeLimit::PlaySuccessSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChallengePartyDungeonTimeLimit", "PlaySuccessSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterCardBase.OnUpdateInteractable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInInteractable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterCardBase::OnUpdateInteractable(bool bInInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterCardBase", "OnUpdateInteractable");

	Params::TLUserWidgetCharacterCardBase_OnUpdateInteractable Parms{};

	Parms.bInInteractable = bInInteractable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterCardBase.SetActiveServerInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterCardBase::SetActiveServerInfo(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterCardBase", "SetActiveServerInfo");

	Params::TLUserWidgetCharacterCardBase_SetActiveServerInfo Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterCardPopup.MemoTextBox_OnTextFocusLost
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterCardPopup::MemoTextBox_OnTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterCardPopup", "MemoTextBox_OnTextFocusLost");

	Params::TLUserWidgetCharacterCardPopup_MemoTextBox_OnTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterCardPopup.MemoTextBox_OnTextFocusReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterCardPopup::MemoTextBox_OnTextFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterCardPopup", "MemoTextBox_OnTextFocusReceived");

	Params::TLUserWidgetCharacterCardPopup_MemoTextBox_OnTextFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterCardPopup.MessageTextBox_OnTextFocusLost
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterCardPopup::MessageTextBox_OnTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterCardPopup", "MessageTextBox_OnTextFocusLost");

	Params::TLUserWidgetCharacterCardPopup_MessageTextBox_OnTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterCardPopup.MessageTextBox_OnTextFocusReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterCardPopup::MessageTextBox_OnTextFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterCardPopup", "MessageTextBox_OnTextFocusReceived");

	Params::TLUserWidgetCharacterCardPopup_MessageTextBox_OnTextFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterCardPopup.Whisper_OnTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterCardPopup::Whisper_OnTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterCardPopup", "Whisper_OnTextChanged");

	Params::TLUserWidgetCharacterCardPopup_Whisper_OnTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterCardPopup.Whisper_OnTextFocusLost
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterCardPopup::Whisper_OnTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterCardPopup", "Whisper_OnTextFocusLost");

	Params::TLUserWidgetCharacterCardPopup_Whisper_OnTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterCardPopup.Whisper_OnTextFocusReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterCardPopup::Whisper_OnTextFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterCardPopup", "Whisper_OnTextFocusReceived");

	Params::TLUserWidgetCharacterCardPopup_Whisper_OnTextFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphCollection.HandleSearchTextBoxCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphCollection::HandleSearchTextBoxCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphCollection", "HandleSearchTextBoxCommitted");

	Params::TLUserWidgetPolymorphCollection_HandleSearchTextBoxCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphCollection.HandleSearchTextRemoveClicked
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetPolymorphCollection::HandleSearchTextRemoveClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphCollection", "HandleSearchTextRemoveClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterEquipInfo.OnCombatPresetSelect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bExpiredPreset                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterEquipInfo::OnCombatPresetSelect(const bool bExpiredPreset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterEquipInfo", "OnCombatPresetSelect");

	Params::TLUserWidgetCharacterEquipInfo_OnCombatPresetSelect Parms{};

	Parms.bExpiredPreset = bExpiredPreset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetLobbyCharacterSlotChkBtn.SetupWidgetData
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FTLCharacterData                 Data                                                   (Parm, NativeAccessSpecifierPublic)

void UTLUserWidgetLobbyCharacterSlotChkBtn::SetupWidgetData(const struct FTLCharacterData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLobbyCharacterSlotChkBtn", "SetupWidgetData");

	Params::TLUserWidgetLobbyCharacterSlotChkBtn_SetupWidgetData Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetLobbyCharacterSlotChkBtn.GetCharacterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetLobbyCharacterSlotChkBtn::GetCharacterID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLobbyCharacterSlotChkBtn", "GetCharacterID");

	Params::TLUserWidgetLobbyCharacterSlotChkBtn_GetCharacterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetCharacterInfo.OnCurrentWeaponPrsetNumChange
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCharacterInfo::OnCurrentWeaponPrsetNumChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterInfo", "OnCurrentWeaponPrsetNumChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterInfo.OnFocusStatPoint
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCharacterInfo::OnFocusStatPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterInfo", "OnFocusStatPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterInfo.OnHideExpText
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsHideExp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterInfo::OnHideExpText(bool IsHideExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterInfo", "OnHideExpText");

	Params::TLUserWidgetCharacterInfo_OnHideExpText Parms{};

	Parms.IsHideExp = IsHideExp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterInfo.OnInitWeaponPrsetNum
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCharacterInfo::OnInitWeaponPrsetNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterInfo", "OnInitWeaponPrsetNum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterInfo.OnUpdateStatPoint
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCharacterInfo::OnUpdateStatPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterInfo", "OnUpdateStatPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterInfo.ResetVirtualStatPoint
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetCharacterInfo::ResetVirtualStatPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterInfo", "ResetVirtualStatPoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterName.OnClickable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bClickable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterName::OnClickable(bool bClickable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterName", "OnClickable");

	Params::TLUserWidgetCharacterName_OnClickable Parms{};

	Parms.bClickable = bClickable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterName.SetCharacterName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int64                                   InPcId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int64                                   InPostId                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InFormatText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             InChatMessage                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterName::SetCharacterName(int64 InPcId, const class FText& InName, const int64 InPostId, const class FText& InFormatText, const class FText& InChatMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterName", "SetCharacterName");

	Params::TLUserWidgetCharacterName_SetCharacterName Parms{};

	Parms.InPcId = InPcId;
	Parms.InName = std::move(InName);
	Parms.InPostId = InPostId;
	Parms.InFormatText = std::move(InFormatText);
	Parms.InChatMessage = std::move(InChatMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterSelectWait.OnSetWidgetVisibleRelatedServerTransfer
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterSelectWait::OnSetWidgetVisibleRelatedServerTransfer(const bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterSelectWait", "OnSetWidgetVisibleRelatedServerTransfer");

	Params::TLUserWidgetCharacterSelectWait_OnSetWidgetVisibleRelatedServerTransfer Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterSubtitleList.OnHideSubtitleList
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCharacterSubtitleList::OnHideSubtitleList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterSubtitleList", "OnHideSubtitleList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterSubtitleList.OnNotSelectedSubtitle
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCharacterSubtitleList::OnNotSelectedSubtitle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterSubtitleList", "OnNotSelectedSubtitle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterSubtitleList.OnUpdateEmpty
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InEmpty                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterSubtitleList::OnUpdateEmpty(const bool InEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterSubtitleList", "OnUpdateEmpty");

	Params::TLUserWidgetCharacterSubtitleList_OnUpdateEmpty Parms{};

	Parms.InEmpty = InEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterSubtitleList.ResetNewAcquireList
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetCharacterSubtitleList::ResetNewAcquireList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterSubtitleList", "ResetNewAcquireList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterSubtitleList.SelectSubtitleItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InUID                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterSubtitleList::SelectSubtitleItem(const int32 InUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterSubtitleList", "SelectSubtitleItem");

	Params::TLUserWidgetCharacterSubtitleList_SelectSubtitleItem Parms{};

	Parms.InUID = InUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCharacterWeaponSlot.OnUpdateMainWeapon
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemCategory                           InMainHandCategory                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsTwoHand                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterWeaponSlot::OnUpdateMainWeapon(const EItemCategory InMainHandCategory, const bool InIsTwoHand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterWeaponSlot", "OnUpdateMainWeapon");

	Params::TLUserWidgetCharacterWeaponSlot_OnUpdateMainWeapon Parms{};

	Parms.InMainHandCategory = InMainHandCategory;
	Parms.InIsTwoHand = InIsTwoHand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterWeaponSlot.OnUpdateOffWeapon
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemCategory                           InOffHandCategory                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsTwoHand                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterWeaponSlot::OnUpdateOffWeapon(const EItemCategory InOffHandCategory, const bool InIsTwoHand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterWeaponSlot", "OnUpdateOffWeapon");

	Params::TLUserWidgetCharacterWeaponSlot_OnUpdateOffWeapon Parms{};

	Parms.InOffHandCategory = InOffHandCategory;
	Parms.InIsTwoHand = InIsTwoHand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.EventIngredientButtonUpdateForConsloe
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCheck                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpDetail::EventIngredientButtonUpdateForConsloe(bool bCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "EventIngredientButtonUpdateForConsloe");

	Params::TLUserWidgetSkillLevelUpDetail_EventIngredientButtonUpdateForConsloe Parms{};

	Parms.bCheck = bCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.HandleContinuousEnchantBtnChecked
// (Final, Native, Public)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpDetail::HandleContinuousEnchantBtnChecked(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "HandleContinuousEnchantBtnChecked");

	Params::TLUserWidgetSkillLevelUpDetail_HandleContinuousEnchantBtnChecked Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.HandleShowLevelUpButtonClick
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetSkillLevelUpDetail::HandleShowLevelUpButtonClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "HandleShowLevelUpButtonClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.HandleSkillPointTooltip
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    InbHover                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpDetail::HandleSkillPointTooltip(bool InbHover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "HandleSkillPointTooltip");

	Params::TLUserWidgetSkillLevelUpDetail_HandleSkillPointTooltip Parms{};

	Parms.InbHover = InbHover;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.OnEndCraft
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillLevelUpDetail::OnEndCraft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "OnEndCraft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.OnShowStart
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillLevelUpDetail::OnShowStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "OnShowStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.OnStartCraft
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillLevelUpDetail::OnStartCraft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "OnStartCraft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.OnUpdateAcquirablePointText
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillLevelUpDetail::OnUpdateAcquirablePointText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "OnUpdateAcquirablePointText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.OnUpdateCurrentPointText
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillLevelUpDetail::OnUpdateCurrentPointText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "OnUpdateCurrentPointText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.OnUpdateEnchantPoint
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InPoint                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpDetail::OnUpdateEnchantPoint(int32 InPoint, float InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "OnUpdateEnchantPoint");

	Params::TLUserWidgetSkillLevelUpDetail_OnUpdateEnchantPoint Parms{};

	Parms.InPoint = InPoint;
	Parms.InPercent = InPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.OnUpdateRequiredPointText
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillLevelUpDetail::OnUpdateRequiredPointText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "OnUpdateRequiredPointText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillLevelUpDetail.UpdateEventEnchantProbability
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillLevelUpDetail::UpdateEventEnchantProbability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpDetail", "UpdateEventEnchantProbability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChatBalloon.OnChangeChatBalloonStyle
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsMyPc                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EChatMessageCategory                    InChatCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatBalloon::OnChangeChatBalloonStyle(bool IsMyPc, EChatMessageCategory InChatCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatBalloon", "OnChangeChatBalloonStyle");

	Params::TLUserWidgetChatBalloon_OnChangeChatBalloonStyle Parms{};

	Parms.IsMyPc = IsMyPc;
	Parms.InChatCategory = InChatCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatBalloon.OnChatBalloonTypeApply
// (Event, Public, BlueprintEvent)
// Parameters:
// EChatBalloonType                        InChatBalloonType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatBalloon::OnChatBalloonTypeApply(const EChatBalloonType InChatBalloonType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatBalloon", "OnChatBalloonTypeApply");

	Params::TLUserWidgetChatBalloon_OnChatBalloonTypeApply Parms{};

	Parms.InChatBalloonType = InChatBalloonType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatBalloon.OnPositionCalibrated
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCalibrated                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECalibratedEdgeType                     InEdgeType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatBalloon::OnPositionCalibrated(bool bCalibrated, ECalibratedEdgeType InEdgeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatBalloon", "OnPositionCalibrated");

	Params::TLUserWidgetChatBalloon_OnPositionCalibrated Parms{};

	Parms.bCalibrated = bCalibrated;
	Parms.InEdgeType = InEdgeType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInstanceMapGuideEventObjective.OnEventCompletedAnimation
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetInstanceMapGuideEventObjective::OnEventCompletedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInstanceMapGuideEventObjective", "OnEventCompletedAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInstanceMapGuideEventObjective.OnEventObjectivePointCompleted
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInstanceMapGuideEventObjective::OnEventObjectivePointCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInstanceMapGuideEventObjective", "OnEventObjectivePointCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInstanceMapGuideEventObjective.OnEventObjectivePointUpdated
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInstanceMapGuideEventObjective::OnEventObjectivePointUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInstanceMapGuideEventObjective", "OnEventObjectivePointUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInstanceMapGuideEventObjective.OnUpdateCompleted
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInstanceMapGuideEventObjective::OnUpdateCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInstanceMapGuideEventObjective", "OnUpdateCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChatGroupManager.HandleChangeChatTab
// (Final, Native, Protected, HasOutParams)
// Parameters:
// ETLChatTabType                          InChatTabType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InSender                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetChatGroupManager::HandleChangeChatTab(ETLChatTabType InChatTabType, const class FText& InSender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupManager", "HandleChangeChatTab");

	Params::TLUserWidgetChatGroupManager_HandleChangeChatTab Parms{};

	Parms.InChatTabType = InChatTabType;
	Parms.InSender = std::move(InSender);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupManager.HandleClickedCreateGroup
// (Final, Native, Protected)

void UTLUserWidgetChatGroupManager::HandleClickedCreateGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupManager", "HandleClickedCreateGroup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupManager.HandleClickedJoinGroup
// (Final, Native, Protected)

void UTLUserWidgetChatGroupManager::HandleClickedJoinGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupManager", "HandleClickedJoinGroup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupManager.OnUpdateInvitationListCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InInvitationCount                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatGroupManager::OnUpdateInvitationListCount(int32 InInvitationCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupManager", "OnUpdateInvitationListCount");

	Params::TLUserWidgetChatGroupManager_OnUpdateInvitationListCount Parms{};

	Parms.InInvitationCount = InInvitationCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatGroupManager.OnUpdateMaxGroupChat
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bMaxGroupChat                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatGroupManager::OnUpdateMaxGroupChat(bool bMaxGroupChat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupManager", "OnUpdateMaxGroupChat");

	Params::TLUserWidgetChatGroupManager_OnUpdateMaxGroupChat Parms{};

	Parms.bMaxGroupChat = bMaxGroupChat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpWaiting.HandleContinuousEnchantBtnChecked
// (Final, Native, Public)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpWaiting::HandleContinuousEnchantBtnChecked(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpWaiting", "HandleContinuousEnchantBtnChecked");

	Params::TLUserWidgetSkillLevelUpWaiting_HandleContinuousEnchantBtnChecked Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillLevelUpWaiting.IsLongPressLock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetSkillLevelUpWaiting::IsLongPressLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpWaiting", "IsLongPressLock");

	Params::TLUserWidgetSkillLevelUpWaiting_IsLongPressLock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSkillLevelUpWaiting.IsLongPressPlayback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetSkillLevelUpWaiting::IsLongPressPlayback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpWaiting", "IsLongPressPlayback");

	Params::TLUserWidgetSkillLevelUpWaiting_IsLongPressPlayback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSkillLevelUpWaiting.OnGoToResultWaitingPhase
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpWaiting::OnGoToResultWaitingPhase(bool InbShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpWaiting", "OnGoToResultWaitingPhase");

	Params::TLUserWidgetSkillLevelUpWaiting_OnGoToResultWaitingPhase Parms{};

	Parms.InbShow = InbShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpWaiting.OnLongPressEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPress                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpWaiting::OnLongPressEvent(bool bPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpWaiting", "OnLongPressEvent");

	Params::TLUserWidgetSkillLevelUpWaiting_OnLongPressEvent Parms{};

	Parms.bPress = bPress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedCancelRoomNameChange
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedCancelRoomNameChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedCancelRoomNameChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedCancelRoomPasswordChange
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedCancelRoomPasswordChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedCancelRoomPasswordChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedChangeRoomName
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedChangeRoomName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedChangeRoomName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedChangeRoomPassword
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedChangeRoomPassword()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedChangeRoomPassword");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedClose
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedCommitRoomNameChange
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedCommitRoomNameChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedCommitRoomNameChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedCommitRoomPasswordChange
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedCommitRoomPasswordChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedCommitRoomPasswordChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedCopyInvitationUrl
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedCopyInvitationUrl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedCopyInvitationUrl");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedInvite
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedInvite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedInvite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedInviteModeBack
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedInviteModeBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedInviteModeBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.HandleClickedLeaveRoom
// (Final, Native, Protected)

void UTLUserWidgetChatGroupOption::HandleClickedLeaveRoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "HandleClickedLeaveRoom");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.OnEventInviteMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInviteMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatGroupOption::OnEventInviteMode(bool bInviteMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "OnEventInviteMode");

	Params::TLUserWidgetChatGroupOption_OnEventInviteMode Parms{};

	Parms.bInviteMode = bInviteMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatGroupOption.OnInputPasswordTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetChatGroupOption::OnInputPasswordTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "OnInputPasswordTextChanged");

	Params::TLUserWidgetChatGroupOption_OnInputPasswordTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatGroupOption.OnInputTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetChatGroupOption::OnInputTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatGroupOption", "OnInputTextChanged");

	Params::TLUserWidgetChatGroupOption_OnInputTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillLevelUp.HandleAnimFinishToStartCraft
// (Final, Native, Protected)

void UTLUserWidgetSkillLevelUp::HandleAnimFinishToStartCraft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUp", "HandleAnimFinishToStartCraft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatInput.EditableTextBox_OnTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::EditableTextBox_OnTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "EditableTextBox_OnTextChanged");

	Params::TLUserWidgetChatInput_EditableTextBox_OnTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatInput.EditableTextBox_OnTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::EditableTextBox_OnTextCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "EditableTextBox_OnTextCommitted");

	Params::TLUserWidgetChatInput_EditableTextBox_OnTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatInput.EditableTextBox_OnTextFocusLost
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::EditableTextBox_OnTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "EditableTextBox_OnTextFocusLost");

	Params::TLUserWidgetChatInput_EditableTextBox_OnTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatInput.EditableTextBox_OnTextFocusReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::EditableTextBox_OnTextFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "EditableTextBox_OnTextFocusReceived");

	Params::TLUserWidgetChatInput_EditableTextBox_OnTextFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatInput.EditableTextBox_OnTextMouseButtonDown
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::EditableTextBox_OnTextMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "EditableTextBox_OnTextMouseButtonDown");

	Params::TLUserWidgetChatInput_EditableTextBox_OnTextMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatInput.HandleCancelMessageClickedButton
// (Final, Native, Protected)

void UTLUserWidgetChatInput::HandleCancelMessageClickedButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "HandleCancelMessageClickedButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatInput.HandleOnFocusLost_WhisperInputTextBox
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::HandleOnFocusLost_WhisperInputTextBox(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "HandleOnFocusLost_WhisperInputTextBox");

	Params::TLUserWidgetChatInput_HandleOnFocusLost_WhisperInputTextBox Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatInput.HandleRecordVoice
// (Final, Native, Public)

void UTLUserWidgetChatInput::HandleRecordVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "HandleRecordVoice");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatInput.HandleSendMessageClickedButton
// (Final, Native, Protected)

void UTLUserWidgetChatInput::HandleSendMessageClickedButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "HandleSendMessageClickedButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatInput.OnIsWorldChatOpen
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    IsOpen                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OpenLevel                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::OnIsWorldChatOpen(bool IsOpen, const int32& OpenLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "OnIsWorldChatOpen");

	Params::TLUserWidgetChatInput_OnIsWorldChatOpen Parms{};

	Parms.IsOpen = IsOpen;
	Parms.OpenLevel = OpenLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatInput.UpdateActiveChatUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::UpdateActiveChatUI(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "UpdateActiveChatUI");

	Params::TLUserWidgetChatInput_UpdateActiveChatUI Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatInput.UpdateBlockGuideMessage
// (Event, Protected, BlueprintEvent)
// Parameters:
// EChatInputMode                          InInputMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOpenChat                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::UpdateBlockGuideMessage(EChatInputMode InInputMode, bool bOpenChat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "UpdateBlockGuideMessage");

	Params::TLUserWidgetChatInput_UpdateBlockGuideMessage Parms{};

	Parms.InInputMode = InInputMode;
	Parms.bOpenChat = bOpenChat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatInput.UpdateConsoleInputModeGuideVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::UpdateConsoleInputModeGuideVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "UpdateConsoleInputModeGuideVisible");

	Params::TLUserWidgetChatInput_UpdateConsoleInputModeGuideVisible Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatInput.UpdateInputBoxHintTextUsingSTT
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLRecordVoiceState                     RecordState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseVivox                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::UpdateInputBoxHintTextUsingSTT(ETLRecordVoiceState RecordState, bool bUseVivox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "UpdateInputBoxHintTextUsingSTT");

	Params::TLUserWidgetChatInput_UpdateInputBoxHintTextUsingSTT Parms{};

	Parms.RecordState = RecordState;
	Parms.bUseVivox = bUseVivox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatInput.UpdateRecordButtonState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLRecordVoiceState                     RecordState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::UpdateRecordButtonState(ETLRecordVoiceState RecordState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "UpdateRecordButtonState");

	Params::TLUserWidgetChatInput_UpdateRecordButtonState Parms{};

	Parms.RecordState = RecordState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatInput.UpdateRecordButtonTooltipText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bUseVivox                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::UpdateRecordButtonTooltipText(bool bUseVivox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "UpdateRecordButtonTooltipText");

	Params::TLUserWidgetChatInput_UpdateRecordButtonTooltipText Parms{};

	Parms.bUseVivox = bUseVivox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatInput.UpdateVisibleChatInputUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatInput::UpdateVisibleChatInputUI(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatInput", "UpdateVisibleChatInputUI");

	Params::TLUserWidgetChatInput_UpdateVisibleChatInputUI Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphGrowthCollection.DisableNotification
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetPolymorphGrowthCollection::DisableNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthCollection", "DisableNotification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphGrowthCollection.PlayMaxLevelAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPolymorphGrowthCollection::PlayMaxLevelAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthCollection", "PlayMaxLevelAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPolymorphGrowthCollection.PlayNotificationAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPolymorphGrowthCollection::PlayNotificationAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthCollection", "PlayNotificationAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTextBlockWidgetTooltip.GetActionGuideAttachPanel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTLSizeBox*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLSizeBox* UTLUserWidgetTextBlockWidgetTooltip::GetActionGuideAttachPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTextBlockWidgetTooltip", "GetActionGuideAttachPanel");

	Params::TLUserWidgetTextBlockWidgetTooltip_GetActionGuideAttachPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetChatList.HandleChatListScrolled
// (Final, Native, Protected)
// Parameters:
// float                                   InItemOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDistanceRemaining                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatList::HandleChatListScrolled(float InItemOffset, float InDistanceRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatList", "HandleChatListScrolled");

	Params::TLUserWidgetChatList_HandleChatListScrolled Parms{};

	Parms.InItemOffset = InItemOffset;
	Parms.InDistanceRemaining = InDistanceRemaining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatList.HandleClickedGetLatest
// (Final, Native, Protected)

void UTLUserWidgetChatList::HandleClickedGetLatest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatList", "HandleClickedGetLatest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatList.OnStartChatItemVisibleAnimation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bReverseAnim                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatList::OnStartChatItemVisibleAnimation(bool bReverseAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatList", "OnStartChatItemVisibleAnimation");

	Params::TLUserWidgetChatList_OnStartChatItemVisibleAnimation Parms{};

	Parms.bReverseAnim = bReverseAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRuneSocketViewSlot.OnActiveSynergy
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGrade                              InSynergyGrade                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketViewSlot::OnActiveSynergy(bool InIsActive, EItemGrade InSynergyGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketViewSlot", "OnActiveSynergy");

	Params::TLUserWidgetRuneSocketViewSlot_OnActiveSynergy Parms{};

	Parms.InIsActive = InIsActive;
	Parms.InSynergyGrade = InSynergyGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneSocketViewSlot.OnNotOpenSocket
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsNotOpen                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketViewSlot::OnNotOpenSocket(bool InIsNotOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketViewSlot", "OnNotOpenSocket");

	Params::TLUserWidgetRuneSocketViewSlot_OnNotOpenSocket Parms{};

	Parms.InIsNotOpen = InIsNotOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTabButtonGroup.BindNextAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InActionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTabButtonGroup::BindNextAction(class FName InActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabButtonGroup", "BindNextAction");

	Params::TLUserWidgetTabButtonGroup_BindNextAction Parms{};

	Parms.InActionName = InActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTabButtonGroup.BindPrevAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InActionName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTabButtonGroup::BindPrevAction(class FName InActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabButtonGroup", "BindPrevAction");

	Params::TLUserWidgetTabButtonGroup_BindPrevAction Parms{};

	Parms.InActionName = InActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTabButtonGroup.GetButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidgetCheckButton*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserWidgetCheckButton* UTLUserWidgetTabButtonGroup::GetButton(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabButtonGroup", "GetButton");

	Params::TLUserWidgetTabButtonGroup_GetButton Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetTabButtonGroup.HandleUserScrolled
// (Final, Native, Protected)
// Parameters:
// float                                   CurrentOffset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTabButtonGroup::HandleUserScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabButtonGroup", "HandleUserScrolled");

	Params::TLUserWidgetTabButtonGroup_HandleUserScrolled Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTabButtonGroup.OnUpdateTabButtonCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTabButtonGroup::OnUpdateTabButtonCount(int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabButtonGroup", "OnUpdateTabButtonCount");

	Params::TLUserWidgetTabButtonGroup_OnUpdateTabButtonCount Parms{};

	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTabButtonGroup.GetCurrentIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetTabButtonGroup::GetCurrentIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabButtonGroup", "GetCurrentIndex");

	Params::TLUserWidgetTabButtonGroup_GetCurrentIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetTabButtonGroup.IsSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetTabButtonGroup::IsSelected(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabButtonGroup", "IsSelected");

	Params::TLUserWidgetTabButtonGroup_IsSelected Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetTabButtonGroup.Num
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetTabButtonGroup::Num() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTabButtonGroup", "Num");

	Params::TLUserWidgetTabButtonGroup_Num Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetChatMenuBar.OnChangeNewChatCount
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UTLUserWidgetChatTabButton*       ChatTabButton                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             NewChatCountText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetChatMenuBar::OnChangeNewChatCount(class UTLUserWidgetChatTabButton* ChatTabButton, const class FText& NewChatCountText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatMenuBar", "OnChangeNewChatCount");

	Params::TLUserWidgetChatMenuBar_OnChangeNewChatCount Parms{};

	Parms.ChatTabButton = ChatTabButton;
	Parms.NewChatCountText = std::move(NewChatCountText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatMenuBar.OnCloseExpandTab
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChatMenuBar::OnCloseExpandTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatMenuBar", "OnCloseExpandTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChatMenuBar.OnEventChatTabActivate
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLChatTabType                          InChatTabType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInActivate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatMenuBar::OnEventChatTabActivate(ETLChatTabType InChatTabType, bool bInActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatMenuBar", "OnEventChatTabActivate");

	Params::TLUserWidgetChatMenuBar_OnEventChatTabActivate Parms{};

	Parms.InChatTabType = InChatTabType;
	Parms.bInActivate = bInActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatMenuBar.OnExpandButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLChatTabType                          InChatTabType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatMenuBar::OnExpandButton(ETLChatTabType InChatTabType, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatMenuBar", "OnExpandButton");

	Params::TLUserWidgetChatMenuBar_OnExpandButton Parms{};

	Parms.InChatTabType = InChatTabType;
	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatMenuBar.OnPlayTabExpandAnimation
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChatMenuBar::OnPlayTabExpandAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatMenuBar", "OnPlayTabExpandAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillBookWeaponSet.OnWeaponCategorySelected_BP
// (Event, Public, BlueprintEvent)
// Parameters:
// EWeaponCategory                         InWeaponCategory                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WeaponSetIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookWeaponSet::OnWeaponCategorySelected_BP(EWeaponCategory InWeaponCategory, int32 WeaponSetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookWeaponSet", "OnWeaponCategorySelected_BP");

	Params::TLUserWidgetSkillBookWeaponSet_OnWeaponCategorySelected_BP Parms{};

	Parms.InWeaponCategory = InWeaponCategory;
	Parms.WeaponSetIndex = WeaponSetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPurchaseState.OnGoodsState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsNew                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsBest                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsEvent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPurchaseState::OnGoodsState(bool InIsNew, bool InIsBest, bool InIsEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPurchaseState", "OnGoodsState");

	Params::TLUserWidgetPurchaseState_OnGoodsState Parms{};

	Parms.InIsNew = InIsNew;
	Parms.InIsBest = InIsBest;
	Parms.InIsEvent = InIsEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEmojiListEntry.OnHideSelectedItem
// (Event, Public, BlueprintEvent)

void UTLUserWidgetEmojiListEntry::OnHideSelectedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEmojiListEntry", "OnHideSelectedItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetEmojiListEntry.OnPlayEmojiAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   AnimFrame                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEmojiListEntry::OnPlayEmojiAnimation(int32 AnimFrame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEmojiListEntry", "OnPlayEmojiAnimation");

	Params::TLUserWidgetEmojiListEntry_OnPlayEmojiAnimation Parms{};

	Parms.AnimFrame = AnimFrame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPotionAutoUseController.SetListOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPotionAutoUseController::SetListOpen(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPotionAutoUseController", "SetListOpen");

	Params::TLUserWidgetPotionAutoUseController_SetListOpen Parms{};

	Parms.bInValue = bInValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatUser.OnUpdateWaitingInviteUser
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsWaiting                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatUser::OnUpdateWaitingInviteUser(bool IsWaiting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatUser", "OnUpdateWaitingInviteUser");

	Params::TLUserWidgetChatUser_OnUpdateWaitingInviteUser Parms{};

	Parms.IsWaiting = IsWaiting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatUserList.OnUpdateVisibleExpandButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatUserList::OnUpdateVisibleExpandButton(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatUserList", "OnUpdateVisibleExpandButton");

	Params::TLUserWidgetChatUserList_OnUpdateVisibleExpandButton Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatVoiceChatListItem.HandleClickVoiceChatEntryButton
// (Final, Native, Protected)

void UTLUserWidgetChatVoiceChatListItem::HandleClickVoiceChatEntryButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatVoiceChatListItem", "HandleClickVoiceChatEntryButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatVoiceRecordGauge.OnUpdateRecordState
// (Event, Public, BlueprintEvent)

void UTLUserWidgetChatVoiceRecordGauge::OnUpdateRecordState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatVoiceRecordGauge", "OnUpdateRecordState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChatVoiceRecordGauge.UpdateRemainPercent
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatVoiceRecordGauge::UpdateRemainPercent(float InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatVoiceRecordGauge", "UpdateRemainPercent");

	Params::TLUserWidgetChatVoiceRecordGauge_UpdateRemainPercent Parms{};

	Parms.InPercent = InPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatWindow.OnOpenFullScreenUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsOpenUI                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatWindow::OnOpenFullScreenUI(bool IsOpenUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatWindow", "OnOpenFullScreenUI");

	Params::TLUserWidgetChatWindow_OnOpenFullScreenUI Parms{};

	Parms.IsOpenUI = IsOpenUI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatWindow.OnSocialMotionListUpdated
// (Final, Native, Public)

void UTLUserWidgetChatWindow::OnSocialMotionListUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatWindow", "OnSocialMotionListUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatWindow.OnSocialMotionNotificationOff
// (Final, Native, Public)
// Parameters:
// class FName                             InMotionID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatWindow::OnSocialMotionNotificationOff(class FName InMotionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatWindow", "OnSocialMotionNotificationOff");

	Params::TLUserWidgetChatWindow_OnSocialMotionNotificationOff Parms{};

	Parms.InMotionID = InMotionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetChatWindow.OnStartAnimChangeChatVisibleType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLChatVisibleType                      OldVisibleType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLChatVisibleType                      NewVisibleType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetChatWindow::OnStartAnimChangeChatVisibleType(ETLChatVisibleType OldVisibleType, ETLChatVisibleType NewVisibleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatWindow", "OnStartAnimChangeChatVisibleType");

	Params::TLUserWidgetChatWindow_OnStartAnimChangeChatVisibleType Parms{};

	Parms.OldVisibleType = OldVisibleType;
	Parms.NewVisibleType = NewVisibleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetChatWindow.OnStartNewMessageAnimInFullScreenUI
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChatWindow::OnStartNewMessageAnimInFullScreenUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatWindow", "OnStartNewMessageAnimInFullScreenUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChatWindow.OnToggleGroupTabExpandButton
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChatWindow::OnToggleGroupTabExpandButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatWindow", "OnToggleGroupTabExpandButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetChatWindow.OnToggleWhisperTabExpandButton
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetChatWindow::OnToggleWhisperTabExpandButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetChatWindow", "OnToggleWhisperTabExpandButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCinematricDialog.PlayChoiceTake
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TakeCutsceneID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ExclusiveTag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTLInfoCinematicDialogSelectList InTLInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(int32 SelectedIndex)>    InCallBackOnChoiceEndTake                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialog::PlayChoiceTake(class FName TakeCutsceneID, class FName ExclusiveTag, const struct FTLInfoCinematicDialogSelectList& InTLInfo, const TDelegate<void(int32 SelectedIndex)>& InCallBackOnChoiceEndTake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialog", "PlayChoiceTake");

	Params::TLUserWidgetCinematricDialog_PlayChoiceTake Parms{};

	Parms.TakeCutsceneID = TakeCutsceneID;
	Parms.ExclusiveTag = ExclusiveTag;
	Parms.InTLInfo = std::move(InTLInfo);
	Parms.InCallBackOnChoiceEndTake = InCallBackOnChoiceEndTake;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialog.PlayEndTake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EEndTakeType                            InEndTakeType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialog::PlayEndTake(EEndTakeType InEndTakeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialog", "PlayEndTake");

	Params::TLUserWidgetCinematricDialog_PlayEndTake Parms{};

	Parms.InEndTakeType = InEndTakeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialog.PlayInputActionTake
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             TakeCutsceneID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCinematicInputActionData        PCData                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FCinematicInputActionData        ConsoleData                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  IconPath                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       InCallBackOnEndTake                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialog::PlayInputActionTake(class FName TakeCutsceneID, const struct FCinematicInputActionData& PCData, const struct FCinematicInputActionData& ConsoleData, const struct FSoftObjectPath& IconPath, const TDelegate<void()>& InCallBackOnEndTake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialog", "PlayInputActionTake");

	Params::TLUserWidgetCinematricDialog_PlayInputActionTake Parms{};

	Parms.TakeCutsceneID = TakeCutsceneID;
	Parms.PCData = std::move(PCData);
	Parms.ConsoleData = std::move(ConsoleData);
	Parms.IconPath = std::move(IconPath);
	Parms.InCallBackOnEndTake = InCallBackOnEndTake;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialog.PlayTake
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TakeCutsceneID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ExclusiveTag                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       InCallBackOnEndTake                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialog::PlayTake(class FName TakeCutsceneID, class FName ExclusiveTag, const TDelegate<void()>& InCallBackOnEndTake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialog", "PlayTake");

	Params::TLUserWidgetCinematricDialog_PlayTake Parms{};

	Parms.TakeCutsceneID = TakeCutsceneID;
	Parms.ExclusiveTag = ExclusiveTag;
	Parms.InCallBackOnEndTake = InCallBackOnEndTake;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialog.SetShowCursor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialog::SetShowCursor(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialog", "SetShowCursor");

	Params::TLUserWidgetCinematricDialog_SetShowCursor Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialog.StopTake
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetCinematricDialog::StopTake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialog", "StopTake");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialog_SpecialContent.OnNameValidated
// (Final, Native, Private)
// Parameters:
// bool                                    bValidated                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialog_SpecialContent::OnNameValidated(bool bValidated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialog_SpecialContent", "OnNameValidated");

	Params::TLUserWidgetCinematricDialog_SpecialContent_OnNameValidated Parms{};

	Parms.bValidated = bValidated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialog_SpecialContent.PlayNameInputTake
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             NameCutsceneID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       InCallBackOnEndTake                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialog_SpecialContent::PlayNameInputTake(class FName NameCutsceneID, const TDelegate<void()>& InCallBackOnEndTake)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialog_SpecialContent", "PlayNameInputTake");

	Params::TLUserWidgetCinematricDialog_SpecialContent_PlayNameInputTake Parms{};

	Parms.NameCutsceneID = NameCutsceneID;
	Parms.InCallBackOnEndTake = InCallBackOnEndTake;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialog_SpecialContent.ShowWorldMap
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   InZoomLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        InTargetPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       InMapCinematicKeyEvent                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialog_SpecialContent::ShowWorldMap(float InZoomLevel, const struct FVector2D& InTargetPos, const TDelegate<void()>& InMapCinematicKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialog_SpecialContent", "ShowWorldMap");

	Params::TLUserWidgetCinematricDialog_SpecialContent_ShowWorldMap Parms{};

	Parms.InZoomLevel = InZoomLevel;
	Parms.InTargetPos = std::move(InTargetPos);
	Parms.InMapCinematicKeyEvent = InMapCinematicKeyEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialog_SpecialContent.StartMapCinematicDialog
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       InMapReadyEvent                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialog_SpecialContent::StartMapCinematicDialog(const TDelegate<void()>& InMapReadyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialog_SpecialContent", "StartMapCinematicDialog");

	Params::TLUserWidgetCinematricDialog_SpecialContent_StartMapCinematicDialog Parms{};

	Parms.InMapReadyEvent = InMapReadyEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetDynamicEventGuideBaseInfo.OnChangeDynamicEventInfo
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideBaseInfo::OnChangeDynamicEventInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBaseInfo", "OnChangeDynamicEventInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideBaseInfo.OnCurrentType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLDynamicEventHUDType                  InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventGuideBaseInfo::OnCurrentType(ETLDynamicEventHUDType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBaseInfo", "OnCurrentType");

	Params::TLUserWidgetDynamicEventGuideBaseInfo_OnCurrentType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventGuideBaseInfo.OnEndShowAnimation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideBaseInfo::OnEndShowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBaseInfo", "OnEndShowAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideBaseInfo.OnUpdateDynamicEventAssist
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideBaseInfo::OnUpdateDynamicEventAssist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBaseInfo", "OnUpdateDynamicEventAssist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideBaseInfo.OnUpdateDynamicEventKill
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideBaseInfo::OnUpdateDynamicEventKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBaseInfo", "OnUpdateDynamicEventKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideBaseInfo.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventGuideBaseInfo::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBaseInfo", "OnUpdateScheduleType");

	Params::TLUserWidgetDynamicEventGuideBaseInfo_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventGuideBaseInfo.OpenHelp
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetDynamicEventGuideBaseInfo::OpenHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBaseInfo", "OpenHelp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetDynamicEventGuideBaseInfo.PlayWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideBaseInfo::PlayWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBaseInfo", "PlayWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideBaseInfo.StopWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideBaseInfo::StopWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBaseInfo", "StopWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideBaseInfo.UpdateMyEECount
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventGuideBaseInfo::UpdateMyEECount(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBaseInfo", "UpdateMyEECount");

	Params::TLUserWidgetDynamicEventGuideBaseInfo_UpdateMyEECount Parms{};

	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCinematricDialogPanel.HandleEndCinematicDialog
// (Final, Native, Public)
// Parameters:
// class FName                             InTableRowId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialogPanel::HandleEndCinematicDialog(class FName InTableRowId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialogPanel", "HandleEndCinematicDialog");

	Params::TLUserWidgetCinematricDialogPanel_HandleEndCinematicDialog Parms{};

	Parms.InTableRowId = InTableRowId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialogPanel.HandleEndCinematicDialogTake
// (Final, Native, Private)
// Parameters:
// bool                                    bInSkipped                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialogPanel::HandleEndCinematicDialogTake(bool bInSkipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialogPanel", "HandleEndCinematicDialogTake");

	Params::TLUserWidgetCinematricDialogPanel_HandleEndCinematicDialogTake Parms{};

	Parms.bInSkipped = bInSkipped;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialogPanel.HandleMapCinematicDialog
// (Final, Native, Private)
// Parameters:
// bool                                    InOn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialogPanel::HandleMapCinematicDialog(bool InOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialogPanel", "HandleMapCinematicDialog");

	Params::TLUserWidgetCinematricDialogPanel_HandleMapCinematicDialog Parms{};

	Parms.InOn = InOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialogPanel.HandleStartCinematicDialog
// (Final, Native, Public)
// Parameters:
// class FName                             InTableRowId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialogPanel::HandleStartCinematicDialog(class FName InTableRowId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialogPanel", "HandleStartCinematicDialog");

	Params::TLUserWidgetCinematricDialogPanel_HandleStartCinematicDialog Parms{};

	Parms.InTableRowId = InTableRowId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialogPanel.HandleStartCinematicDialogChoiceTake
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FTLInfoCinematicDialogSelectList InTLInfoCinematicDialogSelectList                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialogPanel::HandleStartCinematicDialogChoiceTake(const struct FTLInfoCinematicDialogSelectList& InTLInfoCinematicDialogSelectList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialogPanel", "HandleStartCinematicDialogChoiceTake");

	Params::TLUserWidgetCinematricDialogPanel_HandleStartCinematicDialogChoiceTake Parms{};

	Parms.InTLInfoCinematicDialogSelectList = std::move(InTLInfoCinematicDialogSelectList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialogPanel.HandleStartCinematicDialogTake
// (Final, Native, Private)
// Parameters:
// class FName                             InCutSceneID                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCinematricDialogPanel::HandleStartCinematicDialogTake(class FName InCutSceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialogPanel", "HandleStartCinematicDialogTake");

	Params::TLUserWidgetCinematricDialogPanel_HandleStartCinematicDialogTake Parms{};

	Parms.InCutSceneID = InCutSceneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialogPanel.PressContextMenu
// (Final, Native, Private)

void UTLUserWidgetCinematricDialogPanel::PressContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialogPanel", "PressContextMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCinematricDialogPanel.SelectContextMenu
// (Final, Native, Private)

void UTLUserWidgetCinematricDialogPanel::SelectContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCinematricDialogPanel", "SelectContextMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetEventCalenderWebView.HandleOnWebBrowserClosed
// (Final, Native, Protected)
// Parameters:
// bool                                    HasError                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMsg                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventCalenderWebView::HandleOnWebBrowserClosed(bool HasError, const class FString& ErrorMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventCalenderWebView", "HandleOnWebBrowserClosed");

	Params::TLUserWidgetEventCalenderWebView_HandleOnWebBrowserClosed Parms{};

	Parms.HasError = HasError;
	Parms.ErrorMsg = std::move(ErrorMsg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetEventCalenderWebView.OpenWeb
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           InUrl                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventCalenderWebView::OpenWeb(const class FString& InUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventCalenderWebView", "OpenWeb");

	Params::TLUserWidgetEventCalenderWebView_OpenWeb Parms{};

	Parms.InUrl = std::move(InUrl);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetClock.HandleChangeFixedGameHour
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bFixedGameHour_0                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetClock::HandleChangeFixedGameHour(bool bFixedGameHour_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetClock", "HandleChangeFixedGameHour");

	Params::TLUserWidgetClock_HandleChangeFixedGameHour Parms{};

	Parms.bFixedGameHour_0 = bFixedGameHour_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetClock.OnChangeSunriseToDay
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetClock::OnChangeSunriseToDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetClock", "OnChangeSunriseToDay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetClock.OnChangeSunsetToNight
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetClock::OnChangeSunsetToNight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetClock", "OnChangeSunsetToNight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetClock.OnStartTimelapse
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetClock::OnStartTimelapse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetClock", "OnStartTimelapse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetClock.SetFixedGameHour
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInFixedGameHour                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetClock::SetFixedGameHour(bool bInFixedGameHour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetClock", "SetFixedGameHour");

	Params::TLUserWidgetClock_SetFixedGameHour Parms{};

	Parms.bInFixedGameHour = bInFixedGameHour;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCodexCodeBase.OnCodeFocusEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InbVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexCodeBase::OnCodeFocusEvent(bool InbVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCodeBase", "OnCodeFocusEvent");

	Params::TLUserWidgetCodexCodeBase_OnCodeFocusEvent Parms{};

	Parms.InbVisible = InbVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexCodeBase.OnCodeStatusEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCodexCommonStatusType                InCodeStatusType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexCodeBase::OnCodeStatusEvent(ETLCodexCommonStatusType InCodeStatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCodeBase", "OnCodeStatusEvent");

	Params::TLUserWidgetCodexCodeBase_OnCodeStatusEvent Parms{};

	Parms.InCodeStatusType = InCodeStatusType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexCodeBase.OnDimmedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbDisable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexCodeBase::OnDimmedEvent(bool InbDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCodeBase", "OnDimmedEvent");

	Params::TLUserWidgetCodexCodeBase_OnDimmedEvent Parms{};

	Parms.InbDisable = InbDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexCodeBase.OnRewarableEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbRewardable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexCodeBase::OnRewarableEvent(bool InbRewardable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCodeBase", "OnRewarableEvent");

	Params::TLUserWidgetCodexCodeBase_OnRewarableEvent Parms{};

	Parms.InbRewardable = InbRewardable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexCodeBase.OnRewardEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCodexCodeBase::OnRewardEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCodeBase", "OnRewardEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCodexAlarm.ButtonClickCodexGroupOpen
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetCodexAlarm::ButtonClickCodexGroupOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAlarm", "ButtonClickCodexGroupOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCodexAlarmCode.HandleCompleteAnimationFinished
// (Final, Native, Public)

void UTLUserWidgetCodexAlarmCode::HandleCompleteAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAlarmCode", "HandleCompleteAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCodexAlarmCode.OnClickedDetailButton
// (Native, Public, BlueprintCallable)

void UTLUserWidgetCodexAlarmCode::OnClickedDetailButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAlarmCode", "OnClickedDetailButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCodexAlarmCode.OnUpdateCategoryType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECodexCategoryType                      CodexCategoryType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexAlarmCode::OnUpdateCategoryType(ECodexCategoryType CodexCategoryType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAlarmCode", "OnUpdateCategoryType");

	Params::TLUserWidgetCodexAlarmCode_OnUpdateCategoryType Parms{};

	Parms.CodexCategoryType = CodexCategoryType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexAlarmCode.OnUpdateCode
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCodexAlarmCode::OnUpdateCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAlarmCode", "OnUpdateCode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCodexAlarmObjective.HandleCompleteObjAnimationFinished
// (Final, Native, Public)

void UTLUserWidgetCodexAlarmObjective::HandleCompleteObjAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAlarmObjective", "HandleCompleteObjAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCodexAlarmObjective.OnCountingCodeAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCodexAlarmObjective::OnCountingCodeAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAlarmObjective", "OnCountingCodeAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCodexAlarmObjective.OnShowObjective
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bPlayingPrevComplete                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexAlarmObjective::OnShowObjective(bool bPlayingPrevComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAlarmObjective", "OnShowObjective");

	Params::TLUserWidgetCodexAlarmObjective_OnShowObjective Parms{};

	Parms.bPlayingPrevComplete = bPlayingPrevComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexAlarmObjective.OnStateObjectiveAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCompleted                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexAlarmObjective::OnStateObjectiveAnim(bool bCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexAlarmObjective", "OnStateObjectiveAnim");

	Params::TLUserWidgetCodexAlarmObjective_OnStateObjectiveAnim Parms{};

	Parms.bCompleted = bCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxContractShareConfirm.OnUpdateSharedInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InSender                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxContractShareConfirm::OnUpdateSharedInfo(const bool InSender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxContractShareConfirm", "OnUpdateSharedInfo");

	Params::TLUserWidgetMsgBoxContractShareConfirm_OnUpdateSharedInfo Parms{};

	Parms.InSender = InSender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexChart.OnSelectChart
// (Event, Public, BlueprintEvent)
// Parameters:
// ECodexCategoryType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexChart::OnSelectChart(ECodexCategoryType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexChart", "OnSelectChart");

	Params::TLUserWidgetCodexChart_OnSelectChart Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexChart.OnUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexChart::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexChart", "OnUnLockMemorial");

	Params::TLUserWidgetCodexChart_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexDetailObjective.OnNotExistPrevLineEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCodexDetailObjective::OnNotExistPrevLineEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexDetailObjective", "OnNotExistPrevLineEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCodexDetailObjective.OnRewardEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCodexDetailObjective::OnRewardEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexDetailObjective", "OnRewardEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCodexDetailObjective.OnStatusEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCodexCommonStatusType                InStatusType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexDetailObjective::OnStatusEvent(ETLCodexCommonStatusType InStatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexDetailObjective", "OnStatusEvent");

	Params::TLUserWidgetCodexDetailObjective_OnStatusEvent Parms{};

	Parms.InStatusType = InStatusType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexDetailObjective.OnUpdateNextLineEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbAttained                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexDetailObjective::OnUpdateNextLineEvent(bool InbAttained)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexDetailObjective", "OnUpdateNextLineEvent");

	Params::TLUserWidgetCodexDetailObjective_OnUpdateNextLineEvent Parms{};

	Parms.InbAttained = InbAttained;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexDetailObjective.OnUpdatePrevLineEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbAttained                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexDetailObjective::OnUpdatePrevLineEvent(bool InbAttained)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexDetailObjective", "OnUpdatePrevLineEvent");

	Params::TLUserWidgetCodexDetailObjective_OnUpdatePrevLineEvent Parms{};

	Parms.InbAttained = InbAttained;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexCollectionPage.OnUpdatePageTypeEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCodexCollectionPageType              PageType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexCollectionPage::OnUpdatePageTypeEvent(ETLCodexCollectionPageType PageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCollectionPage", "OnUpdatePageTypeEvent");

	Params::TLUserWidgetCodexCollectionPage_OnUpdatePageTypeEvent Parms{};

	Parms.PageType = PageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexCollectionPageButton.OnStatusEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCollected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexCollectionPageButton::OnStatusEvent(bool bCollected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCollectionPageButton", "OnStatusEvent");

	Params::TLUserWidgetCodexCollectionPageButton_OnStatusEvent Parms{};

	Parms.bCollected = bCollected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFishingGauge.OnChangeDifficulty
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLFishingDifficultType                 Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFishingGauge::OnChangeDifficulty(ETLFishingDifficultType Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFishingGauge", "OnChangeDifficulty");

	Params::TLUserWidgetFishingGauge_OnChangeDifficulty Parms{};

	Parms.Difficulty = Difficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexCollectionBookDetailPanel.OnCompleteBookEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCollectedComplete                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexCollectionBookDetailPanel::OnCompleteBookEvent(bool bCollectedComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCollectionBookDetailPanel", "OnCompleteBookEvent");

	Params::TLUserWidgetCodexCollectionBookDetailPanel_OnCompleteBookEvent Parms{};

	Parms.bCollectedComplete = bCollectedComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexCollectionBookDetailPanel.OnUpdatePageTypeEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCodexCollectionPageType              PageType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexCollectionBookDetailPanel::OnUpdatePageTypeEvent(ETLCodexCollectionPageType PageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexCollectionBookDetailPanel", "OnUpdatePageTypeEvent");

	Params::TLUserWidgetCodexCollectionBookDetailPanel_OnUpdatePageTypeEvent Parms{};

	Parms.PageType = PageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipSetInfo.OnUpdateDescription
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipSetInfo::OnUpdateDescription(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipSetInfo", "OnUpdateDescription");

	Params::TLUserWidgetItemTooltipSetInfo_OnUpdateDescription Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCustomizeLobby.OnBlackscreenFadeInFinishCallback
// (Final, Native, Private)

void UTLUserWidgetCustomizeLobby::OnBlackscreenFadeInFinishCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeLobby", "OnBlackscreenFadeInFinishCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCodexGroupRewardDetail.OnCodexRewarded
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCodexGroupRewardDetail::OnCodexRewarded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexGroupRewardDetail", "OnCodexRewarded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCodexGroupRewardDetail.OnGroupRewardUIPlacementEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InRewardCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexGroupRewardDetail::OnGroupRewardUIPlacementEvent(int32 InRewardCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexGroupRewardDetail", "OnGroupRewardUIPlacementEvent");

	Params::TLUserWidgetCodexGroupRewardDetail_OnGroupRewardUIPlacementEvent Parms{};

	Parms.InRewardCount = InRewardCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexGroupRewardDetail.OnUpdateDetail
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCodexGroupRewardDetail::OnUpdateDetail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexGroupRewardDetail", "OnUpdateDetail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCodexObjectiveNotification.ButtonClickCodexNotification
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetCodexObjectiveNotification::ButtonClickCodexNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexObjectiveNotification", "ButtonClickCodexNotification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCodexUnit.HandleCheckedFoldButtonEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCheck                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexUnit::HandleCheckedFoldButtonEvent(bool bCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexUnit", "HandleCheckedFoldButtonEvent");

	Params::TLUserWidgetCodexUnit_HandleCheckedFoldButtonEvent Parms{};

	Parms.bCheck = bCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexUnit.OnUnLockMemorial
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexUnit::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexUnit", "OnUnLockMemorial");

	Params::TLUserWidgetCodexUnit_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexVoiceRead.OnButtonClickedEvent
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetCodexVoiceRead::OnButtonClickedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexVoiceRead", "OnButtonClickedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCodexVoiceRead.OnNudgePlayEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCodexVoiceRead::OnNudgePlayEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexVoiceRead", "OnNudgePlayEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCodexVoiceRead.OnNudgeStopEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCodexVoiceRead::OnNudgeStopEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexVoiceRead", "OnNudgeStopEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCodexVoiceRead.OnVoicePlayEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InImmediatlyPlay                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCodexVoiceRead::OnVoicePlayEvent(bool InImmediatlyPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexVoiceRead", "OnVoicePlayEvent");

	Params::TLUserWidgetCodexVoiceRead_OnVoicePlayEvent Parms{};

	Parms.InImmediatlyPlay = InImmediatlyPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCodexVoiceRead.OnVoiceStopEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCodexVoiceRead::OnVoiceStopEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCodexVoiceRead", "OnVoiceStopEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGuildMemberList.HandleOnlineMemberCheckButton
// (Final, Native, Private)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildMemberList::HandleOnlineMemberCheckButton(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildMemberList", "HandleOnlineMemberCheckButton");

	Params::TLUserWidgetGuildMemberList_HandleOnlineMemberCheckButton Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetColorPicker.HandleChangeUIPlatformBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLUIPlatform                           InUIPlatform                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetColorPicker::HandleChangeUIPlatformBP(ETLUIPlatform InUIPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "HandleChangeUIPlatformBP");

	Params::TLUserWidgetColorPicker_HandleChangeUIPlatformBP Parms{};

	Parms.InUIPlatform = InUIPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetColorPicker.HandleHueSliderValueChanged
// (Final, Native, Protected)
// Parameters:
// float                                   InHue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetColorPicker::HandleHueSliderValueChanged(float InHue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "HandleHueSliderValueChanged");

	Params::TLUserWidgetColorPicker_HandleHueSliderValueChanged Parms{};

	Parms.InHue = InHue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetColorPicker.HandleSliderMouseCaptureBegin
// (Final, Native, Protected)

void UTLUserWidgetColorPicker::HandleSliderMouseCaptureBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "HandleSliderMouseCaptureBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetColorPicker.HandleSliderMouseCaptureEnd
// (Final, Native, Protected)

void UTLUserWidgetColorPicker::HandleSliderMouseCaptureEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "HandleSliderMouseCaptureEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetColorPicker.HandleSVSliderValueChanged
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct FVector2D                        InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetColorPicker::HandleSVSliderValueChanged(const struct FVector2D& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "HandleSVSliderValueChanged");

	Params::TLUserWidgetColorPicker_HandleSVSliderValueChanged Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetColorPicker.HandleTextFocusLost
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetColorPicker::HandleTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "HandleTextFocusLost");

	Params::TLUserWidgetColorPicker_HandleTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetColorPicker.OnChangeFocusArea
// (Event, Protected, BlueprintEvent)
// Parameters:
// EColorPickerFocusArea                   InArea                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetColorPicker::OnChangeFocusArea(EColorPickerFocusArea InArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "OnChangeFocusArea");

	Params::TLUserWidgetColorPicker_OnChangeFocusArea Parms{};

	Parms.InArea = InArea;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetColorPicker.OnChangeHueImpl
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetColorPicker::OnChangeHueImpl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "OnChangeHueImpl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetColorPicker.OnChangeSVImpl
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetColorPicker::OnChangeSVImpl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "OnChangeSVImpl");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetColorPicker.OnClickedReset
// (Final, Native, Private)
// Parameters:
// bool                                    bCheck                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetColorPicker::OnClickedReset(bool bCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "OnClickedReset");

	Params::TLUserWidgetColorPicker_OnClickedReset Parms{};

	Parms.bCheck = bCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetColorPicker.OnInputFocusReceived
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetColorPicker::OnInputFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "OnInputFocusReceived");

	Params::TLUserWidgetColorPicker_OnInputFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetColorPicker.OnInputTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetColorPicker::OnInputTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "OnInputTextChanged");

	Params::TLUserWidgetColorPicker_OnInputTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetColorPicker.OnInputTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetColorPicker::OnInputTextCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "OnInputTextCommitted");

	Params::TLUserWidgetColorPicker_OnInputTextCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetColorPicker.GetHSV
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTLUserWidgetColorPicker::GetHSV() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "GetHSV");

	Params::TLUserWidgetColorPicker_GetHSV Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetColorPicker.ToFColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FColor UTLUserWidgetColorPicker::ToFColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "ToFColor");

	Params::TLUserWidgetColorPicker_ToFColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetColorPicker.ToHex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UTLUserWidgetColorPicker::ToHex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "ToHex");

	Params::TLUserWidgetColorPicker_ToHex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetColorPicker.ToLinearRGB
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTLUserWidgetColorPicker::ToLinearRGB() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetColorPicker", "ToLinearRGB");

	Params::TLUserWidgetColorPicker_ToLinearRGB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetCombatControl.OnCombatControlContentsOpenUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bContentsOpenPolymorph                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCombatControl::OnCombatControlContentsOpenUpdated(bool bContentsOpenPolymorph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatControl", "OnCombatControlContentsOpenUpdated");

	Params::TLUserWidgetCombatControl_OnCombatControlContentsOpenUpdated Parms{};

	Parms.bContentsOpenPolymorph = bContentsOpenPolymorph;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCombatPolymorphAwakeningPanel.OnGrowUpCompleted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLGrowthPendingData             InGrowthPendingData                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetCombatPolymorphAwakeningPanel::OnGrowUpCompleted(const struct FTLGrowthPendingData& InGrowthPendingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatPolymorphAwakeningPanel", "OnGrowUpCompleted");

	Params::TLUserWidgetCombatPolymorphAwakeningPanel_OnGrowUpCompleted Parms{};

	Parms.InGrowthPendingData = std::move(InGrowthPendingData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCombatPolymorphAwakeningPanel.OnGrowUpStartAnimationFinished
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetCombatPolymorphAwakeningPanel::OnGrowUpStartAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatPolymorphAwakeningPanel", "OnGrowUpStartAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCombatPolymorphAwakeningPanel.OnGrowUpStarted
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCombatPolymorphAwakeningPanel::OnGrowUpStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatPolymorphAwakeningPanel", "OnGrowUpStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCombatPolymorphAwakeningPanel.OnLevelChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCombatPolymorphAwakeningPanel::OnLevelChanged(int32 InLevel, int32 InMaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatPolymorphAwakeningPanel", "OnLevelChanged");

	Params::TLUserWidgetCombatPolymorphAwakeningPanel_OnLevelChanged Parms{};

	Parms.InLevel = InLevel;
	Parms.InMaxLevel = InMaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCombatPolymorphAwakeningPanel.OnLevelupReady
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bReady                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCombatPolymorphAwakeningPanel::OnLevelupReady(bool bReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatPolymorphAwakeningPanel", "OnLevelupReady");

	Params::TLUserWidgetCombatPolymorphAwakeningPanel_OnLevelupReady Parms{};

	Parms.bReady = bReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCombatPolymorphAwakeningPanel.OnPointChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InChancePoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InExpPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCombatPolymorphAwakeningPanel::OnPointChanged(int32 InChancePoint, int32 InExpPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatPolymorphAwakeningPanel", "OnPointChanged");

	Params::TLUserWidgetCombatPolymorphAwakeningPanel_OnPointChanged Parms{};

	Parms.InChancePoint = InChancePoint;
	Parms.InExpPoint = InExpPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildBenefitSlot.OnSelectBenefitGuild
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsSelected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildBenefitSlot::OnSelectBenefitGuild(bool IsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildBenefitSlot", "OnSelectBenefitGuild");

	Params::TLUserWidgetGuildBenefitSlot_OnSelectBenefitGuild Parms{};

	Parms.IsSelected = IsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCombatPolymorphListPanel.SetAwakeningPanel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTLUserWidgetCombatPolymorphAwakeningPanel*InAwakeningPanel                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCombatPolymorphListPanel::SetAwakeningPanel(class UTLUserWidgetCombatPolymorphAwakeningPanel* InAwakeningPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatPolymorphListPanel", "SetAwakeningPanel");

	Params::TLUserWidgetCombatPolymorphListPanel_SetAwakeningPanel Parms{};

	Parms.InAwakeningPanel = InAwakeningPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCombatPresetRename.HandleInputTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetCombatPresetRename::HandleInputTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatPresetRename", "HandleInputTextChanged");

	Params::TLUserWidgetCombatPresetRename_HandleInputTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCombatPresetRename.HandleInputTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCombatPresetRename::HandleInputTextCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatPresetRename", "HandleInputTextCommitted");

	Params::TLUserWidgetCombatPresetRename_HandleInputTextCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCombatPresetRename.HandleOnTextFocusLost
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetCombatPresetRename::HandleOnTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCombatPresetRename", "HandleOnTextFocusLost");

	Params::TLUserWidgetCombatPresetRename_HandleOnTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetConsoleSkillSlotActionGroup.OnActivateEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetConsoleSkillSlotActionGroup::OnActivateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleSkillSlotActionGroup", "OnActivateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetConsoleSkillSlotActionGroup.OnDeactivateEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetConsoleSkillSlotActionGroup::OnDeactivateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleSkillSlotActionGroup", "OnDeactivateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetConsoleAnalogCursor.OnChangeCursorType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCursorType                           OldCursorType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLCursorType                           NewCursorType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleAnalogCursor::OnChangeCursorType(ETLCursorType OldCursorType, ETLCursorType NewCursorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleAnalogCursor", "OnChangeCursorType");

	Params::TLUserWidgetConsoleAnalogCursor_OnChangeCursorType Parms{};

	Parms.OldCursorType = OldCursorType;
	Parms.NewCursorType = NewCursorType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMemorialBoard.HandleActionOpenMemorialUI
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetMemorialBoard::HandleActionOpenMemorialUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMemorialBoard", "HandleActionOpenMemorialUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMemorialBoard.HandleMinimizeButtonOnCheck
// (Final, Native, Public)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMemorialBoard::HandleMinimizeButtonOnCheck(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMemorialBoard", "HandleMinimizeButtonOnCheck");

	Params::TLUserWidgetMemorialBoard_HandleMinimizeButtonOnCheck Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMemorialBoard.OnMinimizeEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bMinimize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMemorialBoard::OnMinimizeEvent(bool bMinimize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMemorialBoard", "OnMinimizeEvent");

	Params::TLUserWidgetMemorialBoard_OnMinimizeEvent Parms{};

	Parms.bMinimize = bMinimize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMemorialBoard.OnRecordCompleted
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMemorialBoard::OnRecordCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMemorialBoard", "OnRecordCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMemorialBoard.OnUpdateGoalAchieved
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMemorialBoard::OnUpdateGoalAchieved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMemorialBoard", "OnUpdateGoalAchieved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMemorialBoard.OnUpdateGoalProgressing
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMemorialBoard::OnUpdateGoalProgressing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMemorialBoard", "OnUpdateGoalProgressing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetConsoleEventPopupHolder.OnEventHolderMinimization
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInEventHolderMinimization                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleEventPopupHolder::OnEventHolderMinimization(bool bInEventHolderMinimization)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleEventPopupHolder", "OnEventHolderMinimization");

	Params::TLUserWidgetConsoleEventPopupHolder_OnEventHolderMinimization Parms{};

	Parms.bInEventHolderMinimization = bInEventHolderMinimization;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionDetailHistory.OnDistributionState
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildDistributionStateType             InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailHistory::OnDistributionState(EGuildDistributionStateType InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailHistory", "OnDistributionState");

	Params::TLUserWidgetGuildDistributionDetailHistory_OnDistributionState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionDetailHistory.OnItemSlotUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailHistory::OnItemSlotUpdate(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailHistory", "OnItemSlotUpdate");

	Params::TLUserWidgetGuildDistributionDetailHistory_OnItemSlotUpdate Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleFaceButtonQuickSlotGroup.OnActivateEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetConsoleFaceButtonQuickSlotGroup::OnActivateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleFaceButtonQuickSlotGroup", "OnActivateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetConsoleFaceButtonQuickSlotGroup.OnChangeActivateMode
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLConsoleGroupActivateMode             InOld                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLConsoleGroupActivateMode             InNew                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleFaceButtonQuickSlotGroup::OnChangeActivateMode(ETLConsoleGroupActivateMode InOld, ETLConsoleGroupActivateMode InNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleFaceButtonQuickSlotGroup", "OnChangeActivateMode");

	Params::TLUserWidgetConsoleFaceButtonQuickSlotGroup_OnChangeActivateMode Parms{};

	Parms.InOld = InOld;
	Parms.InNew = InNew;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleFaceButtonQuickSlotGroup.OnDeactivateEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetConsoleFaceButtonQuickSlotGroup::OnDeactivateEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleFaceButtonQuickSlotGroup", "OnDeactivateEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetConsoleFaceButtonQuickSlotGroup.OnInitActivateMode
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLConsoleGroupActivateMode             InNew                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleFaceButtonQuickSlotGroup::OnInitActivateMode(ETLConsoleGroupActivateMode InNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleFaceButtonQuickSlotGroup", "OnInitActivateMode");

	Params::TLUserWidgetConsoleFaceButtonQuickSlotGroup_OnInitActivateMode Parms{};

	Parms.InNew = InNew;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleFaceButtonQuickSlotGroup.OnOtherGroupActivated
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    OtherGroupActivated                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleFaceButtonQuickSlotGroup::OnOtherGroupActivated(bool OtherGroupActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleFaceButtonQuickSlotGroup", "OnOtherGroupActivated");

	Params::TLUserWidgetConsoleFaceButtonQuickSlotGroup_OnOtherGroupActivated Parms{};

	Parms.OtherGroupActivated = OtherGroupActivated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleFaceButtonQuickSlotGroup.IsActivate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetConsoleFaceButtonQuickSlotGroup::IsActivate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleFaceButtonQuickSlotGroup", "IsActivate");

	Params::TLUserWidgetConsoleFaceButtonQuickSlotGroup_IsActivate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetConsoleFaceButtonQuickSlotGroup.IsAlwaysActivate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetConsoleFaceButtonQuickSlotGroup::IsAlwaysActivate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleFaceButtonQuickSlotGroup", "IsAlwaysActivate");

	Params::TLUserWidgetConsoleFaceButtonQuickSlotGroup_IsAlwaysActivate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetMagicDollExpeditionDollIcon.OnUpdateIconState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLExpeditionDollIconState              State                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDollExpeditionDollIcon::OnUpdateIconState(const ETLExpeditionDollIconState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollExpeditionDollIcon", "OnUpdateIconState");

	Params::TLUserWidgetMagicDollExpeditionDollIcon_OnUpdateIconState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconOccupationBattleInfo.OnShowState
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBattleInfoShowState                    InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconOccupationBattleInfo::OnShowState(EBattleInfoShowState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconOccupationBattleInfo", "OnShowState");

	Params::TLUserWidgetMapIconOccupationBattleInfo_OnShowState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFixQuickSlotGroup.OnContentsOpen
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InbOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFixQuickSlotGroup::OnContentsOpen(bool InbOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFixQuickSlotGroup", "OnContentsOpen");

	Params::TLUserWidgetFixQuickSlotGroup_OnContentsOpen Parms{};

	Parms.InbOpen = InbOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleFixQuickSlotGroup.OnUpdateCurrentSlotIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInChangingSlotReverse                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleFixQuickSlotGroup::OnUpdateCurrentSlotIndex(int32 InSlotIndex, bool bInChangingSlotReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleFixQuickSlotGroup", "OnUpdateCurrentSlotIndex");

	Params::TLUserWidgetConsoleFixQuickSlotGroup_OnUpdateCurrentSlotIndex Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.bInChangingSlotReverse = bInChangingSlotReverse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHud.DoCountAttack
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetHud::DoCountAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHud", "DoCountAttack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetHud.DoWeaponSwap
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetHud::DoWeaponSwap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHud", "DoWeaponSwap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetHud.OnAttackerShow
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAttackerNum                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHud::OnAttackerShow(bool InShow, int32 InAttackerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHud", "OnAttackerShow");

	Params::TLUserWidgetHud_OnAttackerShow Parms{};

	Parms.InShow = InShow;
	Parms.InAttackerNum = InAttackerNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHud.OnChangeMapModeType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLMapModeType                          InMapModeType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHud::OnChangeMapModeType(ETLMapModeType InMapModeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHud", "OnChangeMapModeType");

	Params::TLUserWidgetHud_OnChangeMapModeType Parms{};

	Parms.InMapModeType = InMapModeType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHud.OnLevelCapStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InLevelCapState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHud::OnLevelCapStateChanged(bool InLevelCapState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHud", "OnLevelCapStateChanged");

	Params::TLUserWidgetHud_OnLevelCapStateChanged Parms{};

	Parms.InLevelCapState = InLevelCapState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHud.OnMainHandEquipChange
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemCategory                           InItemCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsInInit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHud::OnMainHandEquipChange(EItemCategory InItemCategory, bool bIsInInit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHud", "OnMainHandEquipChange");

	Params::TLUserWidgetHud_OnMainHandEquipChange Parms{};

	Parms.InItemCategory = InItemCategory;
	Parms.bIsInInit = bIsInInit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHud.OnOpenDetailBuffWindow
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetHud::OnOpenDetailBuffWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHud", "OnOpenDetailBuffWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetHud.OnPvpModeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InOnPvpMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHud::OnPvpModeChanged(bool InOnPvpMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHud", "OnPvpModeChanged");

	Params::TLUserWidgetHud_OnPvpModeChanged Parms{};

	Parms.InOnPvpMode = InOnPvpMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHud.OnUpdateMovePolymorphQuickSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLUserWidgetSkillQuickSlot*      SkillSlotWidget                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHud::OnUpdateMovePolymorphQuickSlot(class UTLUserWidgetSkillQuickSlot* SkillSlotWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHud", "OnUpdateMovePolymorphQuickSlot");

	Params::TLUserWidgetHud_OnUpdateMovePolymorphQuickSlot Parms{};

	Parms.SkillSlotWidget = SkillSlotWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetConsoleHud.OnDpadRightIsRingMenu
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bRingMenu                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleHud::OnDpadRightIsRingMenu(bool bRingMenu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleHud", "OnDpadRightIsRingMenu");

	Params::TLUserWidgetConsoleHud_OnDpadRightIsRingMenu Parms{};

	Parms.bRingMenu = bRingMenu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleHud.OnShowAmmoListEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleHud::OnShowAmmoListEvent(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleHud", "OnShowAmmoListEvent");

	Params::TLUserWidgetConsoleHud_OnShowAmmoListEvent Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleHud.OnShowKeyGuide
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleHud::OnShowKeyGuide(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleHud", "OnShowKeyGuide");

	Params::TLUserWidgetConsoleHud_OnShowKeyGuide Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleHud.OnShowRingMenuEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleHud::OnShowRingMenuEvent(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleHud", "OnShowRingMenuEvent");

	Params::TLUserWidgetConsoleHud_OnShowRingMenuEvent Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleHud.OnShowTargetPriorityEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleHud::OnShowTargetPriorityEvent(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleHud", "OnShowTargetPriorityEvent");

	Params::TLUserWidgetConsoleHud_OnShowTargetPriorityEvent Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleHud.SetTargetScan
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTLUserWidgetConsoleTargetScan*   InTargetScan                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleHud::SetTargetScan(class UTLUserWidgetConsoleTargetScan* InTargetScan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleHud", "SetTargetScan");

	Params::TLUserWidgetConsoleHud_SetTargetScan Parms{};

	Parms.InTargetScan = InTargetScan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInvenSlotGroup.SetGroupFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETLItemGroupFilter                      InFilter                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInvenSlotGroup::SetGroupFilter(const ETLItemGroupFilter InFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlotGroup", "SetGroupFilter");

	Params::TLUserWidgetInvenSlotGroup_SetGroupFilter Parms{};

	Parms.InFilter = InFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInvenSlotGroup.ShowGroupFilterLabel
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInvenSlotGroup::ShowGroupFilterLabel(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenSlotGroup", "ShowGroupFilterLabel");

	Params::TLUserWidgetInvenSlotGroup_ShowGroupFilterLabel Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleInventory.OnDimmedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInDisable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleInventory::OnDimmedEvent(bool bInDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleInventory", "OnDimmedEvent");

	Params::TLUserWidgetConsoleInventory_OnDimmedEvent Parms{};

	Parms.bInDisable = bInDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleInventory.OnShowTempInventory
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleInventory::OnShowTempInventory(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleInventory", "OnShowTempInventory");

	Params::TLUserWidgetConsoleInventory_OnShowTempInventory Parms{};

	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemQuickSlotGroup.OnChangeSlotPage
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemQuickSlotGroup::OnChangeSlotPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlotGroup", "OnChangeSlotPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMapIconSiege.Button_OnClicked
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconSiege::Button_OnClicked(const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconSiege", "Button_OnClicked");

	Params::TLUserWidgetMapIconSiege_Button_OnClicked Parms{};

	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconSiege.OnUpdateIconColor
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColor                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconSiege::OnUpdateIconColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconSiege", "OnUpdateIconColor");

	Params::TLUserWidgetMapIconSiege_OnUpdateIconColor Parms{};

	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconSiege.OnUpdateSiegeState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsSiegeWarfare                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconSiege::OnUpdateSiegeState(bool InIsSiegeWarfare)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconSiege", "OnUpdateSiegeState");

	Params::TLUserWidgetMapIconSiege_OnUpdateSiegeState Parms{};

	Parms.InIsSiegeWarfare = InIsSiegeWarfare;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsolePartyHud.OnDimmed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInDimmed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsolePartyHud::OnDimmed(bool bInDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsolePartyHud", "OnDimmed");

	Params::TLUserWidgetConsolePartyHud_OnDimmed Parms{};

	Parms.bInDimmed = bInDimmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsolePartyHud.OnMatchingSuccess
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetConsolePartyHud::OnMatchingSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsolePartyHud", "OnMatchingSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetConsolePartyHud.OnUpdatePartyState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLPartyState                           InPartyState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsolePartyHud::OnUpdatePartyState(ETLPartyState InPartyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsolePartyHud", "OnUpdatePartyState");

	Params::TLUserWidgetConsolePartyHud_OnUpdatePartyState Parms{};

	Parms.InPartyState = InPartyState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsolePartyHud.IsMatchingParty
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetConsolePartyHud::IsMatchingParty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsolePartyHud", "IsMatchingParty");

	Params::TLUserWidgetConsolePartyHud_IsMatchingParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetOptionGameValueNumeric.HandleMinusButtonPressed
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueNumeric::HandleMinusButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueNumeric", "HandleMinusButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueNumeric.HandleMinusButtonReleased
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueNumeric::HandleMinusButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueNumeric", "HandleMinusButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueNumeric.HandlePlusButtonPressed
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueNumeric::HandlePlusButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueNumeric", "HandlePlusButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueNumeric.HandlePlusButtonReleased
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueNumeric::HandlePlusButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueNumeric", "HandlePlusButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetEmojiButton.OnSocialMotionListUpdated
// (Final, Native, Protected)

void UTLUserWidgetEmojiButton::OnSocialMotionListUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEmojiButton", "OnSocialMotionListUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetEmojiButton.OnSocialMotionNotificationOff
// (Final, Native, Protected)
// Parameters:
// class FName                             InMotionID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEmojiButton::OnSocialMotionNotificationOff(class FName InMotionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEmojiButton", "OnSocialMotionNotificationOff");

	Params::TLUserWidgetEmojiButton_OnSocialMotionNotificationOff Parms{};

	Parms.InMotionID = InMotionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueEnumRadioImage.HandleDecreaseButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueEnumRadioImage::HandleDecreaseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueEnumRadioImage", "HandleDecreaseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueEnumRadioImage.HandleIncreaseButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueEnumRadioImage::HandleIncreaseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueEnumRadioImage", "HandleIncreaseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetQuickSlot.OnCooldownEnd
// (Event, Public, BlueprintEvent)

void UTLUserWidgetQuickSlot::OnCooldownEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetQuickSlot", "OnCooldownEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetQuickSlot.OnEquipped
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetQuickSlot::OnEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetQuickSlot", "OnEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetQuickSlot.OnUpdateEditableNonQuickSlotSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetQuickSlot::OnUpdateEditableNonQuickSlotSelected(bool bInSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetQuickSlot", "OnUpdateEditableNonQuickSlotSelected");

	Params::TLUserWidgetQuickSlot_OnUpdateEditableNonQuickSlotSelected Parms{};

	Parms.bInSelected = bInSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetQuickSlot.IsIgnoreHotKeyHide
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetQuickSlot::IsIgnoreHotKeyHide() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetQuickSlot", "IsIgnoreHotKeyHide");

	Params::TLUserWidgetQuickSlot_IsIgnoreHotKeyHide Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetQuickSlot.IsKeyPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetQuickSlot::IsKeyPressed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetQuickSlot", "IsKeyPressed");

	Params::TLUserWidgetQuickSlot_IsKeyPressed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetConsoleQuickSlotGroup.OnActivateCurrentGroupIds
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSet<int32>                             LastID                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TSet<int32>                             NewId                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleQuickSlotGroup::OnActivateCurrentGroupIds(const TSet<int32>& LastID, const TSet<int32>& NewId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleQuickSlotGroup", "OnActivateCurrentGroupIds");

	Params::TLUserWidgetConsoleQuickSlotGroup_OnActivateCurrentGroupIds Parms{};

	Parms.LastID = std::move(LastID);
	Parms.NewId = std::move(NewId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleQuickSlotGroup.OnDeactivateCurrentGroupId
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   LastID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleQuickSlotGroup::OnDeactivateCurrentGroupId(int32 LastID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleQuickSlotGroup", "OnDeactivateCurrentGroupId");

	Params::TLUserWidgetConsoleQuickSlotGroup_OnDeactivateCurrentGroupId Parms{};

	Parms.LastID = LastID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleQuickSlotGroup.OnDeactivateCurrentGroupIds
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSet<int32>                             LastID                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleQuickSlotGroup::OnDeactivateCurrentGroupIds(const TSet<int32>& LastID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleQuickSlotGroup", "OnDeactivateCurrentGroupIds");

	Params::TLUserWidgetConsoleQuickSlotGroup_OnDeactivateCurrentGroupIds Parms{};

	Parms.LastID = std::move(LastID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetConsoleQuickSlotGroup.OnUpdateSkillQuickSlotGroupState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bContentsOpened                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SkillGroupShowCount                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetConsoleQuickSlotGroup::OnUpdateSkillQuickSlotGroupState(bool bContentsOpened, int32 SkillGroupShowCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetConsoleQuickSlotGroup", "OnUpdateSkillQuickSlotGroupState");

	Params::TLUserWidgetConsoleQuickSlotGroup_OnUpdateSkillQuickSlotGroupState Parms{};

	Parms.bContentsOpened = bContentsOpened;
	Parms.SkillGroupShowCount = SkillGroupShowCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthMissionObjective.OnStatusEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbComplete                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthMissionObjective::OnStatusEvent(bool InbComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthMissionObjective", "OnStatusEvent");

	Params::TLUserWidgetGrowthMissionObjective_OnStatusEvent Parms{};

	Parms.InbComplete = InbComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLWidgetConsoleSkillBook.OnActivateSkillQuickSlotGroup
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLWidgetConsoleSkillBook::OnActivateSkillQuickSlotGroup(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLWidgetConsoleSkillBook", "OnActivateSkillQuickSlotGroup");

	Params::TLWidgetConsoleSkillBook_OnActivateSkillQuickSlotGroup Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLWidgetConsoleSkillBook.OnDeactivateSkillQuickSlotGroup
// (Event, Protected, BlueprintEvent)

void UTLWidgetConsoleSkillBook::OnDeactivateSkillQuickSlotGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLWidgetConsoleSkillBook", "OnDeactivateSkillQuickSlotGroup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContentsAlarmManager.OnChangeManagerTab
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetContentsAlarmManager::OnChangeManagerTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmManager", "OnChangeManagerTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContentsAlarmReward.OnCompleteEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetContentsAlarmReward::OnCompleteEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmReward", "OnCompleteEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContentsAlarmReward.OnUpdateAlarmType
// (Event, Protected, BlueprintEvent)
// Parameters:
// EContentsAlarmType                      InViewType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsAlarmReward::OnUpdateAlarmType(EContentsAlarmType InViewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsAlarmReward", "OnUpdateAlarmType");

	Params::TLUserWidgetContentsAlarmReward_OnUpdateAlarmType Parms{};

	Parms.InViewType = InViewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsHolder.ScrollToContentWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTLUserWidget*                    InContentWidget                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsHolder::ScrollToContentWidget(class UTLUserWidget* InContentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsHolder", "ScrollToContentWidget");

	Params::TLUserWidgetContentsHolder_ScrollToContentWidget Parms{};

	Parms.InContentWidget = InContentWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsHolder.UpdateCodexAlarm
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetContentsHolder::UpdateCodexAlarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsHolder", "UpdateCodexAlarm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsHolder.UpdateGuildContractAlarm
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetContentsHolder::UpdateGuildContractAlarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsHolder", "UpdateGuildContractAlarm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsHolder.UpdateMemorialClick
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetContentsHolder::UpdateMemorialClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsHolder", "UpdateMemorialClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsHolder.UpdatePlayerContractAlarm
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetContentsHolder::UpdatePlayerContractAlarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsHolder", "UpdatePlayerContractAlarm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsHolder.UpdateProductionAlarm
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetContentsHolder::UpdateProductionAlarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsHolder", "UpdateProductionAlarm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsHolder.UpdateRotationEventClick
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetContentsHolder::UpdateRotationEventClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsHolder", "UpdateRotationEventClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContentsHolder.UpdateTabToggleClick
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetContentsHolder::UpdateTabToggleClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsHolder", "UpdateTabToggleClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTradePurchase.OnActiveEscrow
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTradePurchase::OnActiveEscrow(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTradePurchase", "OnActiveEscrow");

	Params::TLUserWidgetMsgBoxTradePurchase_OnActiveEscrow Parms{};

	Parms.InIsActive = InIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsTitle.SetMainTabUse
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInMainTabUse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsTitle::SetMainTabUse(bool bInMainTabUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsTitle", "SetMainTabUse");

	Params::TLUserWidgetContentsTitle_SetMainTabUse Parms{};

	Parms.bInMainTabUse = bInMainTabUse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContentsTitle.SetNextFullScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInbNextFullScreen                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContentsTitle::SetNextFullScreen(bool bInbNextFullScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContentsTitle", "SetNextFullScreen");

	Params::TLUserWidgetContentsTitle_SetNextFullScreen Parms{};

	Parms.bInbNextFullScreen = bInbNextFullScreen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMoviePlayer.HandleMediaClosed
// (Final, Native, Protected)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMoviePlayer::HandleMediaClosed(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMoviePlayer", "HandleMediaClosed");

	Params::TLUserWidgetMoviePlayer_HandleMediaClosed Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMoviePlayer.HandleMediaOpened
// (Final, Native, Protected)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OpenedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMoviePlayer::HandleMediaOpened(class UBinkMediaPlayer* InBinkMediaPlayer, const class FString& OpenedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMoviePlayer", "HandleMediaOpened");

	Params::TLUserWidgetMoviePlayer_HandleMediaOpened Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;
	Parms.OpenedUrl = std::move(OpenedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMoviePlayer.HandleMediaReachedEnd
// (Final, Native, Protected)
// Parameters:
// class UBinkMediaPlayer*                 InBinkMediaPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMoviePlayer::HandleMediaReachedEnd(class UBinkMediaPlayer* InBinkMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMoviePlayer", "HandleMediaReachedEnd");

	Params::TLUserWidgetMoviePlayer_HandleMediaReachedEnd Parms{};

	Parms.InBinkMediaPlayer = InBinkMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetDeTeamPartyMatchingButton.OnUpdateMatchingType
// (Event, Public, BlueprintEvent)
// Parameters:
// EDeTeamPartyMatchingType                InMatchingType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeTeamPartyMatchingButton::OnUpdateMatchingType(EDeTeamPartyMatchingType InMatchingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeTeamPartyMatchingButton", "OnUpdateMatchingType");

	Params::TLUserWidgetDeTeamPartyMatchingButton_OnUpdateMatchingType Parms{};

	Parms.InMatchingType = InMatchingType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractItem.ConfirmButtonClick
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetContractItem::ConfirmButtonClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractItem", "ConfirmButtonClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractItem.HandleChangeContract
// (Final, Native, Protected)
// Parameters:
// uint64                                  InContractGuid                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractItem::HandleChangeContract(uint64 InContractGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractItem", "HandleChangeContract");

	Params::TLUserWidgetContractItem_HandleChangeContract Parms{};

	Parms.InContractGuid = InContractGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractItem.HandleClickClose
// (Final, Native, Protected)

void UTLUserWidgetContractItem::HandleClickClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractItem", "HandleClickClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractItem.OnUpdateContractInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractItem::OnUpdateContractInfo(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractItem", "OnUpdateContractInfo");

	Params::TLUserWidgetContractItem_OnUpdateContractInfo Parms{};

	Parms.InObject = InObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractItem.RefreshItemContract
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetContractItem::RefreshItemContract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractItem", "RefreshItemContract");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractItem.SetContractInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractItem::SetContractInfo(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractItem", "SetContractInfo");

	Params::TLUserWidgetContractItem_SetContractInfo Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractItem.UpdateChangeContract
// (Event, Public, BlueprintEvent)

void UTLUserWidgetContractItem::UpdateChangeContract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractItem", "UpdateChangeContract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetRefreshFrame.OnUpdateRefreshInfo
// (Event, Public, BlueprintEvent)

void UTLUserWidgetRefreshFrame::OnUpdateRefreshInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRefreshFrame", "OnUpdateRefreshInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContractObjective.HandleCompleteContractObjective
// (Final, Native, Private)
// Parameters:
// uint64                                  InContractGuid                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InContractObjectiveGuid                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractObjective::HandleCompleteContractObjective(uint64 InContractGuid, uint64 InContractObjectiveGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractObjective", "HandleCompleteContractObjective");

	Params::TLUserWidgetContractObjective_HandleCompleteContractObjective Parms{};

	Parms.InContractGuid = InContractGuid;
	Parms.InContractObjectiveGuid = InContractObjectiveGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractObjective.HandleUpdateContractObjectiveCount
// (Final, Native, Private)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractObjective::HandleUpdateContractObjectiveCount(int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractObjective", "HandleUpdateContractObjectiveCount");

	Params::TLUserWidgetContractObjective_HandleUpdateContractObjectiveCount Parms{};

	Parms.InCount = InCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractObjective.OnCompleteContractObjective
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetContractObjective::OnCompleteContractObjective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractObjective", "OnCompleteContractObjective");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContractObjective.UpdateContractObjectiveCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractObjective::UpdateContractObjectiveCount(int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractObjective", "UpdateContractObjectiveCount");

	Params::TLUserWidgetContractObjective_UpdateContractObjectiveCount Parms{};

	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractReward.OnScreenRewardEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetContractReward::OnScreenRewardEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractReward", "OnScreenRewardEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetContractReward.OnUpdateContractInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractReward::OnUpdateContractInfo(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractReward", "OnUpdateContractInfo");

	Params::TLUserWidgetContractReward_OnUpdateContractInfo Parms{};

	Parms.InObject = InObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractReward.ReqContractItemReward
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetContractReward::ReqContractItemReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractReward", "ReqContractItemReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractRewardItemList.OnRewardResultEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGrade                              ItemGrade                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractRewardItemList::OnRewardResultEvent(int32 SlotIndex, EItemGrade ItemGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractRewardItemList", "OnRewardResultEvent");

	Params::TLUserWidgetContractRewardItemList_OnRewardResultEvent Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.ItemGrade = ItemGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractRewardItemList.UpdateResultItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemTableId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractRewardItemList::UpdateResultItem(int32 InSlotIndex, int32 InItemTableId, int32 InAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractRewardItemList", "UpdateResultItem");

	Params::TLUserWidgetContractRewardItemList_UpdateResultItem Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InItemTableId = InItemTableId;
	Parms.InAmount = InAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconCallClan.OnDamaged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsDamaged                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconCallClan::OnDamaged(bool InIsDamaged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconCallClan", "OnDamaged");

	Params::TLUserWidgetMapIconCallClan_OnDamaged Parms{};

	Parms.InIsDamaged = InIsDamaged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconCallClan.OnUpdateHpPercent
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InHpPercent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconCallClan::OnUpdateHpPercent(float InHpPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconCallClan", "OnUpdateHpPercent");

	Params::TLUserWidgetMapIconCallClan_OnUpdateHpPercent Parms{};

	Parms.InHpPercent = InHpPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractRewardScreenMessageSlot.OnUpdateRewardSlot
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemGrade                              InItemGrade                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractRewardScreenMessageSlot::OnUpdateRewardSlot(EItemGrade InItemGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractRewardScreenMessageSlot", "OnUpdateRewardSlot");

	Params::TLUserWidgetContractRewardScreenMessageSlot_OnUpdateRewardSlot Parms{};

	Parms.InItemGrade = InItemGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetContractTitle.SetContractInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractTitle::SetContractInfo(class UObject* InObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractTitle", "SetContractInfo");

	Params::TLUserWidgetContractTitle_SetContractInfo Parms{};

	Parms.InObject = InObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetContractTitle.SetContractInfoWithGuid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint64                                  InContractGuid                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetContractTitle::SetContractInfoWithGuid(uint64 InContractGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetContractTitle", "SetContractInfoWithGuid");

	Params::TLUserWidgetContractTitle_SetContractInfoWithGuid Parms{};

	Parms.InContractGuid = InContractGuid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCooking.OnChangeMainIngredient
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCooking::OnChangeMainIngredient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCooking", "OnChangeMainIngredient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCooking.OnShowInventory
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCooking::OnShowInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCooking", "OnShowInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCooking.OnUpdateLayout
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInCookingBook                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCooking::OnUpdateLayout(const bool bInCookingBook)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCooking", "OnUpdateLayout");

	Params::TLUserWidgetCooking_OnUpdateLayout Parms{};

	Parms.bInCookingBook = bInCookingBook;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCooking.OnUpdateMainIngredientNum
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InNum                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCooking::OnUpdateMainIngredientNum(const int32 InNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCooking", "OnUpdateMainIngredientNum");

	Params::TLUserWidgetCooking_OnUpdateMainIngredientNum Parms{};

	Parms.InNum = InNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCooking.OnUpdateOnboardingState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bOnboarding                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCooking::OnUpdateOnboardingState(bool bOnboarding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCooking", "OnUpdateOnboardingState");

	Params::TLUserWidgetCooking_OnUpdateOnboardingState Parms{};

	Parms.bOnboarding = bOnboarding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCooking.OnUpdateRecipeExp
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InExp                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCooking::OnUpdateRecipeExp(const int32 InExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCooking", "OnUpdateRecipeExp");

	Params::TLUserWidgetCooking_OnUpdateRecipeExp Parms{};

	Parms.InExp = InExp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCooking.OnUpdateVisibleCookingUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCooking::OnUpdateVisibleCookingUI(bool bInVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCooking", "OnUpdateVisibleCookingUI");

	Params::TLUserWidgetCooking_OnUpdateVisibleCookingUI Parms{};

	Parms.bInVisible = bInVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconSavedPlaceTooltip.SetFeeShortage
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMapIconSavedPlaceTooltip::SetFeeShortage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconSavedPlaceTooltip", "SetFeeShortage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCookingListSlot.OnUpdateCookAvailable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInAvailableCook                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCookingListSlot::OnUpdateCookAvailable(bool bInAvailableCook)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCookingListSlot", "OnUpdateCookAvailable");

	Params::TLUserWidgetCookingListSlot_OnUpdateCookAvailable Parms{};

	Parms.bInAvailableCook = bInAvailableCook;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildViewFrame.OnChangedFrameType
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildViewFrameType                     InFrameType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildViewFrame::OnChangedFrameType(EGuildViewFrameType InFrameType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildViewFrame", "OnChangedFrameType");

	Params::TLUserWidgetGuildViewFrame_OnChangedFrameType Parms{};

	Parms.InFrameType = InFrameType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCooldownIcon.OnCooldownEnd
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCooldownIcon::OnCooldownEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCooldownIcon", "OnCooldownEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCostTextButton.SetCostVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInCostVisible                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCostTextButton::SetCostVisible(bool bInCostVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCostTextButton", "SetCostVisible");

	Params::TLUserWidgetCostTextButton_SetCostVisible Parms{};

	Parms.bInCostVisible = bInCostVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCostTextButton.SetEnoughCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnoughCost                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCostTextButton::SetEnoughCost(bool bInEnoughCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCostTextButton", "SetEnoughCost");

	Params::TLUserWidgetCostTextButton_SetEnoughCost Parms{};

	Parms.bInEnoughCost = bInEnoughCost;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction TLClient.TLUserWidgetCostTextButton.TLOnUpdateEnoughCostEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bEnoughCost                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCostTextButton::TLOnUpdateEnoughCostEvent__DelegateSignature(bool bEnoughCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCostTextButton", "TLOnUpdateEnoughCostEvent__DelegateSignature");

	Params::TLUserWidgetCostTextButton_TLOnUpdateEnoughCostEvent__DelegateSignature Parms{};

	Parms.bEnoughCost = bEnoughCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCostTextButton.UpdateCost
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInZeroCost                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCostTextButton::UpdateCost(bool bInZeroCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCostTextButton", "UpdateCost");

	Params::TLUserWidgetCostTextButton_UpdateCost Parms{};

	Parms.bInZeroCost = bInZeroCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingBook.HandleNpcListButtonClick
// (Final, Native, Protected)

void UTLUserWidgetCraftingBook::HandleNpcListButtonClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingBook", "HandleNpcListButtonClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCraftingBook.ShowOnboarding
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingBook::ShowOnboarding(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingBook", "ShowOnboarding");

	Params::TLUserWidgetCraftingBook_ShowOnboarding Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMagicDollListPanel.HandleSearchFocusLost
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDollListPanel::HandleSearchFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollListPanel", "HandleSearchFocusLost");

	Params::TLUserWidgetMagicDollListPanel_HandleSearchFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMagicDollListPanel.HandleSearchTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDollListPanel::HandleSearchTextCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollListPanel", "HandleSearchTextCommitted");

	Params::TLUserWidgetMagicDollListPanel_HandleSearchTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetStatSlotTooltip.OnUpdateNodeState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLWeaponMasteryNodeState               InNodeState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStatSlotTooltip::OnUpdateNodeState(ETLWeaponMasteryNodeState InNodeState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatSlotTooltip", "OnUpdateNodeState");

	Params::TLUserWidgetStatSlotTooltip_OnUpdateNodeState Parms{};

	Parms.InNodeState = InNodeState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingMaterialSlotController.OnDimmed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InDimmed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingMaterialSlotController::OnDimmed(bool InDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingMaterialSlotController", "OnDimmed");

	Params::TLUserWidgetCraftingMaterialSlotController_OnDimmed Parms{};

	Parms.InDimmed = InDimmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingSlotAlarm.OnMaterialIncreased
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCraftingSlotAlarm::OnMaterialIncreased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingSlotAlarm", "OnMaterialIncreased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingSlotAlarm.OnMaterialSufficientUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InSufficient                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingSlotAlarm::OnMaterialSufficientUpdate(const bool InSufficient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingSlotAlarm", "OnMaterialSufficientUpdate");

	Params::TLUserWidgetCraftingSlotAlarm_OnMaterialSufficientUpdate Parms{};

	Parms.InSufficient = InSufficient;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingListPanel.ShowOnboarding
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingListPanel::ShowOnboarding(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingListPanel", "ShowOnboarding");

	Params::TLUserWidgetCraftingListPanel_ShowOnboarding Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingListSlot.OnUpdateCraftable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsCraftable                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingListSlot::OnUpdateCraftable(bool bIsCraftable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingListSlot", "OnUpdateCraftable");

	Params::TLUserWidgetCraftingListSlot_OnUpdateCraftable Parms{};

	Parms.bIsCraftable = bIsCraftable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWeaponMasteryNodeInterface.OnPlayCandidate
// (Event, Protected, BlueprintEvent)

void ITLUserWidgetWeaponMasteryNodeInterface::OnPlayCandidate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponMasteryNodeInterface", "OnPlayCandidate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWeaponMasteryNodeInterface.OnPlayEffectHover
// (Event, Protected, BlueprintEvent)

void ITLUserWidgetWeaponMasteryNodeInterface::OnPlayEffectHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponMasteryNodeInterface", "OnPlayEffectHover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWeaponMasteryNodeInterface.OnPlayEffectUnhover
// (Event, Protected, BlueprintEvent)

void ITLUserWidgetWeaponMasteryNodeInterface::OnPlayEffectUnhover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponMasteryNodeInterface", "OnPlayEffectUnhover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWeaponMasteryNodeInterface.OnPlayOpenConfirm
// (Event, Protected, BlueprintEvent)

void ITLUserWidgetWeaponMasteryNodeInterface::OnPlayOpenConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponMasteryNodeInterface", "OnPlayOpenConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWeaponMasteryNodeInterface.OnPlayOpenPending
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ITLUserWidgetWeaponMasteryNodeInterface::OnPlayOpenPending(bool bInIsTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponMasteryNodeInterface", "OnPlayOpenPending");

	Params::TLUserWidgetWeaponMasteryNodeInterface_OnPlayOpenPending Parms{};

	Parms.bInIsTarget = bInIsTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWeaponMasteryNodeInterface.OnPlaySelectedCandidate
// (Event, Protected, BlueprintEvent)

void ITLUserWidgetWeaponMasteryNodeInterface::OnPlaySelectedCandidate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponMasteryNodeInterface", "OnPlaySelectedCandidate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWeaponMasteryNodeInterface.OnStopSelectedCandidate
// (Event, Protected, BlueprintEvent)

void ITLUserWidgetWeaponMasteryNodeInterface::OnStopSelectedCandidate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponMasteryNodeInterface", "OnStopSelectedCandidate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWeaponMasteryNodeInterface.OnUpdateNodeState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLWeaponMasteryNodeState               InNodeState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AchievementPercent                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsRootNode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ITLUserWidgetWeaponMasteryNodeInterface::OnUpdateNodeState(ETLWeaponMasteryNodeState InNodeState, int32 AchievementPercent, bool InIsRootNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponMasteryNodeInterface", "OnUpdateNodeState");

	Params::TLUserWidgetWeaponMasteryNodeInterface_OnUpdateNodeState Parms{};

	Parms.InNodeState = InNodeState;
	Parms.AchievementPercent = AchievementPercent;
	Parms.InIsRootNode = InIsRootNode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingMode.OnInventoryUpdated
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingMode::OnInventoryUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingMode", "OnInventoryUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingMode.OnRecipeChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InRecipeEmpty                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingMode::OnRecipeChange(const bool InRecipeEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingMode", "OnRecipeChange");

	Params::TLUserWidgetCraftingMode_OnRecipeChange Parms{};

	Parms.InRecipeEmpty = InRecipeEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingMode.OnResultShowUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingMode::OnResultShowUpdate(const bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingMode", "OnResultShowUpdate");

	Params::TLUserWidgetCraftingMode_OnResultShowUpdate Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingMode.OnResultSkipEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingMode::OnResultSkipEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingMode", "OnResultSkipEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingMode.OnShowInventory
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingMode::OnShowInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingMode", "OnShowInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDeath.OnFinishDeathPenaltyWaitingTime
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetDeath::OnFinishDeathPenaltyWaitingTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnFinishDeathPenaltyWaitingTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDeath.OnGuildRaidMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeath::OnGuildRaidMode(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnGuildRaidMode");

	Params::TLUserWidgetDeath_OnGuildRaidMode Parms{};

	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDeath.OnGuildRaidResurrectionCount
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InResurrectionCount                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeath::OnGuildRaidResurrectionCount(int32 InResurrectionCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnGuildRaidResurrectionCount");

	Params::TLUserWidgetDeath_OnGuildRaidResurrectionCount Parms{};

	Parms.InResurrectionCount = InResurrectionCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDeath.OnHideDeathPenaltyUI
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetDeath::OnHideDeathPenaltyUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnHideDeathPenaltyUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDeath.OnRecoveryCostButtonHovered
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsAfterRecovery                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeath::OnRecoveryCostButtonHovered(const bool InIsAfterRecovery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnRecoveryCostButtonHovered");

	Params::TLUserWidgetDeath_OnRecoveryCostButtonHovered Parms{};

	Parms.InIsAfterRecovery = InIsAfterRecovery;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDeath.OnRecoveryCostButtonUnHovered
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsAfterRecovery                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeath::OnRecoveryCostButtonUnHovered(const bool InIsAfterRecovery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnRecoveryCostButtonUnHovered");

	Params::TLUserWidgetDeath_OnRecoveryCostButtonUnHovered Parms{};

	Parms.InIsAfterRecovery = InIsAfterRecovery;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDeath.OnRecoveryDeathPenaltySucceed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsShowDescription                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeath::OnRecoveryDeathPenaltySucceed(const bool InIsShowDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnRecoveryDeathPenaltySucceed");

	Params::TLUserWidgetDeath_OnRecoveryDeathPenaltySucceed Parms{};

	Parms.InIsShowDescription = InIsShowDescription;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDeath.OnShowDeathPenaltyUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsCanRecovery                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsRecoveryToFreeCoin                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsShowDescription                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeath::OnShowDeathPenaltyUI(const bool InIsCanRecovery, const bool InIsRecoveryToFreeCoin, const bool InIsShowDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnShowDeathPenaltyUI");

	Params::TLUserWidgetDeath_OnShowDeathPenaltyUI Parms{};

	Parms.InIsCanRecovery = InIsCanRecovery;
	Parms.InIsRecoveryToFreeCoin = InIsRecoveryToFreeCoin;
	Parms.InIsShowDescription = InIsShowDescription;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDeath.OnShowDeathUI
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeath::OnShowDeathUI(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnShowDeathUI");

	Params::TLUserWidgetDeath_OnShowDeathUI Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDeath.OnUpdateMemberShip
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsActivate                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeath::OnUpdateMemberShip(const bool InIsActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnUpdateMemberShip");

	Params::TLUserWidgetDeath_OnUpdateMemberShip Parms{};

	Parms.InIsActivate = InIsActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDeath.OnUpdateUIHideMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInSetMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDeath::OnUpdateUIHideMode(bool bInSetMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDeath", "OnUpdateUIHideMode");

	Params::TLUserWidgetDeath_OnUpdateUIHideMode Parms{};

	Parms.bInSetMode = bInSetMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnCraftAnimSkip
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnCraftAnimSkip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnCraftAnimSkip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnCraftMultiFinish
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   ResultSlotCount                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECraftingResultType                     ResultType1                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECraftingResultType                     ResultType2                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECraftingResultType                     ResultType3                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingResultPanel::OnCraftMultiFinish(int32 ResultSlotCount, ECraftingResultType ResultType1, ECraftingResultType ResultType2, ECraftingResultType ResultType3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnCraftMultiFinish");

	Params::TLUserWidgetCraftingResultPanel_OnCraftMultiFinish Parms{};

	Parms.ResultSlotCount = ResultSlotCount;
	Parms.ResultType1 = ResultType1;
	Parms.ResultType2 = ResultType2;
	Parms.ResultType3 = ResultType3;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnCraftMultiPreFailStart
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnCraftMultiPreFailStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnCraftMultiPreFailStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnCraftMultiPreGreatSuccessStart
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnCraftMultiPreGreatSuccessStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnCraftMultiPreGreatSuccessStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnCraftMultiPreSuccessStart
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnCraftMultiPreSuccessStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnCraftMultiPreSuccessStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnCraftMultiStart
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnCraftMultiStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnCraftMultiStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnCraftSingleStart
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnCraftSingleStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnCraftSingleStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnResultMultiSemiFail
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnResultMultiSemiFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnResultMultiSemiFail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnResultMultiSemiGreatSuccess
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnResultMultiSemiGreatSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnResultMultiSemiGreatSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnResultMultiSemiSuccess
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnResultMultiSemiSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnResultMultiSemiSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnResultPanelHide
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInMultiCraft                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingResultPanel::OnResultPanelHide(bool bInMultiCraft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnResultPanelHide");

	Params::TLUserWidgetCraftingResultPanel_OnResultPanelHide Parms{};

	Parms.bInMultiCraft = bInMultiCraft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnResultPanelShow
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInMultiCraft                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCraftingResultPanel::OnResultPanelShow(bool bInMultiCraft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnResultPanelShow");

	Params::TLUserWidgetCraftingResultPanel_OnResultPanelShow Parms{};

	Parms.bInMultiCraft = bInMultiCraft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnResultSingleFail
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnResultSingleFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnResultSingleFail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnResultSingleGreatSuccess
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnResultSingleGreatSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnResultSingleGreatSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnResultSingleSuccess
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultPanel::OnResultSingleSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnResultSingleSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultPanel.OnSkipButtonClick
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetCraftingResultPanel::OnSkipButtonClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultPanel", "OnSkipButtonClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueSoundVolume.HandleMinusButtonPressed
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueSoundVolume::HandleMinusButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueSoundVolume", "HandleMinusButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueSoundVolume.HandleMinusButtonReleased
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueSoundVolume::HandleMinusButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueSoundVolume", "HandleMinusButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueSoundVolume.HandlePlusButtonPressed
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueSoundVolume::HandlePlusButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueSoundVolume", "HandlePlusButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueSoundVolume.HandlePlusButtonReleased
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueSoundVolume::HandlePlusButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueSoundVolume", "HandlePlusButtonReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCraftingResultEntry.OnFailResult
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultEntry::OnFailResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultEntry", "OnFailResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultEntry.OnGreatSuccessResult
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultEntry::OnGreatSuccessResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultEntry", "OnGreatSuccessResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCraftingResultEntry.OnSuccessResult
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCraftingResultEntry::OnSuccessResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCraftingResultEntry", "OnSuccessResult");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetOccupationGuideBase.OnOwnerGuildRelationByMe
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildRelationship                      InRelation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationGuideBase::OnOwnerGuildRelationByMe(EGuildRelationship InRelation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBase", "OnOwnerGuildRelationByMe");

	Params::TLUserWidgetOccupationGuideBase_OnOwnerGuildRelationByMe Parms{};

	Parms.InRelation = InRelation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCreatureSubRankItem.OnTypeUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCreatureSubRankItemType              InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCreatureSubRankItem::OnTypeUpdated(ETLCreatureSubRankItemType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCreatureSubRankItem", "OnTypeUpdated");

	Params::TLUserWidgetCreatureSubRankItem_OnTypeUpdated Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCrosshair.OnChangeCrosshairCenterCustom
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCustomed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCrosshair::OnChangeCrosshairCenterCustom(bool bCustomed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCrosshair", "OnChangeCrosshairCenterCustom");

	Params::TLUserWidgetCrosshair_OnChangeCrosshairCenterCustom Parms{};

	Parms.bCustomed = bCustomed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCrosshair.OnChangeCrosshairType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCrosshairType                        InCrosshairType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCrosshair::OnChangeCrosshairType(ETLCrosshairType InCrosshairType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCrosshair", "OnChangeCrosshairType");

	Params::TLUserWidgetCrosshair_OnChangeCrosshairType Parms{};

	Parms.InCrosshairType = InCrosshairType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCrosshair.OnMinimizeCrosshair
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInMinimize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCrosshair::OnMinimizeCrosshair(bool bInMinimize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCrosshair", "OnMinimizeCrosshair");

	Params::TLUserWidgetCrosshair_OnMinimizeCrosshair Parms{};

	Parms.bInMinimize = bInMinimize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCurrency.IsShowMoneyWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   InFlag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetCurrency::IsShowMoneyWidget(uint8 InFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCurrency", "IsShowMoneyWidget");

	Params::TLUserWidgetCurrency_IsShowMoneyWidget Parms{};

	Parms.InFlag = InFlag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetCurrency.ShowMoneyWidgetWithValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMoneyType                              InMoneyType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCurrency::ShowMoneyWidgetWithValue(EMoneyType InMoneyType, bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCurrency", "ShowMoneyWidgetWithValue");

	Params::TLUserWidgetCurrency_ShowMoneyWidgetWithValue Parms{};

	Parms.InMoneyType = InMoneyType;
	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCursor.OnCursorFXEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bStronglyFX                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCursor::OnCursorFXEvent(bool bStronglyFX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCursor", "OnCursorFXEvent");

	Params::TLUserWidgetCursor_OnCursorFXEvent Parms{};

	Parms.bStronglyFX = bStronglyFX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMemorialRecord.UpdateRecordStatus
// (Event, Protected, BlueprintEvent)
// Parameters:
// EMemorialStatus                         InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMemorialRecord::UpdateRecordStatus(EMemorialStatus InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMemorialRecord", "UpdateRecordStatus");

	Params::TLUserWidgetMemorialRecord_UpdateRecordStatus Parms{};

	Parms.InStatus = InStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCustomizeIcon.AddIcon
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// int32                                   InUID                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  InIcon                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeIcon::AddIcon(const int32 InUID, const struct FSoftObjectPath& InIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeIcon", "AddIcon");

	Params::TLUserWidgetCustomizeIcon_AddIcon Parms{};

	Parms.InUID = InUID;
	Parms.InIcon = std::move(InIcon);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCustomizeIcon.RemoveSlot
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetCustomizeIcon::RemoveSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeIcon", "RemoveSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCustomizeColorPicker.CreateColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECustomizeUIType                        InUIType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeColorPicker::CreateColor(ECustomizeUIType InUIType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeColorPicker", "CreateColor");

	Params::TLUserWidgetCustomizeColorPicker_CreateColor Parms{};

	Parms.InUIType = InUIType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCustomizeColorPicker.GetActualColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UTLUserWidgetCustomizeColorPicker::GetActualColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeColorPicker", "GetActualColor");

	Params::TLUserWidgetCustomizeColorPicker_GetActualColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetCustomizeColorPicker.SetTitleStringId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InStringId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeColorPicker::SetTitleStringId(class FName InStringId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeColorPicker", "SetTitleStringId");

	Params::TLUserWidgetCustomizeColorPicker_SetTitleStringId Parms{};

	Parms.InStringId = InStringId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCustomizeColorPicker.SetValue
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeColorPicker::SetValue(const struct FVector& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeColorPicker", "SetValue");

	Params::TLUserWidgetCustomizeColorPicker_SetValue Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCustomizePresetBlender.GetAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECustomizeUIPresetBlendPoints           TargetPoint                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLUserWidgetCustomizePresetBlender::GetAlpha(ECustomizeUIPresetBlendPoints TargetPoint) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizePresetBlender", "GetAlpha");

	Params::TLUserWidgetCustomizePresetBlender_GetAlpha Parms{};

	Parms.TargetPoint = TargetPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetDynamicEventIcon.OnIconStateChangeEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventIcon::OnIconStateChangeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventIcon", "OnIconStateChangeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventIcon.OnUpdateAvailable
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsAvaliable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventIcon::OnUpdateAvailable(bool InIsAvaliable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventIcon", "OnUpdateAvailable");

	Params::TLUserWidgetDynamicEventIcon_OnUpdateAvailable Parms{};

	Parms.InIsAvaliable = InIsAvaliable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventIcon.OnUpdateInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLDEEventEffectStorePointState         StorePointState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventIcon::OnUpdateInfo(ETLDEEventEffectStorePointState StorePointState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventIcon", "OnUpdateInfo");

	Params::TLUserWidgetDynamicEventIcon_OnUpdateInfo Parms{};

	Parms.StorePointState = StorePointState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventIcon.OnUpdateMyCount
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InMyCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventIcon::OnUpdateMyCount(int32 InMyCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventIcon", "OnUpdateMyCount");

	Params::TLUserWidgetDynamicEventIcon_OnUpdateMyCount Parms{};

	Parms.InMyCount = InMyCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInterServerTimeTableAlarmGuildInfoSlot.OnUpdateInfoEnermyColor
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInterServerTimeTableAlarmGuildInfoSlot::OnUpdateInfoEnermyColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInterServerTimeTableAlarmGuildInfoSlot", "OnUpdateInfoEnermyColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInterServerTimeTableAlarmGuildInfoSlot.OnUpdateInfoMyColor
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInterServerTimeTableAlarmGuildInfoSlot::OnUpdateInfoMyColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInterServerTimeTableAlarmGuildInfoSlot", "OnUpdateInfoMyColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCustomizeHighCategoryFrames.OnActiveWidgetChange
// (Final, Native, Protected)
// Parameters:
// int32                                   InPrevIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCurIdx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeHighCategoryFrames::OnActiveWidgetChange(int32 InPrevIdx, int32 InCurIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeHighCategoryFrames", "OnActiveWidgetChange");

	Params::TLUserWidgetCustomizeHighCategoryFrames_OnActiveWidgetChange Parms{};

	Parms.InPrevIdx = InPrevIdx;
	Parms.InCurIdx = InCurIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetCustomizeMainFrame.SetMainWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLUserWidgetCustomizeMain*       InMainWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCustomizeMainFrame::SetMainWidget(class UTLUserWidgetCustomizeMain* InMainWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCustomizeMainFrame", "SetMainWidget");

	Params::TLUserWidgetCustomizeMainFrame_SetMainWidget Parms{};

	Parms.InMainWidget = InMainWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRestorationHudTooltip.OnUpdateMembershipState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActivate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRestorationHudTooltip::OnUpdateMembershipState(bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRestorationHudTooltip", "OnUpdateMembershipState");

	Params::TLUserWidgetRestorationHudTooltip_OnUpdateMembershipState Parms{};

	Parms.bActivate = bActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPVPHistoryListFrame.OnFilterGuide
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLPVPHistoryEventType                  InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPVPHistoryListFrame::OnFilterGuide(ETLPVPHistoryEventType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPVPHistoryListFrame", "OnFilterGuide");

	Params::TLUserWidgetPVPHistoryListFrame_OnFilterGuide Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDungeonRewardPoint.OnUpdateDungeonRewardPoint
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bPositive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDungeonRewardPoint::OnUpdateDungeonRewardPoint(bool bPositive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDungeonRewardPoint", "OnUpdateDungeonRewardPoint");

	Params::TLUserWidgetDungeonRewardPoint_OnUpdateDungeonRewardPoint Parms{};

	Parms.bPositive = bPositive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDungeonWaypointItem.OnLockState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDungeonWaypointLockType                InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDungeonWaypointItem::OnLockState(bool InIsLock, EDungeonWaypointLockType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDungeonWaypointItem", "OnLockState");

	Params::TLUserWidgetDungeonWaypointItem_OnLockState Parms{};

	Parms.InIsLock = InIsLock;
	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDungeonWaypointItem.OnSelectedSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InSelected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDungeonWaypointItem::OnSelectedSlot(bool InSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDungeonWaypointItem", "OnSelectedSlot");

	Params::TLUserWidgetDungeonWaypointItem_OnSelectedSlot Parms{};

	Parms.InSelected = InSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventAlertMessage.OnAlertLoopingAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetDynamicEventAlertMessage::OnAlertLoopingAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventAlertMessage", "OnAlertLoopingAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWorldMapRegionInfoSlotItem.OnFeverItem
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsFeverItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapRegionInfoSlotItem::OnFeverItem(bool InIsFeverItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionInfoSlotItem", "OnFeverItem");

	Params::TLUserWidgetWorldMapRegionInfoSlotItem_OnFeverItem Parms{};

	Parms.InIsFeverItem = InIsFeverItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapRegionInfoSlotItem.OnUpdateEnvironmentFlag
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InEnvironmentFlag                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapRegionInfoSlotItem::OnUpdateEnvironmentFlag(int32 InEnvironmentFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionInfoSlotItem", "OnUpdateEnvironmentFlag");

	Params::TLUserWidgetWorldMapRegionInfoSlotItem_OnUpdateEnvironmentFlag Parms{};

	Parms.InEnvironmentFlag = InEnvironmentFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventGuideBase.OnEndShowAnimation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideBase::OnEndShowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBase", "OnEndShowAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideBase.OpenHelp
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetDynamicEventGuideBase::OpenHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideBase", "OpenHelp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphGrowthPanel.BroadcastOnLevelGrowUp
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetPolymorphGrowthPanel::BroadcastOnLevelGrowUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthPanel", "BroadcastOnLevelGrowUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphGrowthPanel.OnGrowUpCompleted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FTLGrowthPendingData             InGrowthPendingData                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphGrowthPanel::OnGrowUpCompleted(const struct FTLGrowthPendingData& InGrowthPendingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthPanel", "OnGrowUpCompleted");

	Params::TLUserWidgetPolymorphGrowthPanel_OnGrowUpCompleted Parms{};

	Parms.InGrowthPendingData = std::move(InGrowthPendingData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphGrowthPanel.OnGrowUpStartAnimationFinished
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetPolymorphGrowthPanel::OnGrowUpStartAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthPanel", "OnGrowUpStartAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphGrowthPanel.OnGrowUpStarted
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPolymorphGrowthPanel::OnGrowUpStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthPanel", "OnGrowUpStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPolymorphGrowthPanel.OnLevelChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphGrowthPanel::OnLevelChanged(int32 InLevel, int32 InMaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthPanel", "OnLevelChanged");

	Params::TLUserWidgetPolymorphGrowthPanel_OnLevelChanged Parms{};

	Parms.InLevel = InLevel;
	Parms.InMaxLevel = InMaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphGrowthPanel.OnPointChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InChancePoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InExpPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphGrowthPanel::OnPointChanged(int32 InChancePoint, int32 InExpPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphGrowthPanel", "OnPointChanged");

	Params::TLUserWidgetPolymorphGrowthPanel_OnPointChanged Parms{};

	Parms.InChancePoint = InChancePoint;
	Parms.InExpPoint = InExpPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventGuideTitle02.OnPvpMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsInPvpMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventGuideTitle02::OnPvpMode(bool IsInPvpMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideTitle02", "OnPvpMode");

	Params::TLUserWidgetDynamicEventGuideTitle02_OnPvpMode Parms{};

	Parms.IsInPvpMode = IsInPvpMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventGuideTitle02.PlayWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideTitle02::PlayWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideTitle02", "PlayWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideTitle02.StopWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideTitle02::StopWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideTitle02", "StopWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideTitle03.OnPvpMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsInPvpMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventGuideTitle03::OnPvpMode(bool IsInPvpMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideTitle03", "OnPvpMode");

	Params::TLUserWidgetDynamicEventGuideTitle03_OnPvpMode Parms{};

	Parms.IsInPvpMode = IsInPvpMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventGuideWidgetTooltip.OnScoreValueType
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuideWidgetTooltip::OnScoreValueType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideWidgetTooltip", "OnScoreValueType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventGuideWidgetTooltip.OnWarehouseValueType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLDynamicEventWarehouseValueType       InValueType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventGuideWidgetTooltip::OnWarehouseValueType(ETLDynamicEventWarehouseValueType InValueType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuideWidgetTooltip", "OnWarehouseValueType");

	Params::TLUserWidgetDynamicEventGuideWidgetTooltip_OnWarehouseValueType Parms{};

	Parms.InValueType = InValueType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventGuildScore.OnCountingEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventGuildScore::OnCountingEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventGuildScore", "OnCountingEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetRequestSlot.OnHideAnimationFinished
// (Final, Native, Public)

void UTLUserWidgetRequestSlot::OnHideAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRequestSlot", "OnHideAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRequestSlot.SetTitleText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetRequestSlot::SetTitleText(const class FText& InTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRequestSlot", "SetTitleText");

	Params::TLUserWidgetRequestSlot_SetTitleText Parms{};

	Parms.InTitle = std::move(InTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventPhaseFrame.OnRepeatSteps
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InOn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventPhaseFrame::OnRepeatSteps(bool InOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventPhaseFrame", "OnRepeatSteps");

	Params::TLUserWidgetDynamicEventPhaseFrame_OnRepeatSteps Parms{};

	Parms.InOn = InOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventResult.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventResult::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventResult", "OnUpdateScheduleType");

	Params::TLUserWidgetDynamicEventResult_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetDynamicEventRewardItemList.UpdateResultItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   InSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItemTableId                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAmount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventRewardItemList::UpdateResultItem(int32 InSlotIndex, int32 InItemTableId, int32 InAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventRewardItemList", "UpdateResultItem");

	Params::TLUserWidgetDynamicEventRewardItemList_UpdateResultItem Parms{};

	Parms.InSlotIndex = InSlotIndex;
	Parms.InItemTableId = InItemTableId;
	Parms.InAmount = InAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetDynamicEventScore.OnCountingEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventScore::OnCountingEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventScore", "OnCountingEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventState.OnIconStateChangeEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetDynamicEventState::OnIconStateChangeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventState", "OnIconStateChangeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetDynamicEventState.OnUpdateEffectStorePointState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLDEEventEffectStorePointState         InStorePointState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetDynamicEventState::OnUpdateEffectStorePointState(ETLDEEventEffectStorePointState InStorePointState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetDynamicEventState", "OnUpdateEffectStorePointState");

	Params::TLUserWidgetDynamicEventState_OnUpdateEffectStorePointState Parms{};

	Parms.InStorePointState = InStorePointState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantBaseInfoPanel.OnInfoFormChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bComparison                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantBaseInfoPanel::OnInfoFormChange(bool bComparison)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantBaseInfoPanel", "OnInfoFormChange");

	Params::TLUserWidgetEnchantBaseInfoPanel_OnInfoFormChange Parms{};

	Parms.bComparison = bComparison;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantBaseInfoPanel.OnUpdateEnchant
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbMaxLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantBaseInfoPanel::OnUpdateEnchant(int32 InLevel, bool InbMaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantBaseInfoPanel", "OnUpdateEnchant");

	Params::TLUserWidgetEnchantBaseInfoPanel_OnUpdateEnchant Parms{};

	Parms.InLevel = InLevel;
	Parms.InbMaxLevel = InbMaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantBaseInfoPanel.OnUpdateItemGrade
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemGrade                              InGrade                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantBaseInfoPanel::OnUpdateItemGrade(const EItemGrade InGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantBaseInfoPanel", "OnUpdateItemGrade");

	Params::TLUserWidgetEnchantBaseInfoPanel_OnUpdateItemGrade Parms{};

	Parms.InGrade = InGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantInfoPanel.OnEnchantMethodChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEnchantMethod                          InEnchantMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantInfoPanel::OnEnchantMethodChange(EEnchantMethod InEnchantMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantInfoPanel", "OnEnchantMethodChange");

	Params::TLUserWidgetEnchantInfoPanel_OnEnchantMethodChange Parms{};

	Parms.InEnchantMethod = InEnchantMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantInfoPanel.OnInfoFormChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bComparison                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantInfoPanel::OnInfoFormChange(bool bComparison)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantInfoPanel", "OnInfoFormChange");

	Params::TLUserWidgetEnchantInfoPanel_OnInfoFormChange Parms{};

	Parms.bComparison = bComparison;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantInfoPanel.OnPcInfoShowOnly
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInPcInfoShowOnly                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantInfoPanel::OnPcInfoShowOnly(bool bInPcInfoShowOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantInfoPanel", "OnPcInfoShowOnly");

	Params::TLUserWidgetEnchantInfoPanel_OnPcInfoShowOnly Parms{};

	Parms.bInPcInfoShowOnly = bInPcInfoShowOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantInfoPanel.OnUpdateItemGrade
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemGrade                              InGrade                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantInfoPanel::OnUpdateItemGrade(const EItemGrade InGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantInfoPanel", "OnUpdateItemGrade");

	Params::TLUserWidgetEnchantInfoPanel_OnUpdateItemGrade Parms{};

	Parms.InGrade = InGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantInfoPanel.OnUpdateLevelMax
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbCurrentMaxLevel                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbNextMaxLevel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantInfoPanel::OnUpdateLevelMax(bool InbCurrentMaxLevel, bool InbNextMaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantInfoPanel", "OnUpdateLevelMax");

	Params::TLUserWidgetEnchantInfoPanel_OnUpdateLevelMax Parms{};

	Parms.InbCurrentMaxLevel = InbCurrentMaxLevel;
	Parms.InbNextMaxLevel = InbNextMaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantItemSlot.OnUpdateBlankStatus
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bBlank                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantItemSlot::OnUpdateBlankStatus(bool bBlank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantItemSlot", "OnUpdateBlankStatus");

	Params::TLUserWidgetEnchantItemSlot_OnUpdateBlankStatus Parms{};

	Parms.bBlank = bBlank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantResourceController.OnStateUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEnchantResourceState                   InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantResourceController::OnStateUpdate(EEnchantResourceState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantResourceController", "OnStateUpdate");

	Params::TLUserWidgetEnchantResourceController_OnStateUpdate Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantResPanel.OnEnchantFinish
// (Event, Public, BlueprintEvent)
// Parameters:
// EEnchantResultType                      InResultType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InLevelUp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantResPanel::OnEnchantFinish(EEnchantResultType InResultType, bool InLevelUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantResPanel", "OnEnchantFinish");

	Params::TLUserWidgetEnchantResPanel_OnEnchantFinish Parms{};

	Parms.InResultType = InResultType;
	Parms.InLevelUp = InLevelUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantResPanel.OnEnchantStart
// (Event, Public, BlueprintEvent)

void UTLUserWidgetEnchantResPanel::OnEnchantStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantResPanel", "OnEnchantStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetEnchantResPanel.OnInterimEnchantFinish
// (Event, Public, BlueprintEvent)
// Parameters:
// EEnchantResultType                      InInterimResultType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantResPanel::OnInterimEnchantFinish(EEnchantResultType InInterimResultType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantResPanel", "OnInterimEnchantFinish");

	Params::TLUserWidgetEnchantResPanel_OnInterimEnchantFinish Parms{};

	Parms.InInterimResultType = InInterimResultType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantResPanel.OnInterimEnchantStart
// (Event, Public, BlueprintEvent)
// Parameters:
// EEnchantResultType                      InInterimResultType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTargetPercent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantResPanel::OnInterimEnchantStart(EEnchantResultType InInterimResultType, float InTargetPercent, float InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantResPanel", "OnInterimEnchantStart");

	Params::TLUserWidgetEnchantResPanel_OnInterimEnchantStart Parms{};

	Parms.InInterimResultType = InInterimResultType;
	Parms.InTargetPercent = InTargetPercent;
	Parms.InDuration = InDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMatchingRoleIcon.GetNormalIconTexture
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSoftObjectPath                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftObjectPath UTLUserWidgetPartyMatchingRoleIcon::GetNormalIconTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingRoleIcon", "GetNormalIconTexture");

	Params::TLUserWidgetPartyMatchingRoleIcon_GetNormalIconTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyMatchingRoleIcon.GetSelectFXTexture
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSoftObjectPath                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftObjectPath UTLUserWidgetPartyMatchingRoleIcon::GetSelectFXTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingRoleIcon", "GetSelectFXTexture");

	Params::TLUserWidgetPartyMatchingRoleIcon_GetSelectFXTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyMatchingRoleIcon.GetSelectIconTexture
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSoftObjectPath                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSoftObjectPath UTLUserWidgetPartyMatchingRoleIcon::GetSelectIconTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingRoleIcon", "GetSelectIconTexture");

	Params::TLUserWidgetPartyMatchingRoleIcon_GetSelectIconTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyMatchingRoleIcon.SetActiveRole
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bActivate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPartyRole                              InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMatchingRoleIcon::SetActiveRole(bool bActivate, EPartyRole InRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingRoleIcon", "SetActiveRole");

	Params::TLUserWidgetPartyMatchingRoleIcon_SetActiveRole Parms{};

	Parms.bActivate = bActivate;
	Parms.InRole = InRole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMatchingRoleIcon.SetMyRole
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bMyRole                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMatchingRoleIcon::SetMyRole(bool bMyRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingRoleIcon", "SetMyRole");

	Params::TLUserWidgetPartyMatchingRoleIcon_SetMyRole Parms{};

	Parms.bMyRole = bMyRole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMatchingRoleIcon.GetRole
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPartyRole                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPartyRole UTLUserWidgetPartyMatchingRoleIcon::GetRole() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingRoleIcon", "GetRole");

	Params::TLUserWidgetPartyMatchingRoleIcon_GetRole Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetEnchantTransfer.EventChangeFlow
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferFlow                  InNewFlow                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLEnchantTransferFlow                  InPrevFlow                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransfer::EventChangeFlow(const ETLEnchantTransferFlow InNewFlow, const ETLEnchantTransferFlow InPrevFlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransfer", "EventChangeFlow");

	Params::TLUserWidgetEnchantTransfer_EventChangeFlow Parms{};

	Parms.InNewFlow = InNewFlow;
	Parms.InPrevFlow = InPrevFlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransfer.EventEnchantTransferResult
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferResult                InResult                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLevelChange                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransfer::EventEnchantTransferResult(const ETLEnchantTransferResult InResult, const bool bInLevelChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransfer", "EventEnchantTransferResult");

	Params::TLUserWidgetEnchantTransfer_EventEnchantTransferResult Parms{};

	Parms.InResult = InResult;
	Parms.bInLevelChange = bInLevelChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransfer.EventMaterialItemChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InNewItemID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InPrevItemID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransfer::EventMaterialItemChange(const uint64 InNewItemID, const uint64 InPrevItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransfer", "EventMaterialItemChange");

	Params::TLUserWidgetEnchantTransfer_EventMaterialItemChange Parms{};

	Parms.InNewItemID = InNewItemID;
	Parms.InPrevItemID = InPrevItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransfer.EventProgressActionEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferProgressActionEvent   InEvent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransfer::EventProgressActionEvent(const ETLEnchantTransferProgressActionEvent InEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransfer", "EventProgressActionEvent");

	Params::TLUserWidgetEnchantTransfer_EventProgressActionEvent Parms{};

	Parms.InEvent = InEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransfer.EventTargetItemChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InNewItemID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InPrevItemID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransfer::EventTargetItemChange(const uint64 InNewItemID, const uint64 InPrevItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransfer", "EventTargetItemChange");

	Params::TLUserWidgetEnchantTransfer_EventTargetItemChange Parms{};

	Parms.InNewItemID = InNewItemID;
	Parms.InPrevItemID = InPrevItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransfer.GetSceneActor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATLCustomSceneControlActor*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATLCustomSceneControlActor* UTLUserWidgetEnchantTransfer::GetSceneActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransfer", "GetSceneActor");

	Params::TLUserWidgetEnchantTransfer_GetSceneActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetRotationEventRanking.OnTabSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRotationEventRanking::OnTabSelected(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRotationEventRanking", "OnTabSelected");

	Params::TLUserWidgetRotationEventRanking_OnTabSelected Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferInventory.EventChangeFlow
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferFlow                  InNewFlow                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLEnchantTransferFlow                  InPrevFlow                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferInventory::EventChangeFlow(const ETLEnchantTransferFlow InNewFlow, const ETLEnchantTransferFlow InPrevFlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferInventory", "EventChangeFlow");

	Params::TLUserWidgetEnchantTransferInventory_EventChangeFlow Parms{};

	Parms.InNewFlow = InNewFlow;
	Parms.InPrevFlow = InPrevFlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferInventory.EventEnchantTransferResult
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferResult                InResult                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLevelChange                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferInventory::EventEnchantTransferResult(const ETLEnchantTransferResult InResult, const bool bInLevelChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferInventory", "EventEnchantTransferResult");

	Params::TLUserWidgetEnchantTransferInventory_EventEnchantTransferResult Parms{};

	Parms.InResult = InResult;
	Parms.bInLevelChange = bInLevelChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferInventory.EventMaterialItemChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InNewItemID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InPrevItemID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferInventory::EventMaterialItemChange(const uint64 InNewItemID, const uint64 InPrevItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferInventory", "EventMaterialItemChange");

	Params::TLUserWidgetEnchantTransferInventory_EventMaterialItemChange Parms{};

	Parms.InNewItemID = InNewItemID;
	Parms.InPrevItemID = InPrevItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferInventory.EventTargetItemChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InNewItemID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InPrevItemID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferInventory::EventTargetItemChange(const uint64 InNewItemID, const uint64 InPrevItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferInventory", "EventTargetItemChange");

	Params::TLUserWidgetEnchantTransferInventory_EventTargetItemChange Parms{};

	Parms.InNewItemID = InNewItemID;
	Parms.InPrevItemID = InPrevItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferInventory.GetSceneActor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATLCustomSceneControlActor*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATLCustomSceneControlActor* UTLUserWidgetEnchantTransferInventory::GetSceneActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferInventory", "GetSceneActor");

	Params::TLUserWidgetEnchantTransferInventory_GetSceneActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetWeaponCostume.OnUIToggleEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWeaponCostume::OnUIToggleEvent(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponCostume", "OnUIToggleEvent");

	Params::TLUserWidgetWeaponCostume_OnUIToggleEvent Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferMaterialItem.EventChangeFlow
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferFlow                  InNewFlow                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLEnchantTransferFlow                  InPrevFlow                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferMaterialItem::EventChangeFlow(const ETLEnchantTransferFlow InNewFlow, const ETLEnchantTransferFlow InPrevFlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferMaterialItem", "EventChangeFlow");

	Params::TLUserWidgetEnchantTransferMaterialItem_EventChangeFlow Parms{};

	Parms.InNewFlow = InNewFlow;
	Parms.InPrevFlow = InPrevFlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferMaterialItem.EventEnchantTransferResult
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferResult                InResult                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLevelChange                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferMaterialItem::EventEnchantTransferResult(const ETLEnchantTransferResult InResult, const bool bInLevelChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferMaterialItem", "EventEnchantTransferResult");

	Params::TLUserWidgetEnchantTransferMaterialItem_EventEnchantTransferResult Parms{};

	Parms.InResult = InResult;
	Parms.bInLevelChange = bInLevelChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferMaterialItem.EventMaterialItemChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InNewItemID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InPrevItemID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferMaterialItem::EventMaterialItemChange(const uint64 InNewItemID, const uint64 InPrevItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferMaterialItem", "EventMaterialItemChange");

	Params::TLUserWidgetEnchantTransferMaterialItem_EventMaterialItemChange Parms{};

	Parms.InNewItemID = InNewItemID;
	Parms.InPrevItemID = InPrevItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferMaterialItem.EventProgressActionEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferProgressActionEvent   InEvent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferMaterialItem::EventProgressActionEvent(const ETLEnchantTransferProgressActionEvent InEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferMaterialItem", "EventProgressActionEvent");

	Params::TLUserWidgetEnchantTransferMaterialItem_EventProgressActionEvent Parms{};

	Parms.InEvent = InEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferMaterialItem.EventTargetItemChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InNewItemID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InPrevItemID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferMaterialItem::EventTargetItemChange(const uint64 InNewItemID, const uint64 InPrevItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferMaterialItem", "EventTargetItemChange");

	Params::TLUserWidgetEnchantTransferMaterialItem_EventTargetItemChange Parms{};

	Parms.InNewItemID = InNewItemID;
	Parms.InPrevItemID = InPrevItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferMaterialItem.OnClearItemSlot
// (Event, Public, BlueprintEvent)

void UTLUserWidgetEnchantTransferMaterialItem::OnClearItemSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferMaterialItem", "OnClearItemSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetEnchantTransferMaterialItem.OnEnchantResultAction
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInLevelChange                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferMaterialItem::OnEnchantResultAction(const bool bInLevelChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferMaterialItem", "OnEnchantResultAction");

	Params::TLUserWidgetEnchantTransferMaterialItem_OnEnchantResultAction Parms{};

	Parms.bInLevelChange = bInLevelChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferMaterialItem.OnSetItemSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemGrade                              InGrade                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferMaterialItem::OnSetItemSlot(const EItemGrade InGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferMaterialItem", "OnSetItemSlot");

	Params::TLUserWidgetEnchantTransferMaterialItem_OnSetItemSlot Parms{};

	Parms.InGrade = InGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferMaterialItem.OnSetTargetItemSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemGrade                              InGrade                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferMaterialItem::OnSetTargetItemSlot(const EItemGrade InGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferMaterialItem", "OnSetTargetItemSlot");

	Params::TLUserWidgetEnchantTransferMaterialItem_OnSetTargetItemSlot Parms{};

	Parms.InGrade = InGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWeaponSwapButton.OnUpdateEquipMainWeapon
// (Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponCategory                         InWeaponCategory                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGrade                              WeaponGrade                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWeaponSwapButton::OnUpdateEquipMainWeapon(EWeaponCategory InWeaponCategory, EItemGrade WeaponGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponSwapButton", "OnUpdateEquipMainWeapon");

	Params::TLUserWidgetWeaponSwapButton_OnUpdateEquipMainWeapon Parms{};

	Parms.InWeaponCategory = InWeaponCategory;
	Parms.WeaponGrade = WeaponGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWeaponSwapButton.OnUpdateEquipOtherWeapon
// (Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponCategory                         InWeaponCategory                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGrade                              WeaponGrade                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWeaponSwapButton::OnUpdateEquipOtherWeapon(EWeaponCategory InWeaponCategory, EItemGrade WeaponGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponSwapButton", "OnUpdateEquipOtherWeapon");

	Params::TLUserWidgetWeaponSwapButton_OnUpdateEquipOtherWeapon Parms{};

	Parms.InWeaponCategory = InWeaponCategory;
	Parms.WeaponGrade = WeaponGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWeaponSwapButton.OnUpdateWeaponPresetNum
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InNewNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInit                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWeaponSwapButton::OnUpdateWeaponPresetNum(int32 InNewNum, bool bInit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponSwapButton", "OnUpdateWeaponPresetNum");

	Params::TLUserWidgetWeaponSwapButton_OnUpdateWeaponPresetNum Parms{};

	Parms.InNewNum = InNewNum;
	Parms.bInit = bInit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWeaponSwapButton.OnUpdateWeaponSwapOpen
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetWeaponSwapButton::OnUpdateWeaponSwapOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponSwapButton", "OnUpdateWeaponSwapOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWeaponSwapButton.TryWeaponSwap
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetWeaponSwapButton::TryWeaponSwap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponSwapButton", "TryWeaponSwap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetEnchantTransferTargetItem.EventChangeFlow
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferFlow                  InNewFlow                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLEnchantTransferFlow                  InPrevFlow                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferTargetItem::EventChangeFlow(const ETLEnchantTransferFlow InNewFlow, const ETLEnchantTransferFlow InPrevFlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferTargetItem", "EventChangeFlow");

	Params::TLUserWidgetEnchantTransferTargetItem_EventChangeFlow Parms{};

	Parms.InNewFlow = InNewFlow;
	Parms.InPrevFlow = InPrevFlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferTargetItem.EventEnchantTransferResult
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferResult                InResult                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInLevelChange                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferTargetItem::EventEnchantTransferResult(const ETLEnchantTransferResult InResult, const bool bInLevelChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferTargetItem", "EventEnchantTransferResult");

	Params::TLUserWidgetEnchantTransferTargetItem_EventEnchantTransferResult Parms{};

	Parms.InResult = InResult;
	Parms.bInLevelChange = bInLevelChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferTargetItem.EventMaterialItemChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InNewItemID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InPrevItemID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferTargetItem::EventMaterialItemChange(const uint64 InNewItemID, const uint64 InPrevItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferTargetItem", "EventMaterialItemChange");

	Params::TLUserWidgetEnchantTransferTargetItem_EventMaterialItemChange Parms{};

	Parms.InNewItemID = InNewItemID;
	Parms.InPrevItemID = InPrevItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferTargetItem.EventProgressActionEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferProgressActionEvent   InEvent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferTargetItem::EventProgressActionEvent(const ETLEnchantTransferProgressActionEvent InEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferTargetItem", "EventProgressActionEvent");

	Params::TLUserWidgetEnchantTransferTargetItem_EventProgressActionEvent Parms{};

	Parms.InEvent = InEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferTargetItem.EventTargetItemChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// uint64                                  InNewItemID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  InPrevItemID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferTargetItem::EventTargetItemChange(const uint64 InNewItemID, const uint64 InPrevItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferTargetItem", "EventTargetItemChange");

	Params::TLUserWidgetEnchantTransferTargetItem_EventTargetItemChange Parms{};

	Parms.InNewItemID = InNewItemID;
	Parms.InPrevItemID = InPrevItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferTargetItem.OnClearItemSlot
// (Event, Public, BlueprintEvent)

void UTLUserWidgetEnchantTransferTargetItem::OnClearItemSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferTargetItem", "OnClearItemSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetEnchantTransferTargetItem.OnEnchantResultAction
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInLevelChange                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferTargetItem::OnEnchantResultAction(const bool bInLevelChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferTargetItem", "OnEnchantResultAction");

	Params::TLUserWidgetEnchantTransferTargetItem_OnEnchantResultAction Parms{};

	Parms.bInLevelChange = bInLevelChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEnchantTransferTargetItem.OnSetItemSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemGrade                              InGrade                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEnchantTransferTargetItem::OnSetItemSlot(const EItemGrade InGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEnchantTransferTargetItem", "OnSetItemSlot");

	Params::TLUserWidgetEnchantTransferTargetItem_OnSetItemSlot Parms{};

	Parms.InGrade = InGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneEffectListSlot.OnNegativeStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsNegativeStat                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneEffectListSlot::OnNegativeStat(bool InIsNegativeStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneEffectListSlot", "OnNegativeStat");

	Params::TLUserWidgetRuneEffectListSlot_OnNegativeStat Parms{};

	Parms.InIsNegativeStat = InIsNegativeStat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneSocketSlot.OnActiveSynergy
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGrade                              InSynergyGrade                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketSlot::OnActiveSynergy(bool InIsActive, EItemGrade InSynergyGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketSlot", "OnActiveSynergy");

	Params::TLUserWidgetRuneSocketSlot_OnActiveSynergy Parms{};

	Parms.InIsActive = InIsActive;
	Parms.InSynergyGrade = InSynergyGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneSocketSlot.OnChangeSocket
// (Event, Public, BlueprintEvent)

void UTLUserWidgetRuneSocketSlot::OnChangeSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketSlot", "OnChangeSocket");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetRuneSocketSlot.OnEmptyRuneSocket
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsEmpty                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketSlot::OnEmptyRuneSocket(bool InIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketSlot", "OnEmptyRuneSocket");

	Params::TLUserWidgetRuneSocketSlot_OnEmptyRuneSocket Parms{};

	Parms.InIsEmpty = InIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneSocketSlot.OnInsertRune
// (Event, Public, BlueprintEvent)

void UTLUserWidgetRuneSocketSlot::OnInsertRune()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketSlot", "OnInsertRune");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetRuneSocketSlot.OnOpenSocket
// (Event, Public, BlueprintEvent)

void UTLUserWidgetRuneSocketSlot::OnOpenSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketSlot", "OnOpenSocket");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetRuneSocketSlot.OnSocketSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsSelected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketSlot::OnSocketSelected(bool InIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketSlot", "OnSocketSelected");

	Params::TLUserWidgetRuneSocketSlot_OnSocketSelected Parms{};

	Parms.InIsSelected = InIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneSocketSlot.OnSocketState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLRuneSocketState                      InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketSlot::OnSocketState(ETLRuneSocketState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketSlot", "OnSocketState");

	Params::TLUserWidgetRuneSocketSlot_OnSocketState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneSocketSlot.OnWaitingRuneSocket
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsWaiting                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSocketSlot::OnWaitingRuneSocket(bool InIsWaiting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSocketSlot", "OnWaitingRuneSocket");

	Params::TLUserWidgetRuneSocketSlot_OnWaitingRuneSocket Parms{};

	Parms.InIsWaiting = InIsWaiting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventCalenderBanner.OnBannerTransition
// (Event, Public, BlueprintEvent)

void UTLUserWidgetEventCalenderBanner::OnBannerTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventCalenderBanner", "OnBannerTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetEventCalenderMainSchedule.OnTextRolling
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InOnRolling                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventCalenderMainSchedule::OnTextRolling(bool InOnRolling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventCalenderMainSchedule", "OnTextRolling");

	Params::TLUserWidgetEventCalenderMainSchedule_OnTextRolling Parms{};

	Parms.InOnRolling = InOnRolling;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventCalenderSchedule.MainSchedulePos
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InStartPos                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InEndPos                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventCalenderSchedule::MainSchedulePos(int32 InStartPos, int32 InEndPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventCalenderSchedule", "MainSchedulePos");

	Params::TLUserWidgetEventCalenderSchedule_MainSchedulePos Parms{};

	Parms.InStartPos = InStartPos;
	Parms.InEndPos = InEndPos;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventCalenderSchedule.OnSubScheduleBar
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventCalenderSchedule::OnSubScheduleBar(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventCalenderSchedule", "OnSubScheduleBar");

	Params::TLUserWidgetEventCalenderSchedule_OnSubScheduleBar Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventCalenderSchedule.SubSchedulePos
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InStartPos                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InEndPos                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventCalenderSchedule::SubSchedulePos(int32 InStartPos, int32 InEndPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventCalenderSchedule", "SubSchedulePos");

	Params::TLUserWidgetEventCalenderSchedule_SubSchedulePos Parms{};

	Parms.InStartPos = InStartPos;
	Parms.InEndPos = InEndPos;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.EventChangeFlow
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEnchantTransferFlow                  InNewFlow                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLEnchantTransferFlow                  InPrevFlow                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventSceneEnchant::EventChangeFlow(const ETLEnchantTransferFlow InNewFlow, const ETLEnchantTransferFlow InPrevFlow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "EventChangeFlow");

	Params::TLUserWidgetEventSceneEnchant_EventChangeFlow Parms{};

	Parms.InNewFlow = InNewFlow;
	Parms.InPrevFlow = InPrevFlow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.EventChangeTraitStep
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemTraitEnchantStep                   InNewStep                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemTraitEnchantStep                   InPrevStep                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventSceneEnchant::EventChangeTraitStep(const EItemTraitEnchantStep InNewStep, const EItemTraitEnchantStep InPrevStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "EventChangeTraitStep");

	Params::TLUserWidgetEventSceneEnchant_EventChangeTraitStep Parms{};

	Parms.InNewStep = InNewStep;
	Parms.InPrevStep = InPrevStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.EventTabSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InSelectedIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventSceneEnchant::EventTabSelected(int32 InSelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "EventTabSelected");

	Params::TLUserWidgetEventSceneEnchant_EventTabSelected Parms{};

	Parms.InSelectedIndex = InSelectedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.HandleEnchantItemSlotDrag
// (Final, Native, Protected)
// Parameters:
// class UTLUserWidgetEnchantItemSlot*     InSlot                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InDrag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventSceneEnchant::HandleEnchantItemSlotDrag(class UTLUserWidgetEnchantItemSlot* InSlot, bool InDrag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "HandleEnchantItemSlotDrag");

	Params::TLUserWidgetEventSceneEnchant_HandleEnchantItemSlotDrag Parms{};

	Parms.InSlot = InSlot;
	Parms.InDrag = InDrag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetEventSceneEnchant.HandleResultWaitingAnimationFinished
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetEventSceneEnchant::HandleResultWaitingAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "HandleResultWaitingAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetEventSceneEnchant.IsLongPressLock
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetEventSceneEnchant::IsLongPressLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "IsLongPressLock");

	Params::TLUserWidgetEventSceneEnchant_IsLongPressLock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetEventSceneEnchant.IsLongPressPlayback
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetEventSceneEnchant::IsLongPressPlayback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "IsLongPressPlayback");

	Params::TLUserWidgetEventSceneEnchant_IsLongPressPlayback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetEventSceneEnchant.OnEnchantItemDrag
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMaterial                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDrag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventSceneEnchant::OnEnchantItemDrag(int32 Index_0, bool bMaterial, bool bDrag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "OnEnchantItemDrag");

	Params::TLUserWidgetEventSceneEnchant_OnEnchantItemDrag Parms{};

	Parms.Index_0 = Index_0;
	Parms.bMaterial = bMaterial;
	Parms.bDrag = bDrag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.OnGoToResultPhase
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetEventSceneEnchant::OnGoToResultPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "OnGoToResultPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.OnGoToResultWaitingPhase
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetEventSceneEnchant::OnGoToResultWaitingPhase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "OnGoToResultWaitingPhase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.OnGoToSettingPhase
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbInit                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventSceneEnchant::OnGoToSettingPhase(bool InbInit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "OnGoToSettingPhase");

	Params::TLUserWidgetEventSceneEnchant_OnGoToSettingPhase Parms{};

	Parms.InbInit = InbInit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.OnLongPressEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPress                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventSceneEnchant::OnLongPressEvent(bool bPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "OnLongPressEvent");

	Params::TLUserWidgetEventSceneEnchant_OnLongPressEvent Parms{};

	Parms.bPress = bPress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.OnNeedLongPress
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetEventSceneEnchant::OnNeedLongPress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "OnNeedLongPress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.OnTargetItemSelect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSelect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetEventSceneEnchant::OnTargetItemSelect(bool bSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "OnTargetItemSelect");

	Params::TLUserWidgetEventSceneEnchant_OnTargetItemSelect Parms{};

	Parms.bSelect = bSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetEventSceneEnchant.ShowPaybackMessage
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetEventSceneEnchant::ShowPaybackMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetEventSceneEnchant", "ShowPaybackMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreAlarm.ButtonClickCodexGroupOpen
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetExploreAlarm::ButtonClickCodexGroupOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarm", "ButtonClickCodexGroupOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetExploreAlarm.OnUpdateTerritoryAlarmCode
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetExploreAlarm::OnUpdateTerritoryAlarmCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarm", "OnUpdateTerritoryAlarmCode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreAlarmCode.OnClickedDetailButton
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetExploreAlarmCode::OnClickedDetailButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarmCode", "OnClickedDetailButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetExploreAlarmCode.OnPlayNudge
// (Event, Public, BlueprintEvent)

void UTLUserWidgetExploreAlarmCode::OnPlayNudge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarmCode", "OnPlayNudge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreAlarmCode.OnStateCompleteAnim
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsPrologue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreAlarmCode::OnStateCompleteAnim(bool IsPrologue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarmCode", "OnStateCompleteAnim");

	Params::TLUserWidgetExploreAlarmCode_OnStateCompleteAnim Parms{};

	Parms.IsPrologue = IsPrologue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreAlarmCode.OnUpdateCategoryType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECodexCategoryType                      CodexCategoryType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreAlarmCode::OnUpdateCategoryType(ECodexCategoryType CodexCategoryType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarmCode", "OnUpdateCategoryType");

	Params::TLUserWidgetExploreAlarmCode_OnUpdateCategoryType Parms{};

	Parms.CodexCategoryType = CodexCategoryType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreAlarmCode.OnUpdateNormalAlarm
// (Event, Public, BlueprintEvent)

void UTLUserWidgetExploreAlarmCode::OnUpdateNormalAlarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarmCode", "OnUpdateNormalAlarm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreAlarmCode.OnUpdateTerritoryAlarm
// (Event, Public, BlueprintEvent)

void UTLUserWidgetExploreAlarmCode::OnUpdateTerritoryAlarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreAlarmCode", "OnUpdateTerritoryAlarm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreCodeBase.OnCodeFocusEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InbVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreCodeBase::OnCodeFocusEvent(bool InbVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreCodeBase", "OnCodeFocusEvent");

	Params::TLUserWidgetExploreCodeBase_OnCodeFocusEvent Parms{};

	Parms.InbVisible = InbVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreCodeBase.OnCodeStatusEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCodexCommonStatusType                InCodeStatusType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreCodeBase::OnCodeStatusEvent(ETLCodexCommonStatusType InCodeStatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreCodeBase", "OnCodeStatusEvent");

	Params::TLUserWidgetExploreCodeBase_OnCodeStatusEvent Parms{};

	Parms.InCodeStatusType = InCodeStatusType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreCodeBase.OnDimmedEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbDisable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreCodeBase::OnDimmedEvent(bool InbDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreCodeBase", "OnDimmedEvent");

	Params::TLUserWidgetExploreCodeBase_OnDimmedEvent Parms{};

	Parms.InbDisable = InbDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreCodeBase.OnRewarableEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbRewardable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreCodeBase::OnRewarableEvent(bool InbRewardable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreCodeBase", "OnRewarableEvent");

	Params::TLUserWidgetExploreCodeBase_OnRewarableEvent Parms{};

	Parms.InbRewardable = InbRewardable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreCodeBase.OnRewardEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetExploreCodeBase::OnRewardEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreCodeBase", "OnRewardEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreCodeDetailObjective.OnNotExistPrevLineEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetExploreCodeDetailObjective::OnNotExistPrevLineEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreCodeDetailObjective", "OnNotExistPrevLineEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreCodeDetailObjective.OnRewardEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetExploreCodeDetailObjective::OnRewardEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreCodeDetailObjective", "OnRewardEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreCodeDetailObjective.OnStatusEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCodexCommonStatusType                InStatusType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreCodeDetailObjective::OnStatusEvent(ETLCodexCommonStatusType InStatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreCodeDetailObjective", "OnStatusEvent");

	Params::TLUserWidgetExploreCodeDetailObjective_OnStatusEvent Parms{};

	Parms.InStatusType = InStatusType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreCodeDetailObjective.OnUpdateNextLineEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbAttained                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreCodeDetailObjective::OnUpdateNextLineEvent(bool InbAttained)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreCodeDetailObjective", "OnUpdateNextLineEvent");

	Params::TLUserWidgetExploreCodeDetailObjective_OnUpdateNextLineEvent Parms{};

	Parms.InbAttained = InbAttained;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreCodeDetailObjective.OnUpdatePrevLineEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbAttained                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreCodeDetailObjective::OnUpdatePrevLineEvent(bool InbAttained)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreCodeDetailObjective", "OnUpdatePrevLineEvent");

	Params::TLUserWidgetExploreCodeDetailObjective_OnUpdatePrevLineEvent Parms{};

	Parms.InbAttained = InbAttained;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreGroup.OnUnLockMemorial
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreGroup::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreGroup", "OnUnLockMemorial");

	Params::TLUserWidgetExploreGroup_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetExploreObjective.OnRewardEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetExploreObjective::OnRewardEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreObjective", "OnRewardEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetExploreObjective.OnStatusEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLCodexCommonStatusType                InStatusType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetExploreObjective::OnStatusEvent(ETLCodexCommonStatusType InStatusType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetExploreObjective", "OnStatusEvent");

	Params::TLUserWidgetExploreObjective_OnStatusEvent Parms{};

	Parms.InStatusType = InStatusType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFadeScreen.OnFadeFinished
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetFadeScreen::OnFadeFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFadeScreen", "OnFadeFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetFadeScreen.OnFadeStarted
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetFadeScreen::OnFadeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFadeScreen", "OnFadeStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetFieldBossGuideFrame.OnCurrentType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLFieldBossEventState                  InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFieldBossGuideFrame::OnCurrentType(ETLFieldBossEventState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFieldBossGuideFrame", "OnCurrentType");

	Params::TLUserWidgetFieldBossGuideFrame_OnCurrentType Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFieldBossGuideFrame.OnEndShowAnimation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetFieldBossGuideFrame::OnEndShowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFieldBossGuideFrame", "OnEndShowAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetFieldBossGuideFrame.OnUpdateFieldBossAssist
// (Event, Public, BlueprintEvent)

void UTLUserWidgetFieldBossGuideFrame::OnUpdateFieldBossAssist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFieldBossGuideFrame", "OnUpdateFieldBossAssist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetFieldBossGuideFrame.OnUpdateFieldBossKill
// (Event, Public, BlueprintEvent)

void UTLUserWidgetFieldBossGuideFrame::OnUpdateFieldBossKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFieldBossGuideFrame", "OnUpdateFieldBossKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetFieldBossGuideFrame.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFieldBossGuideFrame::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFieldBossGuideFrame", "OnUpdateScheduleType");

	Params::TLUserWidgetFieldBossGuideFrame_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFieldBossGuideFrame.OpenHelp
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetFieldBossGuideFrame::OpenHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFieldBossGuideFrame", "OpenHelp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetFieldBossGuideFrame.PlayWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetFieldBossGuideFrame::PlayWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFieldBossGuideFrame", "PlayWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetFieldBossGuideFrame.StopWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetFieldBossGuideFrame::StopWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFieldBossGuideFrame", "StopWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSelectableItemSlot.OnSlotDimmed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsDimmed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSelectableItemSlot::OnSlotDimmed(bool InIsDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSelectableItemSlot", "OnSlotDimmed");

	Params::TLUserWidgetSelectableItemSlot_OnSlotDimmed Parms{};

	Parms.InIsDimmed = InIsDimmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFirstSettingBrightness.HandleSliderValueChanged
// (Final, Native, Protected)
// Parameters:
// float                                   InBrightness                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFirstSettingBrightness::HandleSliderValueChanged(float InBrightness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFirstSettingBrightness", "HandleSliderValueChanged");

	Params::TLUserWidgetFirstSettingBrightness_HandleSliderValueChanged Parms{};

	Parms.InBrightness = InBrightness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddEnabledBindingOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLBindingOperator                      Operator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SourceValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddEnabledBindingOnViewModel(class UWidget* Target, const class FName PropertyName, ETLBindingOperator Operator, int32 SourceValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddEnabledBindingOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddEnabledBindingOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;
	Parms.Operator = Operator;
	Parms.SourceValue = SourceValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddImageBrushBindingOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTLImage*                         Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetVisibleWithValue                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddImageBrushBindingOnViewModel(class UTLImage* Target, const class FName PropertyName, bool bSetVisibleWithValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddImageBrushBindingOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddImageBrushBindingOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;
	Parms.bSetVisibleWithValue = bSetVisibleWithValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddImageColorAndOpacityBindingOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTLImage*                         Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddImageColorAndOpacityBindingOnViewModel(class UTLImage* Target, const class FName PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddImageColorAndOpacityBindingOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddImageColorAndOpacityBindingOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddListChangedBindingOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UListView*                        Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddListChangedBindingOnViewModel(class UListView* Target, const class FName PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddListChangedBindingOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddListChangedBindingOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddPercentBindingOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTLProgressBar*                   Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddPercentBindingOnViewModel(class UTLProgressBar* Target, const class FName PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddPercentBindingOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddPercentBindingOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddTextBindingFloatOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTLTextBlock*                     Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERoundingMode                           RoundingMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FractionalDigits                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddTextBindingFloatOnViewModel(class UTLTextBlock* Target, const class FName PropertyName, ERoundingMode RoundingMode, int32 FractionalDigits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddTextBindingFloatOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddTextBindingFloatOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;
	Parms.RoundingMode = RoundingMode;
	Parms.FractionalDigits = FractionalDigits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddTextBindingOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTLTextBlock*                     Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSetVisibleWithValue                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddTextBindingOnViewModel(class UTLTextBlock* Target, const class FName PropertyName, bool bSetVisibleWithValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddTextBindingOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddTextBindingOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;
	Parms.bSetVisibleWithValue = bSetVisibleWithValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddTextBindingTimeOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTLTextBlock*                     Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLBindingTextTimeType                  TimeType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeRefreshRate                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddTextBindingTimeOnViewModel(class UTLTextBlock* Target, const class FName PropertyName, ETLBindingTextTimeType TimeType, float TimeRefreshRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddTextBindingTimeOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddTextBindingTimeOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;
	Parms.TimeType = TimeType;
	Parms.TimeRefreshRate = TimeRefreshRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddTextColorAndOpacityBindingOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTLTextBlock*                     Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddTextColorAndOpacityBindingOnViewModel(class UTLTextBlock* Target, const class FName PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddTextColorAndOpacityBindingOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddTextColorAndOpacityBindingOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddTextColorWithColorTableBindingOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTLTextBlock*                     Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLBindingOperator                      Operator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SourceValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddTextColorWithColorTableBindingOnViewModel(class UTLTextBlock* Target, const class FName PropertyName, ETLBindingOperator Operator, int32 SourceValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddTextColorWithColorTableBindingOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddTextColorWithColorTableBindingOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;
	Parms.Operator = Operator;
	Parms.SourceValue = SourceValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.AddVisibleBindingOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLBindingOperator                      Operator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SourceValue                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::AddVisibleBindingOnViewModel(class UWidget* Target, const class FName PropertyName, ETLBindingOperator Operator, int32 SourceValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "AddVisibleBindingOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_AddVisibleBindingOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;
	Parms.Operator = Operator;
	Parms.SourceValue = SourceValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.SetDataSourceBindingOnViewModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTLUserWidgetView*                Target                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::SetDataSourceBindingOnViewModel(class UTLUserWidgetView* Target, const class FName PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "SetDataSourceBindingOnViewModel");

	Params::TLUserWidgetViewBindingLibrary_SetDataSourceBindingOnViewModel Parms{};

	Parms.Target = Target;
	Parms.PropertyName = PropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetViewBindingLibrary.SetOnViewModelUpdateDefault
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             PropertyName                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       Event                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetViewBindingLibrary::SetOnViewModelUpdateDefault(const class FName PropertyName, const TDelegate<void()>& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("TLUserWidgetViewBindingLibrary", "SetOnViewModelUpdateDefault");

	Params::TLUserWidgetViewBindingLibrary_SetOnViewModelUpdateDefault Parms{};

	Parms.PropertyName = PropertyName;
	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnAutoUseDisabled
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTLUserWidgetItemQuickSlot::OnAutoUseDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnAutoUseDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnAutoUseEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTLUserWidgetItemQuickSlot::OnAutoUseEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnAutoUseEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnAutoUsePaused
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTLUserWidgetItemQuickSlot::OnAutoUsePaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnAutoUsePaused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnAutoUseStart
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTLUserWidgetItemQuickSlot::OnAutoUseStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnAutoUseStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnCooldownEnd
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemQuickSlot::OnCooldownEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnCooldownEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnCooldownStart
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemQuickSlot::OnCooldownStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnCooldownStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnItemGradeUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemGrade                              InGrade                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemQuickSlot::OnItemGradeUpdate(const EItemGrade InGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnItemGradeUpdate");

	Params::TLUserWidgetItemQuickSlot_OnItemGradeUpdate Parms{};

	Parms.InGrade = InGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnItemLockUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InLock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemQuickSlot::OnItemLockUpdate(bool InLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnItemLockUpdate");

	Params::TLUserWidgetItemQuickSlot_OnItemLockUpdate Parms{};

	Parms.InLock = InLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnQuickSlotSourceBySwap
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInSwap                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemQuickSlot::OnQuickSlotSourceBySwap(bool bInSwap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnQuickSlotSourceBySwap");

	Params::TLUserWidgetItemQuickSlot_OnQuickSlotSourceBySwap Parms{};

	Parms.bInSwap = bInSwap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnUpdateOtherPresetInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsOtherPresetItem                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemQuickSlot::OnUpdateOtherPresetInfo(bool bIsOtherPresetItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnUpdateOtherPresetInfo");

	Params::TLUserWidgetItemQuickSlot_OnUpdateOtherPresetInfo Parms{};

	Parms.bIsOtherPresetItem = bIsOtherPresetItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnUpdateRequireLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InRequireLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPcLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemQuickSlot::OnUpdateRequireLevel(int32 InRequireLevel, int32 InPcLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnUpdateRequireLevel");

	Params::TLUserWidgetItemQuickSlot_OnUpdateRequireLevel Parms{};

	Parms.InRequireLevel = InRequireLevel;
	Parms.InPcLevel = InPcLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemQuickSlot.OnUpdateTradable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemQuickSlot::OnUpdateTradable(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "OnUpdateTradable");

	Params::TLUserWidgetItemQuickSlot_OnUpdateTradable Parms{};

	Parms.bInValue = bInValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemQuickSlot.PlayUseItemAnim
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemCategory                           InItemCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemQuickSlot::PlayUseItemAnim(EItemCategory InItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "PlayUseItemAnim");

	Params::TLUserWidgetItemQuickSlot_PlayUseItemAnim Parms{};

	Parms.InItemCategory = InItemCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemQuickSlot.SetQuickSlotId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InSlotId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemQuickSlot::SetQuickSlotId(int32 InSlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemQuickSlot", "SetQuickSlotId");

	Params::TLUserWidgetItemQuickSlot_SetQuickSlotId Parms{};

	Parms.InSlotId = InSlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyKickElectionRegisterPopup.HandleReasonTextInputChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyKickElectionRegisterPopup::HandleReasonTextInputChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyKickElectionRegisterPopup", "HandleReasonTextInputChanged");

	Params::TLUserWidgetPartyKickElectionRegisterPopup_HandleReasonTextInputChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyKickElectionRegisterPopup.HandleReasonTextInputCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyKickElectionRegisterPopup::HandleReasonTextInputCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyKickElectionRegisterPopup", "HandleReasonTextInputCommitted");

	Params::TLUserWidgetPartyKickElectionRegisterPopup_HandleReasonTextInputCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyKickElectionRegisterPopup.OnChangeUIPlatformImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLUIPlatform                           InPlatform                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyKickElectionRegisterPopup::OnChangeUIPlatformImpl(ETLUIPlatform InPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyKickElectionRegisterPopup", "OnChangeUIPlatformImpl");

	Params::TLUserWidgetPartyKickElectionRegisterPopup_OnChangeUIPlatformImpl Parms{};

	Parms.InPlatform = InPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFloater.OnBreak
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetFloater::OnBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFloater", "OnBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetFloater.OnEmit
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInPrimeSkill                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHpAbnormalStatus                       AbnormalStatus                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInSuccessByAccuracy                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFloaterCategory                        FloaterCategory                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsMyPc                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFloater::OnEmit(bool bInPrimeSkill, EHpAbnormalStatus AbnormalStatus, bool bInSuccessByAccuracy, EFloaterCategory FloaterCategory, bool IsMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFloater", "OnEmit");

	Params::TLUserWidgetFloater_OnEmit Parms{};

	Parms.bInPrimeSkill = bInPrimeSkill;
	Parms.AbnormalStatus = AbnormalStatus;
	Parms.bInSuccessByAccuracy = bInSuccessByAccuracy;
	Parms.FloaterCategory = FloaterCategory;
	Parms.IsMyPc = IsMyPc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFloatingFrame.GetContextMenuAnchorWidget
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UTLUserWidgetFloatingFrame::GetContextMenuAnchorWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFloatingFrame", "GetContextMenuAnchorWidget");

	Params::TLUserWidgetFloatingFrame_GetContextMenuAnchorWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetFramePcEventEffect.OnUpdateEEAlert
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInEEAlert                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetFramePcEventEffect::OnUpdateEEAlert(bool bInEEAlert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFramePcEventEffect", "OnUpdateEEAlert");

	Params::TLUserWidgetFramePcEventEffect_OnUpdateEEAlert Parms{};

	Parms.bInEEAlert = bInEEAlert;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetFramePcEventEffect.OnUpdateEECount
// (Event, Public, BlueprintEvent)

void UTLUserWidgetFramePcEventEffect::OnUpdateEECount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetFramePcEventEffect", "OnUpdateEECount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSeasonPassGroupTabButton.OnUpdateLockState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInPurchaseTicket                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassGroupTabButton::OnUpdateLockState(bool bInPurchaseTicket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassGroupTabButton", "OnUpdateLockState");

	Params::TLUserWidgetSeasonPassGroupTabButton_OnUpdateLockState Parms{};

	Parms.bInPurchaseTicket = bInPurchaseTicket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthPass.OnPurchasePassTicket
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsPurchased                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InGroupLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthPass::OnPurchasePassTicket(bool InIsPurchased, int32 InGroupLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPass", "OnPurchasePassTicket");

	Params::TLUserWidgetGrowthPass_OnPurchasePassTicket Parms{};

	Parms.InIsPurchased = InIsPurchased;
	Parms.InGroupLevel = InGroupLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitment.GetRequestRecruitmentListRateTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLUserWidgetPartyRecruitment::GetRequestRecruitmentListRateTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "GetRequestRecruitmentListRateTime");

	Params::TLUserWidgetPartyRecruitment_GetRequestRecruitmentListRateTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyRecruitment.GetRequestRecruitmentListRemainTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UTLUserWidgetPartyRecruitment::GetRequestRecruitmentListRemainTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "GetRequestRecruitmentListRemainTime");

	Params::TLUserWidgetPartyRecruitment_GetRequestRecruitmentListRemainTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyRecruitment.IsRequestRecruitmentListCoolDown
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetPartyRecruitment::IsRequestRecruitmentListCoolDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "IsRequestRecruitmentListCoolDown");

	Params::TLUserWidgetPartyRecruitment_IsRequestRecruitmentListCoolDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyRecruitment.OnAvailableChallengeDungeonImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAvailable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitment::OnAvailableChallengeDungeonImpl(bool bAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "OnAvailableChallengeDungeonImpl");

	Params::TLUserWidgetPartyRecruitment_OnAvailableChallengeDungeonImpl Parms{};

	Parms.bAvailable = bAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitment.OnChangeDungeonCategory
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLDungeonCategory                      InCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitment::OnChangeDungeonCategory(ETLDungeonCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "OnChangeDungeonCategory");

	Params::TLUserWidgetPartyRecruitment_OnChangeDungeonCategory Parms{};

	Parms.InCategory = InCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitment.OnListEmpty
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEmpty                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitment::OnListEmpty(bool bEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "OnListEmpty");

	Params::TLUserWidgetPartyRecruitment_OnListEmpty Parms{};

	Parms.bEmpty = bEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitment.OnPartyState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLPartyState                           InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitment::OnPartyState(ETLPartyState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "OnPartyState");

	Params::TLUserWidgetPartyRecruitment_OnPartyState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitment.OnVisibleLevelSelector
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitment::OnVisibleLevelSelector(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "OnVisibleLevelSelector");

	Params::TLUserWidgetPartyRecruitment_OnVisibleLevelSelector Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitment.GetCurrentDungeonCategory
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETLDungeonCategory                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLDungeonCategory UTLUserWidgetPartyRecruitment::GetCurrentDungeonCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "GetCurrentDungeonCategory");

	Params::TLUserWidgetPartyRecruitment_GetCurrentDungeonCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyRecruitment.IsMatchingParty
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetPartyRecruitment::IsMatchingParty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "IsMatchingParty");

	Params::TLUserWidgetPartyRecruitment_IsMatchingParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyRecruitment.IsMyPartyFulled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetPartyRecruitment::IsMyPartyFulled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitment", "IsMyPartyFulled");

	Params::TLUserWidgetPartyRecruitment_IsMyPartyFulled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSavedPlaceSlot.OnInputTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSavedPlaceSlot::OnInputTextCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSavedPlaceSlot", "OnInputTextCommitted");

	Params::TLUserWidgetSavedPlaceSlot_OnInputTextCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSavedPlaceSlot.OnSelectedSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsSelected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSavedPlaceSlot::OnSelectedSlot(bool InIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSavedPlaceSlot", "OnSelectedSlot");

	Params::TLUserWidgetSavedPlaceSlot_OnSelectedSlot Parms{};

	Parms.InIsSelected = InIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthPassLevelUnitLock.OnUpdateLockState
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InGroupLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInPurchasePassTicket                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthPassLevelUnitLock::OnUpdateLockState(int32 InGroupLevel, bool bInPurchasePassTicket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassLevelUnitLock", "OnUpdateLockState");

	Params::TLUserWidgetGrowthPassLevelUnitLock_OnUpdateLockState Parms{};

	Parms.InGroupLevel = InGroupLevel;
	Parms.bInPurchasePassTicket = bInPurchasePassTicket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthPassLevelUnit.HandleScrollChange
// (Final, Native, Protected)
// Parameters:
// float                                   ScrollOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthPassLevelUnit::HandleScrollChange(float ScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassLevelUnit", "HandleScrollChange");

	Params::TLUserWidgetGrowthPassLevelUnit_HandleScrollChange Parms{};

	Parms.ScrollOffset = ScrollOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGrowthPassLevelUnit.OnGrowthPassGroupInfo
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetGrowthPassLevelUnit::OnGrowthPassGroupInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassLevelUnit", "OnGrowthPassGroupInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGrowthPassLevelUnit.OnPurchaseTicketEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetGrowthPassLevelUnit::OnPurchaseTicketEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassLevelUnit", "OnPurchaseTicketEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGrowthPassLevelUnit.OnSelectedMyLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsMyLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthPassLevelUnit::OnSelectedMyLevel(bool InIsMyLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassLevelUnit", "OnSelectedMyLevel");

	Params::TLUserWidgetGrowthPassLevelUnit_OnSelectedMyLevel Parms{};

	Parms.InIsMyLevel = InIsMyLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthPassLevelUnit.OnStatusEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAchieved                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsMyLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthPassLevelUnit::OnStatusEvent(bool bAchieved, bool IsMyLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassLevelUnit", "OnStatusEvent");

	Params::TLUserWidgetGrowthPassLevelUnit_OnStatusEvent Parms{};

	Parms.bAchieved = bAchieved;
	Parms.IsMyLevel = IsMyLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthPassLevelUnit.OnUpdateCurrentContents
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetGrowthPassLevelUnit::OnUpdateCurrentContents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassLevelUnit", "OnUpdateCurrentContents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGrowthPassLevelUnit.OnUpdateNextContents
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetGrowthPassLevelUnit::OnUpdateNextContents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassLevelUnit", "OnUpdateNextContents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetLevelUpInfo.OnInitInfo
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetLevelUpInfo::OnInitInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLevelUpInfo", "OnInitInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGrowthPassMission.OnPurchaseTicketEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetGrowthPassMission::OnPurchaseTicketEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassMission", "OnPurchaseTicketEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGrowthPassMission.OnRewardCanDeliverEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanDeliver                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthPassMission::OnRewardCanDeliverEvent(bool bCanDeliver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassMission", "OnRewardCanDeliverEvent");

	Params::TLUserWidgetGrowthPassMission_OnRewardCanDeliverEvent Parms{};

	Parms.bCanDeliver = bCanDeliver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthMission.OnMissionTypeEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLGrowthMissionType                    InGrowthMissionType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthMission::OnMissionTypeEvent(ETLGrowthMissionType InGrowthMissionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthMission", "OnMissionTypeEvent");

	Params::TLUserWidgetGrowthMission_OnMissionTypeEvent Parms{};

	Parms.InGrowthMissionType = InGrowthMissionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthMission.OnSelectedUncompletedMission
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsSelected                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthMission::OnSelectedUncompletedMission(bool InIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthMission", "OnSelectedUncompletedMission");

	Params::TLUserWidgetGrowthMission_OnSelectedUncompletedMission Parms{};

	Parms.InIsSelected = InIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSearchTextBox.HandleClearTextButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetSearchTextBox::HandleClearTextButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSearchTextBox", "HandleClearTextButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSearchTextBox.HandleTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetSearchTextBox::HandleTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSearchTextBox", "HandleTextChanged");

	Params::TLUserWidgetSearchTextBox_HandleTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSearchTextBox.HandleTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSearchTextBox::HandleTextCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSearchTextBox", "HandleTextCommitted");

	Params::TLUserWidgetSearchTextBox_HandleTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSearchTextBox.HandleTextFocusLost
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetSearchTextBox::HandleTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSearchTextBox", "HandleTextFocusLost");

	Params::TLUserWidgetSearchTextBox_HandleTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSearchTextBox.HandleTextFocusReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetSearchTextBox::HandleTextFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSearchTextBox", "HandleTextFocusReceived");

	Params::TLUserWidgetSearchTextBox_HandleTextFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSearchTextBox.SetMaxChar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMaxChar                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSearchTextBox::SetMaxChar(int32 InMaxChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSearchTextBox", "SetMaxChar");

	Params::TLUserWidgetSearchTextBox_SetMaxChar Parms{};

	Parms.InMaxChar = InMaxChar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetLevelAchievementReward.OnAchievementTypeEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLLevelAchievementType                 InLevelAchievementType                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetLevelAchievementReward::OnAchievementTypeEvent(ETLLevelAchievementType InLevelAchievementType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLevelAchievementReward", "OnAchievementTypeEvent");

	Params::TLUserWidgetLevelAchievementReward_OnAchievementTypeEvent Parms{};

	Parms.InLevelAchievementType = InLevelAchievementType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetLevelAchievementTicketReward.OnRewardStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// EGrowthPassRewardStatus                 InRewardStatus                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetLevelAchievementTicketReward::OnRewardStatus(EGrowthPassRewardStatus InRewardStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLevelAchievementTicketReward", "OnRewardStatus");

	Params::TLUserWidgetLevelAchievementTicketReward_OnRewardStatus Parms{};

	Parms.InRewardStatus = InRewardStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthPassRewardItem.OnItemTypeEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPassTicket                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthPassRewardItem::OnItemTypeEvent(bool bPassTicket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassRewardItem", "OnItemTypeEvent");

	Params::TLUserWidgetGrowthPassRewardItem_OnItemTypeEvent Parms{};

	Parms.bPassTicket = bPassTicket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthPassRewardItem.OnPurchaseTicketEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInPurchasePassTicket                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthPassRewardItem::OnPurchaseTicketEvent(bool bInPurchasePassTicket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassRewardItem", "OnPurchaseTicketEvent");

	Params::TLUserWidgetGrowthPassRewardItem_OnPurchaseTicketEvent Parms{};

	Parms.bInPurchasePassTicket = bInPurchasePassTicket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGrowthPassRewardItem.OnRewardStatusEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// EGrowthPassRewardStatus                 InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGrowthPassRewardItem::OnRewardStatusEvent(EGrowthPassRewardStatus InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGrowthPassRewardItem", "OnRewardStatusEvent");

	Params::TLUserWidgetGrowthPassRewardItem_OnRewardStatusEvent Parms{};

	Parms.InStatus = InStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildBMRewardListItem.OnCompleteReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsAll                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildBMRewardListItem::OnCompleteReward(bool InIsAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildBMRewardListItem", "OnCompleteReward");

	Params::TLUserWidgetGuildBMRewardListItem_OnCompleteReward Parms{};

	Parms.InIsAll = InIsAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildBMRewardListItem.OnRewardState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsReceived                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsAllReceive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildBMRewardListItem::OnRewardState(bool InIsReceived, bool IsAction, bool InIsAllReceive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildBMRewardListItem", "OnRewardState");

	Params::TLUserWidgetGuildBMRewardListItem_OnRewardState Parms{};

	Parms.InIsReceived = InIsReceived;
	Parms.IsAction = IsAction;
	Parms.InIsAllReceive = InIsAllReceive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTutorial.ButtonClose_OnClicked
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetTutorial::ButtonClose_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTutorial", "ButtonClose_OnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTutorial.ButtonPanel_OnClicked
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetTutorial::ButtonPanel_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTutorial", "ButtonPanel_OnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTutorial.SetActivate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTLInfoTutorial                  Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetTutorial::SetActivate(const struct FTLInfoTutorial& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTutorial", "SetActivate");

	Params::TLUserWidgetTutorial_SetActivate Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildCallClanHud.OnDamaged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsDamaged                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildCallClanHud::OnDamaged(bool InIsDamaged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildCallClanHud", "OnDamaged");

	Params::TLUserWidgetGuildCallClanHud_OnDamaged Parms{};

	Parms.InIsDamaged = InIsDamaged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildCallClanHud.OnUpdateHpPercent
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InHpPercent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildCallClanHud::OnUpdateHpPercent(float InHpPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildCallClanHud", "OnUpdateHpPercent");

	Params::TLUserWidgetGuildCallClanHud_OnUpdateHpPercent Parms{};

	Parms.InHpPercent = InHpPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContentsRewardListItem.OnCompleteReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsAll                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsReqScroll                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContentsRewardListItem::OnCompleteReward(bool InIsAll, bool InIsReqScroll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContentsRewardListItem", "OnCompleteReward");

	Params::TLUserWidgetGuildContentsRewardListItem_OnCompleteReward Parms{};

	Parms.InIsAll = InIsAll;
	Parms.InIsReqScroll = InIsReqScroll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildContentsRewardListItem.OnReceivedCompleteReward
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsComplete                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContentsRewardListItem::OnReceivedCompleteReward(bool InIsComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContentsRewardListItem", "OnReceivedCompleteReward");

	Params::TLUserWidgetGuildContentsRewardListItem_OnReceivedCompleteReward Parms{};

	Parms.InIsComplete = InIsComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractItem.OnUpdateTypeImage
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildContractType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractItem::OnUpdateTypeImage(EGuildContractType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractItem", "OnUpdateTypeImage");

	Params::TLUserWidgetGuildContractItem_OnUpdateTypeImage Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractItem.UpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildContractState                     InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractItem::UpdateState(EGuildContractState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractItem", "UpdateState");

	Params::TLUserWidgetGuildContractItem_UpdateState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractHistoryItem.OnUpdateRewardButtonState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsEnable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractHistoryItem::OnUpdateRewardButtonState(bool InIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractHistoryItem", "OnUpdateRewardButtonState");

	Params::TLUserWidgetGuildContractHistoryItem_OnUpdateRewardButtonState Parms{};

	Parms.InIsEnable = InIsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractHistoryItem.OnUpdateTypeImage
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildContractType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractHistoryItem::OnUpdateTypeImage(EGuildContractType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractHistoryItem", "OnUpdateTypeImage");

	Params::TLUserWidgetGuildContractHistoryItem_OnUpdateTypeImage Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetKeyEditGroup.HandleGamepadKeySelected
// (Native, Public, HasOutParams)
// Parameters:
// TArray<struct FInputChord>              InSelectedKey                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetKeyEditGroup::HandleGamepadKeySelected(const TArray<struct FInputChord>& InSelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetKeyEditGroup", "HandleGamepadKeySelected");

	Params::TLUserWidgetKeyEditGroup_HandleGamepadKeySelected Parms{};

	Parms.InSelectedKey = std::move(InSelectedKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetKeyEditGroup.HandleGamepadKeySelecting
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<struct FInputChord>              InSelectedKey                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bInRepeat                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetKeyEditGroup::HandleGamepadKeySelecting(const TArray<struct FInputChord>& InSelectedKey, bool bInRepeat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetKeyEditGroup", "HandleGamepadKeySelecting");

	Params::TLUserWidgetKeyEditGroup_HandleGamepadKeySelecting Parms{};

	Parms.InSelectedKey = std::move(InSelectedKey);
	Parms.bInRepeat = bInRepeat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetKeyEditGroup.HandleIsSelectingGamepadKeyChanged
// (Final, Native, Public)

void UTLUserWidgetKeyEditGroup::HandleIsSelectingGamepadKeyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetKeyEditGroup", "HandleIsSelectingGamepadKeyChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetKeyEditGroup.HandleIsSelectingKeyChanged
// (Final, Native, Public)

void UTLUserWidgetKeyEditGroup::HandleIsSelectingKeyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetKeyEditGroup", "HandleIsSelectingKeyChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetKeyEditGroup.HandleKeySelected
// (Final, Native, Public)
// Parameters:
// struct FInputChord                      InSelectedKey                                          (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetKeyEditGroup::HandleKeySelected(const struct FInputChord& InSelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetKeyEditGroup", "HandleKeySelected");

	Params::TLUserWidgetKeyEditGroup_HandleKeySelected Parms{};

	Parms.InSelectedKey = std::move(InSelectedKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetKeyEditGroup.HandlePressedLongPress
// (Final, Native, Public)
// Parameters:
// struct FKey                             InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetKeyEditGroup::HandlePressedLongPress(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetKeyEditGroup", "HandlePressedLongPress");

	Params::TLUserWidgetKeyEditGroup_HandlePressedLongPress Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetKeyEditGroup.HandleReleasedLongPress
// (Final, Native, Public)
// Parameters:
// struct FKey                             InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetKeyEditGroup::HandleReleasedLongPress(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetKeyEditGroup", "HandleReleasedLongPress");

	Params::TLUserWidgetKeyEditGroup_HandleReleasedLongPress Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetKeyEditGroup.HandleRepeatedStartLongPress
// (Final, Native, Public)
// Parameters:
// struct FKey                             InKey                                                  (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetKeyEditGroup::HandleRepeatedStartLongPress(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetKeyEditGroup", "HandleRepeatedStartLongPress");

	Params::TLUserWidgetKeyEditGroup_HandleRepeatedStartLongPress Parms{};

	Parms.InKey = std::move(InKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetKeyEditGroup.OnAvailableChangeKey
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInAvailableChangeKey                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetKeyEditGroup::OnAvailableChangeKey(bool bInAvailableChangeKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetKeyEditGroup", "OnAvailableChangeKey");

	Params::TLUserWidgetKeyEditGroup_OnAvailableChangeKey Parms{};

	Parms.bInAvailableChangeKey = bInAvailableChangeKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetKeyEditGroup.OnUpdateEditing
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInEdit                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetKeyEditGroup::OnUpdateEditing(bool bInEdit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetKeyEditGroup", "OnUpdateEditing");

	Params::TLUserWidgetKeyEditGroup_OnUpdateEditing Parms{};

	Parms.bInEdit = bInEdit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetComboBoxSetKeyEditGroup.HandleActiveKeySelectionChanged
// (Native, Protected)
// Parameters:
// class FString                           SelectedItem                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetComboBoxSetKeyEditGroup::HandleActiveKeySelectionChanged(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBoxSetKeyEditGroup", "HandleActiveKeySelectionChanged");

	Params::TLUserWidgetComboBoxSetKeyEditGroup_HandleActiveKeySelectionChanged Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetComboBoxSetKeyEditGroup.HandleSetKeyTypeSelectionChanged
// (Native, Protected)
// Parameters:
// class FString                           SelectedItem                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetComboBoxSetKeyEditGroup::HandleSetKeyTypeSelectionChanged(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetComboBoxSetKeyEditGroup", "HandleSetKeyTypeSelectionChanged");

	Params::TLUserWidgetComboBoxSetKeyEditGroup_HandleSetKeyTypeSelectionChanged Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildContractBoaderObjectiveItem.OnUpdateGuildPoint
// (Event, Public, BlueprintEvent)

void UTLUserWidgetGuildContractBoaderObjectiveItem::OnUpdateGuildPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoaderObjectiveItem", "OnUpdateGuildPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGuildContractBoaderObjectiveItem.OnUpdateMyPoint
// (Event, Public, BlueprintEvent)

void UTLUserWidgetGuildContractBoaderObjectiveItem::OnUpdateMyPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoaderObjectiveItem", "OnUpdateMyPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGuildContractBoaderObjectiveItem.OnUpdateObjective
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsComplete                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractBoaderObjectiveItem::OnUpdateObjective(bool IsComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoaderObjectiveItem", "OnUpdateObjective");

	Params::TLUserWidgetGuildContractBoaderObjectiveItem_OnUpdateObjective Parms{};

	Parms.IsComplete = IsComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTreeViewItem.OnActive
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTreeViewItem::OnActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTreeViewItem", "OnActive");

	Params::TLUserWidgetTreeViewItem_OnActive Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTreeViewItem.OnExpand
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bExpand                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTreeViewItem::OnExpand(bool bExpand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTreeViewItem", "OnExpand");

	Params::TLUserWidgetTreeViewItem_OnExpand Parms{};

	Parms.bExpand = bExpand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTreeViewItem.OnShowExpansionButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTreeViewItem::OnShowExpansionButton(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTreeViewItem", "OnShowExpansionButton");

	Params::TLUserWidgetTreeViewItem_OnShowExpansionButton Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractBoaderItem.ButtonClickContractTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InbChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractBoaderItem::ButtonClickContractTarget(bool InbChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoaderItem", "ButtonClickContractTarget");

	Params::TLUserWidgetGuildContractBoaderItem_ButtonClickContractTarget Parms{};

	Parms.InbChecked = InbChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildContractBoaderItem.OnClickedDetailButton
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetGuildContractBoaderItem::OnClickedDetailButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoaderItem", "OnClickedDetailButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildContractBoaderItem.OnContractTargetAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InbVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractBoaderItem::OnContractTargetAnimation(bool InbVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoaderItem", "OnContractTargetAnimation");

	Params::TLUserWidgetGuildContractBoaderItem_OnContractTargetAnimation Parms{};

	Parms.InbVisible = InbVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractBoaderItem.OnUpdateGuildContract
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsComplete                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractBoaderItem::OnUpdateGuildContract(bool IsComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoaderItem", "OnUpdateGuildContract");

	Params::TLUserWidgetGuildContractBoaderItem_OnUpdateGuildContract Parms{};

	Parms.IsComplete = IsComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractBoaderItem.OnUpdateGuildPointPercent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetGuildContractBoaderItem::OnUpdateGuildPointPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoaderItem", "OnUpdateGuildPointPercent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGuildContractBoaderItem.OnUpdateMyPointPercent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetGuildContractBoaderItem::OnUpdateMyPointPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractBoaderItem", "OnUpdateMyPointPercent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetUnionCreate.OnCreateFail
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InFailFlag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetUnionCreate::OnCreateFail(int32 InFailFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetUnionCreate", "OnCreateFail");

	Params::TLUserWidgetUnionCreate_OnCreateFail Parms{};

	Parms.InFailFlag = InFailFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetUnionCreate.OnUpdateCreateState
// (Event, Public, BlueprintEvent)
// Parameters:
// EUnionCreateFailType                    InFailType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetUnionCreate::OnUpdateCreateState(EUnionCreateFailType InFailType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetUnionCreate", "OnUpdateCreateState");

	Params::TLUserWidgetUnionCreate_OnUpdateCreateState Parms{};

	Parms.InFailType = InFailType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractProgressInfo.OnUpdateTypeImage
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildContractType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractProgressInfo::OnUpdateTypeImage(EGuildContractType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractProgressInfo", "OnUpdateTypeImage");

	Params::TLUserWidgetGuildContractProgressInfo_OnUpdateTypeImage Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapRegionNpcInfo.OnUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapRegionNpcInfo::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionNpcInfo", "OnUnLockMemorial");

	Params::TLUserWidgetWorldMapRegionNpcInfo_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapRegionNpcInfo.OnUpdateInfo
// (Event, Public, BlueprintEvent)

void UTLUserWidgetWorldMapRegionNpcInfo::OnUpdateInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionNpcInfo", "OnUpdateInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWorldMapRegionNpcInfo.OnUpdateNpcInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLCreatureRank                         InCreatureRank                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapRegionNpcInfo::OnUpdateNpcInfo(int32 InLevel, ETLCreatureRank InCreatureRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionNpcInfo", "OnUpdateNpcInfo");

	Params::TLUserWidgetWorldMapRegionNpcInfo_OnUpdateNpcInfo Parms{};

	Parms.InLevel = InLevel;
	Parms.InCreatureRank = InCreatureRank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractProgressMemberItem.OnUpdateJoinMember
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsJoin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractProgressMemberItem::OnUpdateJoinMember(bool InIsJoin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractProgressMemberItem", "OnUpdateJoinMember");

	Params::TLUserWidgetGuildContractProgressMemberItem_OnUpdateJoinMember Parms{};

	Parms.InIsJoin = InIsJoin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapRegionNpcInfoListItem.OnUpdateMark
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsShowMark                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapRegionNpcInfoListItem::OnUpdateMark(bool IsShowMark)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionNpcInfoListItem", "OnUpdateMark");

	Params::TLUserWidgetWorldMapRegionNpcInfoListItem_OnUpdateMark Parms{};

	Parms.IsShowMark = IsShowMark;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildContractScreenMessage.OnUpdateTypeImage
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildContractType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildContractScreenMessage::OnUpdateTypeImage(EGuildContractType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildContractScreenMessage", "OnUpdateTypeImage");

	Params::TLUserWidgetGuildContractScreenMessage_OnUpdateTypeImage Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildCreate.OnGuildNameTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildCreate::OnGuildNameTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildCreate", "OnGuildNameTextChanged");

	Params::TLUserWidgetGuildCreate_OnGuildNameTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildCreate.OnGuildNameTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildCreate::OnGuildNameTextCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildCreate", "OnGuildNameTextCommitted");

	Params::TLUserWidgetGuildCreate_OnGuildNameTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphLevelTabButton.OnUpdateAcquiredLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bAcquired                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphLevelTabButton::OnUpdateAcquiredLevel(bool bAcquired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphLevelTabButton", "OnUpdateAcquiredLevel");

	Params::TLUserWidgetPolymorphLevelTabButton_OnUpdateAcquiredLevel Parms{};

	Parms.bAcquired = bAcquired;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphLevelTabButton.OnUpdateLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphLevelTabButton::OnUpdateLevel(int32 InLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphLevelTabButton", "OnUpdateLevel");

	Params::TLUserWidgetPolymorphLevelTabButton_OnUpdateLevel Parms{};

	Parms.InLevel = InLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemPay.HandleBuyCostChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemPay::HandleBuyCostChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemPay", "HandleBuyCostChanged");

	Params::TLUserWidgetGuildDistributionDetailItemPay_HandleBuyCostChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemPay.HandleBuyCostCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemPay::HandleBuyCostCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemPay", "HandleBuyCostCommitted");

	Params::TLUserWidgetGuildDistributionDetailItemPay_HandleBuyCostCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemPay.HandleCost01Changed
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemPay::HandleCost01Changed(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemPay", "HandleCost01Changed");

	Params::TLUserWidgetGuildDistributionDetailItemPay_HandleCost01Changed Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemPay.HandleCost01Committed
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemPay::HandleCost01Committed(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemPay", "HandleCost01Committed");

	Params::TLUserWidgetGuildDistributionDetailItemPay_HandleCost01Committed Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemPay.HandleCost02Changed
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemPay::HandleCost02Changed(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemPay", "HandleCost02Changed");

	Params::TLUserWidgetGuildDistributionDetailItemPay_HandleCost02Changed Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemPay.HandleCost02Committed
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemPay::HandleCost02Committed(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemPay", "HandleCost02Committed");

	Params::TLUserWidgetGuildDistributionDetailItemPay_HandleCost02Committed Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemPay.OnDistributionSellingType
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsWait                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDistributionGuildSellState             InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsAvailableBidding                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemPay::OnDistributionSellingType(bool InIsWait, EDistributionGuildSellState InState, bool IsAvailableBidding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemPay", "OnDistributionSellingType");

	Params::TLUserWidgetGuildDistributionDetailItemPay_OnDistributionSellingType Parms{};

	Parms.InIsWait = InIsWait;
	Parms.InState = InState;
	Parms.IsAvailableBidding = IsAvailableBidding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemPay.OnTradeShopItemCount
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsFull                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemPay::OnTradeShopItemCount(bool InIsFull)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemPay", "OnTradeShopItemCount");

	Params::TLUserWidgetGuildDistributionDetailItemPay_OnTradeShopItemCount Parms{};

	Parms.InIsFull = InIsFull;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemPay.UpdateActionButton03Color
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInMainButtonColor                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemPay::UpdateActionButton03Color(bool bInMainButtonColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemPay", "UpdateActionButton03Color");

	Params::TLUserWidgetGuildDistributionDetailItemPay_UpdateActionButton03Color Parms{};

	Parms.bInMainButtonColor = bInMainButtonColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemStorageItem.OnModifyStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildDistributionJoinModifyStatus      InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemStorageItem::OnModifyStatus(EGuildDistributionJoinModifyStatus InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemStorageItem", "OnModifyStatus");

	Params::TLUserWidgetGuildDistributionDetailItemStorageItem_OnModifyStatus Parms{};

	Parms.InStatus = InStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemStorage.OnDistributionItemState
// (Event, Public, BlueprintEvent)
// Parameters:
// EDistibutionItemState                   InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemStorage::OnDistributionItemState(EDistibutionItemState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemStorage", "OnDistributionItemState");

	Params::TLUserWidgetGuildDistributionDetailItemStorage_OnDistributionItemState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemStorage.OnItemSlotUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemStorage::OnItemSlotUpdate(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemStorage", "OnItemSlotUpdate");

	Params::TLUserWidgetGuildDistributionDetailItemStorage_OnItemSlotUpdate Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionDetailItemStorage.OnTradeShopItemCount
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsFull                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailItemStorage::OnTradeShopItemCount(bool InIsFull)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailItemStorage", "OnTradeShopItemCount");

	Params::TLUserWidgetGuildDistributionDetailItemStorage_OnTradeShopItemCount Parms{};

	Parms.InIsFull = InIsFull;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionDetailRevenueItem.HandleAdenaChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailRevenueItem::HandleAdenaChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailRevenueItem", "HandleAdenaChanged");

	Params::TLUserWidgetGuildDistributionDetailRevenueItem_HandleAdenaChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailRevenueItem.HandleAdenaCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailRevenueItem::HandleAdenaCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailRevenueItem", "HandleAdenaCommitted");

	Params::TLUserWidgetGuildDistributionDetailRevenueItem_HandleAdenaCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailRevenueItem.HandleDiamondChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailRevenueItem::HandleDiamondChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailRevenueItem", "HandleDiamondChanged");

	Params::TLUserWidgetGuildDistributionDetailRevenueItem_HandleDiamondChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailRevenueItem.HandleDiamondCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailRevenueItem::HandleDiamondCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailRevenueItem", "HandleDiamondCommitted");

	Params::TLUserWidgetGuildDistributionDetailRevenueItem_HandleDiamondCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailRevenue.HandleBatchAdenaChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailRevenue::HandleBatchAdenaChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailRevenue", "HandleBatchAdenaChanged");

	Params::TLUserWidgetGuildDistributionDetailRevenue_HandleBatchAdenaChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailRevenue.HandleBatchAdenaCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailRevenue::HandleBatchAdenaCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailRevenue", "HandleBatchAdenaCommitted");

	Params::TLUserWidgetGuildDistributionDetailRevenue_HandleBatchAdenaCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailRevenue.HandleBatchDiamondChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailRevenue::HandleBatchDiamondChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailRevenue", "HandleBatchDiamondChanged");

	Params::TLUserWidgetGuildDistributionDetailRevenue_HandleBatchDiamondChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailRevenue.HandleBatchDiamondCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailRevenue::HandleBatchDiamondCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailRevenue", "HandleBatchDiamondCommitted");

	Params::TLUserWidgetGuildDistributionDetailRevenue_HandleBatchDiamondCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildDistributionDetailRevenue.OnItemSlotUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionDetailRevenue::OnItemSlotUpdate(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionDetailRevenue", "OnItemSlotUpdate");

	Params::TLUserWidgetGuildDistributionDetailRevenue_OnItemSlotUpdate Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionRevenueItem.OnItemSlotUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionRevenueItem::OnItemSlotUpdate(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionRevenueItem", "OnItemSlotUpdate");

	Params::TLUserWidgetGuildDistributionRevenueItem_OnItemSlotUpdate Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionStorageItem.OnAcquireItemMine
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsMine                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionStorageItem::OnAcquireItemMine(bool InIsMine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionStorageItem", "OnAcquireItemMine");

	Params::TLUserWidgetGuildDistributionStorageItem_OnAcquireItemMine Parms{};

	Parms.InIsMine = InIsMine;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDistributionStorageItem.OnDistributionItemState
// (Event, Public, BlueprintEvent)
// Parameters:
// EDistibutionItemState                   InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsEnableBuy                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsBuying                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDistributionStorageItem::OnDistributionItemState(EDistibutionItemState InState, bool InIsEnableBuy, bool InIsBuying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDistributionStorageItem", "OnDistributionItemState");

	Params::TLUserWidgetGuildDistributionStorageItem_OnDistributionItemState Parms{};

	Parms.InState = InState;
	Parms.InIsEnableBuy = InIsEnableBuy;
	Parms.InIsBuying = InIsBuying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDonationPanel.OnOpenPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDonationPanel::OnOpenPanel(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDonationPanel", "OnOpenPanel");

	Params::TLUserWidgetGuildDonationPanel_OnOpenPanel Parms{};

	Parms.InIsOpen = InIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildDonationPanel.OnUpdateReputationReward
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildReputationRewardState             InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildDonationPanel::OnUpdateReputationReward(EGuildReputationRewardState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildDonationPanel", "OnUpdateReputationReward");

	Params::TLUserWidgetGuildDonationPanel_OnUpdateReputationReward Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPostWrite.HandleClickedClose
// (Final, Native, Protected)

void UTLUserWidgetPostWrite::HandleClickedClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPostWrite", "HandleClickedClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPostWrite.HandleClickedSendPost
// (Final, Native, Protected)

void UTLUserWidgetPostWrite::HandleClickedSendPost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPostWrite", "HandleClickedSendPost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPostWrite.HandleContentsInputChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPostWrite::HandleContentsInputChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPostWrite", "HandleContentsInputChanged");

	Params::TLUserWidgetPostWrite_HandleContentsInputChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPostWrite.HandleReceiverInputChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPostWrite::HandleReceiverInputChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPostWrite", "HandleReceiverInputChanged");

	Params::TLUserWidgetPostWrite_HandleReceiverInputChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPostWrite.HandleReceiverInputCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPostWrite::HandleReceiverInputCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPostWrite", "HandleReceiverInputCommitted");

	Params::TLUserWidgetPostWrite_HandleReceiverInputCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPostWrite.HandleSubjectInputChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPostWrite::HandleSubjectInputChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPostWrite", "HandleSubjectInputChanged");

	Params::TLUserWidgetPostWrite_HandleSubjectInputChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPostWrite.HandleSubjectInputCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPostWrite::HandleSubjectInputCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPostWrite", "HandleSubjectInputCommitted");

	Params::TLUserWidgetPostWrite_HandleSubjectInputCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPostWrite.HandleUIContentsInputCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPostWrite::HandleUIContentsInputCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPostWrite", "HandleUIContentsInputCommitted");

	Params::TLUserWidgetPostWrite_HandleUIContentsInputCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildList.OnGuildSearchTextCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildList::OnGuildSearchTextCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildList", "OnGuildSearchTextCommitted");

	Params::TLUserWidgetGuildList_OnGuildSearchTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildMainInfo.OnGuildHomeOpen
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InHomeOpen                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildMainInfo::OnGuildHomeOpen(bool InHomeOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildMainInfo", "OnGuildHomeOpen");

	Params::TLUserWidgetGuildMainInfo_OnGuildHomeOpen Parms{};

	Parms.InHomeOpen = InHomeOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildMainInfo.OnGuildHomeRaidStart
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InStart                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildMainInfo::OnGuildHomeRaidStart(bool InStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildMainInfo", "OnGuildHomeRaidStart");

	Params::TLUserWidgetGuildMainInfo_OnGuildHomeRaidStart Parms{};

	Parms.InStart = InStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildMainInfo.OnGuildHomeState
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildHomeState                         InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildMainInfo::OnGuildHomeState(EGuildHomeState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildMainInfo", "OnGuildHomeState");

	Params::TLUserWidgetGuildMainInfo_OnGuildHomeState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildMainInfo.OnIsLegionGuild
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InLegionGuild                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildMainInfo::OnIsLegionGuild(bool InLegionGuild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildMainInfo", "OnIsLegionGuild");

	Params::TLUserWidgetGuildMainInfo_OnIsLegionGuild Parms{};

	Parms.InLegionGuild = InLegionGuild;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildMainInfo.OnUpdateReputationReward
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildReputationRewardState             InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildMainInfo::OnUpdateReputationReward(EGuildReputationRewardState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildMainInfo", "OnUpdateReputationReward");

	Params::TLUserWidgetGuildMainInfo_OnUpdateReputationReward Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapListItemBase.HandleClickedMainBtn
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FPointerEvent                    InPointerEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemBase::HandleClickedMainBtn(const struct FPointerEvent& InPointerEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemBase", "HandleClickedMainBtn");

	Params::TLUserWidgetWorldMapListItemBase_HandleClickedMainBtn Parms{};

	Parms.InPointerEvent = std::move(InPointerEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapListItemBase.HandleFoldingBtnChecked
// (Final, Native, Public)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemBase::HandleFoldingBtnChecked(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemBase", "HandleFoldingBtnChecked");

	Params::TLUserWidgetWorldMapListItemBase_HandleFoldingBtnChecked Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapListItemBase.OnContractUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsActiveArea                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemBase::OnContractUpdate(bool IsActiveArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemBase", "OnContractUpdate");

	Params::TLUserWidgetWorldMapListItemBase_OnContractUpdate Parms{};

	Parms.IsActiveArea = IsActiveArea;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapListItemBase.OnUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemBase::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemBase", "OnUnLockMemorial");

	Params::TLUserWidgetWorldMapListItemBase_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapListItemBase.OnUpdateGuildContract
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemBase::OnUpdateGuildContract(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemBase", "OnUpdateGuildContract");

	Params::TLUserWidgetWorldMapListItemBase_OnUpdateGuildContract Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapListItemBase.OnUpdateTreasureBox
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemBase::OnUpdateTreasureBox(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemBase", "OnUpdateTreasureBox");

	Params::TLUserWidgetWorldMapListItemBase_OnUpdateTreasureBox Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapListItemRegionGroup.HandleProcessSearchKeywordChange
// (Final, Native, Public)

void UTLUserWidgetWorldMapListItemRegionGroup::HandleProcessSearchKeywordChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemRegionGroup", "HandleProcessSearchKeywordChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapListItemRegionGroup.HandleSearchKeywordChange
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InSearchKeyword                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EWorldMapListSearchType                 InSearchType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemRegionGroup::HandleSearchKeywordChange(const class FText& InSearchKeyword, const EWorldMapListSearchType InSearchType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemRegionGroup", "HandleSearchKeywordChange");

	Params::TLUserWidgetWorldMapListItemRegionGroup_HandleSearchKeywordChange Parms{};

	Parms.InSearchKeyword = std::move(InSearchKeyword);
	Parms.InSearchType = InSearchType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapListItemRegionGroup.HandleSearchSpeciesChange
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint64>                          InRegionGroupId                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemRegionGroup::HandleSearchSpeciesChange(const TArray<uint64>& InRegionGroupId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemRegionGroup", "HandleSearchSpeciesChange");

	Params::TLUserWidgetWorldMapListItemRegionGroup_HandleSearchSpeciesChange Parms{};

	Parms.InRegionGroupId = std::move(InRegionGroupId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildManagementOptionGroup.OnEditPasswordChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildManagementOptionGroup::OnEditPasswordChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildManagementOptionGroup", "OnEditPasswordChanged");

	Params::TLUserWidgetGuildManagementOptionGroup_OnEditPasswordChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildManagementOptionGroup.OnEditPasswordCommited
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildManagementOptionGroup::OnEditPasswordCommited(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildManagementOptionGroup", "OnEditPasswordCommited");

	Params::TLUserWidgetGuildManagementOptionGroup_OnEditPasswordCommited Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildManagementOptionGroup.OnInputIntroductionTextChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildManagementOptionGroup::OnInputIntroductionTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildManagementOptionGroup", "OnInputIntroductionTextChanged");

	Params::TLUserWidgetGuildManagementOptionGroup_OnInputIntroductionTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildManagementOptionGroup.OnInputNoticeTextChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildManagementOptionGroup::OnInputNoticeTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildManagementOptionGroup", "OnInputNoticeTextChanged");

	Params::TLUserWidgetGuildManagementOptionGroup_OnInputNoticeTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPcRelationshipFavoritePanel.OnUpdateItemCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInIsMaxCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcRelationshipFavoritePanel::OnUpdateItemCount(bool bInIsMaxCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcRelationshipFavoritePanel", "OnUpdateItemCount");

	Params::TLUserWidgetPcRelationshipFavoritePanel_OnUpdateItemCount Parms{};

	Parms.bInIsMaxCount = bInIsMaxCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcRelationshipFavoritePanel.OnUpdatePcRelationshipType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLPcRelationshipType                   InPcRelationshipType                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcRelationshipFavoritePanel::OnUpdatePcRelationshipType(ETLPcRelationshipType InPcRelationshipType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcRelationshipFavoritePanel", "OnUpdatePcRelationshipType");

	Params::TLUserWidgetPcRelationshipFavoritePanel_OnUpdatePcRelationshipType Parms{};

	Parms.InPcRelationshipType = InPcRelationshipType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapList.HandleClickedSearchBtn
// (Final, Native, Private)

void UTLUserWidgetWorldMapList::HandleClickedSearchBtn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapList", "HandleClickedSearchBtn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapList.HandleFocusEditBox
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapList::HandleFocusEditBox(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapList", "HandleFocusEditBox");

	Params::TLUserWidgetWorldMapList_HandleFocusEditBox Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapList.HandleLostFocusEditBox
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapList::HandleLostFocusEditBox(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapList", "HandleLostFocusEditBox");

	Params::TLUserWidgetWorldMapList_HandleLostFocusEditBox Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapList.HandleSearchTypeChanged
// (Final, Native, Private)
// Parameters:
// class FString                           OptionString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapList::HandleSearchTypeChanged(const class FString& OptionString, ESelectInfo SelectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapList", "HandleSearchTypeChanged");

	Params::TLUserWidgetWorldMapList_HandleSearchTypeChanged Parms{};

	Parms.OptionString = std::move(OptionString);
	Parms.SelectType = SelectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapList.HandleSpeciesTypeChanged
// (Final, Native, Private)
// Parameters:
// class FString                           OptionString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapList::HandleSpeciesTypeChanged(const class FString& OptionString, ESelectInfo SelectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapList", "HandleSpeciesTypeChanged");

	Params::TLUserWidgetWorldMapList_HandleSpeciesTypeChanged Parms{};

	Parms.OptionString = std::move(OptionString);
	Parms.SelectType = SelectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapList.HandleTextInputCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapList::HandleTextInputCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapList", "HandleTextInputCommitted");

	Params::TLUserWidgetWorldMapList_HandleTextInputCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapRegionInfo.OnSelectedNpcSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             InNpcRadeId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapRegionInfo::OnSelectedNpcSlot(class FName InNpcRadeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionInfo", "OnSelectedNpcSlot");

	Params::TLUserWidgetWorldMapRegionInfo_OnSelectedNpcSlot Parms{};

	Parms.InNpcRadeId = InNpcRadeId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapRegionInfo.OnUpdateActivePoint
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InActivePoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapRegionInfo::OnUpdateActivePoint(int32 InActivePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionInfo", "OnUpdateActivePoint");

	Params::TLUserWidgetWorldMapRegionInfo_OnUpdateActivePoint Parms{};

	Parms.InActivePoint = InActivePoint;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction TLClient.TLUserWidgetWorldMapRegionInfo.SimpleDynamicMulticastDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTLUserWidgetWorldMapRegionInfo::SimpleDynamicMulticastDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionInfo", "SimpleDynamicMulticastDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGuildOccupationItem.OnBossSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsSpawned                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildOccupationItem::OnBossSpawned(bool IsSpawned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupationItem", "OnBossSpawned");

	Params::TLUserWidgetGuildOccupationItem_OnBossSpawned Parms{};

	Parms.IsSpawned = IsSpawned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildOccupationItem.OnUpdateOccupationState
// (Event, Public, BlueprintEvent)

void UTLUserWidgetGuildOccupationItem::OnUpdateOccupationState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupationItem", "OnUpdateOccupationState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetGuildOccupationItem.SetLock
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsLock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildOccupationItem::SetLock(bool IsLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupationItem", "SetLock");

	Params::TLUserWidgetGuildOccupationItem_SetLock Parms{};

	Parms.IsLock = IsLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapPinList.GetContextMenuWidget
// (Final, Native, Private)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UTLUserWidgetWorldMapPinList::GetContextMenuWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapPinList", "GetContextMenuWidget");

	Params::TLUserWidgetWorldMapPinList_GetContextMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetGuildOccupation.OnBossStoneUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildOccupation::OnBossStoneUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupation", "OnBossStoneUnLockMemorial");

	Params::TLUserWidgetGuildOccupation_OnBossStoneUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildOccupation.OnRegionStoneUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildOccupation::OnRegionStoneUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupation", "OnRegionStoneUnLockMemorial");

	Params::TLUserWidgetGuildOccupation_OnRegionStoneUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildOccupation.OnUpdateEffectCount
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InEffectCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildOccupation::OnUpdateEffectCount(int32 InEffectCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupation", "OnUpdateEffectCount");

	Params::TLUserWidgetGuildOccupation_OnUpdateEffectCount Parms{};

	Parms.InEffectCount = InEffectCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildOccupation.OnUpdateOnboardingMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildOccupation::OnUpdateOnboardingMessage(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupation", "OnUpdateOnboardingMessage");

	Params::TLUserWidgetGuildOccupation_OnUpdateOnboardingMessage Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildOccupation.OnUpdateOnboardingMessageResource
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildOccupation::OnUpdateOnboardingMessageResource(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupation", "OnUpdateOnboardingMessageResource");

	Params::TLUserWidgetGuildOccupation_OnUpdateOnboardingMessageResource Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildOccupation.OnUpdateOnboardingMessageStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildOccupation::OnUpdateOnboardingMessageStat(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupation", "OnUpdateOnboardingMessageStat");

	Params::TLUserWidgetGuildOccupation_OnUpdateOnboardingMessageStat Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildOccupation.SetActiveMyCastleSlot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsShowCastle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildOccupation::SetActiveMyCastleSlot(bool IsShowCastle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildOccupation", "SetActiveMyCastleSlot");

	Params::TLUserWidgetGuildOccupation_SetActiveMyCastleSlot Parms{};

	Parms.IsShowCastle = IsShowCastle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxTextInput.OnInputTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTextInput::OnInputTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTextInput", "OnInputTextChanged");

	Params::TLUserWidgetMsgBoxTextInput_OnInputTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTextInput.OnInputTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTextInput::OnInputTextCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTextInput", "OnInputTextCommitted");

	Params::TLUserWidgetMsgBoxTextInput_OnInputTextCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildRaid.HandleHoveredToolTipButton
// (Final, Native, Public)

void UTLUserWidgetGuildRaid::HandleHoveredToolTipButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRaid", "HandleHoveredToolTipButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildRaid.HandleUnhoveredToolTipButton
// (Final, Native, Public)

void UTLUserWidgetGuildRaid::HandleUnhoveredToolTipButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRaid", "HandleUnhoveredToolTipButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildRaid.OnCreatureRank
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLCreatureRank                         InRank                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildRaid::OnCreatureRank(ETLCreatureRank InRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRaid", "OnCreatureRank");

	Params::TLUserWidgetGuildRaid_OnCreatureRank Parms{};

	Parms.InRank = InRank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildRaid.OnRaidButtonState
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildRaidButtonState                   InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildRaid::OnRaidButtonState(EGuildRaidButtonState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRaid", "OnRaidButtonState");

	Params::TLUserWidgetGuildRaid_OnRaidButtonState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildRaid.OnRewardClosed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildRaid::OnRewardClosed(bool InEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRaid", "OnRewardClosed");

	Params::TLUserWidgetGuildRaid_OnRewardClosed Parms{};

	Parms.InEnable = InEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildRaid.OnShowErrorMsg
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildRaidErrorCode                     InErrorCode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildRaid::OnShowErrorMsg(EGuildRaidErrorCode InErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRaid", "OnShowErrorMsg");

	Params::TLUserWidgetGuildRaid_OnShowErrorMsg Parms{};

	Parms.InErrorCode = InErrorCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildRaidSlot.GetIsSelectRaid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetGuildRaidSlot::GetIsSelectRaid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRaidSlot", "GetIsSelectRaid");

	Params::TLUserWidgetGuildRaidSlot_GetIsSelectRaid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetGuildRaidSlot.GetIsSlotLock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetGuildRaidSlot::GetIsSlotLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRaidSlot", "GetIsSlotLock");

	Params::TLUserWidgetGuildRaidSlot_GetIsSlotLock Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetGuildRaidSlot.OnCreatureRank
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLCreatureRank                         InRank                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildRaidSlot::OnCreatureRank(ETLCreatureRank InRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRaidSlot", "OnCreatureRank");

	Params::TLUserWidgetGuildRaidSlot_OnCreatureRank Parms{};

	Parms.InRank = InRank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildRaidSlot.OnRaidState
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildRaidState                         InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildRaidSlot::OnRaidState(EGuildRaidState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRaidSlot", "OnRaidState");

	Params::TLUserWidgetGuildRaidSlot_OnRaidState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeTableAlarmHud.GetNextAlarm
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetTimeTableAlarmHud::GetNextAlarm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableAlarmHud", "GetNextAlarm");

	Params::TLUserWidgetTimeTableAlarmHud_GetNextAlarm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetTimeTableAlarmHud.OnAlarmAnimationFinished
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetTimeTableAlarmHud::OnAlarmAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableAlarmHud", "OnAlarmAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTimeTableAlarmHud.OnAlarmAnimationStart
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTimeTableAlarmHud::OnAlarmAnimationStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableAlarmHud", "OnAlarmAnimationStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeTableAlarmHud.OnNudgeAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTimeTableAlarmHud::OnNudgeAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableAlarmHud", "OnNudgeAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeTableAlarmHud.OnUpdateScheduleType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeTableAlarmHud::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableAlarmHud", "OnUpdateScheduleType");

	Params::TLUserWidgetTimeTableAlarmHud_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeTableAlarmHud.SetAlarmAnimation
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InOn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeTableAlarmHud::SetAlarmAnimation(bool InOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableAlarmHud", "SetAlarmAnimation");

	Params::TLUserWidgetTimeTableAlarmHud_SetAlarmAnimation Parms{};

	Parms.InOn = InOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildRelationList.OnGuildSearchFocusLost
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildRelationList::OnGuildSearchFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRelationList", "OnGuildSearchFocusLost");

	Params::TLUserWidgetGuildRelationList_OnGuildSearchFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildRelationList.OnGuildSearchFocusReceived
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildRelationList::OnGuildSearchFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRelationList", "OnGuildSearchFocusReceived");

	Params::TLUserWidgetGuildRelationList_OnGuildSearchFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildRelationList.OnGuildSearchTextCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildRelationList::OnGuildSearchTextCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildRelationList", "OnGuildSearchTextCommitted");

	Params::TLUserWidgetGuildRelationList_OnGuildSearchTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTimelineFrame.OnUpdateSubTimeline
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsActiveSubText                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimelineFrame::OnUpdateSubTimeline(bool IsActiveSubText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimelineFrame", "OnUpdateSubTimeline");

	Params::TLUserWidgetTimelineFrame_OnUpdateSubTimeline Parms{};

	Parms.IsActiveSubText = IsActiveSubText;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildReward.OnRemainGuildPointRewardBox
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsRemainBox                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildReward::OnRemainGuildPointRewardBox(bool InIsRemainBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildReward", "OnRemainGuildPointRewardBox");

	Params::TLUserWidgetGuildReward_OnRemainGuildPointRewardBox Parms{};

	Parms.InIsRemainBox = InIsRemainBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildReward.OnUpdatePresentRewardBox
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsEnableOpenBox                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildReward::OnUpdatePresentRewardBox(bool IsEnableOpenBox, int32 InLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildReward", "OnUpdatePresentRewardBox");

	Params::TLUserWidgetGuildReward_OnUpdatePresentRewardBox Parms{};

	Parms.IsEnableOpenBox = IsEnableOpenBox;
	Parms.InLevel = InLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetIndicator.OnNameColorChange
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetIndicator::OnNameColorChange(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetIndicator", "OnNameColorChange");

	Params::TLUserWidgetTargetIndicator_OnNameColorChange Parms{};

	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildSkillSlot.OnCooldownEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsEnd                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildSkillSlot::OnCooldownEnd(bool IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSkillSlot", "OnCooldownEnd");

	Params::TLUserWidgetGuildSkillSlot_OnCooldownEnd Parms{};

	Parms.IsEnd = IsEnd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildSkillSlot.SetEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsRemainEffect                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildSkillSlot::SetEffect(bool IsRemainEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSkillSlot", "SetEffect");

	Params::TLUserWidgetGuildSkillSlot_SetEffect Parms{};

	Parms.IsRemainEffect = IsRemainEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildSkillSlot.SetUnlockGuildSkill
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsLock                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildSkillSlot::SetUnlockGuildSkill(bool IsLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSkillSlot", "SetUnlockGuildSkill");

	Params::TLUserWidgetGuildSkillSlot_SetUnlockGuildSkill Parms{};

	Parms.IsLock = IsLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.HandleChangeMapRegionType
// (Final, Native, Public)
// Parameters:
// EMapRegionType                          MapRegionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::HandleChangeMapRegionType(EMapRegionType MapRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "HandleChangeMapRegionType");

	Params::TLUserWidgetMinimap_HandleChangeMapRegionType Parms{};

	Parms.MapRegionType = MapRegionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMinimap.HandleDynamicEventRegionJoin
// (Final, Native, Public)
// Parameters:
// uint64                                  Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsJoing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::HandleDynamicEventRegionJoin(uint64 Guid, bool InIsJoing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "HandleDynamicEventRegionJoin");

	Params::TLUserWidgetMinimap_HandleDynamicEventRegionJoin Parms{};

	Parms.Guid = Guid;
	Parms.InIsJoing = InIsJoing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMinimap.HandleMapIconEmphasis
// (Final, Native, Public)
// Parameters:
// uint64                                  Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::HandleMapIconEmphasis(uint64 Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "HandleMapIconEmphasis");

	Params::TLUserWidgetMinimap_HandleMapIconEmphasis Parms{};

	Parms.Guid = Guid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMinimap.HandleMinimapSliderOpacity
// (Final, Native, Public)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::HandleMinimapSliderOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "HandleMinimapSliderOpacity");

	Params::TLUserWidgetMinimap_HandleMinimapSliderOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMinimap.HandleMinimapSliderOpacityChanged
// (Final, Native, Public)

void UTLUserWidgetMinimap::HandleMinimapSliderOpacityChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "HandleMinimapSliderOpacityChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMinimap.HandlePanningState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLMinimapPanningState                  InPanningState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::HandlePanningState(ETLMinimapPanningState InPanningState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "HandlePanningState");

	Params::TLUserWidgetMinimap_HandlePanningState Parms{};

	Parms.InPanningState = InPanningState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.HandleUpdateMapIconFilter
// (Final, Native, Public)
// Parameters:
// class FName                             InMapIconFilterId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInForceUpdate                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::HandleUpdateMapIconFilter(class FName InMapIconFilterId, bool InIsVisible, bool bInForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "HandleUpdateMapIconFilter");

	Params::TLUserWidgetMinimap_HandleUpdateMapIconFilter Parms{};

	Parms.InMapIconFilterId = InMapIconFilterId;
	Parms.InIsVisible = InIsVisible;
	Parms.bInForceUpdate = bInForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMinimap.OnContentsOpenEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFirstOpen                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnContentsOpenEvent(bool bFirstOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnContentsOpenEvent");

	Params::TLUserWidgetMinimap_OnContentsOpenEvent Parms{};

	Parms.bFirstOpen = bFirstOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.OnMidNightAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMinimap::OnMidNightAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnMidNightAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimap.OnMinimizeEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bMinimize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnMinimizeEvent(bool bMinimize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnMinimizeEvent");

	Params::TLUserWidgetMinimap_OnMinimizeEvent Parms{};

	Parms.bMinimize = bMinimize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.OnMouserHover
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsHover                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnMouserHover(bool bIsHover)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnMouserHover");

	Params::TLUserWidgetMinimap_OnMouserHover Parms{};

	Parms.bIsHover = bIsHover;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.OnNightToSunRiseAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMinimap::OnNightToSunRiseAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnNightToSunRiseAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimap.OnPostLoadMap
// (Final, Native, Public)
// Parameters:
// int32                                   InCurMapID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnPostLoadMap(const int32 InCurMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnPostLoadMap");

	Params::TLUserWidgetMinimap_OnPostLoadMap Parms{};

	Parms.InCurMapID = InCurMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMinimap.OnPreLoadMap
// (Final, Native, Public)
// Parameters:
// int32                                   InCurMapID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InNextMapID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnPreLoadMap(const int32 InCurMapID, const int32 InNextMapID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnPreLoadMap");

	Params::TLUserWidgetMinimap_OnPreLoadMap Parms{};

	Parms.InCurMapID = InCurMapID;
	Parms.InNextMapID = InNextMapID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMinimap.OnSunSetToNightAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMinimap::OnSunSetToNightAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnSunSetToNightAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimap.OnToggleMinimap
// (Final, Native, Public)

void UTLUserWidgetMinimap::OnToggleMinimap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnToggleMinimap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMinimap.OnUpdateIconFrameAlpha
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnUpdateIconFrameAlpha(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnUpdateIconFrameAlpha");

	Params::TLUserWidgetMinimap_OnUpdateIconFrameAlpha Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.OnUpdateIndicatorFrameAlpha
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnUpdateIndicatorFrameAlpha(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnUpdateIndicatorFrameAlpha");

	Params::TLUserWidgetMinimap_OnUpdateIndicatorFrameAlpha Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.OnUpdateMinimapOpacity
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnUpdateMinimapOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnUpdateMinimapOpacity");

	Params::TLUserWidgetMinimap_OnUpdateMinimapOpacity Parms{};

	Parms.InOpacity = InOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.OnUpdateRoadAdditive
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnUpdateRoadAdditive(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnUpdateRoadAdditive");

	Params::TLUserWidgetMinimap_OnUpdateRoadAdditive Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.OnUpdateRoadAlphaWhite
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnUpdateRoadAlphaWhite(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnUpdateRoadAlphaWhite");

	Params::TLUserWidgetMinimap_OnUpdateRoadAlphaWhite Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.OnUpdateRoadBrightness
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimap::OnUpdateRoadBrightness(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "OnUpdateRoadBrightness");

	Params::TLUserWidgetMinimap_OnUpdateRoadBrightness Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimap.UpdateLocationNameByRegion
// (Final, Native, Public)

void UTLUserWidgetMinimap::UpdateLocationNameByRegion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimap", "UpdateLocationNameByRegion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTargetScanList.OnRefreshTargetList
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InListCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScanList::OnRefreshTargetList(int32 InListCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanList", "OnRefreshTargetList");

	Params::TLUserWidgetTargetScanList_OnRefreshTargetList Parms{};

	Parms.InListCount = InListCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildSummaryOccupationItem.OnClickButton
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetGuildSummaryOccupationItem::OnClickButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSummaryOccupationItem", "OnClickButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMoney.GetVisibleControlFromContentsOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetMoney::GetVisibleControlFromContentsOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMoney", "GetVisibleControlFromContentsOpen");

	Params::TLUserWidgetMoney_GetVisibleControlFromContentsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetMoney.SetVisibleControlFromContentsOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsControlFromContentsOpen                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMoney::SetVisibleControlFromContentsOpen(bool InIsControlFromContentsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMoney", "SetVisibleControlFromContentsOpen");

	Params::TLUserWidgetMoney_SetVisibleControlFromContentsOpen Parms{};

	Parms.InIsControlFromContentsOpen = InIsControlFromContentsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildSummary.OnGuildHomeOpen
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InHomeOpen                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildSummary::OnGuildHomeOpen(bool InHomeOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSummary", "OnGuildHomeOpen");

	Params::TLUserWidgetGuildSummary_OnGuildHomeOpen Parms{};

	Parms.InHomeOpen = InHomeOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildSummary.OnGuildHomeRaidStart
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InStart                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildSummary::OnGuildHomeRaidStart(bool InStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSummary", "OnGuildHomeRaidStart");

	Params::TLUserWidgetGuildSummary_OnGuildHomeRaidStart Parms{};

	Parms.InStart = InStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildSummary.OnGuildHomeState
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildHomeState                         InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildSummary::OnGuildHomeState(EGuildHomeState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSummary", "OnGuildHomeState");

	Params::TLUserWidgetGuildSummary_OnGuildHomeState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildSummary.OnGuildMasterDelegateState
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildMasterDelegateState               InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildSummary::OnGuildMasterDelegateState(EGuildMasterDelegateState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSummary", "OnGuildMasterDelegateState");

	Params::TLUserWidgetGuildSummary_OnGuildMasterDelegateState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildSummary.OnInputNoticeTextChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildSummary::OnInputNoticeTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSummary", "OnInputNoticeTextChanged");

	Params::TLUserWidgetGuildSummary_OnInputNoticeTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetGuildSummary.OnIsLegionGuild
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InLegionGuild                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildSummary::OnIsLegionGuild(bool InLegionGuild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildSummary", "OnIsLegionGuild");

	Params::TLUserWidgetGuildSummary_OnIsLegionGuild Parms{};

	Parms.InLegionGuild = InLegionGuild;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsDetail.OnDiscountGoods
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLPurchaseDiscountType                 InDiscountType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsShowDiscount                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsDetail::OnDiscountGoods(ETLPurchaseDiscountType InDiscountType, bool InIsShowDiscount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsDetail", "OnDiscountGoods");

	Params::TLUserWidgetSpecialShopGoodsDetail_OnDiscountGoods Parms{};

	Parms.InDiscountType = InDiscountType;
	Parms.InIsShowDiscount = InIsShowDiscount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsDetail.OnExistAccumulateMileage
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsExist                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsDetail::OnExistAccumulateMileage(bool InIsExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsDetail", "OnExistAccumulateMileage");

	Params::TLUserWidgetSpecialShopGoodsDetail_OnExistAccumulateMileage Parms{};

	Parms.InIsExist = InIsExist;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsDetail.OnExistGoodsInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsExist                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsDetail::OnExistGoodsInfo(bool InIsExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsDetail", "OnExistGoodsInfo");

	Params::TLUserWidgetSpecialShopGoodsDetail_OnExistGoodsInfo Parms{};

	Parms.InIsExist = InIsExist;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsDetail.OnGoodsCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsDetail::OnGoodsCondition(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsDetail", "OnGoodsCondition");

	Params::TLUserWidgetSpecialShopGoodsDetail_OnGoodsCondition Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsDetail.OnGoodsPrice
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InPgGoods                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsDetail::OnGoodsPrice(bool InPgGoods)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsDetail", "OnGoodsPrice");

	Params::TLUserWidgetSpecialShopGoodsDetail_OnGoodsPrice Parms{};

	Parms.InPgGoods = InPgGoods;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsDetail.OnGoodsState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsNew                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsEvent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsBest                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsDetail::OnGoodsState(bool InIsNew, bool InIsEvent, bool InIsBest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsDetail", "OnGoodsState");

	Params::TLUserWidgetSpecialShopGoodsDetail_OnGoodsState Parms{};

	Parms.InIsNew = InIsNew;
	Parms.InIsEvent = InIsEvent;
	Parms.InIsBest = InIsBest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsDetail.OnShowEffectiveTime
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsDetail::OnShowEffectiveTime(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsDetail", "OnShowEffectiveTime");

	Params::TLUserWidgetSpecialShopGoodsDetail_OnShowEffectiveTime Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsDetail.OnShowTimeLimit
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsDetail::OnShowTimeLimit(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsDetail", "OnShowTimeLimit");

	Params::TLUserWidgetSpecialShopGoodsDetail_OnShowTimeLimit Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildViewGuildInfo.OnUpdateRelationship
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildViewGuildRelationType             InRelationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsAvailableGrade                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildViewGuildInfo::OnUpdateRelationship(EGuildViewGuildRelationType InRelationType, bool InIsAvailableGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildViewGuildInfo", "OnUpdateRelationship");

	Params::TLUserWidgetGuildViewGuildInfo_OnUpdateRelationship Parms{};

	Parms.InRelationType = InRelationType;
	Parms.InIsAvailableGrade = InIsAvailableGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSocialMotionFrame.BP_HandleChangeUIPlatformImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLUIPlatform                           InPlatform                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSocialMotionFrame::BP_HandleChangeUIPlatformImpl(ETLUIPlatform InPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSocialMotionFrame", "BP_HandleChangeUIPlatformImpl");

	Params::TLUserWidgetSocialMotionFrame_BP_HandleChangeUIPlatformImpl Parms{};

	Parms.InPlatform = InPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSocialMotionFrame.OnUIToggleEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSocialMotionFrame::OnUIToggleEvent(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSocialMotionFrame", "OnUIToggleEvent");

	Params::TLUserWidgetSocialMotionFrame_OnUIToggleEvent Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGuildViewList.OnGuildSearchTextCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetGuildViewList::OnGuildSearchTextCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGuildViewList", "OnGuildSearchTextCommitted");

	Params::TLUserWidgetGuildViewList_OnGuildSearchTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconTaxDelivery.OnFocusAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconTaxDelivery::OnFocusAnimation(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconTaxDelivery", "OnFocusAnimation");

	Params::TLUserWidgetMapIconTaxDelivery_OnFocusAnimation Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHelpPage.BIE_OnActivated
// (Event, Public, BlueprintEvent)

void UTLUserWidgetHelpPage::BIE_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHelpPage", "BIE_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeAttackDungeonMission.OnComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InbSuccess                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeAttackDungeonMission::OnComplete(bool InbSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeAttackDungeonMission", "OnComplete");

	Params::TLUserWidgetTimeAttackDungeonMission_OnComplete Parms{};

	Parms.InbSuccess = InbSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeAttackDungeonMission.OnInit
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTimeAttackDungeonMission::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeAttackDungeonMission", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetHotDealPopup.OnDiscountGoods
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLPurchaseDiscountType                 InDiscountType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsShowDiscount                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHotDealPopup::OnDiscountGoods(ETLPurchaseDiscountType InDiscountType, bool InIsShowDiscount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHotDealPopup", "OnDiscountGoods");

	Params::TLUserWidgetHotDealPopup_OnDiscountGoods Parms{};

	Parms.InDiscountType = InDiscountType;
	Parms.InIsShowDiscount = InIsShowDiscount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHotDealPopup.OnGoodsPrice
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsCashGoods                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHotDealPopup::OnGoodsPrice(bool InIsCashGoods)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHotDealPopup", "OnGoodsPrice");

	Params::TLUserWidgetHotDealPopup_OnGoodsPrice Parms{};

	Parms.InIsCashGoods = InIsCashGoods;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHudAmmoCount.ToggleAmmoList
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetHudAmmoCount::ToggleAmmoList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHudAmmoCount", "ToggleAmmoList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetHudKeyGuideFrame.OnUpdateGamepadPresetType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLGamepadPreset                        InGamepadPresetType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHudKeyGuideFrame::OnUpdateGamepadPresetType(ETLGamepadPreset InGamepadPresetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHudKeyGuideFrame", "OnUpdateGamepadPresetType");

	Params::TLUserWidgetHudKeyGuideFrame_OnUpdateGamepadPresetType Parms{};

	Parms.InGamepadPresetType = InGamepadPresetType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHudQuickSlotGroup.OnChangedSkillQuickSlotPresetIndex_BP
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetHudQuickSlotGroup::OnChangedSkillQuickSlotPresetIndex_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHudQuickSlotGroup", "OnChangedSkillQuickSlotPresetIndex_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTradeSummarySlot.OnItemSlotDimmed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsDimmed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTradeSummarySlot::OnItemSlotDimmed(bool InIsDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTradeSummarySlot", "OnItemSlotDimmed");

	Params::TLUserWidgetTradeSummarySlot_OnItemSlotDimmed Parms{};

	Parms.InIsDimmed = InIsDimmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTradeSummarySlot.OnSearchConditionFilter
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsActiveFilter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTradeSummarySlot::OnSearchConditionFilter(bool IsActiveFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTradeSummarySlot", "OnSearchConditionFilter");

	Params::TLUserWidgetTradeSummarySlot_OnSearchConditionFilter Parms{};

	Parms.IsActiveFilter = IsActiveFilter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetHyperLinkText.SetWrapTextSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InWrapTextSize                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetHyperLinkText::SetWrapTextSize(float InWrapTextSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetHyperLinkText", "SetWrapTextSize");

	Params::TLUserWidgetHyperLinkText_SetWrapTextSize Parms{};

	Parms.InWrapTextSize = InWrapTextSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueMonitorId.HandleComboOpening
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueMonitorId::HandleComboOpening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueMonitorId", "HandleComboOpening");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueMonitorId.HandleSelectionChanged
// (Final, Native, Protected)
// Parameters:
// class FString                           SelectedItem                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGameValueMonitorId::HandleSelectionChanged(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueMonitorId", "HandleSelectionChanged");

	Params::TLUserWidgetOptionGameValueMonitorId_HandleSelectionChanged Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetImageBasedCustomize.OnUpdateImageReady
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInReady                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetImageBasedCustomize::OnUpdateImageReady(bool bInReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetImageBasedCustomize", "OnUpdateImageReady");

	Params::TLUserWidgetImageBasedCustomize_OnUpdateImageReady Parms{};

	Parms.bInReady = bInReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetImageEditInput.HandleEditTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetImageEditInput::HandleEditTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetImageEditInput", "HandleEditTextChanged");

	Params::TLUserWidgetImageEditInput_HandleEditTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetImageEditInput.HandleEditTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetImageEditInput::HandleEditTextCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetImageEditInput", "HandleEditTextCommitted");

	Params::TLUserWidgetImageEditInput_HandleEditTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetImageEditInput.HandleFocusEditBox
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetImageEditInput::HandleFocusEditBox(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetImageEditInput", "HandleFocusEditBox");

	Params::TLUserWidgetImageEditInput_HandleFocusEditBox Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetImageEditInput.HandleLostFocusEditBox
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetImageEditInput::HandleLostFocusEditBox(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetImageEditInput", "HandleLostFocusEditBox");

	Params::TLUserWidgetImageEditInput_HandleLostFocusEditBox Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInfinityDungeonGuideObjective.OnEventCompletedAnimation
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetInfinityDungeonGuideObjective::OnEventCompletedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInfinityDungeonGuideObjective", "OnEventCompletedAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInfinityDungeonGuideObjective.OnEventObjectivePointCompleted
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInfinityDungeonGuideObjective::OnEventObjectivePointCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInfinityDungeonGuideObjective", "OnEventObjectivePointCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInfinityDungeonGuideObjective.OnEventObjectivePointUpdated
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInfinityDungeonGuideObjective::OnEventObjectivePointUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInfinityDungeonGuideObjective", "OnEventObjectivePointUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInfinityDungeonGuide.OnShowTimer
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInfinityDungeonGuide::OnShowTimer(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInfinityDungeonGuide", "OnShowTimer");

	Params::TLUserWidgetInfinityDungeonGuide_OnShowTimer Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTradeUnitSlot.OnSearchConditionFilter
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsActiveFilter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTradeUnitSlot::OnSearchConditionFilter(bool IsActiveFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTradeUnitSlot", "OnSearchConditionFilter");

	Params::TLUserWidgetTradeUnitSlot_OnSearchConditionFilter Parms{};

	Parms.IsActiveFilter = IsActiveFilter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTradeSaleSlot.OnSaleStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLTradeSaleStatus                      InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTradeSaleSlot::OnSaleStatus(ETLTradeSaleStatus InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTradeSaleSlot", "OnSaleStatus");

	Params::TLUserWidgetTradeSaleSlot_OnSaleStatus Parms{};

	Parms.InStatus = InStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillExchangeInfo.OnSetSkillGrade
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTLImage*                         InImage                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESkillGrade                             InSkillGrade                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSource                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillExchangeInfo::OnSetSkillGrade(class UTLImage* InImage, ESkillGrade InSkillGrade, bool bIsSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillExchangeInfo", "OnSetSkillGrade");

	Params::TLUserWidgetSkillExchangeInfo_OnSetSkillGrade Parms{};

	Parms.InImage = InImage;
	Parms.InSkillGrade = InSkillGrade;
	Parms.bIsSource = bIsSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillExchangeInfo.OnVisibleAfterInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillExchangeInfo::OnVisibleAfterInfo(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillExchangeInfo", "OnVisibleAfterInfo");

	Params::TLUserWidgetSkillExchangeInfo_OnVisibleAfterInfo Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeTableProceedingSlot.OnSlotResize
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTimeTableProceedingSlot::OnSlotResize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableProceedingSlot", "OnSlotResize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetnamePlateUsurperIcon.OnUpdateUsurperBuff
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbHasPerfect                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetnamePlateUsurperIcon::OnUpdateUsurperBuff(bool InbHasPerfect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetnamePlateUsurperIcon", "OnUpdateUsurperBuff");

	Params::TLUserWidgetnamePlateUsurperIcon_OnUpdateUsurperBuff Parms{};

	Parms.InbHasPerfect = InbHasPerfect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelOption.OnGradeShowValue
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UTLUserWidgetSkillLevelOption::OnGradeShowValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelOption", "OnGradeShowValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillLevelOption.ShowHideNextValue
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelOption::ShowHideNextValue(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelOption", "ShowHideNextValue");

	Params::TLUserWidgetSkillLevelOption_ShowHideNextValue Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInputRecommend.EditableTextBox_OnTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetInputRecommend::EditableTextBox_OnTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInputRecommend", "EditableTextBox_OnTextChanged");

	Params::TLUserWidgetInputRecommend_EditableTextBox_OnTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInputRecommend.EditableTextBox_OnTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInputRecommend::EditableTextBox_OnTextCommitted(const class FText& InText, ETextCommit InCommitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInputRecommend", "EditableTextBox_OnTextCommitted");

	Params::TLUserWidgetInputRecommend_EditableTextBox_OnTextCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitType = InCommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInputRecommend.EditableTextBox_OnTextFocusLost
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetInputRecommend::EditableTextBox_OnTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInputRecommend", "EditableTextBox_OnTextFocusLost");

	Params::TLUserWidgetInputRecommend_EditableTextBox_OnTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInputRecommend.EditableTextBox_OnTextFocusReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetInputRecommend::EditableTextBox_OnTextFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInputRecommend", "EditableTextBox_OnTextFocusReceived");

	Params::TLUserWidgetInputRecommend_EditableTextBox_OnTextFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInspection.OnCompleteStatusEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInspection::OnCompleteStatusEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInspection", "OnCompleteStatusEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInspection.OnUpdateAnswerEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbComplete                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInspection::OnUpdateAnswerEvent(bool InbComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInspection", "OnUpdateAnswerEvent");

	Params::TLUserWidgetInspection_OnUpdateAnswerEvent Parms{};

	Parms.InbComplete = InbComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInspection.OnUpdateHintEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInspection::OnUpdateHintEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInspection", "OnUpdateHintEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeTableEventSlot.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeTableEventSlot::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableEventSlot", "OnUpdateScheduleType");

	Params::TLUserWidgetTimeTableEventSlot_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInteractionScene.OnUpdateCameraMove
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetInteractionScene::OnUpdateCameraMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInteractionScene", "OnUpdateCameraMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInteractionScene.SetDialogueType
// (Event, Protected, BlueprintEvent)
// Parameters:
// EDialogueType                           InDialogueType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInteractionScene::SetDialogueType(EDialogueType InDialogueType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInteractionScene", "SetDialogueType");

	Params::TLUserWidgetInteractionScene_SetDialogueType Parms{};

	Parms.InDialogueType = InDialogueType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInterServerFieldBossContributionInfo.OnUpdateGaugeEnermyColor
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInterServerFieldBossContributionInfo::OnUpdateGaugeEnermyColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInterServerFieldBossContributionInfo", "OnUpdateGaugeEnermyColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInterServerFieldBossContributionInfo.OnUpdateGaugeMyColor
// (Event, Public, BlueprintEvent)

void UTLUserWidgetInterServerFieldBossContributionInfo::OnUpdateGaugeMyColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInterServerFieldBossContributionInfo", "OnUpdateGaugeMyColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInvenItemDestroy.AddGradeFilteredItemList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOnlyEquipType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInvenItemDestroy::AddGradeFilteredItemList(bool bOnlyEquipType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenItemDestroy", "AddGradeFilteredItemList");

	Params::TLUserWidgetInvenItemDestroy_AddGradeFilteredItemList Parms{};

	Parms.bOnlyEquipType = bOnlyEquipType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInvenItemDestroy.CloseItemDestroy
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetInvenItemDestroy::CloseItemDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenItemDestroy", "CloseItemDestroy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInvenItemDestroy.OnUpdateGuideMessage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetInvenItemDestroy::OnUpdateGuideMessage(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenItemDestroy", "OnUpdateGuideMessage");

	Params::TLUserWidgetInvenItemDestroy_OnUpdateGuideMessage Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInvenItemDestroy.TryDestroyAddedItems
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetInvenItemDestroy::TryDestroyAddedItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInvenItemDestroy", "TryDestroyAddedItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventory.FindSlotByItemName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ItemName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidgetInvenSlot*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserWidgetInvenSlot* UTLUserWidgetInventory::FindSlotByItemName(class FName ItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventory", "FindSlotByItemName");

	Params::TLUserWidgetInventory_FindSlotByItemName Parms{};

	Parms.ItemName = ItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInventory.GetMyAdenaAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTLUserWidgetInventory::GetMyAdenaAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventory", "GetMyAdenaAmount");

	Params::TLUserWidgetInventory_GetMyAdenaAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInventory.OnInventoryExpansion
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsSuccess                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInventory::OnInventoryExpansion(bool InIsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventory", "OnInventoryExpansion");

	Params::TLUserWidgetInventory_OnInventoryExpansion Parms{};

	Parms.InIsSuccess = InIsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInventory.OnUpdateFilterCount
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InTabIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInventory::OnUpdateFilterCount(int32 InTabIndex, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventory", "OnUpdateFilterCount");

	Params::TLUserWidgetInventory_OnUpdateFilterCount Parms{};

	Parms.InTabIndex = InTabIndex;
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInventory.ShowGroupFilterLabel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInventory::ShowGroupFilterLabel(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventory", "ShowGroupFilterLabel");

	Params::TLUserWidgetInventory_ShowGroupFilterLabel Parms{};

	Parms.InShow = InShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventoryGroupList.HandleScrollChange
// (Final, Native, Protected)
// Parameters:
// float                                   ScrollOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInventoryGroupList::HandleScrollChange(float ScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryGroupList", "HandleScrollChange");

	Params::TLUserWidgetInventoryGroupList_HandleScrollChange Parms{};

	Parms.ScrollOffset = ScrollOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventoryGroupList.ShowCategoryMoveButtonGroupList
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetInventoryGroupList::ShowCategoryMoveButtonGroupList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryGroupList", "ShowCategoryMoveButtonGroupList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTooltipSkillInfo.OnUpdateActiveSkill
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTooltipSkillInfo::OnUpdateActiveSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipSkillInfo", "OnUpdateActiveSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTooltipSkillInfo.OnUpdatePassiveSkill
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTooltipSkillInfo::OnUpdatePassiveSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipSkillInfo", "OnUpdatePassiveSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetInventoryTile.FindSlotByItemName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ItemName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidgetInvenSlot*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserWidgetInvenSlot* UTLUserWidgetInventoryTile::FindSlotByItemName(class FName ItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryTile", "FindSlotByItemName");

	Params::TLUserWidgetInventoryTile_FindSlotByItemName Parms{};

	Parms.ItemName = ItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInventoryTile.GetMyAdenaAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UTLUserWidgetInventoryTile::GetMyAdenaAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryTile", "GetMyAdenaAmount");

	Params::TLUserWidgetInventoryTile_GetMyAdenaAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetInventoryTile.HandleScrollChange
// (Final, Native, Public)
// Parameters:
// float                                   ScrollOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInventoryTile::HandleScrollChange(float ScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryTile", "HandleScrollChange");

	Params::TLUserWidgetInventoryTile_HandleScrollChange Parms{};

	Parms.ScrollOffset = ScrollOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInventoryTile.OnInventoryExpansion
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsSuccess                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInventoryTile::OnInventoryExpansion(bool InIsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryTile", "OnInventoryExpansion");

	Params::TLUserWidgetInventoryTile_OnInventoryExpansion Parms{};

	Parms.InIsSuccess = InIsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInventoryTile.OnUpdateFilterCount
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InTabIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInventoryTile::OnUpdateFilterCount(int32 InTabIndex, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryTile", "OnUpdateFilterCount");

	Params::TLUserWidgetInventoryTile_OnUpdateFilterCount Parms{};

	Parms.InTabIndex = InTabIndex;
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionGroup.OnItemCollectionGroupState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLItemCollectionGroupState             InGroupState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionGroup::OnItemCollectionGroupState(ETLItemCollectionGroupState InGroupState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionGroup", "OnItemCollectionGroupState");

	Params::TLUserWidgetItemCollectionGroup_OnItemCollectionGroupState Parms{};

	Parms.InGroupState = InGroupState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionGroup.OnRewardStateChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLItemCollectionRewardState            InRewardState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShowAnim                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionGroup::OnRewardStateChange(ETLItemCollectionRewardState InRewardState, bool bInShowAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionGroup", "OnRewardStateChange");

	Params::TLUserWidgetItemCollectionGroup_OnRewardStateChange Parms{};

	Parms.InRewardState = InRewardState;
	Parms.bInShowAnim = bInShowAnim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionGroupItemSlot.GetMatchedItemUid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint64                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint64 UTLUserWidgetItemCollectionGroupItemSlot::GetMatchedItemUid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionGroupItemSlot", "GetMatchedItemUid");

	Params::TLUserWidgetItemCollectionGroupItemSlot_GetMatchedItemUid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemCollectionItemInfo.OnItemInfoTabClickedEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLItemCollectionItemInfoTabType        InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionItemInfo::OnItemInfoTabClickedEvent(ETLItemCollectionItemInfoTabType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionItemInfo", "OnItemInfoTabClickedEvent");

	Params::TLUserWidgetItemCollectionItemInfo_OnItemInfoTabClickedEvent Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionItemInfo.OnItemInfoTabInvalidEvent
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemCollectionItemInfo::OnItemInfoTabInvalidEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionItemInfo", "OnItemInfoTabInvalidEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemCollectionItemInfo.OnUpdateCraftable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionItemInfo::OnUpdateCraftable(bool bIsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionItemInfo", "OnUpdateCraftable");

	Params::TLUserWidgetItemCollectionItemInfo_OnUpdateCraftable Parms{};

	Parms.bIsEnable = bIsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionItemInfo.OnUpdateDecomposable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsDecomposable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionItemInfo::OnUpdateDecomposable(bool bIsDecomposable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionItemInfo", "OnUpdateDecomposable");

	Params::TLUserWidgetItemCollectionItemInfo_OnUpdateDecomposable Parms{};

	Parms.bIsDecomposable = bIsDecomposable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionItemInfo.OnUpdateDestructible
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsDestructible                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionItemInfo::OnUpdateDestructible(bool bIsDestructible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionItemInfo", "OnUpdateDestructible");

	Params::TLUserWidgetItemCollectionItemInfo_OnUpdateDestructible Parms{};

	Parms.bIsDestructible = bIsDestructible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionItemInfo.OnUpdateStorable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsStorable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionItemInfo::OnUpdateStorable(bool bIsStorable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionItemInfo", "OnUpdateStorable");

	Params::TLUserWidgetItemCollectionItemInfo_OnUpdateStorable Parms{};

	Parms.bIsStorable = bIsStorable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMainMenuButton.OnWidgetShow
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMainMenuButton::OnWidgetShow(bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMainMenuButton", "OnWidgetShow");

	Params::TLUserWidgetMainMenuButton_OnWidgetShow Parms{};

	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookQuickSlotGroup.OnChangeMainHandWeapon
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemCategory                           InItemCategory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookQuickSlotGroup::OnChangeMainHandWeapon(EItemCategory InItemCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookQuickSlotGroup", "OnChangeMainHandWeapon");

	Params::TLUserWidgetSkillBookQuickSlotGroup_OnChangeMainHandWeapon Parms{};

	Parms.InItemCategory = InItemCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookQuickSlotGroup.OnChangeSlotPage
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InPageIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookQuickSlotGroup::OnChangeSlotPage(int32 InPageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookQuickSlotGroup", "OnChangeSlotPage");

	Params::TLUserWidgetSkillBookQuickSlotGroup_OnChangeSlotPage Parms{};

	Parms.InPageIndex = InPageIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookQuickSlotGroup.OnUpdateEditableNonQuickSlotSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookQuickSlotGroup::OnUpdateEditableNonQuickSlotSelected(bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookQuickSlotGroup", "OnUpdateEditableNonQuickSlotSelected");

	Params::TLUserWidgetSkillBookQuickSlotGroup_OnUpdateEditableNonQuickSlotSelected Parms{};

	Parms.bInValue = bInValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookQuickSlotGroup.OnUpdateWeaponPreset
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillBookQuickSlotGroup::OnUpdateWeaponPreset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookQuickSlotGroup", "OnUpdateWeaponPreset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemCollectionRewardStat.OnCollectionEffectValueEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InPositiveValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionRewardStat::OnCollectionEffectValueEvent(bool InPositiveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionRewardStat", "OnCollectionEffectValueEvent");

	Params::TLUserWidgetItemCollectionRewardStat_OnCollectionEffectValueEvent Parms{};

	Parms.InPositiveValue = InPositiveValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionRewardStat.OnUpdateFiltered
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFiltered                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionRewardStat::OnUpdateFiltered(bool bFiltered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionRewardStat", "OnUpdateFiltered");

	Params::TLUserWidgetItemCollectionRewardStat_OnUpdateFiltered Parms{};

	Parms.bFiltered = bFiltered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionSummary.OnUpdateCompletionStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionSummary::OnUpdateCompletionStatus(int32 InCount, float InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionSummary", "OnUpdateCompletionStatus");

	Params::TLUserWidgetItemCollectionSummary_OnUpdateCompletionStatus Parms{};

	Parms.InCount = InCount;
	Parms.InPercent = InPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionSummary.OnUpdateNotStartedStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionSummary::OnUpdateNotStartedStatus(int32 InCount, float InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionSummary", "OnUpdateNotStartedStatus");

	Params::TLUserWidgetItemCollectionSummary_OnUpdateNotStartedStatus Parms{};

	Parms.InCount = InCount;
	Parms.InPercent = InPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCollectionSummary.OnUpdateProgressingStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCollectionSummary::OnUpdateProgressingStatus(int32 InCount, float InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCollectionSummary", "OnUpdateProgressingStatus");

	Params::TLUserWidgetItemCollectionSummary_OnUpdateProgressingStatus Parms{};

	Parms.InCount = InCount;
	Parms.InPercent = InPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCompositionOpenResult.EndFinished
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetItemCompositionOpenResult::EndFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResult", "EndFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemCompositionOpenResult.GoNextPageFinished
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetItemCompositionOpenResult::GoNextPageFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResult", "GoNextPageFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemCompositionOpenResult.OnEnd
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemCompositionOpenResult::OnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResult", "OnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemCompositionOpenResult.OnGoNextPage
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemCompositionOpenResult::OnGoNextPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResult", "OnGoNextPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemCompositionOpenResult.OnOpenedAllSlots
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemCompositionOpenResult::OnOpenedAllSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResult", "OnOpenedAllSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemCompositionOpenResult.OnSetMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLItemCompositionResultMode            Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCompositionOpenResult::OnSetMode(ETLItemCompositionResultMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResult", "OnSetMode");

	Params::TLUserWidgetItemCompositionOpenResult_OnSetMode Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCompositionOpenResult.OnStart
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemCompositionOpenResult::OnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResult", "OnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemCompositionOpenResult.OpenedAllSlotsFinished
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetItemCompositionOpenResult::OpenedAllSlotsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResult", "OpenedAllSlotsFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemCompositionOpenResult.StartFinished
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetItemCompositionOpenResult::StartFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionOpenResult", "StartFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemCompositionPanel.OnCompositionActivate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActivate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCompositionPanel::OnCompositionActivate(bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionPanel", "OnCompositionActivate");

	Params::TLUserWidgetItemCompositionPanel_OnCompositionActivate Parms{};

	Parms.bActivate = bActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemCompositionPanel.OnMaterialActivate
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActivate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemCompositionPanel::OnMaterialActivate(int32 Index_0, bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemCompositionPanel", "OnMaterialActivate");

	Params::TLUserWidgetItemCompositionPanel_OnMaterialActivate Parms{};

	Parms.Index_0 = Index_0;
	Parms.bActivate = bActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStorageMode.SetMultiSelectMode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStorageMode::SetMultiSelectMode(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStorageMode", "SetMultiSelectMode");

	Params::TLUserWidgetStorageMode_SetMultiSelectMode Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetStorageMode.ToggleUIDecompose
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetStorageMode::ToggleUIDecompose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStorageMode", "ToggleUIDecompose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetStorageMode.ToggleUIDestroy
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetStorageMode::ToggleUIDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStorageMode", "ToggleUIDestroy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetStorageMode.ToggleUIEnchant
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetStorageMode::ToggleUIEnchant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStorageMode", "ToggleUIEnchant");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemDecompositionResultSlot.OnItemNameUpdate
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetItemDecompositionResultSlot::OnItemNameUpdate(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemDecompositionResultSlot", "OnItemNameUpdate");

	Params::TLUserWidgetItemDecompositionResultSlot_OnItemNameUpdate Parms{};

	Parms.InName = std::move(InName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemDecompositionResultSlot.PlayShowAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemGrade                              InGrade                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemDecompositionResultSlot::PlayShowAnim(EItemGrade InGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemDecompositionResultSlot", "PlayShowAnim");

	Params::TLUserWidgetItemDecompositionResultSlot_PlayShowAnim Parms{};

	Parms.InGrade = InGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStorageGroupList.HandleScrollChange
// (Final, Native, Protected)
// Parameters:
// float                                   ScrollOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStorageGroupList::HandleScrollChange(float ScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStorageGroupList", "HandleScrollChange");

	Params::TLUserWidgetStorageGroupList_HandleScrollChange Parms{};

	Parms.ScrollOffset = ScrollOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemDropInfoSlot.OnShowCustomIconImage
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemDropInfoSlot::OnShowCustomIconImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemDropInfoSlot", "OnShowCustomIconImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemDropInfoSlot.OnShowLevelIconImage
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemDropInfoSlot::OnShowLevelIconImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemDropInfoSlot", "OnShowLevelIconImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemDropInfoSlot.OnShowTypeIconImage
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemDropInfoSlot::OnShowTypeIconImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemDropInfoSlot", "OnShowTypeIconImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillMasteryWeaponInfo.OnUpdateCurrentEquipWeaponSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEquipWeaponSet                         InEquipWeaponSet                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillMasteryWeaponInfo::OnUpdateCurrentEquipWeaponSet(EEquipWeaponSet InEquipWeaponSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryWeaponInfo", "OnUpdateCurrentEquipWeaponSet");

	Params::TLUserWidgetSkillMasteryWeaponInfo_OnUpdateCurrentEquipWeaponSet Parms{};

	Parms.InEquipWeaponSet = InEquipWeaponSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillMasteryWeaponInfo.OnUpdateCurrentSkillMasteryWeaponInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponCategory                         InWeaponType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InExpPercent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsMaxLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillMasteryWeaponInfo::OnUpdateCurrentSkillMasteryWeaponInfo(EWeaponCategory InWeaponType, int32 InLevel, float InExpPercent, bool InIsMaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryWeaponInfo", "OnUpdateCurrentSkillMasteryWeaponInfo");

	Params::TLUserWidgetSkillMasteryWeaponInfo_OnUpdateCurrentSkillMasteryWeaponInfo Parms{};

	Parms.InWeaponType = InWeaponType;
	Parms.InLevel = InLevel;
	Parms.InExpPercent = InExpPercent;
	Parms.InIsMaxLevel = InIsMaxLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillMasteryWeaponInfo.OnUpdateOpenableNodeCount
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillMasteryWeaponInfo::OnUpdateOpenableNodeCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryWeaponInfo", "OnUpdateOpenableNodeCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemLotteryInfo.OnShowCustomGroupTabDescription
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemLotteryInfo::OnShowCustomGroupTabDescription(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemLotteryInfo", "OnShowCustomGroupTabDescription");

	Params::TLUserWidgetItemLotteryInfo_OnShowCustomGroupTabDescription Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemLotteryInfo.OnShowLotteryByItem
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsByItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemLotteryInfo::OnShowLotteryByItem(bool InIsByItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemLotteryInfo", "OnShowLotteryByItem");

	Params::TLUserWidgetItemLotteryInfo_OnShowLotteryByItem Parms{};

	Parms.InIsByItem = InIsByItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationGuideBossStone.OnUpdateOccupationBossStoneAssist
// (Event, Public, BlueprintEvent)

void UTLUserWidgetOccupationGuideBossStone::OnUpdateOccupationBossStoneAssist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBossStone", "OnUpdateOccupationBossStoneAssist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetOccupationGuideBossStone.OnUpdateOccupationBossStoneKill
// (Event, Public, BlueprintEvent)

void UTLUserWidgetOccupationGuideBossStone::OnUpdateOccupationBossStoneKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBossStone", "OnUpdateOccupationBossStoneKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetOccupationGuideBossStone.OnUpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// EOccupationState                        InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationGuideBossStone::OnUpdateState(EOccupationState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBossStone", "OnUpdateState");

	Params::TLUserWidgetOccupationGuideBossStone_OnUpdateState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipItemRuneSocket.OnActiveRuneSynergy
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGrade                              InSynergyGrade                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipItemRuneSocket::OnActiveRuneSynergy(bool InIsActive, EItemGrade InSynergyGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipItemRuneSocket", "OnActiveRuneSynergy");

	Params::TLUserWidgetTooltipItemRuneSocket_OnActiveRuneSynergy Parms{};

	Parms.InIsActive = InIsActive;
	Parms.InSynergyGrade = InSynergyGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillTooltip.OnHideAwakeningOptionList
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillTooltip::OnHideAwakeningOptionList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTooltip", "OnHideAwakeningOptionList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillTooltip.OnSetSkillObject
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillTooltip::OnSetSkillObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTooltip", "OnSetSkillObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillTooltip.OnUpdateAwakeningOption
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InOptionText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bInEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillTooltip::OnUpdateAwakeningOption(int32 InIndex, const class FText& InOptionText, bool bInEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTooltip", "OnUpdateAwakeningOption");

	Params::TLUserWidgetSkillTooltip_OnUpdateAwakeningOption Parms{};

	Parms.InIndex = InIndex;
	Parms.InOptionText = std::move(InOptionText);
	Parms.bInEnable = bInEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillTooltip.OnUpdateTriggerCounterMove
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInTriggerCounterMove                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInShowDesc                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillTooltip::OnUpdateTriggerCounterMove(bool bInTriggerCounterMove, bool bInShowDesc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTooltip", "OnUpdateTriggerCounterMove");

	Params::TLUserWidgetSkillTooltip_OnUpdateTriggerCounterMove Parms{};

	Parms.bInTriggerCounterMove = bInTriggerCounterMove;
	Parms.bInShowDesc = bInShowDesc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillTooltip.OnUpdateWeaponMasteryState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLWeaponMasteryNodeState               InNodeState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillTooltip::OnUpdateWeaponMasteryState(ETLWeaponMasteryNodeState InNodeState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTooltip", "OnUpdateWeaponMasteryState");

	Params::TLUserWidgetSkillTooltip_OnUpdateWeaponMasteryState Parms{};

	Parms.InNodeState = InNodeState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillTooltip.GetActionGuideAttachPanel
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTLSizeBox*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLSizeBox* UTLUserWidgetSkillTooltip::GetActionGuideAttachPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTooltip", "GetActionGuideAttachPanel");

	Params::TLUserWidgetSkillTooltip_GetActionGuideAttachPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemRubbingMaterialSlot.OnNeedCountUpdated
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemRubbingMaterialSlot::OnNeedCountUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemRubbingMaterialSlot", "OnNeedCountUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemRubbingMaterialSlot.OnSlotInfoUpdated
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemRubbingMaterialSlot::OnSlotInfoUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemRubbingMaterialSlot", "OnSlotInfoUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemRubbingResultSlot.OnSlotInfoUpdated
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetItemRubbingResultSlot::OnSlotInfoUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemRubbingResultSlot", "OnSlotInfoUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemSlotTraitInfo.OnVisibleTraitStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemSlotTraitInfo::OnVisibleTraitStat(bool InIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemSlotTraitInfo", "OnVisibleTraitStat");

	Params::TLUserWidgetItemSlotTraitInfo_OnVisibleTraitStat Parms{};

	Parms.InIsVisible = InIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltip.OnFixedEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InFixed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltip::OnFixedEvent(bool InFixed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltip", "OnFixedEvent");

	Params::TLUserWidgetItemTooltip_OnFixedEvent Parms{};

	Parms.InFixed = InFixed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSiegeDistributionInfo.UpdateItemCount
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSiegeDistributionInfo::UpdateItemCount(int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeDistributionInfo", "UpdateItemCount");

	Params::TLUserWidgetSiegeDistributionInfo_UpdateItemCount Parms{};

	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipEquipContent.OnEmphasizeComponent
// (Event, Protected, BlueprintEvent)
// Parameters:
// EItemTooltipComponent                   InComponent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEmphasize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipEquipContent::OnEmphasizeComponent(EItemTooltipComponent InComponent, bool InEmphasize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipEquipContent", "OnEmphasizeComponent");

	Params::TLUserWidgetItemTooltipEquipContent_OnEmphasizeComponent Parms{};

	Parms.InComponent = InComponent;
	Parms.InEmphasize = InEmphasize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipEquipContent.OnExistStats
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsExist                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipEquipContent::OnExistStats(bool InIsExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipEquipContent", "OnExistStats");

	Params::TLUserWidgetItemTooltipEquipContent_OnExistStats Parms{};

	Parms.InIsExist = InIsExist;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipEquipContent.OnUpdateDropActionGuide
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsConsole                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipEquipContent::OnUpdateDropActionGuide(const bool bShow, const bool bIsConsole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipEquipContent", "OnUpdateDropActionGuide");

	Params::TLUserWidgetItemTooltipEquipContent_OnUpdateDropActionGuide Parms{};

	Parms.bShow = bShow;
	Parms.bIsConsole = bIsConsole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTooltipEquipContent.OnUpdateEquipPositionName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTooltipEquipContent::OnUpdateEquipPositionName(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTooltipEquipContent", "OnUpdateEquipPositionName");

	Params::TLUserWidgetItemTooltipEquipContent_OnUpdateEquipPositionName Parms{};

	Parms.InName = std::move(InName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSiegeWarfareSuccess.SetCastleType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECastleType                             InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSiegeWarfareSuccess::SetCastleType(ECastleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeWarfareSuccess", "SetCastleType");

	Params::TLUserWidgetSiegeWarfareSuccess_SetCastleType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTooltipStatInfo.OnUpdateAttackEnchantValueText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InEnchantMinValueText                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             InEnchantMaxValueText                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             InColorKey                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipStatInfo::OnUpdateAttackEnchantValueText(const class FText& InEnchantMinValueText, const class FText& InEnchantMaxValueText, class FName InColorKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipStatInfo", "OnUpdateAttackEnchantValueText");

	Params::TLUserWidgetTooltipStatInfo_OnUpdateAttackEnchantValueText Parms{};

	Parms.InEnchantMinValueText = std::move(InEnchantMinValueText);
	Parms.InEnchantMaxValueText = std::move(InEnchantMaxValueText);
	Parms.InColorKey = InColorKey;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipStatInfo.OnUpdateAttackValue
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InMinValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipStatInfo::OnUpdateAttackValue(int32 InMinValue, int32 InMaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipStatInfo", "OnUpdateAttackValue");

	Params::TLUserWidgetTooltipStatInfo_OnUpdateAttackValue Parms{};

	Parms.InMinValue = InMinValue;
	Parms.InMaxValue = InMaxValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipStatInfo.OnUpdateAttackValueCompare
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InMinValueDiff                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxValueDiff                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipStatInfo::OnUpdateAttackValueCompare(int32 InMinValueDiff, int32 InMaxValueDiff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipStatInfo", "OnUpdateAttackValueCompare");

	Params::TLUserWidgetTooltipStatInfo_OnUpdateAttackValueCompare Parms{};

	Parms.InMinValueDiff = InMinValueDiff;
	Parms.InMaxValueDiff = InMaxValueDiff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipStatInfo.OnUpdateBaseValueText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipStatInfo::OnUpdateBaseValueText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipStatInfo", "OnUpdateBaseValueText");

	Params::TLUserWidgetTooltipStatInfo_OnUpdateBaseValueText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipStatInfo.OnUpdateName
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipStatInfo::OnUpdateName(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipStatInfo", "OnUpdateName");

	Params::TLUserWidgetTooltipStatInfo_OnUpdateName Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipStatInfo.UpdateCompareAttackStat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTLTooltipStatCompareComponent   InCompareComponent                                     (Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipStatInfo::UpdateCompareAttackStat(int32 InValue, struct FTLTooltipStatCompareComponent& InCompareComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipStatInfo", "UpdateCompareAttackStat");

	Params::TLUserWidgetTooltipStatInfo_UpdateCompareAttackStat Parms{};

	Parms.InValue = InValue;
	Parms.InCompareComponent = std::move(InCompareComponent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InCompareComponent = std::move(Parms.InCompareComponent);
}


// Function TLClient.TLUserWidgetSiegeWarfare.OnSiegeWarfareProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsProgress                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSiegeWarfare::OnSiegeWarfareProgress(bool InIsProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeWarfare", "OnSiegeWarfareProgress");

	Params::TLUserWidgetSiegeWarfare_OnSiegeWarfareProgress Parms{};

	Parms.InIsProgress = InIsProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSiegeWarfare.OnUpdatePlunderEmpty
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsEmpty                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSiegeWarfare::OnUpdatePlunderEmpty(bool InIsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeWarfare", "OnUpdatePlunderEmpty");

	Params::TLUserWidgetSiegeWarfare_OnUpdatePlunderEmpty Parms{};

	Parms.InIsEmpty = InIsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSiegeWarfare.OnUpdateSiegeWarfareAssist
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSiegeWarfare::OnUpdateSiegeWarfareAssist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeWarfare", "OnUpdateSiegeWarfareAssist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSiegeWarfare.OnUpdateSiegeWarfareKill
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSiegeWarfare::OnUpdateSiegeWarfareKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeWarfare", "OnUpdateSiegeWarfareKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSiegeWarfare.OnUsurpingGuildRelation
// (Event, Protected, BlueprintEvent)
// Parameters:
// EGuildRelationship                      InRelationship                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSiegeWarfare::OnUsurpingGuildRelation(EGuildRelationship InRelationship)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeWarfare", "OnUsurpingGuildRelation");

	Params::TLUserWidgetSiegeWarfare_OnUsurpingGuildRelation Parms{};

	Parms.InRelationship = InRelationship;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitChange.OnEndItemTraitChange
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetItemTraitChange::OnEndItemTraitChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitChange", "OnEndItemTraitChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemTraitChange.OnItemTraitChangeState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLItemChangeState                      InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitChange::OnItemTraitChangeState(ETLItemChangeState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitChange", "OnItemTraitChangeState");

	Params::TLUserWidgetItemTraitChange_OnItemTraitChangeState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitChange.OnResourceItemChanged
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTraitChange::OnResourceItemChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitChange", "OnResourceItemChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTraitChange.OnTabTypeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLItemTraitChangeType                  InTabType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitChange::OnTabTypeChanged(ETLItemTraitChangeType InTabType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitChange", "OnTabTypeChanged");

	Params::TLUserWidgetItemTraitChange_OnTabTypeChanged Parms{};

	Parms.InTabType = InTabType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsItemSlot.OnEquipItem
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsEquip                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsItemSlot::OnEquipItem(bool InIsEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsItemSlot", "OnEquipItem");

	Params::TLUserWidgetSpecialShopGoodsItemSlot_OnEquipItem Parms{};

	Parms.InIsEquip = InIsEquip;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitChangeMaterialSlot.OnAddItem
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsUpdated                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitChangeMaterialSlot::OnAddItem(bool InIsUpdated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitChangeMaterialSlot", "OnAddItem");

	Params::TLUserWidgetItemTraitChangeMaterialSlot_OnAddItem Parms{};

	Parms.InIsUpdated = InIsUpdated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitChangeMaterialSlot.OnLackMaterial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsLack                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitChangeMaterialSlot::OnLackMaterial(bool InIsLack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitChangeMaterialSlot", "OnLackMaterial");

	Params::TLUserWidgetItemTraitChangeMaterialSlot_OnLackMaterial Parms{};

	Parms.InIsLack = InIsLack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitChangeMaterialSlot.OnRemoveItem
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsUpdated                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitChangeMaterialSlot::OnRemoveItem(bool InIsUpdated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitChangeMaterialSlot", "OnRemoveItem");

	Params::TLUserWidgetItemTraitChangeMaterialSlot_OnRemoveItem Parms{};

	Parms.InIsUpdated = InIsUpdated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchantNextStat.OnOpenStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsSelectMaterial                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchantNextStat::OnOpenStat(bool InIsOpen, bool InIsSelectMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchantNextStat", "OnOpenStat");

	Params::TLUserWidgetItemTraitEnchantNextStat_OnOpenStat Parms{};

	Parms.InIsOpen = InIsOpen;
	Parms.InIsSelectMaterial = InIsSelectMaterial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.GetSceneActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ATLCustomSceneControlActor*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ATLCustomSceneControlActor* UTLUserWidgetItemTraitEnchant::GetSceneActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "GetSceneActor");

	Params::TLUserWidgetItemTraitEnchant_GetSceneActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemTraitEnchant.GetSelectedStatSlotIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetItemTraitEnchant::GetSelectedStatSlotIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "GetSelectedStatSlotIndex");

	Params::TLUserWidgetItemTraitEnchant_GetSelectedStatSlotIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnCheckAddingBlessPoint
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bChecked                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BaseProbabilityPercent                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AddedProbabilityPercent                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnCheckAddingBlessPoint(bool bChecked, int32 BaseProbabilityPercent, int32 AddedProbabilityPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnCheckAddingBlessPoint");

	Params::TLUserWidgetItemTraitEnchant_OnCheckAddingBlessPoint Parms{};

	Parms.bChecked = bChecked;
	Parms.BaseProbabilityPercent = BaseProbabilityPercent;
	Parms.AddedProbabilityPercent = AddedProbabilityPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnEnchantResultAction
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsSuccess                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnEnchantResultAction(bool InIsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnEnchantResultAction");

	Params::TLUserWidgetItemTraitEnchant_OnEnchantResultAction Parms{};

	Parms.InIsSuccess = InIsSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnEnchantState
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemTraitEnchantStep                   InStep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnEnchantState(EItemTraitEnchantStep InStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnEnchantState");

	Params::TLUserWidgetItemTraitEnchant_OnEnchantState Parms{};

	Parms.InStep = InStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnEnchantTraitItemDrag
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InDrag                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnEnchantTraitItemDrag(bool InDrag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnEnchantTraitItemDrag");

	Params::TLUserWidgetItemTraitEnchant_OnEnchantTraitItemDrag Parms{};

	Parms.InDrag = InDrag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnEndEnchantResultAction
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetItemTraitEnchant::OnEndEnchantResultAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnEndEnchantResultAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnItemGrade
// (Event, Public, BlueprintEvent)
// Parameters:
// EItemGrade                              InItemGrade                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnItemGrade(EItemGrade InItemGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnItemGrade");

	Params::TLUserWidgetItemTraitEnchant_OnItemGrade Parms{};

	Parms.InItemGrade = InItemGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnNeedBlessPointRewardPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   PreviousProbabilityPercent                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AddedProbabilityPercent                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnNeedBlessPointRewardPlay(int32 PreviousProbabilityPercent, int32 AddedProbabilityPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnNeedBlessPointRewardPlay");

	Params::TLUserWidgetItemTraitEnchant_OnNeedBlessPointRewardPlay Parms{};

	Parms.PreviousProbabilityPercent = PreviousProbabilityPercent;
	Parms.AddedProbabilityPercent = AddedProbabilityPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnOpenItemTraitChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnOpenItemTraitChange(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnOpenItemTraitChange");

	Params::TLUserWidgetItemTraitEnchant_OnOpenItemTraitChange Parms{};

	Parms.InIsOpen = InIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnOpenItemTraitOpen
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnOpenItemTraitOpen(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnOpenItemTraitOpen");

	Params::TLUserWidgetItemTraitEnchant_OnOpenItemTraitOpen Parms{};

	Parms.InIsOpen = InIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnOpenItemTraitResonance
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTraitEnchant::OnOpenItemTraitResonance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnOpenItemTraitResonance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnOpenItemTraitResonanceChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnOpenItemTraitResonanceChange(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnOpenItemTraitResonanceChange");

	Params::TLUserWidgetItemTraitEnchant_OnOpenItemTraitResonanceChange Parms{};

	Parms.InIsOpen = InIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnOpenItemTraitResonanceSelectChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnOpenItemTraitResonanceSelectChange(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnOpenItemTraitResonanceSelectChange");

	Params::TLUserWidgetItemTraitEnchant_OnOpenItemTraitResonanceSelectChange Parms{};

	Parms.InIsOpen = InIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnPlayRewardProgressBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnPlayRewardProgressBar(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnPlayRewardProgressBar");

	Params::TLUserWidgetItemTraitEnchant_OnPlayRewardProgressBar Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnResultItemTraitChange
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTraitEnchant::OnResultItemTraitChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnResultItemTraitChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnResultItemTraitOpen
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTraitEnchant::OnResultItemTraitOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnResultItemTraitOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnResultItemTraitResonanceChange
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTraitEnchant::OnResultItemTraitResonanceChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnResultItemTraitResonanceChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnResultItemTraitResonanceSelectChange
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTraitEnchant::OnResultItemTraitResonanceSelectChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnResultItemTraitResonanceSelectChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnSetEnchantTargetItem
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsSet                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnSetEnchantTargetItem(bool InIsSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnSetEnchantTargetItem");

	Params::TLUserWidgetItemTraitEnchant_OnSetEnchantTargetItem Parms{};

	Parms.InIsSet = InIsSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnTraitItemSetup
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpenStat                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsExistMaterialItem                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnTraitItemSetup(bool InIsOpenStat, bool InIsExistMaterialItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnTraitItemSetup");

	Params::TLUserWidgetItemTraitEnchant_OnTraitItemSetup Parms{};

	Parms.InIsOpenStat = InIsOpenStat;
	Parms.InIsExistMaterialItem = InIsExistMaterialItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchant.OnUpdateItemTraitChangeType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLItemTraitChangeType                  InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchant::OnUpdateItemTraitChangeType(ETLItemTraitChangeType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchant", "OnUpdateItemTraitChangeType");

	Params::TLUserWidgetItemTraitEnchant_OnUpdateItemTraitChangeType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitProbSlot.OnOwnStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOwn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitProbSlot::OnOwnStat(bool InIsOwn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitProbSlot", "OnOwnStat");

	Params::TLUserWidgetItemTraitProbSlot_OnOwnStat Parms{};

	Parms.InIsOwn = InIsOwn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchantStatSlotLevel.OnActiveLevel
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InStageOn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCompareLevelValue                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchantStatSlotLevel::OnActiveLevel(bool InStageOn, int32 InCompareLevelValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchantStatSlotLevel", "OnActiveLevel");

	Params::TLUserWidgetItemTraitEnchantStatSlotLevel_OnActiveLevel Parms{};

	Parms.InStageOn = InStageOn;
	Parms.InCompareLevelValue = InCompareLevelValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconSavedPlace.Button_OnClicked
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconSavedPlace::Button_OnClicked(const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconSavedPlace", "Button_OnClicked");

	Params::TLUserWidgetMapIconSavedPlace_Button_OnClicked Parms{};

	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetStatsText.OnUpdateName
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetStatsText::OnUpdateName(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatsText", "OnUpdateName");

	Params::TLUserWidgetStatsText_OnUpdateName Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatsText.OnUpdateValue
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetStatsText::OnUpdateValue(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatsText", "OnUpdateValue");

	Params::TLUserWidgetStatsText_OnUpdateValue Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchantStatSlot.OnOpenStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpenStat                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsSelectedMaterial                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsAvailableMaterial                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchantStatSlot::OnOpenStat(bool InIsOpenStat, bool InIsSelectedMaterial, bool InIsAvailableMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchantStatSlot", "OnOpenStat");

	Params::TLUserWidgetItemTraitEnchantStatSlot_OnOpenStat Parms{};

	Parms.InIsOpenStat = InIsOpenStat;
	Parms.InIsSelectedMaterial = InIsSelectedMaterial;
	Parms.InIsAvailableMaterial = InIsAvailableMaterial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitEnchantStatSlot.OnUpdateRedDot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitEnchantStatSlot::OnUpdateRedDot(bool InIsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitEnchantStatSlot", "OnUpdateRedDot");

	Params::TLUserWidgetItemTraitEnchantStatSlot_OnUpdateRedDot Parms{};

	Parms.InIsOn = InIsOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitResonanceSlot.OnEndResonanceOpen
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetItemTraitResonanceSlot::OnEndResonanceOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitResonanceSlot", "OnEndResonanceOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemTraitResonanceSlot.OnOpenStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpenStat                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitResonanceSlot::OnOpenStat(bool InIsOpenStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitResonanceSlot", "OnOpenStat");

	Params::TLUserWidgetItemTraitResonanceSlot_OnOpenStat Parms{};

	Parms.InIsOpenStat = InIsOpenStat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitResonanceSlot.OnResonanceOpen
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTraitResonanceSlot::OnResonanceOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitResonanceSlot", "OnResonanceOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTraitStatListSlot.OnOpenStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpenStat                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsLocked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitStatListSlot::OnOpenStat(bool InIsOpenStat, bool InIsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitStatListSlot", "OnOpenStat");

	Params::TLUserWidgetItemTraitStatListSlot_OnOpenStat Parms{};

	Parms.InIsOpenStat = InIsOpenStat;
	Parms.InIsLocked = InIsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitStatListSlot.OnSelectedStat
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsSelect                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitStatListSlot::OnSelectedStat(bool InIsSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitStatListSlot", "OnSelectedStat");

	Params::TLUserWidgetItemTraitStatListSlot_OnSelectedStat Parms{};

	Parms.InIsSelect = InIsSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitStatListSlot.OnUpdateRedDot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitStatListSlot::OnUpdateRedDot(bool InIsOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitStatListSlot", "OnUpdateRedDot");

	Params::TLUserWidgetItemTraitStatListSlot_OnUpdateRedDot Parms{};

	Parms.InIsOn = InIsOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitExtract.OnLackMaterial
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsLack                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitExtract::OnLackMaterial(bool InIsLack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitExtract", "OnLackMaterial");

	Params::TLUserWidgetItemTraitExtract_OnLackMaterial Parms{};

	Parms.InIsLack = InIsLack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitExtract.OnLackMoney
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsLack                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitExtract::OnLackMoney(bool InIsLack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitExtract", "OnLackMoney");

	Params::TLUserWidgetItemTraitExtract_OnLackMoney Parms{};

	Parms.InIsLack = InIsLack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStamina.OnFishingStaminaEmpty
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsEmpty                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStamina::OnFishingStaminaEmpty(bool IsEmpty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStamina", "OnFishingStaminaEmpty");

	Params::TLUserWidgetStamina_OnFishingStaminaEmpty Parms{};

	Parms.IsEmpty = IsEmpty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStamina.OnGaugeIncrease
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetStamina::OnGaugeIncrease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStamina", "OnGaugeIncrease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStamina.OnInitFishingGaugeState
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetStamina::OnInitFishingGaugeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStamina", "OnInitFishingGaugeState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStamina.OnInitGaugeState
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetStamina::OnInitGaugeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStamina", "OnInitGaugeState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStamina.OnUpdateGaugeState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLStaminaGaugeState                    InOldState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStamina::OnUpdateGaugeState(ETLStaminaGaugeState InOldState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStamina", "OnUpdateGaugeState");

	Params::TLUserWidgetStamina_OnUpdateGaugeState Parms{};

	Parms.InOldState = InOldState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitExtractResultSlot.OnCreateResultSlot
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTraitExtractResultSlot::OnCreateResultSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitExtractResultSlot", "OnCreateResultSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTraitOpen.OnEndItemTraitChange
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetItemTraitOpen::OnEndItemTraitChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitOpen", "OnEndItemTraitChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemTraitOpen.OnItemTraitOpenState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLItemChangeState                      InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsExistTargetTait                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitOpen::OnItemTraitOpenState(ETLItemChangeState InState, bool InIsExistTargetTait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitOpen", "OnItemTraitOpenState");

	Params::TLUserWidgetItemTraitOpen_OnItemTraitOpenState Parms{};

	Parms.InState = InState;
	Parms.InIsExistTargetTait = InIsExistTargetTait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitOpen.OnResourceItemChanged
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTraitOpen::OnResourceItemChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitOpen", "OnResourceItemChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTraitResonance.OnEndItemTraitChange
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetItemTraitResonance::OnEndItemTraitChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitResonance", "OnEndItemTraitChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemTraitResonance.OnItemTraitResonanceChangeState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLItemChangeState                      InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitResonance::OnItemTraitResonanceChangeState(ETLItemChangeState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitResonance", "OnItemTraitResonanceChangeState");

	Params::TLUserWidgetItemTraitResonance_OnItemTraitResonanceChangeState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitResonanceSelect.OnEndResonanceSelectChange
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetItemTraitResonanceSelect::OnEndResonanceSelectChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitResonanceSelect", "OnEndResonanceSelectChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetItemTraitResonanceSelect.OnResonanceSelectChangeState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLItemChangeState                      InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitResonanceSelect::OnResonanceSelectChangeState(ETLItemChangeState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitResonanceSelect", "OnResonanceSelectChangeState");

	Params::TLUserWidgetItemTraitResonanceSelect_OnResonanceSelectChangeState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetItemTraitResonanceSelect.OnResourceItemChanged
// (Event, Public, BlueprintEvent)

void UTLUserWidgetItemTraitResonanceSelect::OnResourceItemChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitResonanceSelect", "OnResourceItemChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetItemTraitResonanceSelectSlot.OnExistItemResonance
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InExistResonance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetItemTraitResonanceSelectSlot::OnExistItemResonance(bool InExistResonance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetItemTraitResonanceSelectSlot", "OnExistItemResonance");

	Params::TLUserWidgetItemTraitResonanceSelectSlot_OnExistItemResonance Parms{};

	Parms.InExistResonance = InExistResonance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetJoinContentsMessage.OnSetRegionType
// (Event, Public, BlueprintEvent)
// Parameters:
// EMapRegionType                          InCurRegionType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetJoinContentsMessage::OnSetRegionType(const EMapRegionType InCurRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetJoinContentsMessage", "OnSetRegionType");

	Params::TLUserWidgetJoinContentsMessage_OnSetRegionType Parms{};

	Parms.InCurRegionType = InCurRegionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetLanguageSwitchButton.OnClickedChangeInputLanguage
// (Final, Native, Protected)

void UTLUserWidgetLanguageSwitchButton::OnClickedChangeInputLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLanguageSwitchButton", "OnClickedChangeInputLanguage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetLoadingIndicator.OnLoadingActivation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetLoadingIndicator::OnLoadingActivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLoadingIndicator", "OnLoadingActivation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetLoadingIndicator.OnLoadingDeactivation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetLoadingIndicator::OnLoadingDeactivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLoadingIndicator", "OnLoadingDeactivation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetLobbyMain.OnCharacterDataUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHasCharacterData                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetLobbyMain::OnCharacterDataUpdated(bool bHasCharacterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLobbyMain", "OnCharacterDataUpdated");

	Params::TLUserWidgetLobbyMain_OnCharacterDataUpdated Parms{};

	Parms.bHasCharacterData = bHasCharacterData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetLogo.OnStartLogoAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetLogo::OnStartLogoAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetLogo", "OnStartLogoAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMagicDoll.GetContextMenuWidget
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UTLUserWidgetMagicDoll::GetContextMenuWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDoll", "GetContextMenuWidget");

	Params::TLUserWidgetMagicDoll_GetContextMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetMagicDoll.HandleActiveWidgetChange
// (Final, Native, Protected)
// Parameters:
// int32                                   PrevIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDoll::HandleActiveWidgetChange(int32 PrevIndex, int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDoll", "HandleActiveWidgetChange");

	Params::TLUserWidgetMagicDoll_HandleActiveWidgetChange Parms{};

	Parms.PrevIndex = PrevIndex;
	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMagicDoll.OnContentTabSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLMagicDollUIContentType               InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDoll::OnContentTabSelected(ETLMagicDollUIContentType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDoll", "OnContentTabSelected");

	Params::TLUserWidgetMagicDoll_OnContentTabSelected Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMagicDollCollection.HandleSearchTextBoxCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDollCollection::HandleSearchTextBoxCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollCollection", "HandleSearchTextBoxCommitted");

	Params::TLUserWidgetMagicDollCollection_HandleSearchTextBoxCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMagicDollCollection.RemoveStatFilter
// (Native, Public, BlueprintCallable)

void UTLUserWidgetMagicDollCollection::RemoveStatFilter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollCollection", "RemoveStatFilter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillTraitDetailSlot.OnClickTraitButtonSoundEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InActivate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillTraitDetailSlot::OnClickTraitButtonSoundEvent(bool InActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitDetailSlot", "OnClickTraitButtonSoundEvent");

	Params::TLUserWidgetSkillTraitDetailSlot_OnClickTraitButtonSoundEvent Parms{};

	Parms.InActivate = InActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillTraitDetailFrame.OnStartUpdateDetailSlotAnim
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActivate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillTraitDetailFrame::OnStartUpdateDetailSlotAnim(bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitDetailFrame", "OnStartUpdateDetailSlotAnim");

	Params::TLUserWidgetSkillTraitDetailFrame_OnStartUpdateDetailSlotAnim Parms{};

	Parms.bActivate = bActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillTraitTooltip.OnSetSkillObject
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillTraitTooltip::OnSetSkillObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitTooltip", "OnSetSkillObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillTraitTooltip.GetActionGuideAttachPanel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTLSizeBox*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLSizeBox* UTLUserWidgetSkillTraitTooltip::GetActionGuideAttachPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitTooltip", "GetActionGuideAttachPanel");

	Params::TLUserWidgetSkillTraitTooltip_GetActionGuideAttachPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetMagicDollExpeditionRegionBtn.OnUpdateExpeditionMagicdollCount
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLUIMagicDollCount                     InCount                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDollExpeditionRegionBtn::OnUpdateExpeditionMagicdollCount(const ETLUIMagicDollCount InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollExpeditionRegionBtn", "OnUpdateExpeditionMagicdollCount");

	Params::TLUserWidgetMagicDollExpeditionRegionBtn_OnUpdateExpeditionMagicdollCount Parms{};

	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMagicDollExpeditionRegionBtn.OnUpdateExpeditionRegionState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLExpeditionState                      State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDollExpeditionRegionBtn::OnUpdateExpeditionRegionState(ETLExpeditionState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollExpeditionRegionBtn", "OnUpdateExpeditionRegionState");

	Params::TLUserWidgetMagicDollExpeditionRegionBtn_OnUpdateExpeditionRegionState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMagicDollExpeditionRegionBtn.OnUpdateRegionOpened
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMagicDollExpeditionRegionBtn::OnUpdateRegionOpened(bool bInOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollExpeditionRegionBtn", "OnUpdateRegionOpened");

	Params::TLUserWidgetMagicDollExpeditionRegionBtn_OnUpdateRegionOpened Parms{};

	Parms.bInOpen = bInOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMagicDollSkillSlot.OnCostItemUIEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMagicDollSkillSlot::OnCostItemUIEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollSkillSlot", "OnCostItemUIEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMagicDollSkillSlot.OnCostItemUIEventClear
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMagicDollSkillSlot::OnCostItemUIEventClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollSkillSlot", "OnCostItemUIEventClear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMagicDollHudSlot.OnCooldownEnd
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMagicDollHudSlot::OnCooldownEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMagicDollHudSlot", "OnCooldownEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCameraViewButton.OnUpdateUserCameraType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLUserCameraType                       InUserCameraType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetCameraViewButton::OnUpdateUserCameraType(ETLUserCameraType InUserCameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCameraViewButton", "OnUpdateUserCameraType");

	Params::TLUserWidgetCameraViewButton_OnUpdateUserCameraType Parms{};

	Parms.InUserCameraType = InUserCameraType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetInventoryButton.OnRedDotCountUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InRedDotCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInventoryButton::OnRedDotCountUpdated(int32 InRedDotCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInventoryButton", "OnRedDotCountUpdated");

	Params::TLUserWidgetInventoryButton_OnRedDotCountUpdated Parms{};

	Parms.InRedDotCount = InRedDotCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMainMenuCenter.SetNameplateRuleButtonIconText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Value                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMainMenuCenter::SetNameplateRuleButtonIconText(const class FText& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMainMenuCenter", "SetNameplateRuleButtonIconText");

	Params::TLUserWidgetMainMenuCenter_SetNameplateRuleButtonIconText Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapRegionInfoSlotNpc.OnUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapRegionInfoSlotNpc::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionInfoSlotNpc", "OnUnLockMemorial");

	Params::TLUserWidgetWorldMapRegionInfoSlotNpc_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapRegionInfoSlotNpc.OnUpdateNpcInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLCreatureRank                         InCreatureRank                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapRegionInfoSlotNpc::OnUpdateNpcInfo(int32 InLevel, ETLCreatureRank InCreatureRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapRegionInfoSlotNpc", "OnUpdateNpcInfo");

	Params::TLUserWidgetWorldMapRegionInfoSlotNpc_OnUpdateNpcInfo Parms{};

	Parms.InLevel = InLevel;
	Parms.InCreatureRank = InCreatureRank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAddButton.OnActivate
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAddButton::OnActivate(const bool bInValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAddButton", "OnActivate");

	Params::TLUserWidgetAddButton_OnActivate Parms{};

	Parms.bInValue = bInValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMenuDragSlot.OnDimmed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInDimmed                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMenuDragSlot::OnDimmed(const bool bInDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMenuDragSlot", "OnDimmed");

	Params::TLUserWidgetMenuDragSlot_OnDimmed Parms{};

	Parms.bInDimmed = bInDimmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeTableContextMenuList.OnDisableAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTimeTableContextMenuList::OnDisableAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableContextMenuList", "OnDisableAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeTableContextMenuList.OnEnableAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTimeTableContextMenuList::OnEnableAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableContextMenuList", "OnEnableAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeTableContextMenuList.OnOffAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTimeTableContextMenuList::OnOffAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableContextMenuList", "OnOffAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeTableContextMenuList.OnUpdateScheduleType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeTableContextMenuList::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableContextMenuList", "OnUpdateScheduleType");

	Params::TLUserWidgetTimeTableContextMenuList_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapCaptionContents.HandleFilterCheckButtonOnChecked
// (Final, Native, Public)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapCaptionContents::HandleFilterCheckButtonOnChecked(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapCaptionContents", "HandleFilterCheckButtonOnChecked");

	Params::TLUserWidgetMapCaptionContents_HandleFilterCheckButtonOnChecked Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapCaptionContents.HandleFilterCheckButtonOnUnchecked
// (Final, Native, Public)

void UTLUserWidgetMapCaptionContents::HandleFilterCheckButtonOnUnchecked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapCaptionContents", "HandleFilterCheckButtonOnUnchecked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapCaptionContents.HandleUpdateMapIconFilter
// (Final, Native, Public)
// Parameters:
// class FName                             InMapIconFilterId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInForceUpdate                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapCaptionContents::HandleUpdateMapIconFilter(class FName InMapIconFilterId, bool InIsVisible, bool bInForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapCaptionContents", "HandleUpdateMapIconFilter");

	Params::TLUserWidgetMapCaptionContents_HandleUpdateMapIconFilter Parms{};

	Parms.InMapIconFilterId = InMapIconFilterId;
	Parms.InIsVisible = InIsVisible;
	Parms.bInForceUpdate = bInForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapCaptionGroup.HandleExpandCheckButtonOnChecked
// (Final, Native, Private)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapCaptionGroup::HandleExpandCheckButtonOnChecked(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapCaptionGroup", "HandleExpandCheckButtonOnChecked");

	Params::TLUserWidgetMapCaptionGroup_HandleExpandCheckButtonOnChecked Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapCaptionGroup.HandleExpandCheckButtonOnUnchecked
// (Final, Native, Private)

void UTLUserWidgetMapCaptionGroup::HandleExpandCheckButtonOnUnchecked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapCaptionGroup", "HandleExpandCheckButtonOnUnchecked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapCaptionGroup.HandleUpdateMapCaptionGroupExpand
// (Final, Native, Private)
// Parameters:
// class FName                             InGroupId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsExpand                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapCaptionGroup::HandleUpdateMapCaptionGroupExpand(class FName InGroupId, bool InIsExpand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapCaptionGroup", "HandleUpdateMapCaptionGroupExpand");

	Params::TLUserWidgetMapCaptionGroup_HandleUpdateMapCaptionGroupExpand Parms{};

	Parms.InGroupId = InGroupId;
	Parms.InIsExpand = InIsExpand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapCaptionGroup.HandleUpdateMapCaptionUIState
// (Final, Native, Private)

void UTLUserWidgetMapCaptionGroup::HandleUpdateMapCaptionUIState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapCaptionGroup", "HandleUpdateMapCaptionUIState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTooltipItemTraitStatSlot.OnTraitStatState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpenStat                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipItemTraitStatSlot::OnTraitStatState(bool InIsOpenStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipItemTraitStatSlot", "OnTraitStatState");

	Params::TLUserWidgetTooltipItemTraitStatSlot_OnTraitStatState Parms{};

	Parms.InIsOpenStat = InIsOpenStat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconDynamicEvent.OnDynamicEventFocusAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconDynamicEvent::OnDynamicEventFocusAnimation(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconDynamicEvent", "OnDynamicEventFocusAnimation");

	Params::TLUserWidgetMapIconDynamicEvent_OnDynamicEventFocusAnimation Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconDynamicEvent.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconDynamicEvent::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconDynamicEvent", "OnUpdateScheduleType");

	Params::TLUserWidgetMapIconDynamicEvent_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipGuildHome.OnGuildHomeRaidStart
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InStart                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipGuildHome::OnGuildHomeRaidStart(bool InStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipGuildHome", "OnGuildHomeRaidStart");

	Params::TLUserWidgetTooltipGuildHome_OnGuildHomeRaidStart Parms{};

	Parms.InStart = InStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconOccupationTooltip.OnUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconOccupationTooltip::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconOccupationTooltip", "OnUnLockMemorial");

	Params::TLUserWidgetMapIconOccupationTooltip_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconOccupationTooltip.OnUpdateBossSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsBossSpawned                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconOccupationTooltip::OnUpdateBossSpawned(bool IsBossSpawned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconOccupationTooltip", "OnUpdateBossSpawned");

	Params::TLUserWidgetMapIconOccupationTooltip_OnUpdateBossSpawned Parms{};

	Parms.IsBossSpawned = IsBossSpawned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconOccupationTooltip.OnUpdateLocationEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActiveEffect                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconOccupationTooltip::OnUpdateLocationEffect(bool InIsActiveEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconOccupationTooltip", "OnUpdateLocationEffect");

	Params::TLUserWidgetMapIconOccupationTooltip_OnUpdateLocationEffect Parms{};

	Parms.InIsActiveEffect = InIsActiveEffect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconOccupationTooltip.OnUpdatePointInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActiveInfo                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconOccupationTooltip::OnUpdatePointInfo(bool InIsActiveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconOccupationTooltip", "OnUpdatePointInfo");

	Params::TLUserWidgetMapIconOccupationTooltip_OnUpdatePointInfo Parms{};

	Parms.InIsActiveInfo = InIsActiveInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconOccupationTooltip.OnUpdateProductionInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActiveInfo                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconOccupationTooltip::OnUpdateProductionInfo(bool InIsActiveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconOccupationTooltip", "OnUpdateProductionInfo");

	Params::TLUserWidgetMapIconOccupationTooltip_OnUpdateProductionInfo Parms{};

	Parms.InIsActiveInfo = InIsActiveInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconOccupationTooltip.OnUpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// EOccupationType                         InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOccupationState                        InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconOccupationTooltip::OnUpdateState(EOccupationType InType, EOccupationState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconOccupationTooltip", "OnUpdateState");

	Params::TLUserWidgetMapIconOccupationTooltip_OnUpdateState Parms{};

	Parms.InType = InType;
	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconOccupation.OnUpdateIconColor
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InColor                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconOccupation::OnUpdateIconColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconOccupation", "OnUpdateIconColor");

	Params::TLUserWidgetMapIconOccupation_OnUpdateIconColor Parms{};

	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconOccupation.OnUpdateInterEventState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsInterServerEvent                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconOccupation::OnUpdateInterEventState(bool InIsInterServerEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconOccupation", "OnUpdateInterEventState");

	Params::TLUserWidgetMapIconOccupation_OnUpdateInterEventState Parms{};

	Parms.InIsInterServerEvent = InIsInterServerEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconOccupation.OnUpdateOccupationState
// (Event, Public, BlueprintEvent)
// Parameters:
// EOccupationState                        InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconOccupation::OnUpdateOccupationState(EOccupationState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconOccupation", "OnUpdateOccupationState");

	Params::TLUserWidgetMapIconOccupation_OnUpdateOccupationState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconPin.Button_OnClicked
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconPin::Button_OnClicked(const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconPin", "Button_OnClicked");

	Params::TLUserWidgetMapIconPin_Button_OnClicked Parms{};

	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconPin.OnNotificationAnimation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMapIconPin::OnNotificationAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconPin", "OnNotificationAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMapIconPlayer.OnAnotherPlaceIcon
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsAnotherPlace                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconPlayer::OnAnotherPlaceIcon(bool InIsAnotherPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconPlayer", "OnAnotherPlaceIcon");

	Params::TLUserWidgetMapIconPlayer_OnAnotherPlaceIcon Parms{};

	Parms.InIsAnotherPlace = InIsAnotherPlace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconText.ButtonClickRegionInfo
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetMapIconText::ButtonClickRegionInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconText", "ButtonClickRegionInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMapIconText.OnCodexUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsActiveArea                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconText::OnCodexUpdate(bool IsActiveArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconText", "OnCodexUpdate");

	Params::TLUserWidgetMapIconText_OnCodexUpdate Parms{};

	Parms.IsActiveArea = IsActiveArea;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconText.OnContractUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsActiveArea                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconText::OnContractUpdate(bool IsActiveArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconText", "OnContractUpdate");

	Params::TLUserWidgetMapIconText_OnContractUpdate Parms{};

	Parms.IsActiveArea = IsActiveArea;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconText.OnGuildContractUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsActiveArea                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconText::OnGuildContractUpdate(bool IsActiveArea)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconText", "OnGuildContractUpdate");

	Params::TLUserWidgetMapIconText_OnGuildContractUpdate Parms{};

	Parms.IsActiveArea = IsActiveArea;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconText.OnUpdateWeatherEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// EWeatherType                            WeatherType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsTimeDay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconText::OnUpdateWeatherEvent(EWeatherType WeatherType, bool bIsTimeDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconText", "OnUpdateWeatherEvent");

	Params::TLUserWidgetMapIconText_OnUpdateWeatherEvent Parms{};

	Parms.WeatherType = WeatherType;
	Parms.bIsTimeDay = bIsTimeDay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconThroneTooltip.OnUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconThroneTooltip::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconThroneTooltip", "OnUnLockMemorial");

	Params::TLUserWidgetMapIconThroneTooltip_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconThroneTooltip.OnUpdatePointInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActiveInfo                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconThroneTooltip::OnUpdatePointInfo(bool InIsActiveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconThroneTooltip", "OnUpdatePointInfo");

	Params::TLUserWidgetMapIconThroneTooltip_OnUpdatePointInfo Parms{};

	Parms.InIsActiveInfo = InIsActiveInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconThroneTooltip.OnUpdateProductionInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActiveInfo                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconThroneTooltip::OnUpdateProductionInfo(bool InIsActiveInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconThroneTooltip", "OnUpdateProductionInfo");

	Params::TLUserWidgetMapIconThroneTooltip_OnUpdateProductionInfo Parms{};

	Parms.InIsActiveInfo = InIsActiveInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconThroneTooltip.OnUpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLSiegeWarfareStatus                   InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconThroneTooltip::OnUpdateState(ETLSiegeWarfareStatus InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconThroneTooltip", "OnUpdateState");

	Params::TLUserWidgetMapIconThroneTooltip_OnUpdateState Parms{};

	Parms.InStatus = InStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconThroneTooltip.OnUpdateToolTipDescState
// (Event, Public, BlueprintEvent)
// Parameters:
// EMapIconThroneToolTipDescStateType      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconThroneTooltip::OnUpdateToolTipDescState(EMapIconThroneToolTipDescStateType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconThroneTooltip", "OnUpdateToolTipDescState");

	Params::TLUserWidgetMapIconThroneTooltip_OnUpdateToolTipDescState Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconWorldPin.OnLastEditPin
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsLastPin                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMapIconWorldPin::OnLastEditPin(bool IsLastPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconWorldPin", "OnLastEditPin");

	Params::TLUserWidgetMapIconWorldPin_OnLastEditPin Parms{};

	Parms.IsLastPin = IsLastPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMapIconWorldPin.OnNotificationAnimation
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMapIconWorldPin::OnNotificationAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMapIconWorldPin", "OnNotificationAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMemorial.UpdateCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InCompleted                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMemorial::UpdateCompleted(bool InCompleted, bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMemorial", "UpdateCompleted");

	Params::TLUserWidgetMemorial_UpdateCompleted Parms{};

	Parms.InCompleted = InCompleted;
	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMemorial.UpdateRecordStatus
// (Event, Protected, BlueprintEvent)
// Parameters:
// EMemorialStatus                         InStatus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMemorial::UpdateRecordStatus(EMemorialStatus InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMemorial", "UpdateRecordStatus");

	Params::TLUserWidgetMemorial_UpdateRecordStatus Parms{};

	Parms.InStatus = InStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMemorial.UpdateTimeoutType
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InTimeout                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMemorial::UpdateTimeoutType(bool InTimeout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMemorial", "UpdateTimeoutType");

	Params::TLUserWidgetMemorial_UpdateTimeoutType Parms{};

	Parms.InTimeout = InTimeout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnClearWeatherWidgetEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMinimapEnvironment::OnClearWeatherWidgetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnClearWeatherWidgetEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnDayTimeWidgetEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMinimapEnvironment::OnDayTimeWidgetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnDayTimeWidgetEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnIndoorWidgetEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMinimapEnvironment::OnIndoorWidgetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnIndoorWidgetEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnMagicEclipseEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsStarted                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimapEnvironment::OnMagicEclipseEvent(bool IsStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnMagicEclipseEvent");

	Params::TLUserWidgetMinimapEnvironment_OnMagicEclipseEvent Parms{};

	Parms.IsStarted = IsStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnMagicRainWidgetEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsStarted                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimapEnvironment::OnMagicRainWidgetEvent(bool IsStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnMagicRainWidgetEvent");

	Params::TLUserWidgetMinimapEnvironment_OnMagicRainWidgetEvent Parms{};

	Parms.IsStarted = IsStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnMagicWindWidgetEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsStarted                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimapEnvironment::OnMagicWindWidgetEvent(bool IsStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnMagicWindWidgetEvent");

	Params::TLUserWidgetMinimapEnvironment_OnMagicWindWidgetEvent Parms{};

	Parms.IsStarted = IsStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnNightTimeWidgetEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMinimapEnvironment::OnNightTimeWidgetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnNightTimeWidgetEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnRainWidgetEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMinimapEnvironment::OnRainWidgetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnRainWidgetEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnSnowWidgetEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMinimapEnvironment::OnSnowWidgetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnSnowWidgetEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnSunnyWidgetEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMinimapEnvironment::OnSunnyWidgetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnSunnyWidgetEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimapEnvironment.OnThunderWidgetEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetMinimapEnvironment::OnThunderWidgetEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapEnvironment", "OnThunderWidgetEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimapWindInfo.OnChangeWindPowerAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLWindGrade                            InWindPower                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimapWindInfo::OnChangeWindPowerAnim(const ETLWindGrade InWindPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapWindInfo", "OnChangeWindPowerAnim");

	Params::TLUserWidgetMinimapWindInfo_OnChangeWindPowerAnim Parms{};

	Parms.InWindPower = InWindPower;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimapWindInfo.OnChangeWindRotateAnim
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLWindGrade                            InWindPower                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMinimapWindInfo::OnChangeWindRotateAnim(const ETLWindGrade InWindPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapWindInfo", "OnChangeWindRotateAnim");

	Params::TLUserWidgetMinimapWindInfo_OnChangeWindRotateAnim Parms{};

	Parms.InWindPower = InWindPower;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMinimapWindInfo.OnFinishedMagicWindAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMinimapWindInfo::OnFinishedMagicWindAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapWindInfo", "OnFinishedMagicWindAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMinimapWindInfo.OnStartedMagicWindAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetMinimapWindInfo::OnStartedMagicWindAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMinimapWindInfo", "OnStartedMagicWindAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetMsgBoxComboInputBox.OnInputTextChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxComboInputBox::OnInputTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxComboInputBox", "OnInputTextChanged");

	Params::TLUserWidgetMsgBoxComboInputBox_OnInputTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxComboInputBox.OnInputTextCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxComboInputBox::OnInputTextCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxComboInputBox", "OnInputTextCommitted");

	Params::TLUserWidgetMsgBoxComboInputBox_OnInputTextCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxSlider.OnValueChangedInternal
// (Final, Native, Private)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxSlider::OnValueChangedInternal(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxSlider", "OnValueChangedInternal");

	Params::TLUserWidgetMsgBoxSlider_OnValueChangedInternal Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxSeasonPassPurchase.OnUpdateLevelInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InCurrentLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCalcLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxSeasonPassPurchase::OnUpdateLevelInfo(int32 InCurrentLevel, int32 InCalcLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxSeasonPassPurchase", "OnUpdateLevelInfo");

	Params::TLUserWidgetMsgBoxSeasonPassPurchase_OnUpdateLevelInfo Parms{};

	Parms.InCurrentLevel = InCurrentLevel;
	Parms.InCalcLevel = InCalcLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxTextInputPassword.OnInputPasswordTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTextInputPassword::OnInputPasswordTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTextInputPassword", "OnInputPasswordTextChanged");

	Params::TLUserWidgetMsgBoxTextInputPassword_OnInputPasswordTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTextInputPassword.OnInputPasswordTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTextInputPassword::OnInputPasswordTextCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTextInputPassword", "OnInputPasswordTextCommitted");

	Params::TLUserWidgetMsgBoxTextInputPassword_OnInputPasswordTextCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTextInputPassword.OnInputTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTextInputPassword::OnInputTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTextInputPassword", "OnInputTextChanged");

	Params::TLUserWidgetMsgBoxTextInputPassword_OnInputTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxTextInputPassword.OnInputTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxTextInputPassword::OnInputTextCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxTextInputPassword", "OnInputTextCommitted");

	Params::TLUserWidgetMsgBoxTextInputPassword_OnInputTextCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxWeaponMastery.OnHandleReceiveResult
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   EnabledStatSlotIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGetMaxStat                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxWeaponMastery::OnHandleReceiveResult(int32 EnabledStatSlotIndex, bool bGetMaxStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxWeaponMastery", "OnHandleReceiveResult");

	Params::TLUserWidgetMsgBoxWeaponMastery_OnHandleReceiveResult Parms{};

	Parms.EnabledStatSlotIndex = EnabledStatSlotIndex;
	Parms.bGetMaxStat = bGetMaxStat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxWeaponMastery.OnPostResultShowEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLWeaponMasteryType                    InMasteryType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InStatMax                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxWeaponMastery::OnPostResultShowEffect(ETLWeaponMasteryType InMasteryType, bool InStatMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxWeaponMastery", "OnPostResultShowEffect");

	Params::TLUserWidgetMsgBoxWeaponMastery_OnPostResultShowEffect Parms{};

	Parms.InMasteryType = InMasteryType;
	Parms.InStatMax = InStatMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxWeaponMastery.OnSetData
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// ETLWeaponMasteryType                    InMasteryType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLWeaponMasteryUpType                  InUpType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSoftObjectPath                  InIconPath                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             InDesc                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxWeaponMastery::OnSetData(ETLWeaponMasteryType InMasteryType, ETLWeaponMasteryUpType InUpType, const struct FSoftObjectPath& InIconPath, const class FText& InName, const class FText& InDesc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxWeaponMastery", "OnSetData");

	Params::TLUserWidgetMsgBoxWeaponMastery_OnSetData Parms{};

	Parms.InMasteryType = InMasteryType;
	Parms.InUpType = InUpType;
	Parms.InIconPath = std::move(InIconPath);
	Parms.InName = std::move(InName);
	Parms.InDesc = std::move(InDesc);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxWeaponMastery.OnSetPointCandidate
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UTLUserWidgetFrame*               Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             PointText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxWeaponMastery::OnSetPointCandidate(class UTLUserWidgetFrame* Widget, const class FText& PointText, bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxWeaponMastery", "OnSetPointCandidate");

	Params::TLUserWidgetMsgBoxWeaponMastery_OnSetPointCandidate Parms{};

	Parms.Widget = Widget;
	Parms.PointText = std::move(PointText);
	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxWeaponMastery.OnSetPointOld
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             CurPointText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxWeaponMastery::OnSetPointOld(const class FText& CurPointText, bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxWeaponMastery", "OnSetPointOld");

	Params::TLUserWidgetMsgBoxWeaponMastery_OnSetPointOld Parms{};

	Parms.CurPointText = std::move(CurPointText);
	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxWeaponMastery.OnSetPointShow
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxWeaponMastery::OnSetPointShow(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxWeaponMastery", "OnSetPointShow");

	Params::TLUserWidgetMsgBoxWeaponMastery_OnSetPointShow Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxWeaponMastery.OnUpdateGold
// (Event, Protected, BlueprintEvent)
// Parameters:
// int64                                   InGold                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsEnough                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLWeaponMasteryUpType                  InUpType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxWeaponMastery::OnUpdateGold(int64 InGold, bool bInIsEnough, ETLWeaponMasteryUpType InUpType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxWeaponMastery", "OnUpdateGold");

	Params::TLUserWidgetMsgBoxWeaponMastery_OnUpdateGold Parms{};

	Parms.InGold = InGold;
	Parms.bInIsEnough = bInIsEnough;
	Parms.InUpType = InUpType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxWeaponMastery.OnUpdateStatEffect
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   EnabledStatSlotIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    BMax                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxWeaponMastery::OnUpdateStatEffect(int32 EnabledStatSlotIndex, bool BMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxWeaponMastery", "OnUpdateStatEffect");

	Params::TLUserWidgetMsgBoxWeaponMastery_OnUpdateStatEffect Parms{};

	Parms.EnabledStatSlotIndex = EnabledStatSlotIndex;
	Parms.BMax = BMax;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetMsgBoxWeaponMastery.SetWidgetActionGuide
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UTLUserWidgetActionGuide*         InActionGuide                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxWeaponMastery::SetWidgetActionGuide(class UTLUserWidgetActionGuide* InActionGuide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxWeaponMastery", "SetWidgetActionGuide");

	Params::TLUserWidgetMsgBoxWeaponMastery_SetWidgetActionGuide Parms{};

	Parms.InActionGuide = InActionGuide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetMsgBoxWeaponMasteryReset.OnSetData
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InStatText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int64                                   InGold                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsEnoughGold                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     EffectTexts                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetMsgBoxWeaponMasteryReset::OnSetData(const class FText& InStatText, int64 InGold, bool bInIsEnoughGold, const TArray<class FText>& EffectTexts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetMsgBoxWeaponMasteryReset", "OnSetData");

	Params::TLUserWidgetMsgBoxWeaponMasteryReset_OnSetData Parms{};

	Parms.InStatText = std::move(InStatText);
	Parms.InGold = InGold;
	Parms.bInIsEnoughGold = bInIsEnoughGold;
	Parms.EffectTexts = std::move(EffectTexts);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlateProgressBar.OnChangedHpAbnormalStatus
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EHpAbnormalStatus                       InStatus                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbIsMyPc                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlateProgressBar::OnChangedHpAbnormalStatus(const EHpAbnormalStatus& InStatus, const bool InbIsMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlateProgressBar", "OnChangedHpAbnormalStatus");

	Params::TLUserWidgetNamePlateProgressBar_OnChangedHpAbnormalStatus Parms{};

	Parms.InStatus = InStatus;
	Parms.InbIsMyPc = InbIsMyPc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlateProgressBar.OnFocusTargeting
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InFocused                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlateProgressBar::OnFocusTargeting(bool InFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlateProgressBar", "OnFocusTargeting");

	Params::TLUserWidgetNamePlateProgressBar_OnFocusTargeting Parms{};

	Parms.InFocused = InFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlateProgressBar.OnUpdateHpBarStyle
// (Event, Public, BlueprintEvent)
// Parameters:
// EHpBarType                              InHpBarType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlateProgressBar::OnUpdateHpBarStyle(EHpBarType InHpBarType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlateProgressBar", "OnUpdateHpBarStyle");

	Params::TLUserWidgetNamePlateProgressBar_OnUpdateHpBarStyle Parms{};

	Parms.InHpBarType = InHpBarType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlateProgressBar.OnUpdateOverridedRelationColor
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InOverrideColor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlateProgressBar::OnUpdateOverridedRelationColor(const struct FLinearColor& InOverrideColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlateProgressBar", "OnUpdateOverridedRelationColor");

	Params::TLUserWidgetNamePlateProgressBar_OnUpdateOverridedRelationColor Parms{};

	Parms.InOverrideColor = std::move(InOverrideColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlateProgressBar.OnUpdateRelationToMyPc
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLRelationColorToMyPc                  InTLRelationColorToMyPc                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlateProgressBar::OnUpdateRelationToMyPc(ETLRelationColorToMyPc InTLRelationColorToMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlateProgressBar", "OnUpdateRelationToMyPc");

	Params::TLUserWidgetNamePlateProgressBar_OnUpdateRelationToMyPc Parms{};

	Parms.InTLRelationColorToMyPc = InTLRelationColorToMyPc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlateProgressBar.PlayHideHpAnim
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InForward                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlateProgressBar::PlayHideHpAnim(bool InForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlateProgressBar", "PlayHideHpAnim");

	Params::TLUserWidgetNamePlateProgressBar_PlayHideHpAnim Parms{};

	Parms.InForward = InForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNamePlateProgressBar.SetColorWithColorTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTableColorKey                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNamePlateProgressBar::SetColorWithColorTable(class FName InTableColorKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNamePlateProgressBar", "SetColorWithColorTable");

	Params::TLUserWidgetNamePlateProgressBar_SetColorWithColorTable Parms{};

	Parms.InTableColorKey = InTableColorKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillExchangeDetail.OnChangeIngredientState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEnough                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillExchangeDetail::OnChangeIngredientState(bool bEnough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillExchangeDetail", "OnChangeIngredientState");

	Params::TLUserWidgetSkillExchangeDetail_OnChangeIngredientState Parms{};

	Parms.bEnough = bEnough;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillExchangeDetail.OnChangeTargetSkill
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bExists                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillExchangeDetail::OnChangeTargetSkill(bool bExists)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillExchangeDetail", "OnChangeTargetSkill");

	Params::TLUserWidgetSkillExchangeDetail_OnChangeTargetSkill Parms{};

	Parms.bExists = bExists;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetNumPad.HandleFocusTextInputChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetNumPad::HandleFocusTextInputChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNumPad", "HandleFocusTextInputChanged");

	Params::TLUserWidgetNumPad_HandleFocusTextInputChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetNumPad.HandleFocusTextInputCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetNumPad::HandleFocusTextInputCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetNumPad", "HandleFocusTextInputCommitted");

	Params::TLUserWidgetNumPad_HandleFocusTextInputCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOccupationDeclareBoard.ShowGuildOccupaction
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetOccupationDeclareBoard::ShowGuildOccupaction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationDeclareBoard", "ShowGuildOccupaction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOccupationDeclareBoard.UpdateOccupactionState
// (Event, Public, BlueprintEvent)
// Parameters:
// EOccupationState                        InOccupationState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationDeclareBoard::UpdateOccupactionState(EOccupationState InOccupationState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationDeclareBoard", "UpdateOccupactionState");

	Params::TLUserWidgetOccupationDeclareBoard_UpdateOccupactionState Parms{};

	Parms.InOccupationState = InOccupationState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpIngredient.HandleContinuousEnchantBtnChecked
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpIngredient::HandleContinuousEnchantBtnChecked(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpIngredient", "HandleContinuousEnchantBtnChecked");

	Params::TLUserWidgetSkillLevelUpIngredient_HandleContinuousEnchantBtnChecked Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillLevelUpIngredient.HandleUseButtonClick
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetSkillLevelUpIngredient::HandleUseButtonClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpIngredient", "HandleUseButtonClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillLevelUpIngredient.OnConsumeCountUpdateEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisibleItemCount                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpIngredient::OnConsumeCountUpdateEvent(bool bVisibleItemCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpIngredient", "OnConsumeCountUpdateEvent");

	Params::TLUserWidgetSkillLevelUpIngredient_OnConsumeCountUpdateEvent Parms{};

	Parms.bVisibleItemCount = bVisibleItemCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpIngredient.OnDimmed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InDimmed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpIngredient::OnDimmed(bool InDimmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpIngredient", "OnDimmed");

	Params::TLUserWidgetSkillLevelUpIngredient_OnDimmed Parms{};

	Parms.InDimmed = InDimmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpIngredient.OnItemSlotSelectEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSelect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpIngredient::OnItemSlotSelectEvent(bool bSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpIngredient", "OnItemSlotSelectEvent");

	Params::TLUserWidgetSkillLevelUpIngredient_OnItemSlotSelectEvent Parms{};

	Parms.bSelect = bSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpIngredient.OnPossibleExchaneable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPossible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpIngredient::OnPossibleExchaneable(bool bPossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpIngredient", "OnPossibleExchaneable");

	Params::TLUserWidgetSkillLevelUpIngredient_OnPossibleExchaneable Parms{};

	Parms.bPossible = bPossible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpIngredient.OnUpdateItemCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int64                                   ItemCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbSelect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbLock                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpIngredient::OnUpdateItemCount(int64 ItemCount, bool InbSelect, bool InbLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpIngredient", "OnUpdateItemCount");

	Params::TLUserWidgetSkillLevelUpIngredient_OnUpdateItemCount Parms{};

	Parms.ItemCount = ItemCount;
	Parms.InbSelect = InbSelect;
	Parms.InbLock = InbLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpIngredient.OnUpdateItemName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSlateColor                      InColor                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpIngredient::OnUpdateItemName(const class FText& InName, const struct FSlateColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpIngredient", "OnUpdateItemName");

	Params::TLUserWidgetSkillLevelUpIngredient_OnUpdateItemName Parms{};

	Parms.InName = std::move(InName);
	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpIngredient.OnUpdateItemSelect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbSelect                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpIngredient::OnUpdateItemSelect(bool InbSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpIngredient", "OnUpdateItemSelect");

	Params::TLUserWidgetSkillLevelUpIngredient_OnUpdateItemSelect Parms{};

	Parms.InbSelect = InbSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationGuideBossStoneGuildItem.OnGuildRelationByMe
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildRelationship                      InRelation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationGuideBossStoneGuildItem::OnGuildRelationByMe(EGuildRelationship InRelation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBossStoneGuildItem", "OnGuildRelationByMe");

	Params::TLUserWidgetOccupationGuideBossStoneGuildItem_OnGuildRelationByMe Parms{};

	Parms.InRelation = InRelation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationGuideBossStoneGuildItem.OnTopRankingGuild
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsTop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationGuideBossStoneGuildItem::OnTopRankingGuild(bool InIsTop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBossStoneGuildItem", "OnTopRankingGuild");

	Params::TLUserWidgetOccupationGuideBossStoneGuildItem_OnTopRankingGuild Parms{};

	Parms.InIsTop = InIsTop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationGuideBossStoneGuildItem.OnUpdatePointStep
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InPointStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationGuideBossStoneGuildItem::OnUpdatePointStep(int32 InPointStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideBossStoneGuildItem", "OnUpdatePointStep");

	Params::TLUserWidgetOccupationGuideBossStoneGuildItem_OnUpdatePointStep Parms{};

	Parms.InPointStep = InPointStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationGuideRegionStone.OnUpdateOccupationRegionStoneAssist
// (Event, Public, BlueprintEvent)

void UTLUserWidgetOccupationGuideRegionStone::OnUpdateOccupationRegionStoneAssist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideRegionStone", "OnUpdateOccupationRegionStoneAssist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetOccupationGuideRegionStone.OnUpdateOccupationRegionStoneKill
// (Event, Public, BlueprintEvent)

void UTLUserWidgetOccupationGuideRegionStone::OnUpdateOccupationRegionStoneKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideRegionStone", "OnUpdateOccupationRegionStoneKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetOccupationGuideRegionStone.OnUsurpingGuildRelation
// (Event, Public, BlueprintEvent)
// Parameters:
// EGuildRelationship                      InRelation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationGuideRegionStone::OnUsurpingGuildRelation(EGuildRelationship InRelation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideRegionStone", "OnUsurpingGuildRelation");

	Params::TLUserWidgetOccupationGuideRegionStone_OnUsurpingGuildRelation Parms{};

	Parms.InRelation = InRelation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationGuideRegionStone.UpdateState
// (Event, Public, BlueprintEvent)
// Parameters:
// EOccupationState                        InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationGuideRegionStone::UpdateState(EOccupationState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationGuideRegionStone", "UpdateState");

	Params::TLUserWidgetOccupationGuideRegionStone_UpdateState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationNotifyHud.OnShowOccupationNotify
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOccupationNotifyHud::OnShowOccupationNotify(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationNotifyHud", "OnShowOccupationNotify");

	Params::TLUserWidgetOccupationNotifyHud_OnShowOccupationNotify Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetOccupationNotifyHud.OnUpdateProgressBar
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetOccupationNotifyHud::OnUpdateProgressBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOccupationNotifyHud", "OnUpdateProgressBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillMasteryWeaponEffect.OnSetTooltipActivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bMainWeaponSet                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillMasteryWeaponEffect::OnSetTooltipActivated(bool bMainWeaponSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryWeaponEffect", "OnSetTooltipActivated");

	Params::TLUserWidgetSkillMasteryWeaponEffect_OnSetTooltipActivated Parms{};

	Parms.bMainWeaponSet = bMainWeaponSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAcquisitionInfoGuideButton.OnAcquisitionTypeUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLAcquisitionContentType               InAcquisitionType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetAcquisitionInfoGuideButton::OnAcquisitionTypeUpdate(ETLAcquisitionContentType InAcquisitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAcquisitionInfoGuideButton", "OnAcquisitionTypeUpdate");

	Params::TLUserWidgetAcquisitionInfoGuideButton_OnAcquisitionTypeUpdate Parms{};

	Parms.InAcquisitionType = InAcquisitionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetAcquisitionInfoGuideButton.OnDropAcquisitionType
// (Event, Public, BlueprintEvent)

void UTLUserWidgetAcquisitionInfoGuideButton::OnDropAcquisitionType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetAcquisitionInfoGuideButton", "OnDropAcquisitionType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetOptionGameValueBool.HandleButtonChecked
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGameValueBool::HandleButtonChecked(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueBool", "HandleButtonChecked");

	Params::TLUserWidgetOptionGameValueBool_HandleButtonChecked Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueBool.HandleButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueBool::HandleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueBool", "HandleButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueBool.HandleCheckStateChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGameValueBool::HandleCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueBool", "HandleCheckStateChanged");

	Params::TLUserWidgetOptionGameValueBool_HandleCheckStateChanged Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueColor.HandleColorButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueColor::HandleColorButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueColor", "HandleColorButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueColor.HandleGroupButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueColor::HandleGroupButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueColor", "HandleGroupButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueEnumSelector.HandleDecreaseButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueEnumSelector::HandleDecreaseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueEnumSelector", "HandleDecreaseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueEnumSelector.HandleIncreaseButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueEnumSelector::HandleIncreaseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueEnumSelector", "HandleIncreaseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueGamepadPreset.HandleDecreaseButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueGamepadPreset::HandleDecreaseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueGamepadPreset", "HandleDecreaseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueGamepadPreset.HandleIncreaseButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueGamepadPreset::HandleIncreaseButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueGamepadPreset", "HandleIncreaseButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueGroup.HandleButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueGroup::HandleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueGroup", "HandleButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueSection.HandleButtonClicked
// (Final, Native, Protected)

void UTLUserWidgetOptionGameValueSection::HandleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueSection", "HandleButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueString.HandleTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGameValueString::HandleTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueString", "HandleTextChanged");

	Params::TLUserWidgetOptionGameValueString_HandleTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueVector2D.OnInputTextChanged_X
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGameValueVector2D::OnInputTextChanged_X(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueVector2D", "OnInputTextChanged_X");

	Params::TLUserWidgetOptionGameValueVector2D_OnInputTextChanged_X Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetOptionGameValueVector2D.OnInputTextChanged_Y
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetOptionGameValueVector2D::OnInputTextChanged_Y(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetOptionGameValueVector2D", "OnInputTextChanged_Y");

	Params::TLUserWidgetOptionGameValueVector2D_OnInputTextChanged_Y Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetInputEventKeyEditGroup.HandleButtonChecked
// (Native, Protected)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetInputEventKeyEditGroup::HandleButtonChecked(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetInputEventKeyEditGroup", "HandleButtonChecked");

	Params::TLUserWidgetInputEventKeyEditGroup_HandleButtonChecked Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTimeTable.OnWidgetHide
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTimeTable::OnWidgetHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTable", "OnWidgetHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeTable.OnWidgetShow
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTimeTable::OnWidgetShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTable", "OnWidgetShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPartyAssistButton.HandleAliveChanged
// (Final, Native, Public)
// Parameters:
// bool                                    InIsAlive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLSetAliveSource                       InAliveSource                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyAssistButton::HandleAliveChanged(bool InIsAlive, ETLSetAliveSource InAliveSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyAssistButton", "HandleAliveChanged");

	Params::TLUserWidgetPartyAssistButton_HandleAliveChanged Parms{};

	Parms.InIsAlive = InIsAlive;
	Parms.InAliveSource = InAliveSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyAssistButton.HandleMasterMainTargetChanged
// (Final, Native, Public)
// Parameters:
// int32                                   InObjId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InWorldEnter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyAssistButton::HandleMasterMainTargetChanged(int32 InObjId, bool InWorldEnter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyAssistButton", "HandleMasterMainTargetChanged");

	Params::TLUserWidgetPartyAssistButton_HandleMasterMainTargetChanged Parms{};

	Parms.InObjId = InObjId;
	Parms.InWorldEnter = InWorldEnter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyAssistButton.HandleNameChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyAssistButton::HandleNameChanged(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyAssistButton", "HandleNameChanged");

	Params::TLUserWidgetPartyAssistButton_HandleNameChanged Parms{};

	Parms.InName = std::move(InName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyAssistButton.HandleUpdateActivateParty
// (Final, Native, Public)
// Parameters:
// bool                                    bInActivateParty                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InContentString                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyAssistButton::HandleUpdateActivateParty(bool bInActivateParty, const class FString& InContentString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyAssistButton", "HandleUpdateActivateParty");

	Params::TLUserWidgetPartyAssistButton_HandleUpdateActivateParty Parms{};

	Parms.bInActivateParty = bInActivateParty;
	Parms.InContentString = std::move(InContentString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyAssistButton.HandleUpdateNameColor
// (Final, Native, Public)

void UTLUserWidgetPartyAssistButton::HandleUpdateNameColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyAssistButton", "HandleUpdateNameColor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyAssistButton.OnAssistEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyAssistButton::OnAssistEffect(bool bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyAssistButton", "OnAssistEffect");

	Params::TLUserWidgetPartyAssistButton_OnAssistEffect Parms{};

	Parms.bStart = bStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyDungeon.OnUpdateMatchingState
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLPartyState                           InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyDungeon::OnUpdateMatchingState(ETLPartyState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyDungeon", "OnUpdateMatchingState");

	Params::TLUserWidgetPartyDungeon_OnUpdateMatchingState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyDungeon.OnUpdateOnboardingVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyDungeon::OnUpdateOnboardingVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyDungeon", "OnUpdateOnboardingVisible");

	Params::TLUserWidgetPartyDungeon_OnUpdateOnboardingVisible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyDungeon.IsFullParty
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetPartyDungeon::IsFullParty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyDungeon", "IsFullParty");

	Params::TLUserWidgetPartyDungeon_IsFullParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyDungeonDifficultySelectButton.OnUpdateDifficulty
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPartyDungeonDifficultySelectButton::OnUpdateDifficulty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyDungeonDifficultySelectButton", "OnUpdateDifficulty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTargetInfo.OnTargetChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InBoss                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHpBarType                              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetInfo::OnTargetChange(bool InBoss, EHpBarType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetInfo", "OnTargetChange");

	Params::TLUserWidgetTargetInfo_OnTargetChange Parms{};

	Parms.InBoss = InBoss;
	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyKickElectionConfirmPopup.HandleReasonTextInputChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyKickElectionConfirmPopup::HandleReasonTextInputChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyKickElectionConfirmPopup", "HandleReasonTextInputChanged");

	Params::TLUserWidgetPartyKickElectionConfirmPopup_HandleReasonTextInputChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyKickElectionConfirmPopup.HandleReasonTextInputCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyKickElectionConfirmPopup::HandleReasonTextInputCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyKickElectionConfirmPopup", "HandleReasonTextInputCommitted");

	Params::TLUserWidgetPartyKickElectionConfirmPopup_HandleReasonTextInputCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyKickElectionConfirmPopup.OnChangeUIPlatformImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLUIPlatform                           InPlatform                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyKickElectionConfirmPopup::OnChangeUIPlatformImpl(ETLUIPlatform InPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyKickElectionConfirmPopup", "OnChangeUIPlatformImpl");

	Params::TLUserWidgetPartyKickElectionConfirmPopup_OnChangeUIPlatformImpl Parms{};

	Parms.InPlatform = InPlatform;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMatchingConfirmPopup.OnUpdateWaitingState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWating                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMatchingConfirmPopup::OnUpdateWaitingState(bool bWating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingConfirmPopup", "OnUpdateWaitingState");

	Params::TLUserWidgetPartyMatchingConfirmPopup_OnUpdateWaitingState Parms{};

	Parms.bWating = bWating;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMatchingRoleSelector.OnClickUnableSelectButton
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPartyRole                              InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMatchingRoleSelector::OnClickUnableSelectButton(EPartyRole InRole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingRoleSelector", "OnClickUnableSelectButton");

	Params::TLUserWidgetPartyMatchingRoleSelector_OnClickUnableSelectButton Parms{};

	Parms.InRole = InRole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMatchingRoleSelector.SetSelectable
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPartyRole                              InRole                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelectable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMatchingRoleSelector::SetSelectable(EPartyRole InRole, bool bSelectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingRoleSelector", "SetSelectable");

	Params::TLUserWidgetPartyMatchingRoleSelector_SetSelectable Parms{};

	Parms.InRole = InRole;
	Parms.bSelectable = bSelectable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMatchingBadge.OnMatchingWaitingSelect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWait                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMatchingBadge::OnMatchingWaitingSelect(bool bWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMatchingBadge", "OnMatchingWaitingSelect");

	Params::TLUserWidgetPartyMatchingBadge_OnMatchingWaitingSelect Parms{};

	Parms.bWait = bWait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMember.OnUpdateAbyssMark
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMember::OnUpdateAbyssMark(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMember", "OnUpdateAbyssMark");

	Params::TLUserWidgetPartyMember_OnUpdateAbyssMark Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMember.OnUpdateMemberIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMember::OnUpdateMemberIndex(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMember", "OnUpdateMemberIndex");

	Params::TLUserWidgetPartyMember_OnUpdateMemberIndex Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.GetDungeonDifficultTypeText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UTLUserWidgetPartyMemberProfile::GetDungeonDifficultTypeText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "GetDungeonDifficultTypeText");

	Params::TLUserWidgetPartyMemberProfile_GetDungeonDifficultTypeText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnBoard
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InSet                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnBoard(bool InSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnBoard");

	Params::TLUserWidgetPartyMemberProfile_OnBoard Parms{};

	Parms.InSet = InSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnChangedAbnormalModifyGroup
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EModifyGroup                            InModifyGroup                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnChangedAbnormalModifyGroup(const EModifyGroup& InModifyGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnChangedAbnormalModifyGroup");

	Params::TLUserWidgetPartyMemberProfile_OnChangedAbnormalModifyGroup Parms{};

	Parms.InModifyGroup = InModifyGroup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnChangedHpAbnormalStatus
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EHpAbnormalStatus                       InStatus                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbIsMyPc                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnChangedHpAbnormalStatus(const EHpAbnormalStatus& InStatus, const bool InbIsMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnChangedHpAbnormalStatus");

	Params::TLUserWidgetPartyMemberProfile_OnChangedHpAbnormalStatus Parms{};

	Parms.InStatus = InStatus;
	Parms.InbIsMyPc = InbIsMyPc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnDead
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InDead                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnDead(bool InDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnDead");

	Params::TLUserWidgetPartyMemberProfile_OnDead Parms{};

	Parms.InDead = InDead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnLogout
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InLogout                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnLogout(bool InLogout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnLogout");

	Params::TLUserWidgetPartyMemberProfile_OnLogout Parms{};

	Parms.InLogout = InLogout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnOtherMap
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InSet                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnOtherMap(bool InSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnOtherMap");

	Params::TLUserWidgetPartyMemberProfile_OnOtherMap Parms{};

	Parms.InSet = InSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnUpdateBindObject
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInBindObject                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnUpdateBindObject(bool bInBindObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnUpdateBindObject");

	Params::TLUserWidgetPartyMemberProfile_OnUpdateBindObject Parms{};

	Parms.bInBindObject = bInBindObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnUpdateFixTarget
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsFixTargetIsMe                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnUpdateFixTarget(bool InIsFixTargetIsMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnUpdateFixTarget");

	Params::TLUserWidgetPartyMemberProfile_OnUpdateFixTarget Parms{};

	Parms.InIsFixTargetIsMe = InIsFixTargetIsMe;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnUpdateFriendlyTarget
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsFriendlyTargetIsMe                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnUpdateFriendlyTarget(bool InIsFriendlyTargetIsMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnUpdateFriendlyTarget");

	Params::TLUserWidgetPartyMemberProfile_OnUpdateFriendlyTarget Parms{};

	Parms.InIsFriendlyTargetIsMe = InIsFriendlyTargetIsMe;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnUpdateInterimTarget
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsInterimTargetIsMe                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnUpdateInterimTarget(bool InIsInterimTargetIsMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnUpdateInterimTarget");

	Params::TLUserWidgetPartyMemberProfile_OnUpdateInterimTarget Parms{};

	Parms.InIsInterimTargetIsMe = InIsInterimTargetIsMe;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnUpdateLogoutHoldingTime
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             RemainTimeText                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnUpdateLogoutHoldingTime(const class FText& RemainTimeText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnUpdateLogoutHoldingTime");

	Params::TLUserWidgetPartyMemberProfile_OnUpdateLogoutHoldingTime Parms{};

	Parms.RemainTimeText = std::move(RemainTimeText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnUpdateMemberIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnUpdateMemberIndex(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnUpdateMemberIndex");

	Params::TLUserWidgetPartyMemberProfile_OnUpdateMemberIndex Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.OnUpdateUseSkillMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInUseSkillMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberProfile::OnUpdateUseSkillMode(bool bInUseSkillMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "OnUpdateUseSkillMode");

	Params::TLUserWidgetPartyMemberProfile_OnUpdateUseSkillMode Parms{};

	Parms.bInUseSkillMode = bInUseSkillMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.PlayHpPercentStatusAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPartyMemberProfile::PlayHpPercentStatusAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "PlayHpPercentStatusAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPartyMemberProfile.StopHpPercentStatusAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPartyMemberProfile::StopHpPercentStatusAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberProfile", "StopHpPercentStatusAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.ActiveDraggableFX
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::ActiveDraggableFX(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "ActiveDraggableFX");

	Params::TLUserWidgetPartyMemberSimpleProfile_ActiveDraggableFX Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.ActiveDraggingFX
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::ActiveDraggingFX(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "ActiveDraggingFX");

	Params::TLUserWidgetPartyMemberSimpleProfile_ActiveDraggingFX Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.OnBoard
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InSet                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::OnBoard(bool InSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "OnBoard");

	Params::TLUserWidgetPartyMemberSimpleProfile_OnBoard Parms{};

	Parms.InSet = InSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.OnChangeDisplayOrder
// (Event, Public, BlueprintEvent)

void UTLUserWidgetPartyMemberSimpleProfile::OnChangeDisplayOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "OnChangeDisplayOrder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.OnDead
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InDead                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::OnDead(bool InDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "OnDead");

	Params::TLUserWidgetPartyMemberSimpleProfile_OnDead Parms{};

	Parms.InDead = InDead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.OnLogout
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InLogout                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::OnLogout(bool InLogout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "OnLogout");

	Params::TLUserWidgetPartyMemberSimpleProfile_OnLogout Parms{};

	Parms.InLogout = InLogout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.OnOtherMap
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InSet                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::OnOtherMap(bool InSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "OnOtherMap");

	Params::TLUserWidgetPartyMemberSimpleProfile_OnOtherMap Parms{};

	Parms.InSet = InSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.OnSetDraggableIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDraggable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::OnSetDraggableIcon(bool bDraggable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "OnSetDraggableIcon");

	Params::TLUserWidgetPartyMemberSimpleProfile_OnSetDraggableIcon Parms{};

	Parms.bDraggable = bDraggable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.OnShowDraggableIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::OnShowDraggableIcon(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "OnShowDraggableIcon");

	Params::TLUserWidgetPartyMemberSimpleProfile_OnShowDraggableIcon Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.OnUpdateBindObject
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInBindObject                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::OnUpdateBindObject(bool bInBindObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "OnUpdateBindObject");

	Params::TLUserWidgetPartyMemberSimpleProfile_OnUpdateBindObject Parms{};

	Parms.bInBindObject = bInBindObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.OnUpdateFixTarget
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsFixTargetIsMe                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::OnUpdateFixTarget(bool InIsFixTargetIsMe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "OnUpdateFixTarget");

	Params::TLUserWidgetPartyMemberSimpleProfile_OnUpdateFixTarget Parms{};

	Parms.InIsFixTargetIsMe = InIsFixTargetIsMe;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyMemberSimpleProfile.OnUpdateMemberIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyMemberSimpleProfile::OnUpdateMemberIndex(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyMemberSimpleProfile", "OnUpdateMemberIndex");

	Params::TLUserWidgetPartyMemberSimpleProfile_OnUpdateMemberIndex Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeAttackDungeonOtherWeaponRanking.OnHighlight
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTimeAttackDungeonOtherWeaponRanking::OnHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeAttackDungeonOtherWeaponRanking", "OnHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeAttackDungeonOtherWeaponRanking.OnInit
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTimeAttackDungeonOtherWeaponRanking::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeAttackDungeonOtherWeaponRanking", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPartyRecruitmentRegisterPopup.HandleCombatPowerEditableTextBoxChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentRegisterPopup::HandleCombatPowerEditableTextBoxChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentRegisterPopup", "HandleCombatPowerEditableTextBoxChanged");

	Params::TLUserWidgetPartyRecruitmentRegisterPopup_HandleCombatPowerEditableTextBoxChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyRecruitmentRegisterPopup.HandleCombatPowerEditableTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentRegisterPopup::HandleCombatPowerEditableTextBoxCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentRegisterPopup", "HandleCombatPowerEditableTextBoxCommitted");

	Params::TLUserWidgetPartyRecruitmentRegisterPopup_HandleCombatPowerEditableTextBoxCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyRecruitmentRegisterPopup.OnAvailableChallengeDungeonImpl
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAvailable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentRegisterPopup::OnAvailableChallengeDungeonImpl(bool bAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentRegisterPopup", "OnAvailableChallengeDungeonImpl");

	Params::TLUserWidgetPartyRecruitmentRegisterPopup_OnAvailableChallengeDungeonImpl Parms{};

	Parms.bAvailable = bAvailable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitmentRegisterPopup.OnChangeDungeonCategory
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLDungeonCategory                      InCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentRegisterPopup::OnChangeDungeonCategory(ETLDungeonCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentRegisterPopup", "OnChangeDungeonCategory");

	Params::TLUserWidgetPartyRecruitmentRegisterPopup_OnChangeDungeonCategory Parms{};

	Parms.InCategory = InCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitmentRegisterPopup.OnNoticeActivate
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bActivate                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentRegisterPopup::OnNoticeActivate(bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentRegisterPopup", "OnNoticeActivate");

	Params::TLUserWidgetPartyRecruitmentRegisterPopup_OnNoticeActivate Parms{};

	Parms.bActivate = bActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitmentRegisterPopup.OnTitleTextBoxChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentRegisterPopup::OnTitleTextBoxChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentRegisterPopup", "OnTitleTextBoxChanged");

	Params::TLUserWidgetPartyRecruitmentRegisterPopup_OnTitleTextBoxChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyRecruitmentRegisterPopup.OnTitleTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentRegisterPopup::OnTitleTextBoxCommitted(const class FText& InText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentRegisterPopup", "OnTitleTextBoxCommitted");

	Params::TLUserWidgetPartyRecruitmentRegisterPopup_OnTitleTextBoxCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPartyRecruitmentRegisterPopup.OnVisibleDifficultUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentRegisterPopup::OnVisibleDifficultUI(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentRegisterPopup", "OnVisibleDifficultUI");

	Params::TLUserWidgetPartyRecruitmentRegisterPopup_OnVisibleDifficultUI Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitmentRegisterPopup.OnVisibleLevelSelector
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPartyRecruitmentRegisterPopup::OnVisibleLevelSelector(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentRegisterPopup", "OnVisibleLevelSelector");

	Params::TLUserWidgetPartyRecruitmentRegisterPopup_OnVisibleLevelSelector Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPartyRecruitmentRegisterPopup.GetCurrentDungeonCategory
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETLDungeonCategory                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ETLDungeonCategory UTLUserWidgetPartyRecruitmentRegisterPopup::GetCurrentDungeonCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPartyRecruitmentRegisterPopup", "GetCurrentDungeonCategory");

	Params::TLUserWidgetPartyRecruitmentRegisterPopup_GetCurrentDungeonCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetPcRelationshipMemberSlot.OnConnectionStatusChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// ERelationConnectionState                InRelationConnectionState                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcRelationshipMemberSlot::OnConnectionStatusChange(ERelationConnectionState InRelationConnectionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcRelationshipMemberSlot", "OnConnectionStatusChange");

	Params::TLUserWidgetPcRelationshipMemberSlot_OnConnectionStatusChange Parms{};

	Parms.InRelationConnectionState = InRelationConnectionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPcRelationshipMemberSlot.OnUpdatePcRelationshipType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLPcRelationshipType                   InPcRelationshipType                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPcRelationshipMemberSlot::OnUpdatePcRelationshipType(ETLPcRelationshipType InPcRelationshipType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPcRelationshipMemberSlot", "OnUpdatePcRelationshipType");

	Params::TLUserWidgetPcRelationshipMemberSlot_OnUpdatePcRelationshipType Parms{};

	Parms.InPcRelationshipType = InPcRelationshipType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPhotoMode.OnTakePhoto
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPhotoMode::OnTakePhoto()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPhotoMode", "OnTakePhoto");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPhotoMode.OnTakePhotoAnimFinished
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetPhotoMode::OnTakePhotoAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPhotoMode", "OnTakePhotoAnimFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPhotoMode.OnUpdateInputMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPhotoModeInputMode                     Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPhotoMode::OnUpdateInputMode(EPhotoModeInputMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPhotoMode", "OnUpdateInputMode");

	Params::TLUserWidgetPhotoMode_OnUpdateInputMode Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorph.GetContextMenuWidget
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UTLUserWidgetPolymorph::GetContextMenuWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorph", "GetContextMenuWidget");

	Params::TLUserWidgetPolymorph_GetContextMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSkillEnchantSlot.OnSetSkillObject
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillEnchantSlot::OnSetSkillObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillEnchantSlot", "OnSetSkillObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPolymorphContentsPanel.OnTabButtonChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLPolymorphUIContentType               InContentType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphContentsPanel::OnTabButtonChanged(ETLPolymorphUIContentType InContentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphContentsPanel", "OnTabButtonChanged");

	Params::TLUserWidgetPolymorphContentsPanel_OnTabButtonChanged Parms{};

	Parms.InContentType = InContentType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphEntrySlot.OnSelectedPolymorph
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             PolymorphId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphEntrySlot::OnSelectedPolymorph(class FName PolymorphId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphEntrySlot", "OnSelectedPolymorph");

	Params::TLUserWidgetPolymorphEntrySlot_OnSelectedPolymorph Parms{};

	Parms.PolymorphId = PolymorphId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetPolymorphEntrySlot.OnUpdateEntryPolymorphInfo
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             PolymorphName                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   PolymorphLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphEntrySlot::OnUpdateEntryPolymorphInfo(const class FText& PolymorphName, int32 PolymorphLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphEntrySlot", "OnUpdateEntryPolymorphInfo");

	Params::TLUserWidgetPolymorphEntrySlot_OnUpdateEntryPolymorphInfo Parms{};

	Parms.PolymorphName = std::move(PolymorphName);
	Parms.PolymorphLevel = PolymorphLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphEntrySlot.SetType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETLPolymorphEntryType                   InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphEntrySlot::SetType(ETLPolymorphEntryType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphEntrySlot", "SetType");

	Params::TLUserWidgetPolymorphEntrySlot_SetType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTaxDeliveryFrame.UpdateReservationIime
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsShowWarningMsg                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTaxDeliveryFrame::UpdateReservationIime(bool IsShowWarningMsg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTaxDeliveryFrame", "UpdateReservationIime");

	Params::TLUserWidgetTaxDeliveryFrame_UpdateReservationIime Parms{};

	Parms.IsShowWarningMsg = IsShowWarningMsg;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphQuickSlot.OnCooldownEnd
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPolymorphQuickSlot::OnCooldownEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphQuickSlot", "OnCooldownEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPolymorphQuickSlot.OnEndCombatPolymorph
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPolymorphQuickSlot::OnEndCombatPolymorph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphQuickSlot", "OnEndCombatPolymorph");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPolymorphQuickSlot.OnKeyPressed
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPolymorphQuickSlot::OnKeyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphQuickSlot", "OnKeyPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPolymorphQuickSlot.OnKeyReleased
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPolymorphQuickSlot::OnKeyReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphQuickSlot", "OnKeyReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPolymorphQuickSlot.OnStartCombatPolymorph
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPolymorphQuickSlot::OnStartCombatPolymorph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphQuickSlot", "OnStartCombatPolymorph");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPolymorphQuickSlot.OnUpdateAutoUse
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInAutoUseMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPolymorphQuickSlot::OnUpdateAutoUse(bool bInAutoUseMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphQuickSlot", "OnUpdateAutoUse");

	Params::TLUserWidgetPolymorphQuickSlot_OnUpdateAutoUse Parms{};

	Parms.bInAutoUseMode = bInAutoUseMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPolymorphQuickSlot.OnUse
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPolymorphQuickSlot::OnUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPolymorphQuickSlot", "OnUse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPortraitLineListItem.OnAcquisitionTypeUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLAcquisitionContentType               InAcquisitionType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPortraitLineListItem::OnAcquisitionTypeUpdate(ETLAcquisitionContentType InAcquisitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPortraitLineListItem", "OnAcquisitionTypeUpdate");

	Params::TLUserWidgetPortraitLineListItem_OnAcquisitionTypeUpdate Parms{};

	Parms.InAcquisitionType = InAcquisitionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPost.OnReceiveComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInComplete                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPost::OnReceiveComplete(bool bInComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPost", "OnReceiveComplete");

	Params::TLUserWidgetPost_OnReceiveComplete Parms{};

	Parms.bInComplete = bInComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPurchaseGoodsTooltip.OnExistAccumulateMileage
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InIsExist                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetPurchaseGoodsTooltip::OnExistAccumulateMileage(bool InIsExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPurchaseGoodsTooltip", "OnExistAccumulateMileage");

	Params::TLUserWidgetPurchaseGoodsTooltip_OnExistAccumulateMileage Parms{};

	Parms.InIsExist = InIsExist;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetPvpDamageEffect.OnPlayPvpDamagedEffect
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetPvpDamageEffect::OnPlayPvpDamagedEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPvpDamageEffect", "OnPlayPvpDamagedEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetPVPHistory.HandleGetMyNowPvpScore
// (Final, Native, Public)

void UTLUserWidgetPVPHistory::HandleGetMyNowPvpScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetPVPHistory", "HandleGetMyNowPvpScore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillBookPanelMastery.OnMasteryHandleHovered
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetSkillBookPanelMastery::OnMasteryHandleHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookPanelMastery", "OnMasteryHandleHovered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillBookPanelMastery.OnUpdateMasteryLevelAndPoint
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsMaxLevel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    CanUpgrade                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookPanelMastery::OnUpdateMasteryLevelAndPoint(float InPercent, bool bInIsMaxLevel, bool CanUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookPanelMastery", "OnUpdateMasteryLevelAndPoint");

	Params::TLUserWidgetSkillBookPanelMastery_OnUpdateMasteryLevelAndPoint Parms{};

	Parms.InPercent = InPercent;
	Parms.bInIsMaxLevel = bInIsMaxLevel;
	Parms.CanUpgrade = CanUpgrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookPanelMastery.OnWeaponCategorySelected_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponCategory                         InWeaponCategory                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookPanelMastery::OnWeaponCategorySelected_BP(EWeaponCategory InWeaponCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookPanelMastery", "OnWeaponCategorySelected_BP");

	Params::TLUserWidgetSkillBookPanelMastery_OnWeaponCategorySelected_BP Parms{};

	Parms.InWeaponCategory = InWeaponCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRadialList.AddItemWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTLUserWidget*                    ItemWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRadialList::AddItemWidget(class UTLUserWidget* ItemWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRadialList", "AddItemWidget");

	Params::TLUserWidgetRadialList_AddItemWidget Parms{};

	Parms.ItemWidget = ItemWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRadialList.OnUpdateMenuItemAngle
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTLUserWidget*                    MenuItem                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAngle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRadialList::OnUpdateMenuItemAngle(class UTLUserWidget* MenuItem, float InAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRadialList", "OnUpdateMenuItemAngle");

	Params::TLUserWidgetRadialList_OnUpdateMenuItemAngle Parms{};

	Parms.MenuItem = MenuItem;
	Parms.InAngle = InAngle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRadialList.GetMenuItemByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidget*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserWidget* UTLUserWidgetRadialList::GetMenuItemByIndex(int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRadialList", "GetMenuItemByIndex");

	Params::TLUserWidgetRadialList_GetMenuItemByIndex Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetRadialList.GetMenuItemIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   AngleDegree                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetRadialList::GetMenuItemIndex(float AngleDegree) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRadialList", "GetMenuItemIndex");

	Params::TLUserWidgetRadialList_GetMenuItemIndex Parms{};

	Parms.AngleDegree = AngleDegree;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetRangeSelectorButton.OnStateUpdate
// (Event, Protected, BlueprintEvent)
// Parameters:
// ERangeSelectorButtonState               InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRangeSelectorButton::OnStateUpdate(ERangeSelectorButtonState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRangeSelectorButton", "OnStateUpdate");

	Params::TLUserWidgetRangeSelectorButton_OnStateUpdate Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetReport.HandleContentsInputChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetReport::HandleContentsInputChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetReport", "HandleContentsInputChanged");

	Params::TLUserWidgetReport_HandleContentsInputChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRestorationIcon.OnPlayRestorationFx
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetRestorationIcon::OnPlayRestorationFx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRestorationIcon", "OnPlayRestorationFx");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetRestorationIcon.OnUpdateRestorationType
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetRestorationIcon::OnUpdateRestorationType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRestorationIcon", "OnUpdateRestorationType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetRestorationSlot.OnHintRestorableFreeOrNot
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bFreeOrNot                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRestorationSlot::OnHintRestorableFreeOrNot(bool bFreeOrNot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRestorationSlot", "OnHintRestorableFreeOrNot");

	Params::TLUserWidgetRestorationSlot_OnHintRestorableFreeOrNot Parms{};

	Parms.bFreeOrNot = bFreeOrNot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRingMenu.OnChangedFocused
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bFocused                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRingMenu::OnChangedFocused(bool bFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRingMenu", "OnChangedFocused");

	Params::TLUserWidgetRingMenu_OnChangedFocused Parms{};

	Parms.bFocused = bFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRingMenu.OnMenuCancelEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetRingMenu::OnMenuCancelEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRingMenu", "OnMenuCancelEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetRingMenu.OnTransparentEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRingMenu::OnTransparentEvent(bool InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRingMenu", "OnTransparentEvent");

	Params::TLUserWidgetRingMenu_OnTransparentEvent Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRingMenuSlot.OnSetRingMenuCategory
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLRingMenuCategory                     InRingMenuCategory                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRingMenuSlot::OnSetRingMenuCategory(ETLRingMenuCategory InRingMenuCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRingMenuSlot", "OnSetRingMenuCategory");

	Params::TLUserWidgetRingMenuSlot_OnSetRingMenuCategory Parms{};

	Parms.InRingMenuCategory = InRingMenuCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRotationEvent.OnHideRewardInfo
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetRotationEvent::OnHideRewardInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRotationEvent", "OnHideRewardInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRotationEvent.OnShowRewardInfo
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetRotationEvent::OnShowRewardInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRotationEvent", "OnShowRewardInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRotationEvent.OnUpdateRotationEventState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLRotationEventStateType               InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRotationEvent::OnUpdateRotationEventState(ETLRotationEventStateType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRotationEvent", "OnUpdateRotationEventState");

	Params::TLUserWidgetRotationEvent_OnUpdateRotationEventState Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRotationEventBoard.HandleActionOpenRotationEventUI
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetRotationEventBoard::HandleActionOpenRotationEventUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRotationEventBoard", "HandleActionOpenRotationEventUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRotationEventBoard.HandleMinimizeButtonOnCheck
// (Final, Native, Public)
// Parameters:
// bool                                    bIsChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRotationEventBoard::HandleMinimizeButtonOnCheck(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRotationEventBoard", "HandleMinimizeButtonOnCheck");

	Params::TLUserWidgetRotationEventBoard_HandleMinimizeButtonOnCheck Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetRotationEventBoard.OnMinimizeEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bMinimize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRotationEventBoard::OnMinimizeEvent(bool bMinimize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRotationEventBoard", "OnMinimizeEvent");

	Params::TLUserWidgetRotationEventBoard_OnMinimizeEvent Parms{};

	Parms.bMinimize = bMinimize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRotationEventBoard.OnUpdateRotationEventState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLRotationEventStateType               InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRotationEventBoard::OnUpdateRotationEventState(ETLRotationEventStateType InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRotationEventBoard", "OnUpdateRotationEventState");

	Params::TLUserWidgetRotationEventBoard_OnUpdateRotationEventState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRotationEventInfo.OnRotationEventRankingType
// (Event, Public, BlueprintEvent)
// Parameters:
// ERotationEventRankingType               InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRotationEventInfo::OnRotationEventRankingType(ERotationEventRankingType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRotationEventInfo", "OnRotationEventRankingType");

	Params::TLUserWidgetRotationEventInfo_OnRotationEventRankingType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRuneFrame.OnSelectRune
// (Event, Public, BlueprintEvent)

void UTLUserWidgetRuneFrame::OnSelectRune()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneFrame", "OnSelectRune");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetRuneFrame.OnSelectSocket
// (Event, Public, BlueprintEvent)

void UTLUserWidgetRuneFrame::OnSelectSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneFrame", "OnSelectSocket");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSpinner.HandleOnValueChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetSpinner::HandleOnValueChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "HandleOnValueChanged");

	Params::TLUserWidgetSpinner_HandleOnValueChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.HandleOnValueCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpinner::HandleOnValueCommitted(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "HandleOnValueCommitted");

	Params::TLUserWidgetSpinner_HandleOnValueCommitted Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.HandleOnValueFocusLost
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetSpinner::HandleOnValueFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "HandleOnValueFocusLost");

	Params::TLUserWidgetSpinner_HandleOnValueFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.HandleOnValueFocusReceived
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetSpinner::HandleOnValueFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "HandleOnValueFocusReceived");

	Params::TLUserWidgetSpinner_HandleOnValueFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.SelectAllText
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetSpinner::SelectAllText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "SelectAllText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.SetIsReadOnly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InIsReadOnly                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpinner::SetIsReadOnly(bool InIsReadOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "SetIsReadOnly");

	Params::TLUserWidgetSpinner_SetIsReadOnly Parms{};

	Parms.InIsReadOnly = InIsReadOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.SetMaxValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpinner::SetMaxValue(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "SetMaxValue");

	Params::TLUserWidgetSpinner_SetMaxValue Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.SetMinMaxValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMinValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMaxValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpinner::SetMinMaxValue(int32 InMinValue, int32 InMaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "SetMinMaxValue");

	Params::TLUserWidgetSpinner_SetMinMaxValue Parms{};

	Parms.InMinValue = InMinValue;
	Parms.InMaxValue = InMaxValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.SetMinValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpinner::SetMinValue(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "SetMinValue");

	Params::TLUserWidgetSpinner_SetMinValue Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.SetUnitValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpinner::SetUnitValue(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "SetUnitValue");

	Params::TLUserWidgetSpinner_SetUnitValue Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBroadcastDelegate                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpinner::SetValue(int32 NewValue, bool bBroadcastDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "SetValue");

	Params::TLUserWidgetSpinner_SetValue Parms{};

	Parms.NewValue = NewValue;
	Parms.bBroadcastDelegate = bBroadcastDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpinner.GetIsReadOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetSpinner::GetIsReadOnly() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "GetIsReadOnly");

	Params::TLUserWidgetSpinner_GetIsReadOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSpinner.GetMaxValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetSpinner::GetMaxValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "GetMaxValue");

	Params::TLUserWidgetSpinner_GetMaxValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSpinner.GetMinValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetSpinner::GetMinValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "GetMinValue");

	Params::TLUserWidgetSpinner_GetMinValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSpinner.GetUnitValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetSpinner::GetUnitValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "GetUnitValue");

	Params::TLUserWidgetSpinner_GetUnitValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSpinner.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetSpinner::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpinner", "GetValue");

	Params::TLUserWidgetSpinner_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetRuneSynergyListSlot.OnActiveRuneSynergy
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemGrade                              InSynergyGrade                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRuneSynergyListSlot::OnActiveRuneSynergy(bool InIsActive, EItemGrade InSynergyGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRuneSynergyListSlot", "OnActiveRuneSynergy");

	Params::TLUserWidgetRuneSynergyListSlot_OnActiveRuneSynergy Parms{};

	Parms.InIsActive = InIsActive;
	Parms.InSynergyGrade = InSynergyGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSavedPlace.GetContextMenuWidget
// (Final, Native, Private)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UTLUserWidgetSavedPlace::GetContextMenuWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSavedPlace", "GetContextMenuWidget");

	Params::TLUserWidgetSavedPlace_GetContextMenuWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSavedPlace.OnCreated
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InUserInWorldmap                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSavedPlace::OnCreated(bool InUserInWorldmap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSavedPlace", "OnCreated");

	Params::TLUserWidgetSavedPlace_OnCreated Parms{};

	Parms.InUserInWorldmap = InUserInWorldmap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSeasonPass.OnUpdatePreviewSceneActor
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPass::OnUpdatePreviewSceneActor(bool IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPass", "OnUpdatePreviewSceneActor");

	Params::TLUserWidgetSeasonPass_OnUpdatePreviewSceneActor Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeAttackDungeonRanking.OnHighlight
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTimeAttackDungeonRanking::OnHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeAttackDungeonRanking", "OnHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeAttackDungeonRanking.OnInit
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTimeAttackDungeonRanking::OnInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeAttackDungeonRanking", "OnInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSeasonPassLevelList.HandleTicketBuyClicked
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetSeasonPassLevelList::HandleTicketBuyClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelList", "HandleTicketBuyClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSeasonPassLevelList.OnAllRewardEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSeasonPassLevelList::OnAllRewardEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelList", "OnAllRewardEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSeasonPassLevelList.OnGuidePointShop
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InHasPassTicket                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassLevelList::OnGuidePointShop(bool bInShow, bool InHasPassTicket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelList", "OnGuidePointShop");

	Params::TLUserWidgetSeasonPassLevelList_OnGuidePointShop Parms{};

	Parms.bInShow = bInShow;
	Parms.InHasPassTicket = InHasPassTicket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSeasonPassLevelList.OnMaxPassLevelEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSeasonPassLevelList::OnMaxPassLevelEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelList", "OnMaxPassLevelEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSeasonPassLevelList.OnPurchaseTicketEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSeasonPassLevelList::OnPurchaseTicketEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelList", "OnPurchaseTicketEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSeasonPassLevelList.OnUpdatePassPointEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbLevelUp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassLevelList::OnUpdatePassPointEvent(bool InbLevelUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelList", "OnUpdatePassPointEvent");

	Params::TLUserWidgetSeasonPassLevelList_OnUpdatePassPointEvent Parms{};

	Parms.InbLevelUp = InbLevelUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSeasonPassLevelList.OnUpdateStatusType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLSeasonPassStatusType                 Stauts                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassLevelList::OnUpdateStatusType(ETLSeasonPassStatusType Stauts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassLevelList", "OnUpdateStatusType");

	Params::TLUserWidgetSeasonPassLevelList_OnUpdateStatusType Parms{};

	Parms.Stauts = Stauts;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSeasonPassRewardList.HandleClickedClose
// (Final, Native, Public)

void UTLUserWidgetSeasonPassRewardList::HandleClickedClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassRewardList", "HandleClickedClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSeasonPassTaskListItem.OnEndReceivedPointAction
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetSeasonPassTaskListItem::OnEndReceivedPointAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassTaskListItem", "OnEndReceivedPointAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSeasonPassTaskListItem.OnPointRewardEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbCompleteStep                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSeasonPassTaskListItem::OnPointRewardEvent(bool InbCompleteStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSeasonPassTaskListItem", "OnPointRewardEvent");

	Params::TLUserWidgetSeasonPassTaskListItem_OnPointRewardEvent Parms{};

	Parms.InbCompleteStep = InbCompleteStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSelectableSlotInterface.OnConfirm
// (Event, Protected, BlueprintEvent)

void ITLUserWidgetSelectableSlotInterface::OnConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSelectableSlotInterface", "OnConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSelectableSlotInterface.OnPlaySelect
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InSelect                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ITLUserWidgetSelectableSlotInterface::OnPlaySelect(bool InSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSelectableSlotInterface", "OnPlaySelect");

	Params::TLUserWidgetSelectableSlotInterface_OnPlaySelect Parms{};

	Parms.InSelect = InSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetServerSelectFrame.OnToggleListExtension
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsToggle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetServerSelectFrame::OnToggleListExtension(bool IsToggle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetServerSelectFrame", "OnToggleListExtension");

	Params::TLUserWidgetServerSelectFrame_OnToggleListExtension Parms{};

	Parms.IsToggle = IsToggle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRealmListItem.IsAvaiableForNewCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UTLUserWidgetRealmListItem::IsAvaiableForNewCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRealmListItem", "IsAvaiableForNewCharacter");

	Params::TLUserWidgetRealmListItem_IsAvaiableForNewCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetRealmListItem.OnChangeServerInspection
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsInspection                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRealmListItem::OnChangeServerInspection(const bool InIsInspection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRealmListItem", "OnChangeServerInspection");

	Params::TLUserWidgetRealmListItem_OnChangeServerInspection Parms{};

	Parms.InIsInspection = InIsInspection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRealmListItem.OnInitialize
// (Event, Public, BlueprintEvent)

void UTLUserWidgetRealmListItem::OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRealmListItem", "OnInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetRealmListItem.OnUpdateDiplayNubmer
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InDisplayNumber                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRealmListItem::OnUpdateDiplayNubmer(const int32 InDisplayNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRealmListItem", "OnUpdateDiplayNubmer");

	Params::TLUserWidgetRealmListItem_OnUpdateDiplayNubmer Parms{};

	Parms.InDisplayNumber = InDisplayNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRealmListItem.OnUpdatePopulationStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// EServerPopulationStatus                 InStatus                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRealmListItem::OnUpdatePopulationStatus(const EServerPopulationStatus InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRealmListItem", "OnUpdatePopulationStatus");

	Params::TLUserWidgetRealmListItem_OnUpdatePopulationStatus Parms{};

	Parms.InStatus = InStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetRealmListItem.OnUpdateServerLatency
// (Event, Public, BlueprintEvent)
// Parameters:
// int64                                   InLatency                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetRealmListItem::OnUpdateServerLatency(const int64 InLatency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetRealmListItem", "OnUpdateServerLatency");

	Params::TLUserWidgetRealmListItem_OnUpdateServerLatency Parms{};

	Parms.InLatency = InLatency;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetShop.OnBatchSellSettingShow
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InShow                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetShop::OnBatchSellSettingShow(bool InShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShop", "OnBatchSellSettingShow");

	Params::TLUserWidgetShop_OnBatchSellSettingShow Parms{};

	Parms.InShow = InShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetShop.OnPurchaseMode
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetShop::OnPurchaseMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShop", "OnPurchaseMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetShop.OnSellMode
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetShop::OnSellMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShop", "OnSellMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetShop.SetMoneyTypes
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TSet<EMoneyType>                        MoneyTypes                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetShop::SetMoneyTypes(const TSet<EMoneyType>& MoneyTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShop", "SetMoneyTypes");

	Params::TLUserWidgetShop_SetMoneyTypes Parms{};

	Parms.MoneyTypes = std::move(MoneyTypes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetShop.SetShopOpenType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLShopOpenType                         InOpenType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetShop::SetShopOpenType(ETLShopOpenType InOpenType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShop", "SetShopOpenType");

	Params::TLUserWidgetShop_SetShopOpenType Parms{};

	Parms.InOpenType = InOpenType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillTraitSlot.OnClickTraitButtonSoundEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InActivate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillTraitSlot::OnClickTraitButtonSoundEvent(bool InActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitSlot", "OnClickTraitButtonSoundEvent");

	Params::TLUserWidgetSkillTraitSlot_OnClickTraitButtonSoundEvent Parms{};

	Parms.InActivate = InActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillTraitSlot.OnStartActivateTraitSlotAnim
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InActivate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillTraitSlot::OnStartActivateTraitSlotAnim(bool InActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitSlot", "OnStartActivateTraitSlotAnim");

	Params::TLUserWidgetSkillTraitSlot_OnStartActivateTraitSlotAnim Parms{};

	Parms.InActivate = InActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetShoppingBasket.OnPurchaseMode
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetShoppingBasket::OnPurchaseMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShoppingBasket", "OnPurchaseMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetShoppingBasket.OnSellMode
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetShoppingBasket::OnSellMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetShoppingBasket", "OnSellMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSiegeDistributionFrame.OnUpdateUnionLeaderEnable
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsMaster                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSiegeDistributionFrame::OnUpdateUnionLeaderEnable(bool IsMaster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeDistributionFrame", "OnUpdateUnionLeaderEnable");

	Params::TLUserWidgetSiegeDistributionFrame_OnUpdateUnionLeaderEnable Parms{};

	Parms.IsMaster = IsMaster;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSiegeDistributionWindow.OnUpdateGuildLeaderEnable
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsMaster                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSiegeDistributionWindow::OnUpdateGuildLeaderEnable(bool IsMaster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeDistributionWindow", "OnUpdateGuildLeaderEnable");

	Params::TLUserWidgetSiegeDistributionWindow_OnUpdateGuildLeaderEnable Parms{};

	Parms.IsMaster = IsMaster;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSiegeWarfareFailuree.SetCastleType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECastleType                             InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSiegeWarfareFailuree::SetCastleType(ECastleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSiegeWarfareFailuree", "SetCastleType");

	Params::TLUserWidgetSiegeWarfareFailuree_SetCastleType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillAcquireScreenMessage.OnEventAcquireSkillWeaponType
// (Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponCategory                         WeaponCategory1                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWeaponCategory                         WeaponCategory2                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillAcquireScreenMessage::OnEventAcquireSkillWeaponType(EWeaponCategory WeaponCategory1, EWeaponCategory WeaponCategory2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillAcquireScreenMessage", "OnEventAcquireSkillWeaponType");

	Params::TLUserWidgetSkillAcquireScreenMessage_OnEventAcquireSkillWeaponType Parms{};

	Parms.WeaponCategory1 = WeaponCategory1;
	Parms.WeaponCategory2 = WeaponCategory2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookSkillSlotContainer.OnSkillWrapBoxUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTLWrapBox*                       WrapBox                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookSkillSlotContainer::OnSkillWrapBoxUpdated(class UTLWrapBox* WrapBox, int32 SlotNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookSkillSlotContainer", "OnSkillWrapBoxUpdated");

	Params::TLUserWidgetSkillBookSkillSlotContainer_OnSkillWrapBoxUpdated Parms{};

	Parms.WrapBox = WrapBox;
	Parms.SlotNum = SlotNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBook.OnChangedWeaponSetCategory_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLSkillBookWeaponSetType               WeaponSetType1                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETLSkillBookWeaponSetType               WeaponSetType2                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBook::OnChangedWeaponSetCategory_BP(ETLSkillBookWeaponSetType WeaponSetType1, ETLSkillBookWeaponSetType WeaponSetType2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBook", "OnChangedWeaponSetCategory_BP");

	Params::TLUserWidgetSkillBook_OnChangedWeaponSetCategory_BP Parms{};

	Parms.WeaponSetType1 = WeaponSetType1;
	Parms.WeaponSetType2 = WeaponSetType2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBook.OnQuickSlotPresetChanged_BP
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillBook::OnQuickSlotPresetChanged_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBook", "OnQuickSlotPresetChanged_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillBook.OnQuickSlotSelected_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLSkillBookSelectedSkillSlotType       SkillSlotType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBook::OnQuickSlotSelected_BP(ETLSkillBookSelectedSkillSlotType SkillSlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBook", "OnQuickSlotSelected_BP");

	Params::TLUserWidgetSkillBook_OnQuickSlotSelected_BP Parms{};

	Parms.SkillSlotType = SkillSlotType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBook.OnSkillBookChangedWeaponCategory_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   WeaponSetIndex1                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WeaponSetIndex2                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBook::OnSkillBookChangedWeaponCategory_BP(int32 WeaponSetIndex1, int32 WeaponSetIndex2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBook", "OnSkillBookChangedWeaponCategory_BP");

	Params::TLUserWidgetSkillBook_OnSkillBookChangedWeaponCategory_BP Parms{};

	Parms.WeaponSetIndex1 = WeaponSetIndex1;
	Parms.WeaponSetIndex2 = WeaponSetIndex2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBook.OnSkillSlotSelected_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLSkillBookSelectedSkillSlotType       SkillSlotType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBook::OnSkillSlotSelected_BP(ETLSkillBookSelectedSkillSlotType SkillSlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBook", "OnSkillSlotSelected_BP");

	Params::TLUserWidgetSkillBook_OnSkillSlotSelected_BP Parms{};

	Parms.SkillSlotType = SkillSlotType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBook.OnUpdateMembershipActive_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLQuickSlotPresetState                 State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBook::OnUpdateMembershipActive_BP(ETLQuickSlotPresetState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBook", "OnUpdateMembershipActive_BP");

	Params::TLUserWidgetSkillBook_OnUpdateMembershipActive_BP Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBook.OnUpdateSelectedEditableObject
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLSkillBookSelectedSkillSlotType       SkillSlotType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBook::OnUpdateSelectedEditableObject(ETLSkillBookSelectedSkillSlotType SkillSlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBook", "OnUpdateSelectedEditableObject");

	Params::TLUserWidgetSkillBook_OnUpdateSelectedEditableObject Parms{};

	Parms.SkillSlotType = SkillSlotType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookPopUpWeaponType.OnSkillBookPopUpWeaponTypeWeaponCategorySelected_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponCategory                         InWeaponCategory                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WeaponSetIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookPopUpWeaponType::OnSkillBookPopUpWeaponTypeWeaponCategorySelected_BP(EWeaponCategory InWeaponCategory, int32 WeaponSetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookPopUpWeaponType", "OnSkillBookPopUpWeaponTypeWeaponCategorySelected_BP");

	Params::TLUserWidgetSkillBookPopUpWeaponType_OnSkillBookPopUpWeaponTypeWeaponCategorySelected_BP Parms{};

	Parms.InWeaponCategory = InWeaponCategory;
	Parms.WeaponSetIndex = WeaponSetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookPopUpWeaponType.PlayIndexAnimation
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookPopUpWeaponType::PlayIndexAnimation(int32 InIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookPopUpWeaponType", "PlayIndexAnimation");

	Params::TLUserWidgetSkillBookPopUpWeaponType_PlayIndexAnimation Parms{};

	Parms.InIndex = InIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookSlot.GetIgnoreUnUsable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetSkillBookSlot::GetIgnoreUnUsable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookSlot", "GetIgnoreUnUsable");

	Params::TLUserWidgetSkillBookSlot_GetIgnoreUnUsable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSkillBookSlot.OnChangeSkillLevel
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillBookSlot::OnChangeSkillLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookSlot", "OnChangeSkillLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillBookSlot.OnSetExchangeButtonActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookSlot::OnSetExchangeButtonActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookSlot", "OnSetExchangeButtonActive");

	Params::TLUserWidgetSkillBookSlot_OnSetExchangeButtonActive Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookSlot.OnSetExchangeButtonVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bVislble                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillBookSlot::OnSetExchangeButtonVisible(bool bVislble)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookSlot", "OnSetExchangeButtonVisible");

	Params::TLUserWidgetSkillBookSlot_OnSetExchangeButtonVisible Parms{};

	Parms.bVislble = bVislble;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillBookSlot.OnSetSkillObject
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSkillBookSlot::OnSetSkillObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillBookSlot", "OnSetSkillObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillEnchant.SetTitleBarShow
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillEnchant::SetTitleBarShow(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillEnchant", "SetTitleBarShow");

	Params::TLUserWidgetSkillEnchant_SetTitleBarShow Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillExchangeResult.FinishResultAnimation
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetSkillExchangeResult::FinishResultAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillExchangeResult", "FinishResultAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillExchangeResult.FinishResultEffect
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetSkillExchangeResult::FinishResultEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillExchangeResult", "FinishResultEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillExchangeResult.OnSkipResultEffect
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillExchangeResult::OnSkipResultEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillExchangeResult", "OnSkipResultEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillExchangeResult.OnStartResultEffect
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillExchangeResult::OnStartResultEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillExchangeResult", "OnStartResultEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillExchangeSlot.OnChangeSkillLevel
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillExchangeSlot::OnChangeSkillLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillExchangeSlot", "OnChangeSkillLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillExchangeSlot.OnSetIsCurrentSkill
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsCurrentSkill                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillExchangeSlot::OnSetIsCurrentSkill(bool bIsCurrentSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillExchangeSlot", "OnSetIsCurrentSkill");

	Params::TLUserWidgetSkillExchangeSlot_OnSetIsCurrentSkill Parms{};

	Parms.bIsCurrentSkill = bIsCurrentSkill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpResult.BPEventOnExcceedEnchant
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   ExcceedPercent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpResult::BPEventOnExcceedEnchant(int32 ExcceedPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpResult", "BPEventOnExcceedEnchant");

	Params::TLUserWidgetSkillLevelUpResult_BPEventOnExcceedEnchant Parms{};

	Parms.ExcceedPercent = ExcceedPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpResult.BPEventOnLevelUp
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillLevelUpResult::BPEventOnLevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpResult", "BPEventOnLevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillLevelUpResult.EventOnFinishProgressBar
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InSuccessAppliedIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpResult::EventOnFinishProgressBar(int32 InSuccessAppliedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpResult", "EventOnFinishProgressBar");

	Params::TLUserWidgetSkillLevelUpResult_EventOnFinishProgressBar Parms{};

	Parms.InSuccessAppliedIndex = InSuccessAppliedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpResult.EventOnIncreaseSuccessIndex
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   SuccessIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpResult::EventOnIncreaseSuccessIndex(int32 SuccessIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpResult", "EventOnIncreaseSuccessIndex");

	Params::TLUserWidgetSkillLevelUpResult_EventOnIncreaseSuccessIndex Parms{};

	Parms.SuccessIndex = SuccessIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpResult.EventOnStartProgressBar
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InSuccessAppliedIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpResult::EventOnStartProgressBar(int32 InSuccessAppliedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpResult", "EventOnStartProgressBar");

	Params::TLUserWidgetSkillLevelUpResult_EventOnStartProgressBar Parms{};

	Parms.InSuccessAppliedIndex = InSuccessAppliedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpResult.OnEnchantPointProgressBarAnimStop
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   InPercent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpResult::OnEnchantPointProgressBarAnimStop(float InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpResult", "OnEnchantPointProgressBarAnimStop");

	Params::TLUserWidgetSkillLevelUpResult_OnEnchantPointProgressBarAnimStop Parms{};

	Parms.InPercent = InPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpResult.OnSetResult
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InSuccessAppliedIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpResult::OnSetResult(int32 InSuccessAppliedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpResult", "OnSetResult");

	Params::TLUserWidgetSkillLevelUpResult_OnSetResult Parms{};

	Parms.InSuccessAppliedIndex = InSuccessAppliedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpResult.OnUpdateFailText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpResult::OnUpdateFailText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpResult", "OnUpdateFailText");

	Params::TLUserWidgetSkillLevelUpResult_OnUpdateFailText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillLevelUpResult.OnUpdateScreenMsg
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InSuccessAppliedIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbStopEnchant                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillLevelUpResult::OnUpdateScreenMsg(int32 InSuccessAppliedIndex, bool InbStopEnchant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillLevelUpResult", "OnUpdateScreenMsg");

	Params::TLUserWidgetSkillLevelUpResult_OnUpdateScreenMsg Parms{};

	Parms.InSuccessAppliedIndex = InSuccessAppliedIndex;
	Parms.InbStopEnchant = InbStopEnchant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillMasteryNode.OnConnectNode
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InTreeIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillMasteryNode::OnConnectNode(int32 InTreeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryNode", "OnConnectNode");

	Params::TLUserWidgetSkillMasteryNode_OnConnectNode Parms{};

	Parms.InTreeIndex = InTreeIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillMasteryNode.OnDisconnectNode
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InTreeIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillMasteryNode::OnDisconnectNode(int32 InTreeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryNode", "OnDisconnectNode");

	Params::TLUserWidgetSkillMasteryNode_OnDisconnectNode Parms{};

	Parms.InTreeIndex = InTreeIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillMasteryNode.OnResetNode
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillMasteryNode::OnResetNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryNode", "OnResetNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillMasteryNode.OnSetSelectCandidateMode
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillMasteryNode::OnSetSelectCandidateMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryNode", "OnSetSelectCandidateMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillMasteryNode.OnUpdateGuideText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bOpenable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillMasteryNode::OnUpdateGuideText(bool bOpenable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryNode", "OnUpdateGuideText");

	Params::TLUserWidgetSkillMasteryNode_OnUpdateGuideText Parms{};

	Parms.bOpenable = bOpenable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillMasteryNode.PlayOpenableNodeDecrease
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillMasteryNode::PlayOpenableNodeDecrease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillMasteryNode", "PlayOpenableNodeDecrease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillPresetRename.HandleInputTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillPresetRename::HandleInputTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillPresetRename", "HandleInputTextChanged");

	Params::TLUserWidgetSkillPresetRename_HandleInputTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillPresetRename.HandleInputTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillPresetRename::HandleInputTextCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillPresetRename", "HandleInputTextCommitted");

	Params::TLUserWidgetSkillPresetRename_HandleInputTextCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillPresetRename.HandleOnTextFocusLost
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillPresetRename::HandleOnTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillPresetRename", "HandleOnTextFocusLost");

	Params::TLUserWidgetSkillPresetRename_HandleOnTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSkillSetLevelUpTooltip.OnUpdateAcquirablePointText
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillSetLevelUpTooltip::OnUpdateAcquirablePointText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillSetLevelUpTooltip", "OnUpdateAcquirablePointText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillSetLevelUpTooltip.OnUpdateCurrentPointText
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillSetLevelUpTooltip::OnUpdateCurrentPointText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillSetLevelUpTooltip", "OnUpdateCurrentPointText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillSetLevelUpTooltip.OnUpdateRequiredPointText
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillSetLevelUpTooltip::OnUpdateRequiredPointText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillSetLevelUpTooltip", "OnUpdateRequiredPointText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillTrait.OnQuickSlotPresetChanged_BP
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillTrait::OnQuickSlotPresetChanged_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTrait", "OnQuickSlotPresetChanged_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillTrait.OnUpdateMembershipActive_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLQuickSlotPresetState                 State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillTrait::OnUpdateMembershipActive_BP(ETLQuickSlotPresetState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTrait", "OnUpdateMembershipActive_BP");

	Params::TLUserWidgetSkillTrait_OnUpdateMembershipActive_BP Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillTraitDetailPanel.OnReArrangeDetailPanel
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TraitNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSkillTraitDetailPanel::OnReArrangeDetailPanel(int32 TraitNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitDetailPanel", "OnReArrangeDetailPanel");

	Params::TLUserWidgetSkillTraitDetailPanel_OnReArrangeDetailPanel Parms{};

	Parms.TraitNum = TraitNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSkillTraitDetailPanel.OnStartUpdateSkillDetailPanelAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillTraitDetailPanel::OnStartUpdateSkillDetailPanelAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitDetailPanel", "OnStartUpdateSkillDetailPanelAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillTraitListContainer.OnStartPresetSelectedAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillTraitListContainer::OnStartPresetSelectedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitListContainer", "OnStartPresetSelectedAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillTraitListContainer.OnStartWeaponCategorySelectedAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillTraitListContainer::OnStartWeaponCategorySelectedAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitListContainer", "OnStartWeaponCategorySelectedAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillTraitListSlot.OnClickSkillTraitListSlotSoundEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillTraitListSlot::OnClickSkillTraitListSlotSoundEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitListSlot", "OnClickSkillTraitListSlotSoundEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillTraitListSlot.OnStartChangePresetAnimEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillTraitListSlot::OnStartChangePresetAnimEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitListSlot", "OnStartChangePresetAnimEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSkillTraitListSlot.OnStartUpdateSkillTraitSkillSlotAnim
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetSkillTraitListSlot::OnStartUpdateSkillTraitSkillSlotAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSkillTraitListSlot", "OnStartUpdateSkillTraitSkillSlotAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSlider2D.HandleMouseCaptureBegin
// (Final, Native, Protected)

void UTLUserWidgetSlider2D::HandleMouseCaptureBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlider2D", "HandleMouseCaptureBegin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSlider2D.HandleMouseCaptureEnd
// (Final, Native, Protected)

void UTLUserWidgetSlider2D::HandleMouseCaptureEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlider2D", "HandleMouseCaptureEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSlider2D.HandleValueChanged
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct FVector2D                        InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSlider2D::HandleValueChanged(const struct FVector2D& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlider2D", "HandleValueChanged");

	Params::TLUserWidgetSlider2D_HandleValueChanged Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSlider2D.SetValue
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSlider2D::SetValue(const struct FVector2D& InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlider2D", "SetValue");

	Params::TLUserWidgetSlider2D_SetValue Parms{};

	Parms.InValue = std::move(InValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSlider2D.GetValue
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UTLUserWidgetSlider2D::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSlider2D", "GetValue");

	Params::TLUserWidgetSlider2D_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetSocialMotionSlotGroup.OnListUpdated
// (Final, Native, Public)

void UTLUserWidgetSocialMotionSlotGroup::OnListUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSocialMotionSlotGroup", "OnListUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSocialMotionSlotGroup.OnNotificationOff
// (Final, Native, Public)
// Parameters:
// class FName                             InMotionID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSocialMotionSlotGroup::OnNotificationOff(class FName InMotionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSocialMotionSlotGroup", "OnNotificationOff");

	Params::TLUserWidgetSocialMotionSlotGroup_OnNotificationOff Parms{};

	Parms.InMotionID = InMotionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSocialMotionSlotGroup.OnSocialMotionSlotSelected
// (Final, Native, Public)
// Parameters:
// class FName                             InID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSocialMotionSlotGroup::OnSocialMotionSlotSelected(class FName InID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSocialMotionSlotGroup", "OnSocialMotionSlotSelected");

	Params::TLUserWidgetSocialMotionSlotGroup_OnSocialMotionSlotSelected Parms{};

	Parms.InID = InID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnActiveAccountBenefit
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsSlot::OnActiveAccountBenefit(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnActiveAccountBenefit");

	Params::TLUserWidgetSpecialShopGoodsSlot_OnActiveAccountBenefit Parms{};

	Parms.InIsActive = InIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnActiveMembership
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsSlot::OnActiveMembership(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnActiveMembership");

	Params::TLUserWidgetSpecialShopGoodsSlot_OnActiveMembership Parms{};

	Parms.InIsActive = InIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnDiscountGoods
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLPurchaseDiscountType                 InDiscountType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsShowDiscount                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsSlot::OnDiscountGoods(ETLPurchaseDiscountType InDiscountType, bool InIsShowDiscount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnDiscountGoods");

	Params::TLUserWidgetSpecialShopGoodsSlot_OnDiscountGoods Parms{};

	Parms.InDiscountType = InDiscountType;
	Parms.InIsShowDiscount = InIsShowDiscount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnEndSale
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsEndSales                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsSlot::OnEndSale(bool InIsEndSales)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnEndSale");

	Params::TLUserWidgetSpecialShopGoodsSlot_OnEndSale Parms{};

	Parms.InIsEndSales = InIsEndSales;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnExistAccumulateMileage
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsExist                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsSlot::OnExistAccumulateMileage(bool InIsExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnExistAccumulateMileage");

	Params::TLUserWidgetSpecialShopGoodsSlot_OnExistAccumulateMileage Parms{};

	Parms.InIsExist = InIsExist;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnExistDisplayGoodsInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsExistGoodsInfo                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsSlot::OnExistDisplayGoodsInfo(bool InIsExistGoodsInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnExistDisplayGoodsInfo");

	Params::TLUserWidgetSpecialShopGoodsSlot_OnExistDisplayGoodsInfo Parms{};

	Parms.InIsExistGoodsInfo = InIsExistGoodsInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnGoodsCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsNotSales                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsExistConditionText                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsSlot::OnGoodsCondition(bool InIsNotSales, bool IsExistConditionText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnGoodsCondition");

	Params::TLUserWidgetSpecialShopGoodsSlot_OnGoodsCondition Parms{};

	Parms.InIsNotSales = InIsNotSales;
	Parms.IsExistConditionText = IsExistConditionText;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnGoodsState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsNew                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsEvent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsBest                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsSlot::OnGoodsState(bool InIsNew, bool InIsEvent, bool InIsBest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnGoodsState");

	Params::TLUserWidgetSpecialShopGoodsSlot_OnGoodsState Parms{};

	Parms.InIsNew = InIsNew;
	Parms.InIsEvent = InIsEvent;
	Parms.InIsBest = InIsBest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnLinkGoods
// (Event, Public, BlueprintEvent)

void UTLUserWidgetSpecialShopGoodsSlot::OnLinkGoods()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnLinkGoods");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnShowEffectiveTime
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsSlot::OnShowEffectiveTime(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnShowEffectiveTime");

	Params::TLUserWidgetSpecialShopGoodsSlot_OnShowEffectiveTime Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSpecialShopGoodsSlot.OnShowTimeLimit
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsShow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSpecialShopGoodsSlot::OnShowTimeLimit(bool InIsShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSpecialShopGoodsSlot", "OnShowTimeLimit");

	Params::TLUserWidgetSpecialShopGoodsSlot_OnShowTimeLimit Parms{};

	Parms.InIsShow = InIsShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterStatPanel.OnHovered
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCharacterStatPanel::OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterStatPanel", "OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterStatPanel.OnUnhovered
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetCharacterStatPanel::OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterStatPanel", "OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterStatPanel.OnUpdateHandCategoryNone
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCharacterStatPanel::OnUpdateHandCategoryNone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterStatPanel", "OnUpdateHandCategoryNone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterStatPanel.OnUpdateMainHandCategory
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCharacterStatPanel::OnUpdateMainHandCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterStatPanel", "OnUpdateMainHandCategory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterStatPanel.OnUpdateName
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterStatPanel::OnUpdateName(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterStatPanel", "OnUpdateName");

	Params::TLUserWidgetCharacterStatPanel_OnUpdateName Parms{};

	Parms.InName = std::move(InName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterStatPanel.OnUpdateOffHandCategory
// (Event, Public, BlueprintEvent)

void UTLUserWidgetCharacterStatPanel::OnUpdateOffHandCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterStatPanel", "OnUpdateOffHandCategory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetCharacterStatPanel.OnUpdatePreviewStat
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterStatPanel::OnUpdatePreviewStat(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterStatPanel", "OnUpdatePreviewStat");

	Params::TLUserWidgetCharacterStatPanel_OnUpdatePreviewStat Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetCharacterStatPanel.OnUpdateValueText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetCharacterStatPanel::OnUpdateValueText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetCharacterStatPanel", "OnUpdateValueText");

	Params::TLUserWidgetCharacterStatPanel_OnUpdateValueText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatDetailPopup.OnUpdateName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InName                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetStatDetailPopup::OnUpdateName(const class FText& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatDetailPopup", "OnUpdateName");

	Params::TLUserWidgetStatDetailPopup_OnUpdateName Parms{};

	Parms.InName = std::move(InName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatDetailPopup.OnUpdateStatIcon
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTLUserWidgetStatEdit*            InStatEditWidget                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStatDetailPopup::OnUpdateStatIcon(class UTLUserWidgetStatEdit* InStatEditWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatDetailPopup", "OnUpdateStatIcon");

	Params::TLUserWidgetStatDetailPopup_OnUpdateStatIcon Parms{};

	Parms.InStatEditWidget = InStatEditWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatDetailPopup.OnUpdateStatInfo
// (Event, Public, BlueprintEvent)

void UTLUserWidgetStatDetailPopup::OnUpdateStatInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatDetailPopup", "OnUpdateStatInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStatEdit.OnActivated
// (Event, Public, BlueprintEvent)

void UTLUserWidgetStatEdit::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatEdit", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStatEdit.OnCloseTooltip
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetStatEdit::OnCloseTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatEdit", "OnCloseTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStatEdit.OnDeactivated
// (Event, Public, BlueprintEvent)

void UTLUserWidgetStatEdit::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatEdit", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStatEdit.OnSettingPadEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsConsole                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStatEdit::OnSettingPadEvent(bool IsConsole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatEdit", "OnSettingPadEvent");

	Params::TLUserWidgetStatEdit_OnSettingPadEvent Parms{};

	Parms.IsConsole = IsConsole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatEdit.OnStatEditHover
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetStatEdit::OnStatEditHover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatEdit", "OnStatEditHover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStatEdit.OnStatEditUnhover
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetStatEdit::OnStatEditUnhover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatEdit", "OnStatEditUnhover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStatEdit.OnUpdatePoint
// (Event, Public, BlueprintEvent)

void UTLUserWidgetStatEdit::OnUpdatePoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatEdit", "OnUpdatePoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStatEdit.GetSumPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UTLUserWidgetStatEdit::GetSumPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatEdit", "GetSumPoint");

	Params::TLUserWidgetStatEdit_GetSumPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetStaticMapIconStronghold.OnUpdateHp
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   InHpPercent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStaticMapIconStronghold::OnUpdateHp(float InHpPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStaticMapIconStronghold", "OnUpdateHp");

	Params::TLUserWidgetStaticMapIconStronghold_OnUpdateHp Parms{};

	Parms.InHpPercent = InHpPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatTooltip.OnUpdateAttackWhenBothZero
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetStatTooltip::OnUpdateAttackWhenBothZero()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatTooltip", "OnUpdateAttackWhenBothZero");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStatTooltip.OnUpdateBasicStat
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetStatTooltip::OnUpdateBasicStat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatTooltip", "OnUpdateBasicStat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStatTooltip.OnUpdateBonusStat
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetStatTooltip::OnUpdateBonusStat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatTooltip", "OnUpdateBonusStat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStatTooltip.OnUpdateMaxAttack
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InTotal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPrime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InBuff                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCollection                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStatTooltip::OnUpdateMaxAttack(int32 InTotal, int32 InPrime, int32 InItem, int32 InBuff, int32 InCollection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatTooltip", "OnUpdateMaxAttack");

	Params::TLUserWidgetStatTooltip_OnUpdateMaxAttack Parms{};

	Parms.InTotal = InTotal;
	Parms.InPrime = InPrime;
	Parms.InItem = InItem;
	Parms.InBuff = InBuff;
	Parms.InCollection = InCollection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatTooltip.OnUpdateMaxAttackWhenBaseZero
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InTotal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPrime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStatTooltip::OnUpdateMaxAttackWhenBaseZero(int32 InTotal, int32 InPrime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatTooltip", "OnUpdateMaxAttackWhenBaseZero");

	Params::TLUserWidgetStatTooltip_OnUpdateMaxAttackWhenBaseZero Parms{};

	Parms.InTotal = InTotal;
	Parms.InPrime = InPrime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatTooltip.OnUpdateMinAttack
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InTotal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPrime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InBuff                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCollection                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStatTooltip::OnUpdateMinAttack(int32 InTotal, int32 InPrime, int32 InItem, int32 InBuff, int32 InCollection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatTooltip", "OnUpdateMinAttack");

	Params::TLUserWidgetStatTooltip_OnUpdateMinAttack Parms{};

	Parms.InTotal = InTotal;
	Parms.InPrime = InPrime;
	Parms.InItem = InItem;
	Parms.InBuff = InBuff;
	Parms.InCollection = InCollection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatTooltip.OnUpdateMinAttackWhenBonusZero
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InTotal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStatTooltip::OnUpdateMinAttackWhenBonusZero(int32 InTotal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatTooltip", "OnUpdateMinAttackWhenBonusZero");

	Params::TLUserWidgetStatTooltip_OnUpdateMinAttackWhenBonusZero Parms{};

	Parms.InTotal = InTotal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatTooltip.OnUpdateNonAttackStat
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   InTotal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPrime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InBuff                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InCollection                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStatTooltip::OnUpdateNonAttackStat(float InTotal, float InPrime, float InItem, float InBuff, float InCollection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatTooltip", "OnUpdateNonAttackStat");

	Params::TLUserWidgetStatTooltip_OnUpdateNonAttackStat Parms{};

	Parms.InTotal = InTotal;
	Parms.InPrime = InPrime;
	Parms.InItem = InItem;
	Parms.InBuff = InBuff;
	Parms.InCollection = InCollection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStatTooltip.OnUpdateSecondaryStat
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetStatTooltip::OnUpdateSecondaryStat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStatTooltip", "OnUpdateSecondaryStat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStorage.OnExtendStorageRank
// (Event, Public, BlueprintEvent)

void UTLUserWidgetStorage::OnExtendStorageRank()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStorage", "OnExtendStorageRank");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetStorage.OnUpdateExtendButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCanExtend                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStorage::OnUpdateExtendButton(bool bCanExtend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStorage", "OnUpdateExtendButton");

	Params::TLUserWidgetStorage_OnUpdateExtendButton Parms{};

	Parms.bCanExtend = bCanExtend;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetStorage.OnUpdateHasNextRank
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHasNextRank                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetStorage::OnUpdateHasNextRank(bool bHasNextRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetStorage", "OnUpdateHasNextRank");

	Params::TLUserWidgetStorage_OnUpdateHasNextRank Parms{};

	Parms.bHasNextRank = bHasNextRank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetSubButton.OnOpenSubButton
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetSubButton::OnOpenSubButton(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetSubButton", "OnOpenSubButton");

	Params::TLUserWidgetSubButton_OnOpenSubButton Parms{};

	Parms.InIsOpen = InIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetGauge.HandleGuageHideAnimationPostOperation
// (Final, Native, Protected)

void UTLUserWidgetGauge::HandleGuageHideAnimationPostOperation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetGauge", "HandleGuageHideAnimationPostOperation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTargetInfoBase.OnChangedUIAbnormalStatus
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EHpAbnormalStatus                       InStatus                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetInfoBase::OnChangedUIAbnormalStatus(const EHpAbnormalStatus& InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetInfoBase", "OnChangedUIAbnormalStatus");

	Params::TLUserWidgetTargetInfoBase_OnChangedUIAbnormalStatus Parms{};

	Parms.InStatus = InStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetInfoBase.OnShowFocusTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetInfoBase::OnShowFocusTarget(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetInfoBase", "OnShowFocusTarget");

	Params::TLUserWidgetTargetInfoBase_OnShowFocusTarget Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetInfoBase.OnUpdateOverridedNpcColor
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InOverridedColor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetInfoBase::OnUpdateOverridedNpcColor(const struct FLinearColor& InOverridedColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetInfoBase", "OnUpdateOverridedNpcColor");

	Params::TLUserWidgetTargetInfoBase_OnUpdateOverridedNpcColor Parms{};

	Parms.InOverridedColor = std::move(InOverridedColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetInfoBase.OnUpdateOverridedRelationColor
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     InOverridedColor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetInfoBase::OnUpdateOverridedRelationColor(const struct FLinearColor& InOverridedColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetInfoBase", "OnUpdateOverridedRelationColor");

	Params::TLUserWidgetTargetInfoBase_OnUpdateOverridedRelationColor Parms{};

	Parms.InOverridedColor = std::move(InOverridedColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetInfoBase.OnUpdateRelationToMyPc
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLRelationColorToMyPc                  InTLRelationColorToMyPc                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetInfoBase::OnUpdateRelationToMyPc(ETLRelationColorToMyPc InTLRelationColorToMyPc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetInfoBase", "OnUpdateRelationToMyPc");

	Params::TLUserWidgetTargetInfoBase_OnUpdateRelationToMyPc Parms{};

	Parms.InTLRelationColorToMyPc = InTLRelationColorToMyPc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetInfoBase.OnUpdateWeaponImage
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetInfoBase::OnUpdateWeaponImage(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetInfoBase", "OnUpdateWeaponImage");

	Params::TLUserWidgetTargetInfoBase_OnUpdateWeaponImage Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetInfoBase.PlayHpStatusAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTargetInfoBase::PlayHpStatusAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetInfoBase", "PlayHpStatusAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTargetInfoBase.StopHpStatusAnim
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTargetInfoBase::StopHpStatusAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetInfoBase", "StopHpStatusAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTargetPriority.OnSelectedButtonEvent
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTargetPriority::OnSelectedButtonEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetPriority", "OnSelectedButtonEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTargetScan.OnChangeExtendsScanList
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bExtends                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScan::OnChangeExtendsScanList(bool bExtends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScan", "OnChangeExtendsScanList");

	Params::TLUserWidgetTargetScan_OnChangeExtendsScanList Parms{};

	Parms.bExtends = bExtends;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScan.OnRefreshTargetList
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTargetScan::OnRefreshTargetList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScan", "OnRefreshTargetList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTargetScan.OnTargetScanAutoTimer
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   InTimerIntervalSec                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScan::OnTargetScanAutoTimer(float InTimerIntervalSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScan", "OnTargetScanAutoTimer");

	Params::TLUserWidgetTargetScan_OnTargetScanAutoTimer Parms{};

	Parms.InTimerIntervalSec = InTimerIntervalSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScan.OnToggleUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InOn                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScan::OnToggleUI(const bool InOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScan", "OnToggleUI");

	Params::TLUserWidgetTargetScan_OnToggleUI Parms{};

	Parms.InOn = InOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScanItem.OnChangedAbnormalModifyGroup
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EModifyGroup                            OutAbnormalModifyGroup                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScanItem::OnChangedAbnormalModifyGroup(const EModifyGroup& OutAbnormalModifyGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanItem", "OnChangedAbnormalModifyGroup");

	Params::TLUserWidgetTargetScanItem_OnChangedAbnormalModifyGroup Parms{};

	Parms.OutAbnormalModifyGroup = OutAbnormalModifyGroup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScanItem.OnFixTargetChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InFixTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScanItem::OnFixTargetChanged(bool InFixTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanItem", "OnFixTargetChanged");

	Params::TLUserWidgetTargetScanItem_OnFixTargetChanged Parms{};

	Parms.InFixTarget = InFixTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScanItem.OnInitItem
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UTLUserWidgetTargetScanItem::OnInitItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanItem", "OnInitItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTargetScanItem.OnInterimTargetChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InterimTarget                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScanItem::OnInterimTargetChanged(bool InterimTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanItem", "OnInterimTargetChanged");

	Params::TLUserWidgetTargetScanItem_OnInterimTargetChanged Parms{};

	Parms.InterimTarget = InterimTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScanItem.OnMyPcDamaged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFloaterCategory                        InDamageType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScanItem::OnMyPcDamaged(const EFloaterCategory InDamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanItem", "OnMyPcDamaged");

	Params::TLUserWidgetTargetScanItem_OnMyPcDamaged Parms{};

	Parms.InDamageType = InDamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScanItem.OnSetFriendlyTarget
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InFriendly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScanItem::OnSetFriendlyTarget(bool InFriendly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanItem", "OnSetFriendlyTarget");

	Params::TLUserWidgetTargetScanItem_OnSetFriendlyTarget Parms{};

	Parms.InFriendly = InFriendly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScanItem.OnUpdateUseSkillMode
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInUseSkillMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScanItem::OnUpdateUseSkillMode(bool bInUseSkillMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanItem", "OnUpdateUseSkillMode");

	Params::TLUserWidgetTargetScanItem_OnUpdateUseSkillMode Parms{};

	Parms.bInUseSkillMode = bInUseSkillMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScanItem.SetVisibleGuildEmblem
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTargetScanItem::SetVisibleGuildEmblem(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanItem", "SetVisibleGuildEmblem");

	Params::TLUserWidgetTargetScanItem_SetVisibleGuildEmblem Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTargetScanSetting.SetDirty
// (Final, Native, Protected, BlueprintCallable)

void UTLUserWidgetTargetScanSetting::SetDirty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTargetScanSetting", "SetDirty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTaxDeliveryGuide.OnEndShowAnimation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTaxDeliveryGuide::OnEndShowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTaxDeliveryGuide", "OnEndShowAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTaxDeliveryGuide.OnUpdateTaxDeliveryState
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLTaxDeliveryState                     InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTaxDeliveryGuide::OnUpdateTaxDeliveryState(ETLTaxDeliveryState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTaxDeliveryGuide", "OnUpdateTaxDeliveryState");

	Params::TLUserWidgetTaxDeliveryGuide_OnUpdateTaxDeliveryState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTaxDeliveryGuide.OpenHelp
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetTaxDeliveryGuide::OpenHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTaxDeliveryGuide", "OpenHelp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTaxDeliveryGuide.PlayWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTaxDeliveryGuide::PlayWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTaxDeliveryGuide", "PlayWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTaxDeliveryGuide.StopWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTaxDeliveryGuide::StopWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTaxDeliveryGuide", "StopWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTaxDeliveryResult.OnUpdateAccumulateRewardItem
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InRewardCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTaxDeliveryResult::OnUpdateAccumulateRewardItem(int32 InRewardCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTaxDeliveryResult", "OnUpdateAccumulateRewardItem");

	Params::TLUserWidgetTaxDeliveryResult_OnUpdateAccumulateRewardItem Parms{};

	Parms.InRewardCount = InRewardCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTaxDeliveryResult.OnUpdateRewardItem
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   InRewardCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTaxDeliveryResult::OnUpdateRewardItem(int32 InRewardCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTaxDeliveryResult", "OnUpdateRewardItem");

	Params::TLUserWidgetTaxDeliveryResult_OnUpdateRewardItem Parms{};

	Parms.InRewardCount = InRewardCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTaxDeliveryTimeItem.OnUpdateSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsSelected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTaxDeliveryTimeItem::OnUpdateSelected(bool IsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTaxDeliveryTimeItem", "OnUpdateSelected");

	Params::TLUserWidgetTaxDeliveryTimeItem_OnUpdateSelected Parms{};

	Parms.IsSelected = IsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTerm.ScrollBoxEula_OnUserScrolled
// (Final, Native, Private)
// Parameters:
// float                                   InOffset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTerm::ScrollBoxEula_OnUserScrolled(float InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTerm", "ScrollBoxEula_OnUserScrolled");

	Params::TLUserWidgetTerm_ScrollBoxEula_OnUserScrolled Parms{};

	Parms.InOffset = InOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTimeLimitDungeonGroupItem.OnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeLimitDungeonGroupItem::OnLockMemorial(bool InIsLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeLimitDungeonGroupItem", "OnLockMemorial");

	Params::TLUserWidgetTimeLimitDungeonGroupItem_OnLockMemorial Parms{};

	Parms.InIsLock = InIsLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeLimitDungeonGroupItem.OnRegionType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLJsonMapRegionType                    InRegionType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeLimitDungeonGroupItem::OnRegionType(ETLJsonMapRegionType InRegionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeLimitDungeonGroupItem", "OnRegionType");

	Params::TLUserWidgetTimeLimitDungeonGroupItem_OnRegionType Parms{};

	Parms.InRegionType = InRegionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeTableAlarmContextMenuSlot.OnUpdateScheduleType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeTableAlarmContextMenuSlot::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableAlarmContextMenuSlot", "OnUpdateScheduleType");

	Params::TLUserWidgetTimeTableAlarmContextMenuSlot_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeTableSlot.OnSlotHighlight
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTimeTableSlot::OnSlotHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableSlot", "OnSlotHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeTableSlot.UpdateFoldAndUnFold
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsFold                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeTableSlot::UpdateFoldAndUnFold(bool bIsFold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableSlot", "UpdateFoldAndUnFold");

	Params::TLUserWidgetTimeTableSlot_UpdateFoldAndUnFold Parms{};

	Parms.bIsFold = bIsFold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTimeTableDateSlot.OnSlotHighlight
// (Event, Public, BlueprintEvent)

void UTLUserWidgetTimeTableDateSlot::OnSlotHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableDateSlot", "OnSlotHighlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetTimeTableDateSlot.UpdateFoldAndUnFold
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsFold                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTimeTableDateSlot::UpdateFoldAndUnFold(bool bIsFold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTimeTableDateSlot", "UpdateFoldAndUnFold");

	Params::TLUserWidgetTimeTableDateSlot_UpdateFoldAndUnFold Parms{};

	Parms.bIsFold = bIsFold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipDynamicEvent.OnDynamicEventGuildMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsGuildMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipDynamicEvent::OnDynamicEventGuildMode(bool InIsGuildMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipDynamicEvent", "OnDynamicEventGuildMode");

	Params::TLUserWidgetTooltipDynamicEvent_OnDynamicEventGuildMode Parms{};

	Parms.InIsGuildMode = InIsGuildMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipDynamicEvent.OnDynamicEventPVPMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsPvPMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipDynamicEvent::OnDynamicEventPVPMode(bool InIsPvPMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipDynamicEvent", "OnDynamicEventPVPMode");

	Params::TLUserWidgetTooltipDynamicEvent_OnDynamicEventPVPMode Parms{};

	Parms.InIsPvPMode = InIsPvPMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipDynamicEvent.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipDynamicEvent::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipDynamicEvent", "OnUpdateScheduleType");

	Params::TLUserWidgetTooltipDynamicEvent_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTooltipRewardListItem.OnSelectEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTooltipRewardListItem::OnSelectEffect(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTooltipRewardListItem", "OnSelectEffect");

	Params::TLUserWidgetTooltipRewardListItem_OnSelectEffect Parms{};

	Parms.InIsActive = InIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTrade.EventTabButtonGroupSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   InSelectedIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTrade::EventTabButtonGroupSelected(int32 InSelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTrade", "EventTabButtonGroupSelected");

	Params::TLUserWidgetTrade_EventTabButtonGroupSelected Parms{};

	Parms.InSelectedIndex = InSelectedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTradeInvenPanel.HandleScrollChange
// (Final, Native, Protected)
// Parameters:
// float                                   ScrollOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTradeInvenPanel::HandleScrollChange(float ScrollOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTradeInvenPanel", "HandleScrollChange");

	Params::TLUserWidgetTradeInvenPanel_HandleScrollChange Parms{};

	Parms.ScrollOffset = ScrollOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTransferConditionSlot.OnUpdateSatisfactory
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InStatus                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTransferConditionSlot::OnUpdateSatisfactory(const bool InStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTransferConditionSlot", "OnUpdateSatisfactory");

	Params::TLUserWidgetTransferConditionSlot_OnUpdateSatisfactory Parms{};

	Parms.InStatus = InStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTransferServerSlot.OnUpdateServerLatency
// (Event, Public, BlueprintEvent)
// Parameters:
// int64                                   InLatency                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTransferServerSlot::OnUpdateServerLatency(const int64 InLatency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTransferServerSlot", "OnUpdateServerLatency");

	Params::TLUserWidgetTransferServerSlot_OnUpdateServerLatency Parms{};

	Parms.InLatency = InLatency;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTransferServerSlot.OnUpdateServerOpenStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLServerOpenState                      InLatency                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetTransferServerSlot::OnUpdateServerOpenStatus(const ETLServerOpenState InLatency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTransferServerSlot", "OnUpdateServerOpenStatus");

	Params::TLUserWidgetTransferServerSlot_OnUpdateServerOpenStatus Parms{};

	Parms.InLatency = InLatency;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTutorialKeyGuide.OnUpdateHeaderKeyGuideForKeyboard
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetTutorialKeyGuide::OnUpdateHeaderKeyGuideForKeyboard(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTutorialKeyGuide", "OnUpdateHeaderKeyGuideForKeyboard");

	Params::TLUserWidgetTutorialKeyGuide_OnUpdateHeaderKeyGuideForKeyboard Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetTutorialPanel.OnHideAnimFinished
// (Final, Native, Protected)

void UTLUserWidgetTutorialPanel::OnHideAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTutorialPanel", "OnHideAnimFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetTutorialParagraph.OnUpdateArrow
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetTutorialParagraph::OnUpdateArrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetTutorialParagraph", "OnUpdateArrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetUnionInfo.OnInputNoticeTextChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetUnionInfo::OnInputNoticeTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetUnionInfo", "OnInputNoticeTextChanged");

	Params::TLUserWidgetUnionInfo_OnInputNoticeTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetUnionListItem.OnClickedDetailButton
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetUnionListItem::OnClickedDetailButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetUnionListItem", "OnClickedDetailButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetUnionListItem.OnUpdateGuildListInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetUnionListItem::OnUpdateGuildListInfo(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetUnionListItem", "OnUpdateGuildListInfo");

	Params::TLUserWidgetUnionListItem_OnUpdateGuildListInfo Parms{};

	Parms.InIsOpen = InIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetUnionRelationItem.OnUpdateGuildListInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetUnionRelationItem::OnUpdateGuildListInfo(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetUnionRelationItem", "OnUpdateGuildListInfo");

	Params::TLUserWidgetUnionRelationItem_OnUpdateGuildListInfo Parms{};

	Parms.InIsOpen = InIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetUnionRelationReqItem.OnReqState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsMyRequest                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetUnionRelationReqItem::OnReqState(bool InIsMyRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetUnionRelationReqItem", "OnReqState");

	Params::TLUserWidgetUnionRelationReqItem_OnReqState Parms{};

	Parms.InIsMyRequest = InIsMyRequest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetUnionRelationReqItem.OnUpdateGuildListInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetUnionRelationReqItem::OnUpdateGuildListInfo(bool InIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetUnionRelationReqItem", "OnUpdateGuildListInfo");

	Params::TLUserWidgetUnionRelationReqItem_OnUpdateGuildListInfo Parms{};

	Parms.InIsOpen = InIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetUnionRelation.OnUpdateRelationTabType
// (Event, Public, BlueprintEvent)
// Parameters:
// EUnionRelationTabType                   InTabType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetUnionRelation::OnUpdateRelationTabType(EUnionRelationTabType InTabType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetUnionRelation", "OnUpdateRelationTabType");

	Params::TLUserWidgetUnionRelation_OnUpdateRelationTabType Parms{};

	Parms.InTabType = InTabType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWeaponCostumeSlot.OnAcquisitionTypeUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLAcquisitionContentType               InAcquisitionType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWeaponCostumeSlot::OnAcquisitionTypeUpdate(ETLAcquisitionContentType InAcquisitionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponCostumeSlot", "OnAcquisitionTypeUpdate");

	Params::TLUserWidgetWeaponCostumeSlot_OnAcquisitionTypeUpdate Parms{};

	Parms.InAcquisitionType = InAcquisitionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWeaponCostumeSlot.OnSelectState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWeaponCostumeSlot::OnSelectState(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponCostumeSlot", "OnSelectState");

	Params::TLUserWidgetWeaponCostumeSlot_OnSelectState Parms{};

	Parms.bSelected = bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWeaponCostumeRegisterSlot.HandleDragOver
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bEnter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWeaponCostumeRegisterSlot::HandleDragOver(bool bEnter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponCostumeRegisterSlot", "HandleDragOver");

	Params::TLUserWidgetWeaponCostumeRegisterSlot_HandleDragOver Parms{};

	Parms.bEnter = bEnter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWeaponCostumeRegisterSlot.HandleSelectedCategory
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSameCategory                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWeaponCostumeRegisterSlot::HandleSelectedCategory(bool bSameCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWeaponCostumeRegisterSlot", "HandleSelectedCategory");

	Params::TLUserWidgetWeaponCostumeRegisterSlot_HandleSelectedCategory Parms{};

	Parms.bSameCategory = bSameCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWelcomeCBT.ScrollBox_OnUserScrolled
// (Final, Native, Private)
// Parameters:
// float                                   InOffset                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWelcomeCBT::ScrollBox_OnUserScrolled(float InOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWelcomeCBT", "ScrollBox_OnUserScrolled");

	Params::TLUserWidgetWelcomeCBT_ScrollBox_OnUserScrolled Parms{};

	Parms.InOffset = InOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldBossGuideFrame.OnCurrentType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLWorldBossEventState                  InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldBossGuideFrame::OnCurrentType(ETLWorldBossEventState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldBossGuideFrame", "OnCurrentType");

	Params::TLUserWidgetWorldBossGuideFrame_OnCurrentType Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldBossGuideFrame.OnEndShowAnimation
// (Event, Public, BlueprintEvent)

void UTLUserWidgetWorldBossGuideFrame::OnEndShowAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldBossGuideFrame", "OnEndShowAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWorldBossGuideFrame.OnUpdateScheduleType
// (Event, Public, BlueprintEvent)
// Parameters:
// ETLEventScheduleType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldBossGuideFrame::OnUpdateScheduleType(ETLEventScheduleType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldBossGuideFrame", "OnUpdateScheduleType");

	Params::TLUserWidgetWorldBossGuideFrame_OnUpdateScheduleType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldBossGuideFrame.OnUpdateWorldBossAssist
// (Event, Public, BlueprintEvent)

void UTLUserWidgetWorldBossGuideFrame::OnUpdateWorldBossAssist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldBossGuideFrame", "OnUpdateWorldBossAssist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWorldBossGuideFrame.OnUpdateWorldBossKill
// (Event, Public, BlueprintEvent)

void UTLUserWidgetWorldBossGuideFrame::OnUpdateWorldBossKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldBossGuideFrame", "OnUpdateWorldBossKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWorldBossGuideFrame.OpenHelp
// (Final, Native, Public, BlueprintCallable)

void UTLUserWidgetWorldBossGuideFrame::OpenHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldBossGuideFrame", "OpenHelp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldBossGuideFrame.PlayWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetWorldBossGuideFrame::PlayWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldBossGuideFrame", "PlayWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWorldBossGuideFrame.StopWarningTime
// (Event, Public, BlueprintEvent)

void UTLUserWidgetWorldBossGuideFrame::StopWarningTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldBossGuideFrame", "StopWarningTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWorldmap.GetWorldMapIconFromGUID
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           Guid                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTLUserWidgetMapIcon*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTLUserWidgetMapIcon* UTLUserWidgetWorldmap::GetWorldMapIconFromGUID(const class FString& Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "GetWorldMapIconFromGUID");

	Params::TLUserWidgetWorldmap_GetWorldMapIconFromGUID Parms{};

	Parms.Guid = std::move(Guid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetWorldmap.HandleActionButtonMoveToMyPc_OnClicked
// (Final, Native, Public)

void UTLUserWidgetWorldmap::HandleActionButtonMoveToMyPc_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "HandleActionButtonMoveToMyPc_OnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.HandleDynamicEventRegionJoin
// (Final, Native, Public)
// Parameters:
// uint64                                  Guid                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsJoing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldmap::HandleDynamicEventRegionJoin(uint64 Guid, bool InIsJoing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "HandleDynamicEventRegionJoin");

	Params::TLUserWidgetWorldmap_HandleDynamicEventRegionJoin Parms{};

	Parms.Guid = Guid;
	Parms.InIsJoing = InIsJoing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.HandleUpdateMapFramePosition
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        InPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldmap::HandleUpdateMapFramePosition(const struct FVector2D& InPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "HandleUpdateMapFramePosition");

	Params::TLUserWidgetWorldmap_HandleUpdateMapFramePosition Parms{};

	Parms.InPosition = std::move(InPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.HandleUpdateMapIconFilter
// (Final, Native, Public)
// Parameters:
// class FName                             InMapIconFilterId                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InIsVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInForceUpdate                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldmap::HandleUpdateMapIconFilter(class FName InMapIconFilterId, bool InIsVisible, bool bInForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "HandleUpdateMapIconFilter");

	Params::TLUserWidgetWorldmap_HandleUpdateMapIconFilter Parms{};

	Parms.InMapIconFilterId = InMapIconFilterId;
	Parms.InIsVisible = InIsVisible;
	Parms.bInForceUpdate = bInForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardDownPressed
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardDownPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardDownPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardDownReleased
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardDownReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardDownReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardJumpPressed
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardJumpPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardJumpPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardJumpReleased
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardJumpReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardJumpReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardLeftPressed
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardLeftPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardLeftPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardLeftReleased
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardLeftReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardLeftReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardRightPressed
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardRightPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardRightPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardRightReleased
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardRightReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardRightReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardShiftPressed
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardShiftPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardShiftPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardShiftReleased
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardShiftReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardShiftReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardUpPressed
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardUpPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardUpPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnKeyboardUpReleased
// (Final, Native, Public)

void UTLUserWidgetWorldmap::OnKeyboardUpReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnKeyboardUpReleased");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldmap.OnMapCharacterMoveEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InbPress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldmap::OnMapCharacterMoveEvent(bool InbPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnMapCharacterMoveEvent");

	Params::TLUserWidgetWorldmap_OnMapCharacterMoveEvent Parms{};

	Parms.InbPress = InbPress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldmap.OnMoveWorldMapIcon
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           Guid                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTLUserWidgetWorldmap::OnMoveWorldMapIcon(const class FString& Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnMoveWorldMapIcon");

	Params::TLUserWidgetWorldmap_OnMoveWorldMapIcon Parms{};

	Parms.Guid = std::move(Guid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TLClient.TLUserWidgetWorldmap.OnUpdateRankSkillEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEnvironmentalType                      InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkillStarted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldmap::OnUpdateRankSkillEvent(EEnvironmentalType InType, bool bSkillStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnUpdateRankSkillEvent");

	Params::TLUserWidgetWorldmap_OnUpdateRankSkillEvent Parms{};

	Parms.InType = InType;
	Parms.bSkillStarted = bSkillStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldmap.OnUpdateRegionDisplayEnvironment
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InWeahterInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             InWindInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             InTimeInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bInShow                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldmap::OnUpdateRegionDisplayEnvironment(const class FText& InWeahterInfo, const class FText& InWindInfo, const class FText& InTimeInfo, bool bInShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnUpdateRegionDisplayEnvironment");

	Params::TLUserWidgetWorldmap_OnUpdateRegionDisplayEnvironment Parms{};

	Parms.InWeahterInfo = std::move(InWeahterInfo);
	Parms.InWindInfo = std::move(InWindInfo);
	Parms.InTimeInfo = std::move(InTimeInfo);
	Parms.bInShow = bInShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldmap.OnUpdateRegionDisplayName
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             InZoneName                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             InRegionName                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldmap::OnUpdateRegionDisplayName(const class FText& InZoneName, const class FText& InRegionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnUpdateRegionDisplayName");

	Params::TLUserWidgetWorldmap_OnUpdateRegionDisplayName Parms{};

	Parms.InZoneName = std::move(InZoneName);
	Parms.InRegionName = std::move(InRegionName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldmap.OnUpdateWindCloudSpeed
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETLWindGrade                            InWindGrade                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldmap::OnUpdateWindCloudSpeed(ETLWindGrade InWindGrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnUpdateWindCloudSpeed");

	Params::TLUserWidgetWorldmap_OnUpdateWindCloudSpeed Parms{};

	Parms.InWindGrade = InWindGrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldmap.OnWorldMapHide
// (Event, Protected, BlueprintEvent)

void UTLUserWidgetWorldmap::OnWorldMapHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnWorldMapHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWorldmap.OnWorldMapShow
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInWorldMapFirstOpen                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldmap::OnWorldMapShow(bool bInWorldMapFirstOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldmap", "OnWorldMapShow");

	Params::TLUserWidgetWorldmap_OnWorldMapShow Parms{};

	Parms.bInWorldMapFirstOpen = bInWorldMapFirstOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapFloorList.HandleClickedExitBtn
// (Final, Native, Public)

void UTLUserWidgetWorldMapFloorList::HandleClickedExitBtn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapFloorList", "HandleClickedExitBtn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapFloorListItem.OnEmphasis
// (Event, Public, BlueprintEvent)

void UTLUserWidgetWorldMapFloorListItem::OnEmphasis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapFloorListItem", "OnEmphasis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWorldMapFloorListItem.OnStopEmphasis
// (Event, Public, BlueprintEvent)

void UTLUserWidgetWorldMapFloorListItem::OnStopEmphasis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapFloorListItem", "OnStopEmphasis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TLClient.TLUserWidgetWorldMapFloorListItem.OnUnLockMemorial
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsUnLock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapFloorListItem::OnUnLockMemorial(bool IsUnLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapFloorListItem", "OnUnLockMemorial");

	Params::TLUserWidgetWorldMapFloorListItem_OnUnLockMemorial Parms{};

	Parms.IsUnLock = IsUnLock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapListItemTerritory.HandleProcessSearchKeywordChange
// (Final, Native, Public)

void UTLUserWidgetWorldMapListItemTerritory::HandleProcessSearchKeywordChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemTerritory", "HandleProcessSearchKeywordChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapListItemTerritory.HandleSearchKeywordChange
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InSearchKeyword                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EWorldMapListSearchType                 InSearchType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemTerritory::HandleSearchKeywordChange(const class FText& InSearchKeyword, const EWorldMapListSearchType InSearchType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemTerritory", "HandleSearchKeywordChange");

	Params::TLUserWidgetWorldMapListItemTerritory_HandleSearchKeywordChange Parms{};

	Parms.InSearchKeyword = std::move(InSearchKeyword);
	Parms.InSearchType = InSearchType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapListItemTerritory.HandleSearchSpeciesChange
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint64>                          InRegionGroupGuids                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemTerritory::HandleSearchSpeciesChange(const TArray<uint64>& InRegionGroupGuids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemTerritory", "HandleSearchSpeciesChange");

	Params::TLUserWidgetWorldMapListItemTerritory_HandleSearchSpeciesChange Parms{};

	Parms.InRegionGroupGuids = std::move(InRegionGroupGuids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapListItemTerritory.OnShowIconBG
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InIsActive                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemTerritory::OnShowIconBG(bool InIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemTerritory", "OnShowIconBG");

	Params::TLUserWidgetWorldMapListItemTerritory_OnShowIconBG Parms{};

	Parms.InIsActive = InIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TLClient.TLUserWidgetWorldMapListItemZone.HandleProcessSearchKeywordChange
// (Final, Native, Public)

void UTLUserWidgetWorldMapListItemZone::HandleProcessSearchKeywordChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemZone", "HandleProcessSearchKeywordChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapListItemZone.HandleSearchKeywordChange
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InSearchKeyword                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EWorldMapListSearchType                 InSearchType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemZone::HandleSearchKeywordChange(const class FText& InSearchKeyword, const EWorldMapListSearchType InSearchType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemZone", "HandleSearchKeywordChange");

	Params::TLUserWidgetWorldMapListItemZone_HandleSearchKeywordChange Parms{};

	Parms.InSearchKeyword = std::move(InSearchKeyword);
	Parms.InSearchType = InSearchType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapListItemZone.HandleSearchSpeciesChange
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint64>                          InRegionGroupGuids                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapListItemZone::HandleSearchSpeciesChange(const TArray<uint64>& InRegionGroupGuids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapListItemZone", "HandleSearchSpeciesChange");

	Params::TLUserWidgetWorldMapListItemZone_HandleSearchSpeciesChange Parms{};

	Parms.InRegionGroupGuids = std::move(InRegionGroupGuids);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapPinListItem.HandleInputTextChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapPinListItem::HandleInputTextChanged(const class FText& InInputText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapPinListItem", "HandleInputTextChanged");

	Params::TLUserWidgetWorldMapPinListItem_HandleInputTextChanged Parms{};

	Parms.InInputText = std::move(InInputText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapPinListItem.HandleInputTextCommitted
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InInputText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             InCommitMethod                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapPinListItem::HandleInputTextCommitted(const class FText& InInputText, ETextCommit InCommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapPinListItem", "HandleInputTextCommitted");

	Params::TLUserWidgetWorldMapPinListItem_HandleInputTextCommitted Parms{};

	Parms.InInputText = std::move(InInputText);
	Parms.InCommitMethod = InCommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapPinListItem.HandleOnTextFocusLost
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapPinListItem::HandleOnTextFocusLost(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapPinListItem", "HandleOnTextFocusLost");

	Params::TLUserWidgetWorldMapPinListItem_HandleOnTextFocusLost Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLUserWidgetWorldMapPinListItem.HandlePinTextChanged
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLUserWidgetWorldMapPinListItem::HandlePinTextChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLUserWidgetWorldMapPinListItem", "HandlePinTextChanged");

	Params::TLUserWidgetWorldMapPinListItem_HandlePinTextChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLYeti.FocusLostForKeyboard
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLYeti::FocusLostForKeyboard(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLYeti", "FocusLostForKeyboard");

	Params::TLYeti_FocusLostForKeyboard Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLYeti.FocusLostForNumpad
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLYeti::FocusLostForNumpad(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLYeti", "FocusLostForNumpad");

	Params::TLYeti_FocusLostForNumpad Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLYeti.FocusReceivedForKeyboard
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLYeti::FocusReceivedForKeyboard(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLYeti", "FocusReceivedForKeyboard");

	Params::TLYeti_FocusReceivedForKeyboard Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLYeti.FocusReceivedForNumpad
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFocusEvent                      InFocusEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTLYeti::FocusReceivedForNumpad(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLYeti", "FocusReceivedForNumpad");

	Params::TLYeti_FocusReceivedForNumpad Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLYeti.MouseButtonDownForKeyboard
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLYeti::MouseButtonDownForKeyboard(const struct FGeometry& MyGeometry, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLYeti", "MouseButtonDownForKeyboard");

	Params::TLYeti_MouseButtonDownForKeyboard Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLYeti.MouseButtonDownForNumpad
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTLYeti::MouseButtonDownForNumpad(const struct FGeometry& MyGeometry, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLYeti", "MouseButtonDownForNumpad");

	Params::TLYeti_MouseButtonDownForNumpad Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InMouseEvent = std::move(InMouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLYeti.NumberCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLYeti::NumberCommitted(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLYeti", "NumberCommitted");

	Params::TLYeti_NumberCommitted Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TLClient.TLYeti.TextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTLYeti::TextCommitted(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TLYeti", "TextCommitted");

	Params::TLYeti_TextCommitted Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

