#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NinjaLiveFunctions

#include "Basic.hpp"

#include "NinjaPreset_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SimPrecision_Enum_structs.hpp"
#include "RenderTargetListItem_structs.hpp"


namespace SDK::Params
{

// Function NinjaLiveFunctions.NinjaLiveFunctions_C.TraceMouse
// 0x03C0 (0x03C0 - 0x0000)
struct NinjaLiveFunctions_C_TraceMouse final
{
public:
	class UObject*                                HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TouchSensitive;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         FingerIndex;                                       // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         FluidNinjaLIVEActors;                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HitUV;                                             // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SimHitByMouse;                                     // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MouseClickValid;                                   // 0x0039(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TouchValid;                                        // 0x003A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetHitResultUnderCursorByChannel_HitResult; // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_GetHitResultUnderCursorByChannel_ReturnValue; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetHitResultUnderFingerByChannel_HitResult; // 0x00F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_GetHitResultUnderFingerByChannel_ReturnValue; // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Select_Default;                             // 0x017C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0288(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0313(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0360(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FindCollisionUV_UV;                       // 0x0394(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUV_ReturnValue;              // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39E[0x2];                                      // 0x039E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x03AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLiveFunctions_C_TraceMouse) == 0x000008, "Wrong alignment on NinjaLiveFunctions_C_TraceMouse");
static_assert(sizeof(NinjaLiveFunctions_C_TraceMouse) == 0x0003C0, "Wrong size on NinjaLiveFunctions_C_TraceMouse");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, HitComponent) == 0x000000, "Member 'NinjaLiveFunctions_C_TraceMouse::HitComponent' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, TouchSensitive) == 0x000008, "Member 'NinjaLiveFunctions_C_TraceMouse::TouchSensitive' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, FingerIndex) == 0x000009, "Member 'NinjaLiveFunctions_C_TraceMouse::FingerIndex' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, TraceChannel) == 0x00000A, "Member 'NinjaLiveFunctions_C_TraceMouse::TraceChannel' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, FluidNinjaLIVEActors) == 0x000010, "Member 'NinjaLiveFunctions_C_TraceMouse::FluidNinjaLIVEActors' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, __WorldContext) == 0x000020, "Member 'NinjaLiveFunctions_C_TraceMouse::__WorldContext' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, HitUV) == 0x000028, "Member 'NinjaLiveFunctions_C_TraceMouse::HitUV' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, SimHitByMouse) == 0x000038, "Member 'NinjaLiveFunctions_C_TraceMouse::SimHitByMouse' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, MouseClickValid) == 0x000039, "Member 'NinjaLiveFunctions_C_TraceMouse::MouseClickValid' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, TouchValid) == 0x00003A, "Member 'NinjaLiveFunctions_C_TraceMouse::TouchValid' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, Temp_bool_Variable) == 0x00003B, "Member 'NinjaLiveFunctions_C_TraceMouse::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_GetHitResultUnderCursorByChannel_HitResult) == 0x000048, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_GetHitResultUnderCursorByChannel_HitResult' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_GetHitResultUnderCursorByChannel_ReturnValue) == 0x0000D0, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_GetHitResultUnderCursorByChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000D8, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_GetValidValue_ReturnValue) == 0x0000E0, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E4, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_GetHitResultUnderFingerByChannel_HitResult) == 0x0000F0, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_GetHitResultUnderFingerByChannel_HitResult' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_GetHitResultUnderFingerByChannel_ReturnValue) == 0x000178, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_GetHitResultUnderFingerByChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, K2Node_Select_Default) == 0x00017C, "Member 'NinjaLiveFunctions_C_TraceMouse::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_bBlockingHit) == 0x000204, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_bInitialOverlap) == 0x000205, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_Time) == 0x000208, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_Distance) == 0x00020C, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_Location) == 0x000210, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_ImpactPoint) == 0x00021C, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_Normal) == 0x000228, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_ImpactNormal) == 0x000234, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_PhysMat) == 0x000240, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_HitActor) == 0x000248, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_HitComponent) == 0x000250, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_HitBoneName) == 0x000258, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_HitItem) == 0x000260, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_ElementIndex) == 0x000264, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_FaceIndex) == 0x000268, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_TraceStart) == 0x00026C, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_TraceEnd) == 0x000278, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000284, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_LineTraceSingle_OutHit) == 0x000288, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_LineTraceSingle_ReturnValue) == 0x000310, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BooleanOR_ReturnValue) == 0x000311, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000312, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000313, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_Time_1) == 0x000314, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_Distance_1) == 0x000318, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_Location_1) == 0x00031C, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000328, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_Normal_1) == 0x000334, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000340, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_PhysMat_1) == 0x000350, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_HitActor_1) == 0x000358, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_HitComponent_1) == 0x000360, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_HitBoneName_1) == 0x000368, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_HitItem_1) == 0x000370, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_ElementIndex_1) == 0x000374, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_FaceIndex_1) == 0x000378, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_TraceStart_1) == 0x00037C, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_BreakHitResult_TraceEnd_1) == 0x000388, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_FindCollisionUV_UV) == 0x000394, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_FindCollisionUV_UV' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_FindCollisionUV_ReturnValue) == 0x00039C, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_FindCollisionUV_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_IsValid_ReturnValue) == 0x00039D, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x0003A0, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceMouse, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0003AC, "Member 'NinjaLiveFunctions_C_TraceMouse::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function NinjaLiveFunctions.NinjaLiveFunctions_C.TraceOverlap
// 0x01B0 (0x01B0 - 0x0000)
struct NinjaLiveFunctions_C_TraceOverlap final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TracelineOvershoot;                                // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         FluidNinjaLIVEActors;                              // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HitUV;                                             // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TracePosition;                                     // 0x0048(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103[0x1];                                      // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_FindCollisionUV_UV;                       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCollisionUV_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLiveFunctions_C_TraceOverlap) == 0x000008, "Wrong alignment on NinjaLiveFunctions_C_TraceOverlap");
static_assert(sizeof(NinjaLiveFunctions_C_TraceOverlap) == 0x0001B0, "Wrong size on NinjaLiveFunctions_C_TraceOverlap");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, Start) == 0x000000, "Member 'NinjaLiveFunctions_C_TraceOverlap::Start' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, End) == 0x00000C, "Member 'NinjaLiveFunctions_C_TraceOverlap::End' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, TracelineOvershoot) == 0x000018, "Member 'NinjaLiveFunctions_C_TraceOverlap::TracelineOvershoot' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, TraceChannel) == 0x00001C, "Member 'NinjaLiveFunctions_C_TraceOverlap::TraceChannel' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, FluidNinjaLIVEActors) == 0x000020, "Member 'NinjaLiveFunctions_C_TraceOverlap::FluidNinjaLIVEActors' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, __WorldContext) == 0x000030, "Member 'NinjaLiveFunctions_C_TraceOverlap::__WorldContext' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, HitUV) == 0x000038, "Member 'NinjaLiveFunctions_C_TraceOverlap::HitUV' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, TracePosition) == 0x000048, "Member 'NinjaLiveFunctions_C_TraceOverlap::TracePosition' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000054, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_LineTraceSingle_OutHit) == 0x000078, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_LineTraceSingle_ReturnValue) == 0x000100, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_bBlockingHit) == 0x000101, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_bInitialOverlap) == 0x000102, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_Time) == 0x000104, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_Distance) == 0x000108, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_Location) == 0x00010C, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_ImpactPoint) == 0x000118, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_Normal) == 0x000124, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_ImpactNormal) == 0x000130, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_PhysMat) == 0x000140, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_HitActor) == 0x000148, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_HitComponent) == 0x000150, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_HitBoneName) == 0x000158, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_HitItem) == 0x000160, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_ElementIndex) == 0x000164, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_FaceIndex) == 0x000168, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_TraceStart) == 0x00016C, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_BreakHitResult_TraceEnd) == 0x000178, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_IsValid_ReturnValue) == 0x000184, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_FindCollisionUV_UV) == 0x000188, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_FindCollisionUV_UV' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_FindCollisionUV_ReturnValue) == 0x000190, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_FindCollisionUV_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000194, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TraceOverlap, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0001A0, "Member 'NinjaLiveFunctions_C_TraceOverlap::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function NinjaLiveFunctions.NinjaLiveFunctions_C.PresetLoader
// 0x0538 (0x0538 - 0x0000)
struct NinjaLiveFunctions_C_PresetLoader final
{
public:
	class FString                                 PresetName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           AssetPath;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   AssetTrimmedName;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcePreferredPreset;                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             PreferredPreset;                                   // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             LoadedDataTable;                                   // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LoadedDataTablePath;                               // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, float>                    PresetMap;                                         // 0x0058(0x0050)(Parm, OutParm)
	TMap<class FString, float>                    PresetMapTemp;                                     // 0x00A8(0x0050)(Edit, BlueprintVisible)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FAssetData>                     K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class FName>                             K2Node_MakeSet_Set;                                // 0x0170(0x0050)()
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x01C0(0x0010)(ReferenceParm)
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x01D0(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARFilter                              K2Node_MakeStruct_ARFilter;                        // 0x01E8(0x00F0)()
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAssetData>                     CallFunc_GetAssets_OutAssetData;                   // 0x02F0(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssets_ReturnValue;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAssetData>                     K2Node_Select_Default;                             // 0x0310(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetData                             CallFunc_Array_Get_Item;                           // 0x0328(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Select_Default_1;                           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_CreateAssetData_ReturnValue;              // 0x03B0(0x0060)(HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0410(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FNinjaPreset                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0468(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_CreateAssetData_ReturnValue_1;            // 0x04A8(0x0060)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue_1;         // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_3;          // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NinjaLiveFunctions_C_PresetLoader) == 0x000008, "Wrong alignment on NinjaLiveFunctions_C_PresetLoader");
static_assert(sizeof(NinjaLiveFunctions_C_PresetLoader) == 0x000538, "Wrong size on NinjaLiveFunctions_C_PresetLoader");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, PresetName) == 0x000000, "Member 'NinjaLiveFunctions_C_PresetLoader::PresetName' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, AssetPath) == 0x000010, "Member 'NinjaLiveFunctions_C_PresetLoader::AssetPath' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, AssetTrimmedName) == 0x000020, "Member 'NinjaLiveFunctions_C_PresetLoader::AssetTrimmedName' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, ForcePreferredPreset) == 0x000028, "Member 'NinjaLiveFunctions_C_PresetLoader::ForcePreferredPreset' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, PreferredPreset) == 0x000030, "Member 'NinjaLiveFunctions_C_PresetLoader::PreferredPreset' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, __WorldContext) == 0x000038, "Member 'NinjaLiveFunctions_C_PresetLoader::__WorldContext' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, LoadedDataTable) == 0x000040, "Member 'NinjaLiveFunctions_C_PresetLoader::LoadedDataTable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, LoadedDataTablePath) == 0x000048, "Member 'NinjaLiveFunctions_C_PresetLoader::LoadedDataTablePath' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, PresetMap) == 0x000058, "Member 'NinjaLiveFunctions_C_PresetLoader::PresetMap' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, PresetMapTemp) == 0x0000A8, "Member 'NinjaLiveFunctions_C_PresetLoader::PresetMapTemp' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Conv_NameToString_ReturnValue) == 0x0000F8, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Concat_StrStr_ReturnValue) == 0x000108, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000118, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000128, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, Temp_int_Array_Index_Variable) == 0x000138, "Member 'NinjaLiveFunctions_C_PresetLoader::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000140, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, K2Node_MakeArray_Array) == 0x000150, "Member 'NinjaLiveFunctions_C_PresetLoader::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, Temp_int_Loop_Counter_Variable) == 0x000160, "Member 'NinjaLiveFunctions_C_PresetLoader::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, Temp_int_Array_Index_Variable_1) == 0x000164, "Member 'NinjaLiveFunctions_C_PresetLoader::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, Temp_bool_Variable) == 0x00016C, "Member 'NinjaLiveFunctions_C_PresetLoader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, K2Node_MakeSet_Set) == 0x000170, "Member 'NinjaLiveFunctions_C_PresetLoader::K2Node_MakeSet_Set' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, K2Node_MakeArray_Array_1) == 0x0001C0, "Member 'NinjaLiveFunctions_C_PresetLoader::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, K2Node_MakeArray_Array_2) == 0x0001D0, "Member 'NinjaLiveFunctions_C_PresetLoader::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, Temp_bool_Variable_1) == 0x0001E0, "Member 'NinjaLiveFunctions_C_PresetLoader::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, K2Node_MakeStruct_ARFilter) == 0x0001E8, "Member 'NinjaLiveFunctions_C_PresetLoader::K2Node_MakeStruct_ARFilter' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_GetAssetRegistry_ReturnValue) == 0x0002D8, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, Temp_int_Loop_Counter_Variable_1) == 0x0002E8, "Member 'NinjaLiveFunctions_C_PresetLoader::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_GetAssets_OutAssetData) == 0x0002F0, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_GetAssets_OutAssetData' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_GetAssets_ReturnValue) == 0x000300, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_GetAssets_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Array_Length_ReturnValue) == 0x000304, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Add_IntInt_ReturnValue_1) == 0x000308, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00030C, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, K2Node_Select_Default) == 0x000310, "Member 'NinjaLiveFunctions_C_PresetLoader::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Array_Length_ReturnValue_1) == 0x000320, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Array_Get_Item) == 0x000328, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Less_IntInt_ReturnValue) == 0x000388, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_GetAsset_ReturnValue) == 0x000390, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, K2Node_DynamicCast_AsData_Table) == 0x000398, "Member 'NinjaLiveFunctions_C_PresetLoader::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, K2Node_DynamicCast_bSuccess) == 0x0003A0, "Member 'NinjaLiveFunctions_C_PresetLoader::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_IsValid_ReturnValue) == 0x0003A1, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, K2Node_Select_Default_1) == 0x0003A8, "Member 'NinjaLiveFunctions_C_PresetLoader::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_CreateAssetData_ReturnValue) == 0x0003B0, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_CreateAssetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000410, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Array_Get_Item_1) == 0x000420, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000428, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_GetDataTableRowFromName_OutRow) == 0x000438, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000448, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000450, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Conv_StringToFloat_ReturnValue) == 0x000460, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Array_Length_ReturnValue_2) == 0x000464, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Conv_FloatToText_ReturnValue) == 0x000468, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Less_IntInt_ReturnValue_1) == 0x000480, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Conv_TextToString_ReturnValue) == 0x000488, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Replace_ReturnValue) == 0x000498, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_CreateAssetData_ReturnValue_1) == 0x0004A8, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_CreateAssetData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Conv_StringToFloat_ReturnValue_1) == 0x000508, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Conv_StringToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Conv_NameToString_ReturnValue_3) == 0x000510, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Conv_NameToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000520, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_PresetLoader, CallFunc_Contains_ReturnValue) == 0x000530, "Member 'NinjaLiveFunctions_C_PresetLoader::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function NinjaLiveFunctions.NinjaLiveFunctions_C.CreateRenderTarget
// 0x0038 (0x0038 - 0x0000)
struct NinjaLiveFunctions_C_CreateRenderTarget final
{
public:
	int32                                         Width;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureRenderTargetFormat                    Format;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Clamping;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextureGroup                                 LODGroup;                                          // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureFilter                                Filter;                                            // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RTout;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureAddress                               Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextureAddress                               Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETextureAddress                               K2Node_Select_Default;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLiveFunctions_C_CreateRenderTarget) == 0x000008, "Wrong alignment on NinjaLiveFunctions_C_CreateRenderTarget");
static_assert(sizeof(NinjaLiveFunctions_C_CreateRenderTarget) == 0x000038, "Wrong size on NinjaLiveFunctions_C_CreateRenderTarget");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, Width) == 0x000000, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::Width' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, Height) == 0x000004, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::Height' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, Format) == 0x000008, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::Format' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, Clamping) == 0x000009, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::Clamping' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, LODGroup) == 0x00000A, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::LODGroup' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, Filter) == 0x00000B, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::Filter' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, __WorldContext) == 0x000010, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, RTout) == 0x000018, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::RTout' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, Temp_byte_Variable) == 0x000020, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000028, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, Temp_byte_Variable_1) == 0x000030, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, Temp_bool_Variable) == 0x000031, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CreateRenderTarget, K2Node_Select_Default) == 0x000032, "Member 'NinjaLiveFunctions_C_CreateRenderTarget::K2Node_Select_Default' has a wrong offset!");

// Function NinjaLiveFunctions.NinjaLiveFunctions_C.SingleKeyPicker
// 0x0078 (0x0078 - 0x0000)
struct NinjaLiveFunctions_C_SingleKeyPicker final
{
public:
	class UDataTable*                             DataTableIn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 KeyToPick;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PickedKeyValue;                                    // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NotFound;                                          // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RowNotFound;                                       // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNinjaPreset                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLiveFunctions_C_SingleKeyPicker) == 0x000008, "Wrong alignment on NinjaLiveFunctions_C_SingleKeyPicker");
static_assert(sizeof(NinjaLiveFunctions_C_SingleKeyPicker) == 0x000078, "Wrong size on NinjaLiveFunctions_C_SingleKeyPicker");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, DataTableIn) == 0x000000, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::DataTableIn' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, KeyToPick) == 0x000008, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::KeyToPick' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, __WorldContext) == 0x000018, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::__WorldContext' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, PickedKeyValue) == 0x000020, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::PickedKeyValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, NotFound) == 0x000030, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::NotFound' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, RowNotFound) == 0x000031, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::RowNotFound' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, CallFunc_Conv_StringToName_ReturnValue) == 0x000034, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, CallFunc_MakeLiteralString_ReturnValue) == 0x000058, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_SingleKeyPicker, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'NinjaLiveFunctions_C_SingleKeyPicker::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function NinjaLiveFunctions.NinjaLiveFunctions_C.TemplateLoader
// 0x0200 (0x0200 - 0x0000)
struct NinjaLiveFunctions_C_TemplateLoader final
{
public:
	class FName                                   TemplateDefinition;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             LoadedDataTable;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LoadedDataTablePath;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadFailed;                                        // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                LoadedTemplateObject;                              // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LoadedTmpFullPath;                                 // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LoadedTemplateNameOnly;                            // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          UsesAbsolutePath;                                  // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InvalidObjectIndicator;                            // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RowMissingIndicator;                               // 0x005A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAssetData>                     K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FNinjaPreset                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAssetData>                     CallFunc_GetAssetsByPackageName_OutAssetData;      // 0x0150(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByPackageName_ReturnValue;       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAssetData>                     K2Node_Select_Default;                             // 0x0170(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetData                             CallFunc_Array_Get_Item;                           // 0x0188(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NinjaLiveFunctions_C_TemplateLoader) == 0x000008, "Wrong alignment on NinjaLiveFunctions_C_TemplateLoader");
static_assert(sizeof(NinjaLiveFunctions_C_TemplateLoader) == 0x000200, "Wrong size on NinjaLiveFunctions_C_TemplateLoader");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, TemplateDefinition) == 0x000000, "Member 'NinjaLiveFunctions_C_TemplateLoader::TemplateDefinition' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, LoadedDataTable) == 0x000008, "Member 'NinjaLiveFunctions_C_TemplateLoader::LoadedDataTable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, LoadedDataTablePath) == 0x000010, "Member 'NinjaLiveFunctions_C_TemplateLoader::LoadedDataTablePath' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, __WorldContext) == 0x000020, "Member 'NinjaLiveFunctions_C_TemplateLoader::__WorldContext' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, LoadFailed) == 0x000028, "Member 'NinjaLiveFunctions_C_TemplateLoader::LoadFailed' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, LoadedTemplateObject) == 0x000030, "Member 'NinjaLiveFunctions_C_TemplateLoader::LoadedTemplateObject' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, LoadedTmpFullPath) == 0x000038, "Member 'NinjaLiveFunctions_C_TemplateLoader::LoadedTmpFullPath' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, LoadedTemplateNameOnly) == 0x000048, "Member 'NinjaLiveFunctions_C_TemplateLoader::LoadedTemplateNameOnly' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, UsesAbsolutePath) == 0x000058, "Member 'NinjaLiveFunctions_C_TemplateLoader::UsesAbsolutePath' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, InvalidObjectIndicator) == 0x000059, "Member 'NinjaLiveFunctions_C_TemplateLoader::InvalidObjectIndicator' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, RowMissingIndicator) == 0x00005A, "Member 'NinjaLiveFunctions_C_TemplateLoader::RowMissingIndicator' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, K2Node_MakeArray_Array) == 0x000060, "Member 'NinjaLiveFunctions_C_TemplateLoader::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Len_ReturnValue) == 0x0000A8, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_FindSubstring_ReturnValue) == 0x0000AC, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_StartsWith_ReturnValue) == 0x0000B0, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B4, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_SelectString_ReturnValue) == 0x0000B8, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_LeftChop_ReturnValue) == 0x0000C8, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Conv_StringToName_ReturnValue) == 0x0000D8, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000E0, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Not_PreBool_ReturnValue) == 0x0000E8, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_RightChop_ReturnValue) == 0x0000F0, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_BooleanAND_ReturnValue) == 0x000100, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_SelectString_ReturnValue_1) == 0x000108, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, Temp_int_Array_Index_Variable) == 0x000118, "Member 'NinjaLiveFunctions_C_TemplateLoader::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_MakeLiteralString_ReturnValue) == 0x000120, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000130, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_BooleanOR_ReturnValue) == 0x000131, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, Temp_bool_Variable) == 0x000132, "Member 'NinjaLiveFunctions_C_TemplateLoader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_BooleanOR_ReturnValue_1) == 0x000133, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_GetAssetRegistry_ReturnValue) == 0x000138, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, Temp_int_Loop_Counter_Variable) == 0x000148, "Member 'NinjaLiveFunctions_C_TemplateLoader::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_GetAssetsByPackageName_OutAssetData) == 0x000150, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_GetAssetsByPackageName_OutAssetData' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_GetAssetsByPackageName_ReturnValue) == 0x000160, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_GetAssetsByPackageName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Array_Length_ReturnValue) == 0x000164, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Add_IntInt_ReturnValue_1) == 0x000168, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00016C, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, K2Node_Select_Default) == 0x000170, "Member 'NinjaLiveFunctions_C_TemplateLoader::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Array_Get_Item) == 0x000188, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_GetAsset_ReturnValue) == 0x0001F0, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_TemplateLoader, CallFunc_IsValid_ReturnValue_1) == 0x0001F8, "Member 'NinjaLiveFunctions_C_TemplateLoader::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function NinjaLiveFunctions.NinjaLiveFunctions_C.AcquireRenderTargetsFromPool
// 0x0128 (0x0128 - 0x0000)
struct NinjaLiveFunctions_C_AcquireRenderTargetsFromPool final
{
public:
	int32                                         Request_0_RGBA__1_RG__2_R_;                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HostMinusRenderTGMinusListMinusIndex;              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         RenderTargetList;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class UTextureRenderTarget2D*> RenderTargetsMapTmp;                               // 0x0020(0x0050)(Parm, OutParm)
	TMap<class FString, class UTextureRenderTarget2D*> RenderTargetsMap;                                  // 0x0070(0x0050)(Edit, BlueprintVisible)
	TArray<class ANinjaLive_MemoryPoolManager_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C0(0x0010)(ReferenceParm)
	class ANinjaLive_MemoryPoolManager_C*         CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRenderTargetListItem>          K2Node_Select_Default;                             // 0x00F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRenderTargetListItem                  K2Node_MakeStruct_RenderTargetListItem;            // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool) == 0x000008, "Wrong alignment on NinjaLiveFunctions_C_AcquireRenderTargetsFromPool");
static_assert(sizeof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool) == 0x000128, "Wrong size on NinjaLiveFunctions_C_AcquireRenderTargetsFromPool");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, Request_0_RGBA__1_RG__2_R_) == 0x000000, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::Request_0_RGBA__1_RG__2_R_' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, HostMinusRenderTGMinusListMinusIndex) == 0x000004, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::HostMinusRenderTGMinusListMinusIndex' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, RenderTargetList) == 0x000008, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::RenderTargetList' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, __WorldContext) == 0x000018, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::__WorldContext' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, RenderTargetsMapTmp) == 0x000020, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::RenderTargetsMapTmp' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, RenderTargetsMap) == 0x000070, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::RenderTargetsMap' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C0, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, Temp_bool_Variable) == 0x0000E8, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, CallFunc_Not_PreBool_ReturnValue) == 0x0000E9, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, Temp_int_Variable) == 0x0000EC, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, Temp_int_Variable_1) == 0x0000F4, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, K2Node_Select_Default) == 0x0000F8, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, CallFunc_Subtract_IntInt_ReturnValue) == 0x00010C, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000110, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000111, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, CallFunc_BooleanAND_ReturnValue) == 0x000112, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_AcquireRenderTargetsFromPool, K2Node_MakeStruct_RenderTargetListItem) == 0x000118, "Member 'NinjaLiveFunctions_C_AcquireRenderTargetsFromPool::K2Node_MakeStruct_RenderTargetListItem' has a wrong offset!");

// Function NinjaLiveFunctions.NinjaLiveFunctions_C.RenderTgAcquisitionStatus
// 0x0230 (0x0230 - 0x0000)
struct NinjaLiveFunctions_C_RenderTgAcquisitionStatus final
{
public:
	const class UObject*                          SelfRef;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RT_number_Minus_added;                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESimPrecision_Enum                            SimPrecision;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResX;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ResY;                                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PoolManDetected;                                   // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HalfRes;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfChannels;                                  // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Print;                                             // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	float                                         MemConsumtion;                                     // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_2;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_3;          // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_4;          // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_5;          // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_6;          // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_7;          // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_8;          // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESimPrecision_Enum                            Temp_byte_Variable;                                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus) == 0x000008, "Wrong alignment on NinjaLiveFunctions_C_RenderTgAcquisitionStatus");
static_assert(sizeof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus) == 0x000230, "Wrong size on NinjaLiveFunctions_C_RenderTgAcquisitionStatus");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, SelfRef) == 0x000000, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::SelfRef' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, RT_number_Minus_added) == 0x000008, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::RT_number_Minus_added' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, SimPrecision) == 0x00000C, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::SimPrecision' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, ResX) == 0x000010, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::ResX' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, ResY) == 0x000014, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::ResY' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, PoolManDetected) == 0x000018, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::PoolManDetected' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, HalfRes) == 0x000019, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::HalfRes' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, NumberOfChannels) == 0x00001C, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::NumberOfChannels' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, __WorldContext) == 0x000020, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::__WorldContext' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, Print) == 0x000028, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::Print' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, MemConsumtion) == 0x000038, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::MemConsumtion' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_MakeLiteralString_ReturnValue) == 0x000040, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_MakeLiteralInt_ReturnValue) == 0x000050, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Multiply_IntInt_ReturnValue) == 0x000058, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000070, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_GetDisplayName_ReturnValue) == 0x000080, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000090, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_MakeLiteralString_ReturnValue_2) == 0x0000A0, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_MakeLiteralString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_SelectString_ReturnValue) == 0x0000B0, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, Temp_int_Variable) == 0x0000C0, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_MakeLiteralString_ReturnValue_3) == 0x0000C8, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_MakeLiteralString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_MakeLiteralString_ReturnValue_4) == 0x0000D8, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_MakeLiteralString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, Temp_int_Variable_1) == 0x0000E8, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, K2Node_Select_Default) == 0x0000F0, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue) == 0x000100, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_MakeLiteralString_ReturnValue_5) == 0x000110, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_MakeLiteralString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_MakeLiteralString_ReturnValue_6) == 0x000120, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_MakeLiteralString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000130, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_MakeLiteralString_ReturnValue_7) == 0x000140, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_MakeLiteralString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000150, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000160, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000170, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000180, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000190, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001A0, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001B0, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001C0, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, Temp_int_Variable_2) == 0x0001D0, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_MakeLiteralString_ReturnValue_8) == 0x0001D8, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_MakeLiteralString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001E8, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, Temp_byte_Variable) == 0x0001F8, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_SelectString_ReturnValue_1) == 0x000200, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, K2Node_Select_Default_1) == 0x000210, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000214, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x000218, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00021C, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000220, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000224, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_RenderTgAcquisitionStatus, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000228, "Member 'NinjaLiveFunctions_C_RenderTgAcquisitionStatus::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function NinjaLiveFunctions.NinjaLiveFunctions_C.CameraFacing
// 0x0148 (0x0148 - 0x0000)
struct NinjaLiveFunctions_C_CameraFacing final
{
public:
	class USceneComponent*                        InMesh;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLegacyFacing;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LockY;                                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               TraceMeshInitRot;                                  // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default_1;                           // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(NinjaLiveFunctions_C_CameraFacing) == 0x000008, "Wrong alignment on NinjaLiveFunctions_C_CameraFacing");
static_assert(sizeof(NinjaLiveFunctions_C_CameraFacing) == 0x000148, "Wrong size on NinjaLiveFunctions_C_CameraFacing");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, InMesh) == 0x000000, "Member 'NinjaLiveFunctions_C_CameraFacing::InMesh' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, UseLegacyFacing) == 0x000008, "Member 'NinjaLiveFunctions_C_CameraFacing::UseLegacyFacing' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, LockY) == 0x000009, "Member 'NinjaLiveFunctions_C_CameraFacing::LockY' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, TraceMeshInitRot) == 0x00000C, "Member 'NinjaLiveFunctions_C_CameraFacing::TraceMeshInitRot' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, __WorldContext) == 0x000018, "Member 'NinjaLiveFunctions_C_CameraFacing::__WorldContext' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, Temp_bool_Variable) == 0x000020, "Member 'NinjaLiveFunctions_C_CameraFacing::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000028, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_GetCameraRotation_ReturnValue) == 0x000030, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_ComposeRotators_ReturnValue) == 0x000048, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000054, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, Temp_bool_Variable_1) == 0x000060, "Member 'NinjaLiveFunctions_C_CameraFacing::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_FindLookAtRotation_ReturnValue) == 0x000064, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_MakeRotator_ReturnValue) == 0x00007C, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_ComposeRotators_ReturnValue_1) == 0x00008C, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000098, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_MakeRotator_ReturnValue_1) == 0x00009C, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, K2Node_Select_Default) == 0x0000A8, "Member 'NinjaLiveFunctions_C_CameraFacing::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, K2Node_Select_Default_1) == 0x0000B4, "Member 'NinjaLiveFunctions_C_CameraFacing::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(NinjaLiveFunctions_C_CameraFacing, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000C0, "Member 'NinjaLiveFunctions_C_CameraFacing::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

}

