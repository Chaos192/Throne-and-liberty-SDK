#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TrailComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ST_TrailData_structs.hpp"
#include "TLScene_structs.hpp"


namespace SDK::Params
{

// Function BP_TrailComponent.BP_TrailComponent_C.ExecuteUbergraph_BP_TrailComponent
// 0x0310 (0x0310 - 0x0000)
struct BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_TrailsManager_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TrailsManager_C*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTrailProperties                       K2Node_Event_Properties;                           // 0x0094(0x0010)(ConstParm, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0140(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Distance2D_ReturnValue;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TLIsTrailsEnabled_ReturnValue;            // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x01A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_FindTrailSurface_OutHitResult;            // 0x01C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item_1;                         // 0x01D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESnPhysicalSurface                            CallFunc_TLGetPhysicalSurfaceOriginal_OutSurface;  // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E[0x2];                                      // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TLGetPhysicalSurfaceOriginal_OutTextureBlendingWeight; // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0267(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALandscapeStreamingProxy*               K2Node_DynamicCast_AsLandscape_Streaming_Proxy;    // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent) == 0x000008, "Wrong alignment on BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent");
static_assert(sizeof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent) == 0x000310, "Wrong size on BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, EntryPoint) == 0x000000, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, Temp_byte_Variable) == 0x000004, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, Temp_byte_Variable_1) == 0x000005, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000E, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000010, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, Temp_bool_Variable) == 0x000030, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000046, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BooleanOR_ReturnValue) == 0x000047, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000058, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000064, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakVector_X) == 0x000070, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakVector_Y) == 0x000074, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakVector_Z) == 0x000078, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_FMax_ReturnValue) == 0x00007C, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000080, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000081, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000084, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, K2Node_Event_Properties) == 0x000094, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::K2Node_Event_Properties' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000A8, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BooleanOR_ReturnValue_1) == 0x000130, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Add_VectorVector_ReturnValue) == 0x000134, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, Temp_object_Variable) == 0x000140, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000150, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_MakeVector_ReturnValue) == 0x000154, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, K2Node_Select_Default) == 0x000160, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_MakeVector_ReturnValue_1) == 0x000164, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000170, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, Temp_int_Loop_Counter_Variable) == 0x00017C, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_GetCameraLocation_ReturnValue) == 0x000180, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x00018C, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000194, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Distance2D_ReturnValue) == 0x000198, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00019C, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001A0, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_TLIsTrailsEnabled_ReturnValue) == 0x0001A1, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_TLIsTrailsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x0001A8, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x0001B8, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BooleanOR_ReturnValue_2) == 0x0001B9, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_FindTrailSurface_OutHitResult) == 0x0001C0, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_FindTrailSurface_OutHitResult' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Array_Length_ReturnValue_1) == 0x0001D0, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Array_Get_Item_1) == 0x0001D4, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_Less_IntInt_ReturnValue_1) == 0x00025C, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_TLGetPhysicalSurfaceOriginal_OutSurface) == 0x00025D, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_TLGetPhysicalSurfaceOriginal_OutSurface' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_TLGetPhysicalSurfaceOriginal_OutTextureBlendingWeight) == 0x000260, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_TLGetPhysicalSurfaceOriginal_OutTextureBlendingWeight' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BooleanAND_ReturnValue) == 0x000264, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000265, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000266, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_bBlockingHit) == 0x000267, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_bInitialOverlap) == 0x000268, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_Time) == 0x00026C, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_Distance) == 0x000270, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_Location) == 0x000274, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_ImpactPoint) == 0x000280, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_Normal) == 0x00028C, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_ImpactNormal) == 0x000298, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_PhysMat) == 0x0002A8, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_HitActor) == 0x0002B0, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_HitComponent) == 0x0002B8, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_HitBoneName) == 0x0002C0, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_HitItem) == 0x0002C8, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_ElementIndex) == 0x0002CC, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_FaceIndex) == 0x0002D0, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_TraceStart) == 0x0002D4, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BreakHitResult_TraceEnd) == 0x0002E0, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, CallFunc_BooleanOR_ReturnValue_3) == 0x0002EC, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x0002F0, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, K2Node_DynamicCast_bSuccess) == 0x0002F8, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, K2Node_DynamicCast_AsLandscape_Streaming_Proxy) == 0x000300, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::K2Node_DynamicCast_AsLandscape_Streaming_Proxy' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent, K2Node_DynamicCast_bSuccess_1) == 0x000308, "Member 'BP_TrailComponent_C_ExecuteUbergraph_BP_TrailComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_TrailComponent.BP_TrailComponent_C.SetTrailProperties
// 0x0010 (0x0010 - 0x0000)
struct BP_TrailComponent_C_SetTrailProperties final
{
public:
	struct FTrailProperties                       Properties;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_TrailComponent_C_SetTrailProperties) == 0x000004, "Wrong alignment on BP_TrailComponent_C_SetTrailProperties");
static_assert(sizeof(BP_TrailComponent_C_SetTrailProperties) == 0x000010, "Wrong size on BP_TrailComponent_C_SetTrailProperties");
static_assert(offsetof(BP_TrailComponent_C_SetTrailProperties, Properties) == 0x000000, "Member 'BP_TrailComponent_C_SetTrailProperties::Properties' has a wrong offset!");

// Function BP_TrailComponent.BP_TrailComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_TrailComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrailComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_TrailComponent_C_ReceiveTick");
static_assert(sizeof(BP_TrailComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_TrailComponent_C_ReceiveTick");
static_assert(offsetof(BP_TrailComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_TrailComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_TrailComponent.BP_TrailComponent_C.CalculateWeight
// 0x0018 (0x0018 - 0x0000)
struct BP_TrailComponent_C_CalculateWeight final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrailComponent_C_CalculateWeight) == 0x000004, "Wrong alignment on BP_TrailComponent_C_CalculateWeight");
static_assert(sizeof(BP_TrailComponent_C_CalculateWeight) == 0x000018, "Wrong size on BP_TrailComponent_C_CalculateWeight");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight, Distance) == 0x000000, "Member 'BP_TrailComponent_C_CalculateWeight::Distance' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight, Weight) == 0x000004, "Member 'BP_TrailComponent_C_CalculateWeight::Weight' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_TrailComponent_C_CalculateWeight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_TrailComponent_C_CalculateWeight::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'BP_TrailComponent_C_CalculateWeight::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BP_TrailComponent_C_CalculateWeight::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_TrailComponent.BP_TrailComponent_C.CalculateWeight2
// 0x0014 (0x0014 - 0x0000)
struct BP_TrailComponent_C_CalculateWeight2 final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrailComponent_C_CalculateWeight2) == 0x000004, "Wrong alignment on BP_TrailComponent_C_CalculateWeight2");
static_assert(sizeof(BP_TrailComponent_C_CalculateWeight2) == 0x000014, "Wrong size on BP_TrailComponent_C_CalculateWeight2");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight2, Distance) == 0x000000, "Member 'BP_TrailComponent_C_CalculateWeight2::Distance' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight2, Weight) == 0x000004, "Member 'BP_TrailComponent_C_CalculateWeight2::Weight' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight2, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_TrailComponent_C_CalculateWeight2::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight2, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'BP_TrailComponent_C_CalculateWeight2::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_CalculateWeight2, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'BP_TrailComponent_C_CalculateWeight2::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function BP_TrailComponent.BP_TrailComponent_C.TryRegisterTrail
// 0x008C (0x008C - 0x0000)
struct BP_TrailComponent_C_TryRegisterTrail final
{
public:
	float                                         Depth;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SphereCenterToSurfaceDistance;                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IntersectingRadius;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_TrailData                          K2Node_MakeStruct_ST_TrailData;                    // 0x006C(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrailComponent_C_TryRegisterTrail) == 0x000004, "Wrong alignment on BP_TrailComponent_C_TryRegisterTrail");
static_assert(sizeof(BP_TrailComponent_C_TryRegisterTrail) == 0x00008C, "Wrong size on BP_TrailComponent_C_TryRegisterTrail");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, Depth) == 0x000000, "Member 'BP_TrailComponent_C_TryRegisterTrail::Depth' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, SphereCenterToSurfaceDistance) == 0x000004, "Member 'BP_TrailComponent_C_TryRegisterTrail::SphereCenterToSurfaceDistance' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, IntersectingRadius) == 0x000008, "Member 'BP_TrailComponent_C_TryRegisterTrail::IntersectingRadius' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00001C, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_MapRangeClamped_ReturnValue) == 0x000024, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00002C, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000034, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_BreakVector_X) == 0x00003C, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_BreakVector_Z) == 0x000044, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Sqrt_ReturnValue) == 0x00004C, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_BreakVector_X_1) == 0x000050, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_BreakVector_Y_1) == 0x000054, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_SelectFloat_ReturnValue) == 0x00005C, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000060, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000064, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000068, "Member 'BP_TrailComponent_C_TryRegisterTrail::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_TryRegisterTrail, K2Node_MakeStruct_ST_TrailData) == 0x00006C, "Member 'BP_TrailComponent_C_TryRegisterTrail::K2Node_MakeStruct_ST_TrailData' has a wrong offset!");

// Function BP_TrailComponent.BP_TrailComponent_C.FindTrailSurface
// 0x0170 (0x0170 - 0x0000)
struct BP_TrailComponent_C_FindTrailSurface final
{
public:
	TArray<struct FHitResult>                     InHitResults;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FHitResult>                     OutHitResult;                                      // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FHitResult>                     NotTrailSurfaceHitResults;                         // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FHitResult>                     SortedHitResults;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x004C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrailComponent_C_FindTrailSurface) == 0x000008, "Wrong alignment on BP_TrailComponent_C_FindTrailSurface");
static_assert(sizeof(BP_TrailComponent_C_FindTrailSurface) == 0x000170, "Wrong size on BP_TrailComponent_C_FindTrailSurface");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, InHitResults) == 0x000000, "Member 'BP_TrailComponent_C_FindTrailSurface::InHitResults' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, OutHitResult) == 0x000010, "Member 'BP_TrailComponent_C_FindTrailSurface::OutHitResult' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, NotTrailSurfaceHitResults) == 0x000020, "Member 'BP_TrailComponent_C_FindTrailSurface::NotTrailSurfaceHitResults' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, SortedHitResults) == 0x000030, "Member 'BP_TrailComponent_C_FindTrailSurface::SortedHitResults' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_TrailComponent_C_FindTrailSurface::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_TrailComponent_C_FindTrailSurface::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_Array_Get_Item) == 0x00004C, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D4, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D5, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_Time) == 0x0000D8, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_Distance) == 0x0000DC, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_Location) == 0x0000E0, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_ImpactPoint) == 0x0000EC, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_Normal) == 0x0000F8, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_ImpactNormal) == 0x000104, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_ElementIndex) == 0x000134, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_FaceIndex) == 0x000138, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_TraceStart) == 0x00013C, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_BreakHitResult_TraceEnd) == 0x000148, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000158, "Member 'BP_TrailComponent_C_FindTrailSurface::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BP_TrailComponent_C_FindTrailSurface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_Add_IntInt_ReturnValue) == 0x000164, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_Array_Add_ReturnValue) == 0x000168, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_FindTrailSurface, CallFunc_Array_Add_ReturnValue_1) == 0x00016C, "Member 'BP_TrailComponent_C_FindTrailSurface::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_TrailComponent.BP_TrailComponent_C.GetCameraLocation
// 0x0068 (0x0068 - 0x0000)
struct BP_TrailComponent_C_GetCameraLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADebugCameraController*                 K2Node_DynamicCast_AsDebug_Camera_Controller;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrailComponent_C_GetCameraLocation) == 0x000008, "Wrong alignment on BP_TrailComponent_C_GetCameraLocation");
static_assert(sizeof(BP_TrailComponent_C_GetCameraLocation) == 0x000068, "Wrong size on BP_TrailComponent_C_GetCameraLocation");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, ReturnValue) == 0x000000, "Member 'BP_TrailComponent_C_GetCameraLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, Temp_bool_Variable) == 0x00000C, "Member 'BP_TrailComponent_C_GetCameraLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000010, "Member 'BP_TrailComponent_C_GetCameraLocation::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, K2Node_DynamicCast_AsDebug_Camera_Controller) == 0x000018, "Member 'BP_TrailComponent_C_GetCameraLocation::K2Node_DynamicCast_AsDebug_Camera_Controller' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_TrailComponent_C_GetCameraLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000028, "Member 'BP_TrailComponent_C_GetCameraLocation::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, CallFunc_GetCameraLocation_ReturnValue) == 0x000030, "Member 'BP_TrailComponent_C_GetCameraLocation::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BP_TrailComponent_C_GetCameraLocation::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_TrailComponent_C_GetCameraLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, K2Node_Select_Default) == 0x000050, "Member 'BP_TrailComponent_C_GetCameraLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TrailComponent_C_GetCameraLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_TrailComponent_C_GetCameraLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

}

