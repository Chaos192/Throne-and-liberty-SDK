#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlowingSandDynamic

#include "Basic.hpp"

#include "BP_FlowingSandDynamic_classes.hpp"
#include "BP_FlowingSandDynamic_parameters.hpp"


namespace SDK
{

// Function BP_FlowingSandDynamic.BP_FlowingSandDynamic_C.ExecuteUbergraph_BP_FlowingSandDynamic
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FlowingSandDynamic_C::ExecuteUbergraph_BP_FlowingSandDynamic(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FlowingSandDynamic_C", "ExecuteUbergraph_BP_FlowingSandDynamic");

	Params::BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FlowingSandDynamic.BP_FlowingSandDynamic_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FlowingSandDynamic_C::ReceiveTick(float DeltaSeconds_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FlowingSandDynamic_C", "ReceiveTick");

	Params::BP_FlowingSandDynamic_C_ReceiveTick Parms{};

	Parms.DeltaSeconds_0 = DeltaSeconds_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FlowingSandDynamic.BP_FlowingSandDynamic_C.Refresh
// (BlueprintCallable, BlueprintEvent)

void ABP_FlowingSandDynamic_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FlowingSandDynamic_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FlowingSandDynamic.BP_FlowingSandDynamic_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FlowingSandDynamic_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FlowingSandDynamic_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FlowingSandDynamic.BP_FlowingSandDynamic_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FlowingSandDynamic_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FlowingSandDynamic_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FlowingSandDynamic.BP_FlowingSandDynamic_C.CalcY
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Extent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FlowingSandDynamic_C::CalcY(float X, const struct FVector2D& Extent, float* Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FlowingSandDynamic_C", "CalcY");

	Params::BP_FlowingSandDynamic_C_CalcY Parms{};

	Parms.X = X;
	Parms.Extent = std::move(Extent);

	UObject::ProcessEvent(Func, &Parms);

	if (Y != nullptr)
		*Y = Parms.Y;
}

}

