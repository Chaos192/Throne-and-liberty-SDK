#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemTooltip_Equip_Frame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TLClient_structs.hpp"
#include "TLClient_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "TLScheme_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ItemTooltip_Equip_Frame.BP_ItemTooltip_Equip_Frame_C
// 0x01E0 (0x1270 - 0x1090)
class UBP_ItemTooltip_Equip_Frame_C final : public UTLUserWidgetItemTooltipEquipContent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1090(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTLSizeBox*                             ActionGuideBox;                                    // 0x1098(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Black;                                             // 0x10A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Cant_ICO_BTN_C*         BP_Cant_Collection;                                // 0x10A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Cant_ICO_BTN_C*         BP_Cant_Decompose;                                 // 0x10B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Cant_ICO_BTN_C*         BP_Cant_Enchant;                                   // 0x10B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Cant_ICO_BTN_C*         BP_Cant_Enchant_Transfer;                          // 0x10C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Cant_ICO_BTN_C*         BP_Cant_ExShop;                                    // 0x10C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Cant_ICO_BTN_C*         BP_Cant_TrashCan;                                  // 0x10D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Cant_ICO_BTN_C*         BP_Cant_Warehouse;                                 // 0x10D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemToolTip_ContextMenuConsoleFrame_C* BP_ItemToolTip_ContextMenuConsoleFrame;            // 0x10E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Equip_CompareItemTexture_C* BP_ItemTooltip_Equip_CompareItemTexture;           // 0x10E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Equip_StatType_1_C*     BP_ItemTooltip_Equip_StatType;                     // 0x10F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Equip_StatType_2_C*     BP_ItemTooltip_Equip_StatType_2;                   // 0x10F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Equip_StatType_1_C*     BP_ItemTooltip_Equip_StatType_3;                   // 0x1100(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Equip_StatType_Defense_C* BP_ItemTooltip_Equip_StatType_Defense;             // 0x1108(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_Equip_StatType_Defense_C* BP_ItemTooltip_Equip_StatType_Defense_1;           // 0x1110(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ItemTooltip_EquipStatGroup_C*       BP_ItemTooltip_EquipStatGroup;                     // 0x1118(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_UI_ItemSlot_Frame_C*                BP_UI_ItemSlot_Frame;                              // 0x1120(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           CategoryTextBlock;                                 // 0x1128(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         DropActionGuide;                                   // 0x1130(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         DropActionGuide_Console;                           // 0x1138(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           DropActionGuide_PC;                                // 0x1140(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           GradeTextBlock;                                    // 0x1148(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       HBox_MainStatDefenseOnly;                          // 0x1150(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ImageHover_Line;                                   // 0x1158(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLNamedSlot*                           IMG_IMAGES;                                        // 0x1160(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           ItemNameTextBlock;                                 // 0x1168(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ItemSlot_Frame;                                    // 0x1170(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBorder*                              KeyGuide_ContextMenu;                              // 0x1178(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBorder*                              KeyGuide_WeaponCostume;                            // 0x1180(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           LevelTextBlock;                                    // 0x1188(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSizeBox*                             PanelMinSize;                                      // 0x1190(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       Title_HBox;                                        // 0x1198(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLHorizontalBox_Fixed;                             // 0x11A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLHorizontalBox_Fixed_1;                           // 0x11A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLHorizontalBox_MoveArea;                          // 0x11B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLScrollBox*                           TLScrollBox_Stat;                                  // 0x11B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TLTextBlock_2;                                     // 0x11C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         TopInfo_VBox;                                      // 0x11C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ActionGuide;                                   // 0x11D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ActionGuide_1;                                 // 0x11D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ActionGuide_2;                                 // 0x11E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ActionGuide_3;                                 // 0x11E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ActionGuide_4;                                 // 0x11F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ActionGuide_6;                                 // 0x11F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ActionGuide_7;                                 // 0x1200(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ActionGuide_11;                                // 0x1208(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_ActionGuide_12;                                // 0x1210(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_CraftingInfo;                                  // 0x1218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         VBox_FixedStat;                                    // 0x1220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         VBox_MainStat;                                     // 0x1228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         VBox_SubStat;                                      // 0x1230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ETLItemCollectableState                       CollectableState;                                  // 0x1238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1239[0x7];                                     // 0x1239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        Lucky_Bind;                                        // 0x1240(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSoftObjectPath                        Normal_Bind;                                       // 0x1258(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ItemTooltip_Equip_Frame(int32 EntryPoint);
	void OnUpdateDropActionGuide(const bool bShow, const bool bIsConsole);
	void OnUpdateFocusMoveAreaGuide(const bool bShow);
	void OnChangeScrollContentAutonFocus(const bool bFocus);
	void OnUpdateTotalMenu(bool bInEnable, bool bInShow);
	void OnExistStats(bool InIsExist);
	void OnUpdateTradableIcon(bool bIsTradable, bool bIsOverwriteExchangeable);
	void OnUpdateEnchant(bool bInIsVisible, bool bInIsEnable, int32 InMaxLevel);
	void OnUpdateEnchantTransfer(bool bInIsVisible, bool bInIsEnable, int32 InCount);
	void OnUpdateEquipPositionName(const class FText& InName);
	void OnCollectionClick();
	void PreConstruct(bool IsDesignTime);
	void OnUpdateCollectable(ETLItemCollectableState InCollectableState, int32 InConditionLevel);
	void OnUpdateStorable(bool bIsStorable);
	void OnUpdateDestructible(bool bIsDestructible);
	void OnUpdateDecomposable(bool bIsDecomposable);
	void OnUpdateTradePriceInfo(bool InShowTradePrice, const class FText& RecentPriceText, const class FText& SaleCountText);
	void OnEmphasizeComponent(EItemTooltipComponent InComponent, bool InEmphasize);
	void OnUpdateRequireLevel(int32 InRequireLevel, int32 InPcLevel);
	void OnPosetUpdateContent();
	void OnUpdateCategoryName(const class FText& InName);
	void OnUpdateGradeColor(const class FText& InGradeName, class FName InColorTableKey);
	void OnUpdateItemName(const class FText& InName);
	void OnPresetInfoUpdate(const bool InIsOtherPreset);
	void OnItemLockUpdate(const bool InLock);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemTooltip_Equip_Frame_C">();
	}
	static class UBP_ItemTooltip_Equip_Frame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ItemTooltip_Equip_Frame_C>();
	}
};
static_assert(alignof(UBP_ItemTooltip_Equip_Frame_C) == 0x000008, "Wrong alignment on UBP_ItemTooltip_Equip_Frame_C");
static_assert(sizeof(UBP_ItemTooltip_Equip_Frame_C) == 0x001270, "Wrong size on UBP_ItemTooltip_Equip_Frame_C");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, UberGraphFrame) == 0x001090, "Member 'UBP_ItemTooltip_Equip_Frame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, ActionGuideBox) == 0x001098, "Member 'UBP_ItemTooltip_Equip_Frame_C::ActionGuideBox' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, Black) == 0x0010A0, "Member 'UBP_ItemTooltip_Equip_Frame_C::Black' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_Cant_Collection) == 0x0010A8, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_Cant_Collection' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_Cant_Decompose) == 0x0010B0, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_Cant_Decompose' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_Cant_Enchant) == 0x0010B8, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_Cant_Enchant' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_Cant_Enchant_Transfer) == 0x0010C0, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_Cant_Enchant_Transfer' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_Cant_ExShop) == 0x0010C8, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_Cant_ExShop' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_Cant_TrashCan) == 0x0010D0, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_Cant_TrashCan' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_Cant_Warehouse) == 0x0010D8, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_Cant_Warehouse' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_ItemToolTip_ContextMenuConsoleFrame) == 0x0010E0, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_ItemToolTip_ContextMenuConsoleFrame' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_ItemTooltip_Equip_CompareItemTexture) == 0x0010E8, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_ItemTooltip_Equip_CompareItemTexture' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_ItemTooltip_Equip_StatType) == 0x0010F0, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_ItemTooltip_Equip_StatType' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_ItemTooltip_Equip_StatType_2) == 0x0010F8, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_ItemTooltip_Equip_StatType_2' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_ItemTooltip_Equip_StatType_3) == 0x001100, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_ItemTooltip_Equip_StatType_3' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_ItemTooltip_Equip_StatType_Defense) == 0x001108, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_ItemTooltip_Equip_StatType_Defense' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_ItemTooltip_Equip_StatType_Defense_1) == 0x001110, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_ItemTooltip_Equip_StatType_Defense_1' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_ItemTooltip_EquipStatGroup) == 0x001118, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_ItemTooltip_EquipStatGroup' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, BP_UI_ItemSlot_Frame) == 0x001120, "Member 'UBP_ItemTooltip_Equip_Frame_C::BP_UI_ItemSlot_Frame' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, CategoryTextBlock) == 0x001128, "Member 'UBP_ItemTooltip_Equip_Frame_C::CategoryTextBlock' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, DropActionGuide) == 0x001130, "Member 'UBP_ItemTooltip_Equip_Frame_C::DropActionGuide' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, DropActionGuide_Console) == 0x001138, "Member 'UBP_ItemTooltip_Equip_Frame_C::DropActionGuide_Console' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, DropActionGuide_PC) == 0x001140, "Member 'UBP_ItemTooltip_Equip_Frame_C::DropActionGuide_PC' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, GradeTextBlock) == 0x001148, "Member 'UBP_ItemTooltip_Equip_Frame_C::GradeTextBlock' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, HBox_MainStatDefenseOnly) == 0x001150, "Member 'UBP_ItemTooltip_Equip_Frame_C::HBox_MainStatDefenseOnly' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, ImageHover_Line) == 0x001158, "Member 'UBP_ItemTooltip_Equip_Frame_C::ImageHover_Line' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, IMG_IMAGES) == 0x001160, "Member 'UBP_ItemTooltip_Equip_Frame_C::IMG_IMAGES' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, ItemNameTextBlock) == 0x001168, "Member 'UBP_ItemTooltip_Equip_Frame_C::ItemNameTextBlock' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, ItemSlot_Frame) == 0x001170, "Member 'UBP_ItemTooltip_Equip_Frame_C::ItemSlot_Frame' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, KeyGuide_ContextMenu) == 0x001178, "Member 'UBP_ItemTooltip_Equip_Frame_C::KeyGuide_ContextMenu' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, KeyGuide_WeaponCostume) == 0x001180, "Member 'UBP_ItemTooltip_Equip_Frame_C::KeyGuide_WeaponCostume' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, LevelTextBlock) == 0x001188, "Member 'UBP_ItemTooltip_Equip_Frame_C::LevelTextBlock' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, PanelMinSize) == 0x001190, "Member 'UBP_ItemTooltip_Equip_Frame_C::PanelMinSize' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, Title_HBox) == 0x001198, "Member 'UBP_ItemTooltip_Equip_Frame_C::Title_HBox' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TLHorizontalBox_Fixed) == 0x0011A0, "Member 'UBP_ItemTooltip_Equip_Frame_C::TLHorizontalBox_Fixed' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TLHorizontalBox_Fixed_1) == 0x0011A8, "Member 'UBP_ItemTooltip_Equip_Frame_C::TLHorizontalBox_Fixed_1' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TLHorizontalBox_MoveArea) == 0x0011B0, "Member 'UBP_ItemTooltip_Equip_Frame_C::TLHorizontalBox_MoveArea' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TLScrollBox_Stat) == 0x0011B8, "Member 'UBP_ItemTooltip_Equip_Frame_C::TLScrollBox_Stat' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TLTextBlock_2) == 0x0011C0, "Member 'UBP_ItemTooltip_Equip_Frame_C::TLTextBlock_2' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TopInfo_VBox) == 0x0011C8, "Member 'UBP_ItemTooltip_Equip_Frame_C::TopInfo_VBox' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TXT_ActionGuide) == 0x0011D0, "Member 'UBP_ItemTooltip_Equip_Frame_C::TXT_ActionGuide' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TXT_ActionGuide_1) == 0x0011D8, "Member 'UBP_ItemTooltip_Equip_Frame_C::TXT_ActionGuide_1' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TXT_ActionGuide_2) == 0x0011E0, "Member 'UBP_ItemTooltip_Equip_Frame_C::TXT_ActionGuide_2' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TXT_ActionGuide_3) == 0x0011E8, "Member 'UBP_ItemTooltip_Equip_Frame_C::TXT_ActionGuide_3' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TXT_ActionGuide_4) == 0x0011F0, "Member 'UBP_ItemTooltip_Equip_Frame_C::TXT_ActionGuide_4' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TXT_ActionGuide_6) == 0x0011F8, "Member 'UBP_ItemTooltip_Equip_Frame_C::TXT_ActionGuide_6' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TXT_ActionGuide_7) == 0x001200, "Member 'UBP_ItemTooltip_Equip_Frame_C::TXT_ActionGuide_7' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TXT_ActionGuide_11) == 0x001208, "Member 'UBP_ItemTooltip_Equip_Frame_C::TXT_ActionGuide_11' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TXT_ActionGuide_12) == 0x001210, "Member 'UBP_ItemTooltip_Equip_Frame_C::TXT_ActionGuide_12' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, TXT_CraftingInfo) == 0x001218, "Member 'UBP_ItemTooltip_Equip_Frame_C::TXT_CraftingInfo' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, VBox_FixedStat) == 0x001220, "Member 'UBP_ItemTooltip_Equip_Frame_C::VBox_FixedStat' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, VBox_MainStat) == 0x001228, "Member 'UBP_ItemTooltip_Equip_Frame_C::VBox_MainStat' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, VBox_SubStat) == 0x001230, "Member 'UBP_ItemTooltip_Equip_Frame_C::VBox_SubStat' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, CollectableState) == 0x001238, "Member 'UBP_ItemTooltip_Equip_Frame_C::CollectableState' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, Lucky_Bind) == 0x001240, "Member 'UBP_ItemTooltip_Equip_Frame_C::Lucky_Bind' has a wrong offset!");
static_assert(offsetof(UBP_ItemTooltip_Equip_Frame_C, Normal_Bind) == 0x001258, "Member 'UBP_ItemTooltip_Equip_Frame_C::Normal_Bind' has a wrong offset!");

}

