#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadarChart

#include "Basic.hpp"

#include "RadarChart_classes.hpp"
#include "RadarChart_parameters.hpp"


namespace SDK
{

// Function RadarChart.RadarChart.InvalidateAllMaterials
// (Final, Native, Public, BlueprintCallable)

void URadarChart::InvalidateAllMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadarChart", "InvalidateAllMaterials");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RadarChart.RadarChart.InvalidateMaterial
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FRadarChartAppearance            InAppearance                                           (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void URadarChart::InvalidateMaterial(struct FRadarChartAppearance& InAppearance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadarChart", "InvalidateMaterial");

	Params::RadarChart_InvalidateMaterial Parms{};

	Parms.InAppearance = std::move(InAppearance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InAppearance = std::move(Parms.InAppearance);
}


// Function RadarChart.RadarChart.InvalidatePanel
// (Final, Native, Public, BlueprintCallable)

void URadarChart::InvalidatePanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadarChart", "InvalidatePanel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function RadarChart.RadarChart.SetAllValuesData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FRadarChartValueData>     InValues                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URadarChart::SetAllValuesData(const TArray<struct FRadarChartValueData>& InValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadarChart", "SetAllValuesData");

	Params::RadarChart_SetAllValuesData Parms{};

	Parms.InValues = std::move(InValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RadarChart.RadarChart.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   ValueLayerIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ValueIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void URadarChart::SetValue(uint8 ValueLayerIndex, uint8 ValueIndex, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadarChart", "SetValue");

	Params::RadarChart_SetValue Parms{};

	Parms.ValueLayerIndex = ValueLayerIndex;
	Parms.ValueIndex = ValueIndex;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RadarChart.RadarChart.SetValuesDataForLayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   ValueLayerIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRadarChartValueData             InValues                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void URadarChart::SetValuesDataForLayer(uint8 ValueLayerIndex, const struct FRadarChartValueData& InValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadarChart", "SetValuesDataForLayer");

	Params::RadarChart_SetValuesDataForLayer Parms{};

	Parms.ValueLayerIndex = ValueLayerIndex;
	Parms.InValues = std::move(InValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function RadarChart.RadarChart.SetValuesForLayer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// uint8                                   ValueLayerIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           InValues                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void URadarChart::SetValuesForLayer(uint8 ValueLayerIndex, const TArray<float>& InValues)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadarChart", "SetValuesForLayer");

	Params::RadarChart_SetValuesForLayer Parms{};

	Parms.ValueLayerIndex = ValueLayerIndex;
	Parms.InValues = std::move(InValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

