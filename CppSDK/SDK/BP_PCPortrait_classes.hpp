#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PCPortrait

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_PCPortrait.BP_PCPortrait_C
// 0x0028 (0x0CB8 - 0x0C90)
class UBP_PCPortrait_C final : public UTLUserWidgetPcPortrait
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTLImage*                               Portrait;                                          // 0x0C98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSizeBox*                             TLSizeBox_Portrait;                                // 0x0CA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              PortraitSize;                                      // 0x0CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               In_Mask_Texture;                                   // 0x0CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PCPortrait(int32 EntryPoint);
	void OnUpdateNotification(bool InIsOn);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PCPortrait_C">();
	}
	static class UBP_PCPortrait_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PCPortrait_C>();
	}
};
static_assert(alignof(UBP_PCPortrait_C) == 0x000008, "Wrong alignment on UBP_PCPortrait_C");
static_assert(sizeof(UBP_PCPortrait_C) == 0x000CB8, "Wrong size on UBP_PCPortrait_C");
static_assert(offsetof(UBP_PCPortrait_C, UberGraphFrame) == 0x000C90, "Member 'UBP_PCPortrait_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PCPortrait_C, Portrait) == 0x000C98, "Member 'UBP_PCPortrait_C::Portrait' has a wrong offset!");
static_assert(offsetof(UBP_PCPortrait_C, TLSizeBox_Portrait) == 0x000CA0, "Member 'UBP_PCPortrait_C::TLSizeBox_Portrait' has a wrong offset!");
static_assert(offsetof(UBP_PCPortrait_C, PortraitSize) == 0x000CA8, "Member 'UBP_PCPortrait_C::PortraitSize' has a wrong offset!");
static_assert(offsetof(UBP_PCPortrait_C, In_Mask_Texture) == 0x000CB0, "Member 'UBP_PCPortrait_C::In_Mask_Texture' has a wrong offset!");

}

