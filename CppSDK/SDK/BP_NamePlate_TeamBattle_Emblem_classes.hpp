#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NamePlate_TeamBattle_Emblem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_NamePlate_TeamBattle_Emblem.BP_NamePlate_TeamBattle_Emblem_C
// 0x0050 (0x0AE0 - 0x0A90)
class UBP_NamePlate_TeamBattle_Emblem_C final : public UTLUserWidgetDETeamEmblem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A90(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTLImage*                               GuildSlot_Base;                                    // 0x0A98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               IMG_Emblem;                                        // 0x0AA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TeamColor;                                         // 0x0AA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSpacer*                              TLSpacer_Size;                                     // 0x0AB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         EmblemSize;                                        // 0x0AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                EmblemPadding;                                     // 0x0ABC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                TeamColorPadding;                                  // 0x0ACC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowGuildFrame;                                    // 0x0ADC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_NamePlate_TeamBattle_Emblem(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NamePlate_TeamBattle_Emblem_C">();
	}
	static class UBP_NamePlate_TeamBattle_Emblem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NamePlate_TeamBattle_Emblem_C>();
	}
};
static_assert(alignof(UBP_NamePlate_TeamBattle_Emblem_C) == 0x000008, "Wrong alignment on UBP_NamePlate_TeamBattle_Emblem_C");
static_assert(sizeof(UBP_NamePlate_TeamBattle_Emblem_C) == 0x000AE0, "Wrong size on UBP_NamePlate_TeamBattle_Emblem_C");
static_assert(offsetof(UBP_NamePlate_TeamBattle_Emblem_C, UberGraphFrame) == 0x000A90, "Member 'UBP_NamePlate_TeamBattle_Emblem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NamePlate_TeamBattle_Emblem_C, GuildSlot_Base) == 0x000A98, "Member 'UBP_NamePlate_TeamBattle_Emblem_C::GuildSlot_Base' has a wrong offset!");
static_assert(offsetof(UBP_NamePlate_TeamBattle_Emblem_C, IMG_Emblem) == 0x000AA0, "Member 'UBP_NamePlate_TeamBattle_Emblem_C::IMG_Emblem' has a wrong offset!");
static_assert(offsetof(UBP_NamePlate_TeamBattle_Emblem_C, TeamColor) == 0x000AA8, "Member 'UBP_NamePlate_TeamBattle_Emblem_C::TeamColor' has a wrong offset!");
static_assert(offsetof(UBP_NamePlate_TeamBattle_Emblem_C, TLSpacer_Size) == 0x000AB0, "Member 'UBP_NamePlate_TeamBattle_Emblem_C::TLSpacer_Size' has a wrong offset!");
static_assert(offsetof(UBP_NamePlate_TeamBattle_Emblem_C, EmblemSize) == 0x000AB8, "Member 'UBP_NamePlate_TeamBattle_Emblem_C::EmblemSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlate_TeamBattle_Emblem_C, EmblemPadding) == 0x000ABC, "Member 'UBP_NamePlate_TeamBattle_Emblem_C::EmblemPadding' has a wrong offset!");
static_assert(offsetof(UBP_NamePlate_TeamBattle_Emblem_C, TeamColorPadding) == 0x000ACC, "Member 'UBP_NamePlate_TeamBattle_Emblem_C::TeamColorPadding' has a wrong offset!");
static_assert(offsetof(UBP_NamePlate_TeamBattle_Emblem_C, ShowGuildFrame) == 0x000ADC, "Member 'UBP_NamePlate_TeamBattle_Emblem_C::ShowGuildFrame' has a wrong offset!");

}

