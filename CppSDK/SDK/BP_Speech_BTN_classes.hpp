#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Speech_BTN

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Speech_BTN.BP_Speech_BTN_C
// 0x0028 (0x0DD8 - 0x0DB0)
class UBP_Speech_BTN_C final : public UTLUserWidgetButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0DB0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTLImage*                               TLImage_KeyIcon;                                   // 0x0DB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSizeBox*                             TLSizeBox_0;                                       // 0x0DC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_NEXT;                                          // 0x0DC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         BTN_Row;                                           // 0x0DD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BTN_Column;                                        // 0x0DD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Speech_BTN(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Speech_BTN_C">();
	}
	static class UBP_Speech_BTN_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Speech_BTN_C>();
	}
};
static_assert(alignof(UBP_Speech_BTN_C) == 0x000008, "Wrong alignment on UBP_Speech_BTN_C");
static_assert(sizeof(UBP_Speech_BTN_C) == 0x000DD8, "Wrong size on UBP_Speech_BTN_C");
static_assert(offsetof(UBP_Speech_BTN_C, UberGraphFrame) == 0x000DB0, "Member 'UBP_Speech_BTN_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Speech_BTN_C, TLImage_KeyIcon) == 0x000DB8, "Member 'UBP_Speech_BTN_C::TLImage_KeyIcon' has a wrong offset!");
static_assert(offsetof(UBP_Speech_BTN_C, TLSizeBox_0) == 0x000DC0, "Member 'UBP_Speech_BTN_C::TLSizeBox_0' has a wrong offset!");
static_assert(offsetof(UBP_Speech_BTN_C, TXT_NEXT) == 0x000DC8, "Member 'UBP_Speech_BTN_C::TXT_NEXT' has a wrong offset!");
static_assert(offsetof(UBP_Speech_BTN_C, BTN_Row) == 0x000DD0, "Member 'UBP_Speech_BTN_C::BTN_Row' has a wrong offset!");
static_assert(offsetof(UBP_Speech_BTN_C, BTN_Column) == 0x000DD4, "Member 'UBP_Speech_BTN_C::BTN_Column' has a wrong offset!");

}

