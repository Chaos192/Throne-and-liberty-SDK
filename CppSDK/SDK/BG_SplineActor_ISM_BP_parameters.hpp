#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BG_SplineActor_ISM_BP

#include "Basic.hpp"

#include "BG_SplineActor_Random_Value_structs.hpp"
#include "BG_SplineActor_Spline_Data_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BG_SplineActor_ISM_BP.BG_SplineActor_ISM_BP_C.ExecuteUbergraph_BG_SplineActor_ISM_BP
// 0x0004 (0x0004 - 0x0000)
struct BG_SplineActor_ISM_BP_C_ExecuteUbergraph_BG_SplineActor_ISM_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BG_SplineActor_ISM_BP_C_ExecuteUbergraph_BG_SplineActor_ISM_BP) == 0x000004, "Wrong alignment on BG_SplineActor_ISM_BP_C_ExecuteUbergraph_BG_SplineActor_ISM_BP");
static_assert(sizeof(BG_SplineActor_ISM_BP_C_ExecuteUbergraph_BG_SplineActor_ISM_BP) == 0x000004, "Wrong size on BG_SplineActor_ISM_BP_C_ExecuteUbergraph_BG_SplineActor_ISM_BP");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_ExecuteUbergraph_BG_SplineActor_ISM_BP, EntryPoint) == 0x000000, "Member 'BG_SplineActor_ISM_BP_C_ExecuteUbergraph_BG_SplineActor_ISM_BP::EntryPoint' has a wrong offset!");

// Function BG_SplineActor_ISM_BP.BG_SplineActor_ISM_BP_C.UserConstructionScript
// 0x00A0 (0x00A0 - 0x0000)
struct BG_SplineActor_ISM_BP_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBG_SplineActor_Spline_Data            K2Node_MakeStruct_BG_SplineActor_Spline_Data;      // 0x0008(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBG_SplineActor_Random_Value           K2Node_MakeStruct_BG_SplineActor_Random_Value;     // 0x0080(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BG_SplineActor_ISM_BP_C_UserConstructionScript) == 0x000008, "Wrong alignment on BG_SplineActor_ISM_BP_C_UserConstructionScript");
static_assert(sizeof(BG_SplineActor_ISM_BP_C_UserConstructionScript) == 0x0000A0, "Wrong size on BG_SplineActor_ISM_BP_C_UserConstructionScript");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, K2Node_MakeStruct_BG_SplineActor_Spline_Data) == 0x000008, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::K2Node_MakeStruct_BG_SplineActor_Spline_Data' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Array_LastIndex_ReturnValue) == 0x000060, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000068, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_GetSplineLength_ReturnValue) == 0x00006C, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_FMod_Remainder) == 0x000070, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_FMod_ReturnValue) == 0x000074, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue) == 0x00007C, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00007D, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00007E, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007F, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, K2Node_MakeStruct_BG_SplineActor_Random_Value) == 0x000080, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::K2Node_MakeStruct_BG_SplineActor_Random_Value' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000094, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue_1) == 0x000098, "Member 'BG_SplineActor_ISM_BP_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BG_SplineActor_ISM_BP.BG_SplineActor_ISM_BP_C.Build Wall
// 0x0150 (0x0150 - 0x0000)
struct BG_SplineActor_ISM_BP_C_Build_Wall final
{
public:
	class UStaticMesh*                            Wall;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Last_Index;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Index;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Local_Rotation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Local_Location;                                    // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Get_Rotation_rotation;                    // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Get_Rotation_rotation_1;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0xC];                                       // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BG_SplineActor_ISM_BP_C_Build_Wall) == 0x000010, "Wrong alignment on BG_SplineActor_ISM_BP_C_Build_Wall");
static_assert(sizeof(BG_SplineActor_ISM_BP_C_Build_Wall) == 0x000150, "Wrong size on BG_SplineActor_ISM_BP_C_Build_Wall");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, Wall) == 0x000000, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::Wall' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, Local_Last_Index) == 0x000008, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::Local_Last_Index' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, Local_Index) == 0x00000C, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::Local_Index' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, Local_Rotation) == 0x000010, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::Local_Rotation' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, Local_Location) == 0x00001C, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::Local_Location' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, Temp_int_Variable) == 0x00002C, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_Get_Rotation_rotation) == 0x000070, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_Get_Rotation_rotation' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_GetSplineLength_ReturnValue) == 0x00007C, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_FMod_Remainder) == 0x000084, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_FMod_ReturnValue) == 0x000088, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_Get_Rotation_rotation_1) == 0x00008C, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_Get_Rotation_rotation_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000098, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00009C, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, Temp_int_Variable_1) == 0x0000A0, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_MakeVector_ReturnValue) == 0x0000A4, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_MakeTransform_ReturnValue_1) == 0x0000B0, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_ComposeTransforms_ReturnValue) == 0x0000F0, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000120, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_AddInstance_ReturnValue) == 0x000124, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_Add_FloatFloat_ReturnValue) == 0x000128, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x00012C, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000138, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_Add_IntInt_ReturnValue_1) == 0x00013C, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Wall, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000140, "Member 'BG_SplineActor_ISM_BP_C_Build_Wall::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");

// Function BG_SplineActor_ISM_BP.BG_SplineActor_ISM_BP_C.Build Pillar
// 0x0360 (0x0360 - 0x0000)
struct BG_SplineActor_ISM_BP_C_Build_Pillar final
{
public:
	class UStaticMesh*                            FillarMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Last_Index;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Local_TM;                                          // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	int32                                         Local_Index;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_UV_Rotation;                                 // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_UV_Y;                                        // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Local_UV;                                          // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstance*>              Local_ElementMeshMaterial;                         // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Local_End;                                         // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_Scale;                                       // 0x0064(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_Rot;                                         // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_Pos;                                         // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Local_ElementMeshFillar;                           // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Get_Rotation_rotation;                    // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInstance*>              K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_1;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumSections_ReturnValue;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0200(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CallFunc_Array_Get_Item;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6[0x2];                                      // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE[0x2];                                      // 0x02EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_2;             // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Get_Rotation_rotation_1;                  // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BG_SplineActor_ISM_BP_C_Build_Pillar) == 0x000010, "Wrong alignment on BG_SplineActor_ISM_BP_C_Build_Pillar");
static_assert(sizeof(BG_SplineActor_ISM_BP_C_Build_Pillar) == 0x000360, "Wrong size on BG_SplineActor_ISM_BP_C_Build_Pillar");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, FillarMesh) == 0x000000, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::FillarMesh' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_Last_Index) == 0x000008, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_Last_Index' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_TM) == 0x000010, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_TM' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_Index) == 0x000040, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_Index' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_UV_Rotation) == 0x000044, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_UV_Rotation' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_UV_Y) == 0x000048, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_UV_Y' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_UV) == 0x00004C, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_UV' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_ElementMeshMaterial) == 0x000050, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_ElementMeshMaterial' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_End) == 0x000060, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_End' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_Scale) == 0x000064, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_Scale' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_Rot) == 0x000070, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_Rot' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_Pos) == 0x00007C, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_Pos' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Local_ElementMeshFillar) == 0x000088, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Local_ElementMeshFillar' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_MakeVector_ReturnValue) == 0x000098, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Get_Rotation_rotation) == 0x0000A4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Get_Rotation_rotation' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Conv_BoolToInt_ReturnValue) == 0x0000C4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Conv_BoolToInt_ReturnValue_1) == 0x0000CC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Conv_BoolToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_MakeVector_ReturnValue_1) == 0x0000D0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000DC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0000E8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_BreakRotator_Roll) == 0x0000F4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_BreakRotator_Pitch) == 0x0000F8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_BreakRotator_Yaw) == 0x0000FC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_ComposeTransforms_ReturnValue) == 0x000130, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_AddComponent_ReturnValue) == 0x000160, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Temp_int_Variable) == 0x000168, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Multiply_IntInt_ReturnValue) == 0x00016C, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000170, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_IntInt_ReturnValue) == 0x000174, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_GetNumSections_ReturnValue) == 0x000178, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_GetNumSections_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Subtract_IntInt_ReturnValue) == 0x00017C, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000180, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_FloatFloat_ReturnValue) == 0x000184, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_MakeRotator_ReturnValue) == 0x000188, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000194, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000198, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001B0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001B4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0001B8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001BC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0001C0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0001C4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0001C8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001CC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0001D0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x0001D4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0001D8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_MakeVector_ReturnValue_2) == 0x0001DC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0001E8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001F4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_MakeTransform_ReturnValue_1) == 0x000200, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000230, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000260, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_AddInstance_ReturnValue) == 0x00026C, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_MakeTransform_ReturnValue_2) == 0x000270, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Temp_int_Variable_1) == 0x0002A0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_GetSplineLength_ReturnValue) == 0x0002A4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_FMod_Remainder) == 0x0002A8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_FMod_ReturnValue) == 0x0002AC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0002B0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002B4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002B8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Temp_int_Variable_2) == 0x0002BC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0002C0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0002C4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002C8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Temp_int_Variable_3) == 0x0002CC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Array_Get_Item) == 0x0002D0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_IsValid_ReturnValue_1) == 0x0002D8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0002D9, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002DC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, Temp_int_Variable_4) == 0x0002E0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_SetStaticMesh_ReturnValue) == 0x0002E4, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_IsValid_ReturnValue_2) == 0x0002E5, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_IntInt_ReturnValue_4) == 0x0002E8, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x0002EC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002ED, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002F0, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Conv_BoolToInt_ReturnValue_2) == 0x0002FC, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Conv_BoolToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_BreakVector_X) == 0x000300, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_BreakVector_Y) == 0x000304, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_BreakVector_Z) == 0x000308, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Get_Rotation_rotation_1) == 0x00030C, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Get_Rotation_rotation_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000318, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_MakeTransform_ReturnValue_3) == 0x000320, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000350, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Build_Pillar, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000354, "Member 'BG_SplineActor_ISM_BP_C_Build_Pillar::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");

// Function BG_SplineActor_ISM_BP.BG_SplineActor_ISM_BP_C.Append_Array
// 0x0050 (0x0050 - 0x0000)
struct BG_SplineActor_ISM_BP_C_Append_Array final
{
public:
	class UStaticMesh*                            Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstance*>              Materials;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class UMaterialInstance*                Temp_object_Variable;                              // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumSections_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UMaterialInstance*                Temp_object_Variable_1;                            // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BG_SplineActor_ISM_BP_C_Append_Array) == 0x000008, "Wrong alignment on BG_SplineActor_ISM_BP_C_Append_Array");
static_assert(sizeof(BG_SplineActor_ISM_BP_C_Append_Array) == 0x000050, "Wrong size on BG_SplineActor_ISM_BP_C_Append_Array");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, Mesh) == 0x000000, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::Mesh' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, Materials) == 0x000008, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::Materials' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, Temp_object_Variable) == 0x000018, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, CallFunc_Array_LastIndex_ReturnValue) == 0x00002C, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, CallFunc_GetNumSections_ReturnValue) == 0x000034, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::CallFunc_GetNumSections_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, Temp_object_Variable_1) == 0x000040, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Append_Array, CallFunc_Array_Add_ReturnValue_1) == 0x000048, "Member 'BG_SplineActor_ISM_BP_C_Append_Array::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BG_SplineActor_ISM_BP.BG_SplineActor_ISM_BP_C.Get_Rotation
// 0x00FC (0x00FC - 0x0000)
struct BG_SplineActor_ISM_BP_C_Get_Rotation final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         X;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Z;                                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Z_Dir;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Type;                                              // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         End_Index;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Local_Rotation;                                    // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Local_Target;                                      // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_Start;                                       // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BG_SplineActor_ISM_BP_C_Get_Rotation) == 0x000004, "Wrong alignment on BG_SplineActor_ISM_BP_C_Get_Rotation");
static_assert(sizeof(BG_SplineActor_ISM_BP_C_Get_Rotation) == 0x0000FC, "Wrong size on BG_SplineActor_ISM_BP_C_Get_Rotation");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, Index_0) == 0x000000, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::Index_0' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, X) == 0x000004, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::X' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, Y) == 0x000008, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::Y' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, Z) == 0x00000C, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::Z' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, Z_Dir) == 0x000010, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::Z_Dir' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, Type) == 0x000011, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::Type' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, End_Index) == 0x000014, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::End_Index' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, Rotation) == 0x000018, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::Rotation' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, Local_Rotation) == 0x000024, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::Local_Rotation' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, Local_Target) == 0x000030, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::Local_Target' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, Local_Start) == 0x00003C, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::Local_Start' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00004C, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000050, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000054, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Lerp_ReturnValue) == 0x000058, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000064, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000068, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_BreakRotator_Roll) == 0x000074, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_BreakRotator_Pitch) == 0x000078, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_BreakRotator_Yaw) == 0x00007C, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000080, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x000084, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000090, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_BreakRotator_Roll_1) == 0x00009C, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_BreakRotator_Pitch_1) == 0x0000A0, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_BreakRotator_Yaw_1) == 0x0000A4, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x0000B0, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_MakeRotator_ReturnValue) == 0x0000BC, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0000C8, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x0000D4, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Lerp_ReturnValue_1) == 0x0000E0, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Lerp_ReturnValue_2) == 0x0000E4, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000E8, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000EC, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Get_Rotation, CallFunc_MakeRotator_ReturnValue_1) == 0x0000F0, "Member 'BG_SplineActor_ISM_BP_C_Get_Rotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");

// Function BG_SplineActor_ISM_BP.BG_SplineActor_ISM_BP_C.AddInstancedStaticMeshComponent
// 0x0068 (0x0068 - 0x0000)
struct BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent final
{
public:
	class UStaticMesh*                            StaticMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstance*>              Materials;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         UVTiling;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UVTilingYScale;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UVRotation;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          TargetISM;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewLocalVar_0;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          Local_MeshComponent;                               // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumSections_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent) == 0x000008, "Wrong alignment on BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent");
static_assert(sizeof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent) == 0x000068, "Wrong size on BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, StaticMesh) == 0x000000, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::StaticMesh' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, Materials) == 0x000008, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::Materials' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, UVTiling) == 0x000018, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::UVTiling' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, UVTilingYScale) == 0x00001C, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::UVTilingYScale' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, UVRotation) == 0x000020, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::UVRotation' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, TargetISM) == 0x000028, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::TargetISM' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, NewLocalVar_0) == 0x000030, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, Local_MeshComponent) == 0x000038, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::Local_MeshComponent' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, CallFunc_GetNumSections_ReturnValue) == 0x000040, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::CallFunc_GetNumSections_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, Temp_int_Variable) == 0x000048, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, CallFunc_Array_Get_Item) == 0x000050, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000059, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent, CallFunc_SetStaticMesh_ReturnValue) == 0x000060, "Member 'BG_SplineActor_ISM_BP_C_AddInstancedStaticMeshComponent::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BG_SplineActor_ISM_BP.BG_SplineActor_ISM_BP_C.RandomValue
// 0x0050 (0x0050 - 0x0000)
struct BG_SplineActor_ISM_BP_C_RandomValue final
{
public:
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_1;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue_2;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_3;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBG_SplineActor_Random_Value           K2Node_MakeStruct_BG_SplineActor_Random_Value;     // 0x003C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BG_SplineActor_ISM_BP_C_RandomValue) == 0x000004, "Wrong alignment on BG_SplineActor_ISM_BP_C_RandomValue");
static_assert(sizeof(BG_SplineActor_ISM_BP_C_RandomValue) == 0x000050, "Wrong size on BG_SplineActor_ISM_BP_C_RandomValue");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_RandomFloat_ReturnValue) == 0x000000, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_RandomFloat_ReturnValue_1) == 0x000004, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, Temp_int_Variable) == 0x000014, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_RandomFloat_ReturnValue_2) == 0x000028, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_RandomFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_RandomFloat_ReturnValue_3) == 0x000030, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_RandomFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_RandomValue, K2Node_MakeStruct_BG_SplineActor_Random_Value) == 0x00003C, "Member 'BG_SplineActor_ISM_BP_C_RandomValue::K2Node_MakeStruct_BG_SplineActor_Random_Value' has a wrong offset!");

// Function BG_SplineActor_ISM_BP.BG_SplineActor_ISM_BP_C.DisableOrSetLDCullDistance
// 0x0010 (0x0010 - 0x0000)
struct BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance final
{
public:
	class UInstancedStaticMeshComponent*          ISM;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateDesiredMaxDrawDistanceForISM_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance) == 0x000008, "Wrong alignment on BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance");
static_assert(sizeof(BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance) == 0x000010, "Wrong size on BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance, ISM) == 0x000000, "Member 'BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance::ISM' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance, CallFunc_CalculateDesiredMaxDrawDistanceForISM_ReturnValue) == 0x000008, "Member 'BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance::CallFunc_CalculateDesiredMaxDrawDistanceForISM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BG_SplineActor_ISM_BP_C_DisableOrSetLDCullDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BG_SplineActor_ISM_BP.BG_SplineActor_ISM_BP_C.Has Scalar Parameter
// 0x0058 (0x0058 - 0x0000)
struct BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter final
{
public:
	class UMaterialInstance*                      Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Name_0;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bHas;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalarParameterValue                  CallFunc_Array_Get_Item;                           // 0x0024(0x0024)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter) == 0x000008, "Wrong alignment on BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter");
static_assert(sizeof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter) == 0x000058, "Wrong size on BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter, Material) == 0x000000, "Member 'BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter::Material' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter, Name_0) == 0x000008, "Member 'BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter::Name_0' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter, bHas) == 0x000018, "Member 'BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter::bHas' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter, CallFunc_Array_Get_Item) == 0x000024, "Member 'BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter, CallFunc_Array_Contains_ReturnValue) == 0x00004C, "Member 'BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BG_SplineActor_ISM_BP_C_Has_Scalar_Parameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

