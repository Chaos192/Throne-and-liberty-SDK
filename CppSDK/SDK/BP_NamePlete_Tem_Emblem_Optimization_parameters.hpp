#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NamePlete_Tem_Emblem_Optimization

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_NamePlete_Tem_Emblem_Optimization.BP_NamePlete_Tem_Emblem_Optimization_C.ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization
// 0x0010 (0x0010 - 0x0000)
struct BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization) == 0x000004, "Wrong alignment on BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization");
static_assert(sizeof(BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization) == 0x000010, "Wrong size on BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization");
static_assert(offsetof(BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization, EntryPoint) == 0x000000, "Member 'BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'BP_NamePlete_Tem_Emblem_Optimization_C_ExecuteUbergraph_BP_NamePlete_Tem_Emblem_Optimization::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_NamePlete_Tem_Emblem_Optimization.BP_NamePlete_Tem_Emblem_Optimization_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_NamePlete_Tem_Emblem_Optimization_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NamePlete_Tem_Emblem_Optimization_C_PreConstruct) == 0x000001, "Wrong alignment on BP_NamePlete_Tem_Emblem_Optimization_C_PreConstruct");
static_assert(sizeof(BP_NamePlete_Tem_Emblem_Optimization_C_PreConstruct) == 0x000001, "Wrong size on BP_NamePlete_Tem_Emblem_Optimization_C_PreConstruct");
static_assert(offsetof(BP_NamePlete_Tem_Emblem_Optimization_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_NamePlete_Tem_Emblem_Optimization_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

