#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlowingSandDynamic

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FlowingSandDynamic.BP_FlowingSandDynamic_C.ExecuteUbergraph_BP_FlowingSandDynamic
// 0x0268 (0x0268 - 0x0000)
struct BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_LineTraceMultiForObjects_OutHits;         // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMultiForObjects_ReturnValue;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0094(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALandscapeStreamingProxy*               K2Node_DynamicCast_AsLandscape_Streaming_Proxy;    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B3[0x1];                                      // 0x01B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x01D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcY_Y;                                  // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_GetLandscapeHeights_ReturnValue;          // 0x0208(0x0010)(ReferenceParm)
	TArray<struct FVector>                        CallFunc_CalculateNormalsFromHeightfield_ReturnValue; // 0x0218(0x0010)(ReferenceParm)
	TScriptInterface<class INinjaLiveInterface_C> CallFunc_LiveActivation_self_CastInput;            // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                             CallFunc_TLBuildVelocityTexture_ReturnValue;       // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_TLBuildNormalTexture_ReturnValue;         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24B[0x1];                                      // 0x024B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UTextureRenderTarget2D*>         K2Node_MakeArray_Array_1;                          // 0x0250(0x0010)(ReferenceParm)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic) == 0x000008, "Wrong alignment on BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic");
static_assert(sizeof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic) == 0x000268, "Wrong size on BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, EntryPoint) == 0x000000, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, Temp_object_Variable) == 0x000010, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_IsValid_ReturnValue_1) == 0x00002C, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000054, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00005C, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_LineTraceMultiForObjects_OutHits) == 0x000078, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_LineTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_LineTraceMultiForObjects_ReturnValue) == 0x000088, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_LineTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakVector2D_X) == 0x00008C, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakVector2D_Y) == 0x000090, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Array_Get_Item) == 0x000094, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_MakeVector2D_ReturnValue) == 0x00011C, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_bBlockingHit) == 0x000124, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_bInitialOverlap) == 0x000125, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_Time) == 0x000128, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_Distance) == 0x00012C, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_Location) == 0x000130, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_ImpactPoint) == 0x00013C, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_ImpactNormal) == 0x000154, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_HitItem) == 0x000180, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_ElementIndex) == 0x000184, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_FaceIndex) == 0x000188, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_TraceStart) == 0x00018C, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakHitResult_TraceEnd) == 0x000198, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Array_Length_ReturnValue) == 0x0001A4, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, K2Node_DynamicCast_AsLandscape_Streaming_Proxy) == 0x0001A8, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::K2Node_DynamicCast_AsLandscape_Streaming_Proxy' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Less_IntInt_ReturnValue) == 0x0001B1, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BooleanAND_ReturnValue) == 0x0001B2, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001B4, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0001BC, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakVector2D_X_1) == 0x0001C4, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakVector2D_Y_1) == 0x0001C8, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakVector2D_X_2) == 0x0001CC, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakVector2D_Y_2) == 0x0001D0, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, K2Node_MakeStruct_LinearColor) == 0x0001D4, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_CalcY_Y) == 0x0001E4, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_CalcY_Y' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_FTrunc_ReturnValue) == 0x0001E8, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x0001F0, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, K2Node_Event_DeltaSeconds) == 0x0001F8, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001FC, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000200, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_GetLandscapeHeights_ReturnValue) == 0x000208, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_GetLandscapeHeights_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_CalculateNormalsFromHeightfield_ReturnValue) == 0x000218, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_CalculateNormalsFromHeightfield_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_LiveActivation_self_CastInput) == 0x000228, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_LiveActivation_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_TLBuildVelocityTexture_ReturnValue) == 0x000238, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_TLBuildVelocityTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_TLBuildNormalTexture_ReturnValue) == 0x000240, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_TLBuildNormalTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_IsValid_ReturnValue_2) == 0x000248, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_IsValid_ReturnValue_3) == 0x000249, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Not_PreBool_ReturnValue_1) == 0x00024A, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00024C, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, K2Node_MakeArray_Array_1) == 0x000250, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakVector2D_X_3) == 0x000260, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic, CallFunc_BreakVector2D_Y_3) == 0x000264, "Member 'BP_FlowingSandDynamic_C_ExecuteUbergraph_BP_FlowingSandDynamic::CallFunc_BreakVector2D_Y_3' has a wrong offset!");

// Function BP_FlowingSandDynamic.BP_FlowingSandDynamic_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FlowingSandDynamic_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowingSandDynamic_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FlowingSandDynamic_C_ReceiveTick");
static_assert(sizeof(BP_FlowingSandDynamic_C_ReceiveTick) == 0x000004, "Wrong size on BP_FlowingSandDynamic_C_ReceiveTick");
static_assert(offsetof(BP_FlowingSandDynamic_C_ReceiveTick, DeltaSeconds_0) == 0x000000, "Member 'BP_FlowingSandDynamic_C_ReceiveTick::DeltaSeconds_0' has a wrong offset!");

// Function BP_FlowingSandDynamic.BP_FlowingSandDynamic_C.UserConstructionScript
// 0x0050 (0x0050 - 0x0000)
struct BP_FlowingSandDynamic_C_UserConstructionScript final
{
public:
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcY_Y;                                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowingSandDynamic_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_FlowingSandDynamic_C_UserConstructionScript");
static_assert(sizeof(BP_FlowingSandDynamic_C_UserConstructionScript) == 0x000050, "Wrong size on BP_FlowingSandDynamic_C_UserConstructionScript");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000000, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000008, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_BreakVector2D_X) == 0x000010, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_BreakVector2D_X_1) == 0x000018, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_BreakVector2D_Y_1) == 0x00001C, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_FMin_ReturnValue) == 0x000020, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_FMin_ReturnValue_1) == 0x000024, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000038, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000044, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_CalcY_Y) == 0x000048, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_CalcY_Y' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_UserConstructionScript, CallFunc_FTrunc_ReturnValue) == 0x00004C, "Member 'BP_FlowingSandDynamic_C_UserConstructionScript::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BP_FlowingSandDynamic.BP_FlowingSandDynamic_C.CalcY
// 0x0020 (0x0020 - 0x0000)
struct BP_FlowingSandDynamic_C_CalcY final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Extent;                                            // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlowingSandDynamic_C_CalcY) == 0x000004, "Wrong alignment on BP_FlowingSandDynamic_C_CalcY");
static_assert(sizeof(BP_FlowingSandDynamic_C_CalcY) == 0x000020, "Wrong size on BP_FlowingSandDynamic_C_CalcY");
static_assert(offsetof(BP_FlowingSandDynamic_C_CalcY, X) == 0x000000, "Member 'BP_FlowingSandDynamic_C_CalcY::X' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_CalcY, Extent) == 0x000004, "Member 'BP_FlowingSandDynamic_C_CalcY::Extent' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_CalcY, Y) == 0x00000C, "Member 'BP_FlowingSandDynamic_C_CalcY::Y' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_CalcY, CallFunc_BreakVector2D_X) == 0x000010, "Member 'BP_FlowingSandDynamic_C_CalcY::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_CalcY, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'BP_FlowingSandDynamic_C_CalcY::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_CalcY, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_FlowingSandDynamic_C_CalcY::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlowingSandDynamic_C_CalcY, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_FlowingSandDynamic_C_CalcY::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

