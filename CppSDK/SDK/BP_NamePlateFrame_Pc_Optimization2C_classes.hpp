#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NamePlateFrame_Pc_Optimization2C

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TLClient_structs.hpp"
#include "TLClient_classes.hpp"
#include "TLScheme_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_NamePlateFrame_Pc_Optimization2C.BP_NamePlateFrame_Pc_Optimization2C_C
// 0x0330 (0x1360 - 0x1030)
class UBP_NamePlateFrame_Pc_Optimization2C_C final : public UTLUserWidgetNamePlatePC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TargetingFocus_MassCombat;                         // 0x1038(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TargetingFocusInterim_Anim;                        // 0x1040(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TargetingFocus_Anim;                               // 0x1048(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_NamePlate_HPGage_Optimization_C*    BP_HPGauge;                                        // 0x1050(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NamePlate_CostGauge_Optimization_C* BP_MPGauge;                                        // 0x1058(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NamePlate_Guild_Optimization2_C*    BP_NamePlate_Guild_Optimization2;                  // 0x1060(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NamePlate_TeamBattle_Emblem_C*      BP_NamePlate_TeamBattle_Emblem;                    // 0x1068(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_Tem_KeyIcon_BTN_C*                  BP_Tem_KeyIcon_BTN;                                // 0x1070(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ContentsMarker_Sign;                               // 0x1078(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               EE_BG;                                             // 0x1080(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           EE_Buff_GridPanel;                                 // 0x1088(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GuildSlot_Base;                                    // 0x1090(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GuildSlot_GuildRelation;                           // 0x1098(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               GuildSlot_GuildRelationConflict;                   // 0x10A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Image_EEIcon;                                      // 0x10A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Image_PcRelationship;                              // 0x10B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Img_PartyTargets;                                  // 0x10B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ImgBossTarget;                                     // 0x10C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               ImgDetectionIcon;                                  // 0x10C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         MiddlePanel;                                       // 0x10D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         Name_VBox;                                         // 0x10D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NameBG_Attacked;                                   // 0x10E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NameBG_AttackedGlow_1;                             // 0x10E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NameBG_Base;                                       // 0x10F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NameBG_HitArea;                                    // 0x10F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NameBG_Interim;                                    // 0x1100(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NameBG_MyPC;                                       // 0x1108(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NameBG_Target;                                     // 0x1110(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBackgroundBlur*                      NameBlur;                                          // 0x1118(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NormalSlot_S_Glow;                                 // 0x1120(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               NormalSlot_S_GuildRelation;                        // 0x1128(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           PartySlot_GridPanel;                               // 0x1130(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLNamedSlot*                           Rider;                                             // 0x1138(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           ScanNum;                                           // 0x1140(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           ScanNum_Grid;                                      // 0x1148(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Slot_TargetFocusGlow;                              // 0x1150(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Slot_TargetLine;                                   // 0x1158(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TargetAttack_Motion;                               // 0x1160(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TargetGlow_1;                                      // 0x1168(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TargetGlow_Mass;                                   // 0x1170(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           Targeting_Grid;                                    // 0x1178(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           Targeting_GridGroup;                               // 0x1180(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Targeting_Img;                                     // 0x1188(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Targeting_Interim2;                                // 0x1190(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Targeting_Ptc;                                     // 0x1198(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TargetingLight;                                    // 0x11A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TargetingLight_ADD;                                // 0x11A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               TargetingLight_interim;                            // 0x11B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLBorder*                              TargetNumBorder;                                   // 0x11B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSpacer*                              TargetSize_Spacer;                                 // 0x11C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_CharacterName;                                // 0x11C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_EECount;                                      // 0x11D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_PartyNumber;                                  // 0x11D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_Title;                                        // 0x11E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           TLGrid_NameTextGroup;                              // 0x11E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLGridPanel*                           TLGridPanel_NameplatePC;                           // 0x11F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLUniformGridPanel*                    TLUniform_Usurping;                                // 0x11F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLVerticalBox*                         TLVerticalBox_Gauge;                               // 0x1200(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               VivoxVoice_Icon;                                   // 0x1208(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         DefaultFontSize;                                   // 0x1210(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FixTargetFontSize;                                 // 0x1214(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MyNameFontSize;                                    // 0x1218(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlotTarget_Opacity;                                // 0x121C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bScanTarget;                                       // 0x1220(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInteractPCTarget;                                 // 0x1221(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInterimTarget;                                    // 0x1222(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bFixTarget;                                        // 0x1223(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bTargetBG_visible;                                 // 0x1224(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1225[0x3];                                     // 0x1225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTLBorder*                              MarkBorder2_single_0;                              // 0x1228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          bFriendlyTarget;                                   // 0x1230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsPartyMember;                                    // 0x1231(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1232[0x6];                                     // 0x1232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Targeting_Focus_Anim;                              // 0x1238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFontOutlineSettings                   OutlineSetting_1px;                                // 0x1240(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFontOutlineSettings                   OutlineSetting_2px;                                // 0x1260(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultTextNameSize;                               // 0x1280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultTextTitleSize;                              // 0x1284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultTextSideSize;                               // 0x1288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultTextScanSize;                               // 0x128C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTLImage*                               NormalSlot_Base_0;                                 // 0x1290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        Path_Nameplate_Target_LineN;                       // 0x1298(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSoftObjectPath                        Path_Nameplate_Target_LineFriendly;                // 0x12B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bIsMyPc;                                           // 0x12C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C9[0x7];                                     // 0x12C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        Path_DetectionIcon_RangeOut;                       // 0x12D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSoftObjectPath                        Path_DetectionIcon_RangeIn;                        // 0x12E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bIsMyPcConfictZone;                                // 0x1300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1301[0x3];                                     // 0x1301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              NameBG_Nudge_Guild_None;                           // 0x1304(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NameGroup_Nudge_Guild_None;                        // 0x130C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1314[0xC];                                     // 0x1314(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               NameBG_NudgeY4_MyPC;                               // 0x1320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               NameBG_NudgeY4_OtherPC;                            // 0x1330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               NameGroup_NudgeY4_MyPC;                            // 0x1340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               NameGroup_NudgeY4_OtherPC;                         // 0x1350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_NamePlateFrame_Pc_Optimization2C(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnUpdateHpBarType(EHpBarType InHpBarType);
	void UpdateSlotTargetLine();
	void OnUpdatedMassCombatMode(bool bInMassCombatMode);
	void OnSlotColorUpdate();
	void NameColorUpdate();
	void OnChangeStealthDetectionState(ETLStealthDectectionState State);
	void OnLoadDefaultFontSizeComplete(int32 InDefaultFontSize);
	void OnChangeOtherPCAlive(bool bIsAlive);
	void OnCoverToHideHpBar();
	void ShowPartyNum(bool bShow);
	void OnChangeNameplateLayout(ETLNameplateLayout InTLNameplateLayout, bool InbMyPc);
	void ShowPartyTaregt();
	void OnUpdateTargetState(ETLNameplateTaregetState State, bool bShow, const struct FLinearColor& InOutlineColor);
	void OnSetScanTarget(bool InTarget);
	void OnUpdateMassCombatMode(ETLNameplateMassCombatModeState InMassCombatModeState);
	void EmphasizeNameplate(bool bInEmphasize);
	void OnUpdateBossFocusOnMe(bool bFocus);
	void OnUpdateAttackedMyPc(bool bInAttackedMyPc);
	void ___t___0();
	void OnSet_Interim_Target(bool Is_interim);
	void On_Set_Interact_Pc_Target(bool bIsInteractPCTarget);
	void OnSet_Scan_Target(bool IsScanTarget);
	void OnSet_FixTarget(bool bIsFixTarget);
	void Fn_Targeting_(bool IsFriendlyTarget);
	void OnSet_FriendlyTarget(bool bFriendly);
	void FnSetFontDefaultSetting();
	void FnNameLayout_Grid(class UWidget* NameWidget, const struct FVector2D& InNudge, const struct FMargin& InPadding);
	void Fn_SetGuildRelationColor(bool ConflictZone);
	void Update_Slot_Target_Line(bool PvpState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NamePlateFrame_Pc_Optimization2C_C">();
	}
	static class UBP_NamePlateFrame_Pc_Optimization2C_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NamePlateFrame_Pc_Optimization2C_C>();
	}
};
static_assert(alignof(UBP_NamePlateFrame_Pc_Optimization2C_C) == 0x000010, "Wrong alignment on UBP_NamePlateFrame_Pc_Optimization2C_C");
static_assert(sizeof(UBP_NamePlateFrame_Pc_Optimization2C_C) == 0x001360, "Wrong size on UBP_NamePlateFrame_Pc_Optimization2C_C");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, UberGraphFrame) == 0x001030, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetingFocus_MassCombat) == 0x001038, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetingFocus_MassCombat' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetingFocusInterim_Anim) == 0x001040, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetingFocusInterim_Anim' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetingFocus_Anim) == 0x001048, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetingFocus_Anim' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, BP_HPGauge) == 0x001050, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::BP_HPGauge' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, BP_MPGauge) == 0x001058, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::BP_MPGauge' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, BP_NamePlate_Guild_Optimization2) == 0x001060, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::BP_NamePlate_Guild_Optimization2' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, BP_NamePlate_TeamBattle_Emblem) == 0x001068, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::BP_NamePlate_TeamBattle_Emblem' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, BP_Tem_KeyIcon_BTN) == 0x001070, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::BP_Tem_KeyIcon_BTN' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, ContentsMarker_Sign) == 0x001078, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::ContentsMarker_Sign' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, EE_BG) == 0x001080, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::EE_BG' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, EE_Buff_GridPanel) == 0x001088, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::EE_Buff_GridPanel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, GuildSlot_Base) == 0x001090, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::GuildSlot_Base' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, GuildSlot_GuildRelation) == 0x001098, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::GuildSlot_GuildRelation' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, GuildSlot_GuildRelationConflict) == 0x0010A0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::GuildSlot_GuildRelationConflict' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Image_EEIcon) == 0x0010A8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Image_EEIcon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Image_PcRelationship) == 0x0010B0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Image_PcRelationship' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Img_PartyTargets) == 0x0010B8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Img_PartyTargets' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, ImgBossTarget) == 0x0010C0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::ImgBossTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, ImgDetectionIcon) == 0x0010C8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::ImgDetectionIcon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, MiddlePanel) == 0x0010D0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::MiddlePanel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Name_VBox) == 0x0010D8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Name_VBox' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBG_Attacked) == 0x0010E0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBG_Attacked' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBG_AttackedGlow_1) == 0x0010E8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBG_AttackedGlow_1' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBG_Base) == 0x0010F0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBG_Base' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBG_HitArea) == 0x0010F8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBG_HitArea' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBG_Interim) == 0x001100, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBG_Interim' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBG_MyPC) == 0x001108, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBG_MyPC' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBG_Target) == 0x001110, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBG_Target' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBlur) == 0x001118, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBlur' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NormalSlot_S_Glow) == 0x001120, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NormalSlot_S_Glow' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NormalSlot_S_GuildRelation) == 0x001128, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NormalSlot_S_GuildRelation' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, PartySlot_GridPanel) == 0x001130, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::PartySlot_GridPanel' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Rider) == 0x001138, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Rider' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, ScanNum) == 0x001140, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::ScanNum' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, ScanNum_Grid) == 0x001148, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::ScanNum_Grid' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Slot_TargetFocusGlow) == 0x001150, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Slot_TargetFocusGlow' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Slot_TargetLine) == 0x001158, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Slot_TargetLine' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetAttack_Motion) == 0x001160, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetAttack_Motion' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetGlow_1) == 0x001168, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetGlow_1' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetGlow_Mass) == 0x001170, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetGlow_Mass' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Targeting_Grid) == 0x001178, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Targeting_Grid' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Targeting_GridGroup) == 0x001180, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Targeting_GridGroup' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Targeting_Img) == 0x001188, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Targeting_Img' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Targeting_Interim2) == 0x001190, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Targeting_Interim2' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Targeting_Ptc) == 0x001198, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Targeting_Ptc' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetingLight) == 0x0011A0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetingLight' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetingLight_ADD) == 0x0011A8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetingLight_ADD' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetingLight_interim) == 0x0011B0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetingLight_interim' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetNumBorder) == 0x0011B8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetNumBorder' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TargetSize_Spacer) == 0x0011C0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TargetSize_Spacer' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Text_CharacterName) == 0x0011C8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Text_CharacterName' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Text_EECount) == 0x0011D0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Text_EECount' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Text_PartyNumber) == 0x0011D8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Text_PartyNumber' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Text_Title) == 0x0011E0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Text_Title' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TLGrid_NameTextGroup) == 0x0011E8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TLGrid_NameTextGroup' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TLGridPanel_NameplatePC) == 0x0011F0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TLGridPanel_NameplatePC' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TLUniform_Usurping) == 0x0011F8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TLUniform_Usurping' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, TLVerticalBox_Gauge) == 0x001200, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::TLVerticalBox_Gauge' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, VivoxVoice_Icon) == 0x001208, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::VivoxVoice_Icon' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, DefaultFontSize) == 0x001210, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::DefaultFontSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, FixTargetFontSize) == 0x001214, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::FixTargetFontSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, MyNameFontSize) == 0x001218, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::MyNameFontSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, SlotTarget_Opacity) == 0x00121C, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::SlotTarget_Opacity' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, bScanTarget) == 0x001220, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::bScanTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, bInteractPCTarget) == 0x001221, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::bInteractPCTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, bInterimTarget) == 0x001222, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::bInterimTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, bFixTarget) == 0x001223, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::bFixTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, bTargetBG_visible) == 0x001224, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::bTargetBG_visible' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, MarkBorder2_single_0) == 0x001228, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::MarkBorder2_single_0' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, bFriendlyTarget) == 0x001230, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::bFriendlyTarget' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, bIsPartyMember) == 0x001231, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::bIsPartyMember' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Targeting_Focus_Anim) == 0x001238, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Targeting_Focus_Anim' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, OutlineSetting_1px) == 0x001240, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::OutlineSetting_1px' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, OutlineSetting_2px) == 0x001260, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::OutlineSetting_2px' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, DefaultTextNameSize) == 0x001280, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::DefaultTextNameSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, DefaultTextTitleSize) == 0x001284, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::DefaultTextTitleSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, DefaultTextSideSize) == 0x001288, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::DefaultTextSideSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, DefaultTextScanSize) == 0x00128C, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::DefaultTextScanSize' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NormalSlot_Base_0) == 0x001290, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NormalSlot_Base_0' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Path_Nameplate_Target_LineN) == 0x001298, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Path_Nameplate_Target_LineN' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Path_Nameplate_Target_LineFriendly) == 0x0012B0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Path_Nameplate_Target_LineFriendly' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, bIsMyPc) == 0x0012C8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::bIsMyPc' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Path_DetectionIcon_RangeOut) == 0x0012D0, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Path_DetectionIcon_RangeOut' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, Path_DetectionIcon_RangeIn) == 0x0012E8, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::Path_DetectionIcon_RangeIn' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, bIsMyPcConfictZone) == 0x001300, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::bIsMyPcConfictZone' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBG_Nudge_Guild_None) == 0x001304, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBG_Nudge_Guild_None' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameGroup_Nudge_Guild_None) == 0x00130C, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameGroup_Nudge_Guild_None' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBG_NudgeY4_MyPC) == 0x001320, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBG_NudgeY4_MyPC' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameBG_NudgeY4_OtherPC) == 0x001330, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameBG_NudgeY4_OtherPC' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameGroup_NudgeY4_MyPC) == 0x001340, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameGroup_NudgeY4_MyPC' has a wrong offset!");
static_assert(offsetof(UBP_NamePlateFrame_Pc_Optimization2C_C, NameGroup_NudgeY4_OtherPC) == 0x001350, "Member 'UBP_NamePlateFrame_Pc_Optimization2C_C::NameGroup_NudgeY4_OtherPC' has a wrong offset!");

}

