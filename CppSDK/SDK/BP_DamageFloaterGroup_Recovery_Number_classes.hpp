#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DamageFloaterGroup_Recovery_Number

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TLClient_classes.hpp"
#include "TLScheme_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_DamageFloaterGroup_Recovery_Number.BP_DamageFloaterGroup_Recovery_Number_C
// 0x00A8 (0x0DB0 - 0x0D08)
class UBP_DamageFloaterGroup_Recovery_Number_C final : public UTLUserWidgetFloater
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Recovery_Stamina;                                  // 0x0D10(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Recovery_Cost;                                     // 0x0D18(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Recovery_Continuous;                               // 0x0D20(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Recovery_DoubleCritical;                           // 0x0D28(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Recovery_Double;                                   // 0x0D30(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Recovery_Critical;                                 // 0x0D38(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Recovery_Default;                                  // 0x0D40(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTLImage*                               DamF_RadialGlow_1;                                 // 0x0D48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               IconAbnormal;                                      // 0x0D50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               IconSector;                                        // 0x0D58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         Offset_Panel;                                      // 0x0D60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         Pos_Panel;                                         // 0x0D68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               QuickUse_FB;                                       // 0x0D70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLCanvasPanel*                         Rot_Panel;                                         // 0x0D78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Text_double;                                       // 0x0D80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           Txt_DamageNum;                                     // 0x0D88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FSoftObjectPath>                Path_Recovery_TextStyleSet;                        // 0x0D90(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSoftObjectPath>                Path_CostStamina_TextStyleSet;                     // 0x0DA0(0x0010)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BP_DamageFloaterGroup_Recovery_Number(int32 EntryPoint);
	void OnEmit(bool bInPrimeSkill, EHpAbnormalStatus AbnormalStatus, bool bInSuccessByAccuracy, EFloaterCategory FloaterCategory, bool IsMyPc);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DamageFloaterGroup_Recovery_Number_C">();
	}
	static class UBP_DamageFloaterGroup_Recovery_Number_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DamageFloaterGroup_Recovery_Number_C>();
	}
};
static_assert(alignof(UBP_DamageFloaterGroup_Recovery_Number_C) == 0x000008, "Wrong alignment on UBP_DamageFloaterGroup_Recovery_Number_C");
static_assert(sizeof(UBP_DamageFloaterGroup_Recovery_Number_C) == 0x000DB0, "Wrong size on UBP_DamageFloaterGroup_Recovery_Number_C");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, UberGraphFrame) == 0x000D08, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Recovery_Stamina) == 0x000D10, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Recovery_Stamina' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Recovery_Cost) == 0x000D18, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Recovery_Cost' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Recovery_Continuous) == 0x000D20, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Recovery_Continuous' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Recovery_DoubleCritical) == 0x000D28, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Recovery_DoubleCritical' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Recovery_Double) == 0x000D30, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Recovery_Double' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Recovery_Critical) == 0x000D38, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Recovery_Critical' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Recovery_Default) == 0x000D40, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Recovery_Default' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, DamF_RadialGlow_1) == 0x000D48, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::DamF_RadialGlow_1' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, IconAbnormal) == 0x000D50, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::IconAbnormal' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, IconSector) == 0x000D58, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::IconSector' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Offset_Panel) == 0x000D60, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Offset_Panel' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Pos_Panel) == 0x000D68, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Pos_Panel' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, QuickUse_FB) == 0x000D70, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::QuickUse_FB' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Rot_Panel) == 0x000D78, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Rot_Panel' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Text_double) == 0x000D80, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Text_double' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Txt_DamageNum) == 0x000D88, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Txt_DamageNum' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Path_Recovery_TextStyleSet) == 0x000D90, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Path_Recovery_TextStyleSet' has a wrong offset!");
static_assert(offsetof(UBP_DamageFloaterGroup_Recovery_Number_C, Path_CostStamina_TextStyleSet) == 0x000DA0, "Member 'UBP_DamageFloaterGroup_Recovery_Number_C::Path_CostStamina_TextStyleSet' has a wrong offset!");

}

