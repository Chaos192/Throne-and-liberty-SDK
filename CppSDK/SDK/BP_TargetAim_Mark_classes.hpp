#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TargetAim_Mark

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_TargetAim_Mark.BP_TargetAim_Mark_C
// 0x0028 (0x0AE8 - 0x0AC0)
class UBP_TargetAim_Mark_C final : public UTLUserWidgetTargetAimMark
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AC0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SelectTarget;                                      // 0x0AC8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTLImage*                               IMG_Aim;                                           // 0x0AD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               IMG_Select_1;                                      // 0x0AD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               IMG_Select_2;                                      // 0x0AE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_TargetAim_Mark(int32 EntryPoint);
	void CustomEvent();
	void CustomEvent_0();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TargetAim_Mark_C">();
	}
	static class UBP_TargetAim_Mark_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TargetAim_Mark_C>();
	}
};
static_assert(alignof(UBP_TargetAim_Mark_C) == 0x000008, "Wrong alignment on UBP_TargetAim_Mark_C");
static_assert(sizeof(UBP_TargetAim_Mark_C) == 0x000AE8, "Wrong size on UBP_TargetAim_Mark_C");
static_assert(offsetof(UBP_TargetAim_Mark_C, UberGraphFrame) == 0x000AC0, "Member 'UBP_TargetAim_Mark_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TargetAim_Mark_C, SelectTarget) == 0x000AC8, "Member 'UBP_TargetAim_Mark_C::SelectTarget' has a wrong offset!");
static_assert(offsetof(UBP_TargetAim_Mark_C, IMG_Aim) == 0x000AD0, "Member 'UBP_TargetAim_Mark_C::IMG_Aim' has a wrong offset!");
static_assert(offsetof(UBP_TargetAim_Mark_C, IMG_Select_1) == 0x000AD8, "Member 'UBP_TargetAim_Mark_C::IMG_Select_1' has a wrong offset!");
static_assert(offsetof(UBP_TargetAim_Mark_C, IMG_Select_2) == 0x000AE0, "Member 'UBP_TargetAim_Mark_C::IMG_Select_2' has a wrong offset!");

}

