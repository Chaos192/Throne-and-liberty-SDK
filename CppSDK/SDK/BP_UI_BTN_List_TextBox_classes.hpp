#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UI_BTN_List_TextBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "TLClient_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_UI_BTN_List_TextBox.BP_UI_BTN_List_TextBox_C
// 0x0B00 (0x1A00 - 0x0F00)
class UBP_UI_BTN_List_TextBox_C final : public UTLUserWidgetActionGuideButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0F00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SHOW_ANIM;                                         // 0x0F08(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hover;                                             // 0x0F10(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Press;                                             // 0x0F18(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTLNamedSlot*                           B;                                                 // 0x0F20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLSizeBox*                             ButtonTextHolder;                                  // 0x0F28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLNamedSlot*                           L;                                                 // 0x0F30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Reddot;                                            // 0x0F38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Tex_BTN_TextBox_CenterDeco;                        // 0x0F40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Tex_BTN_TextBox_SideDeco;                          // 0x0F48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLImage*                               Tex_BTN_TextBoxLine_Hover;                         // 0x0F50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLHorizontalBox*                       TLHorizontalBox_Keypadding;                        // 0x0F58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLUniformGridPanel*                    TLUniformGrid_Reddot;                              // 0x0F60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTLTextBlock*                           TXT_RedDot_Count;                                  // 0x0F68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          VisibleKeyIcon;                                    // 0x0F70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F71[0x3];                                      // 0x0F71(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Button___Purple1_Gold2;                            // 0x0F74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BTNWidth_Min;                                      // 0x0F78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BTNHeight;                                         // 0x0F7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible_RedDot_Count;                              // 0x0F80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F81[0x7];                                      // 0x0F81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           In_Style_Blue_01;                                  // 0x0F88(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           In_Style_Purple_02;                                // 0x1200(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           In_Style_Red_03;                                   // 0x1478(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           In_Style;                                          // 0x16F0(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UPaperSprite*                           Sprite;                                            // 0x1968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            In_Brush;                                          // 0x1970(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         In_Max_Width_For_Wrap;                             // 0x19F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BTN_Margin;                                        // 0x19FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_UI_BTN_List_TextBox(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnUpdateNotification(bool InIsOn);
	void Gold();
	void Purple();
	void Set_Button_Color_Type(int32 ButtonColorType);
	void Red();
	void Hexagon();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UI_BTN_List_TextBox_C">();
	}
	static class UBP_UI_BTN_List_TextBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_UI_BTN_List_TextBox_C>();
	}
};
static_assert(alignof(UBP_UI_BTN_List_TextBox_C) == 0x000008, "Wrong alignment on UBP_UI_BTN_List_TextBox_C");
static_assert(sizeof(UBP_UI_BTN_List_TextBox_C) == 0x001A00, "Wrong size on UBP_UI_BTN_List_TextBox_C");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, UberGraphFrame) == 0x000F00, "Member 'UBP_UI_BTN_List_TextBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, SHOW_ANIM) == 0x000F08, "Member 'UBP_UI_BTN_List_TextBox_C::SHOW_ANIM' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, Hover) == 0x000F10, "Member 'UBP_UI_BTN_List_TextBox_C::Hover' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, Press) == 0x000F18, "Member 'UBP_UI_BTN_List_TextBox_C::Press' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, B) == 0x000F20, "Member 'UBP_UI_BTN_List_TextBox_C::B' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, ButtonTextHolder) == 0x000F28, "Member 'UBP_UI_BTN_List_TextBox_C::ButtonTextHolder' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, L) == 0x000F30, "Member 'UBP_UI_BTN_List_TextBox_C::L' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, Reddot) == 0x000F38, "Member 'UBP_UI_BTN_List_TextBox_C::Reddot' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, Tex_BTN_TextBox_CenterDeco) == 0x000F40, "Member 'UBP_UI_BTN_List_TextBox_C::Tex_BTN_TextBox_CenterDeco' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, Tex_BTN_TextBox_SideDeco) == 0x000F48, "Member 'UBP_UI_BTN_List_TextBox_C::Tex_BTN_TextBox_SideDeco' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, Tex_BTN_TextBoxLine_Hover) == 0x000F50, "Member 'UBP_UI_BTN_List_TextBox_C::Tex_BTN_TextBoxLine_Hover' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, TLHorizontalBox_Keypadding) == 0x000F58, "Member 'UBP_UI_BTN_List_TextBox_C::TLHorizontalBox_Keypadding' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, TLUniformGrid_Reddot) == 0x000F60, "Member 'UBP_UI_BTN_List_TextBox_C::TLUniformGrid_Reddot' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, TXT_RedDot_Count) == 0x000F68, "Member 'UBP_UI_BTN_List_TextBox_C::TXT_RedDot_Count' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, VisibleKeyIcon) == 0x000F70, "Member 'UBP_UI_BTN_List_TextBox_C::VisibleKeyIcon' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, Button___Purple1_Gold2) == 0x000F74, "Member 'UBP_UI_BTN_List_TextBox_C::Button___Purple1_Gold2' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, BTNWidth_Min) == 0x000F78, "Member 'UBP_UI_BTN_List_TextBox_C::BTNWidth_Min' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, BTNHeight) == 0x000F7C, "Member 'UBP_UI_BTN_List_TextBox_C::BTNHeight' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, Visible_RedDot_Count) == 0x000F80, "Member 'UBP_UI_BTN_List_TextBox_C::Visible_RedDot_Count' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, In_Style_Blue_01) == 0x000F88, "Member 'UBP_UI_BTN_List_TextBox_C::In_Style_Blue_01' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, In_Style_Purple_02) == 0x001200, "Member 'UBP_UI_BTN_List_TextBox_C::In_Style_Purple_02' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, In_Style_Red_03) == 0x001478, "Member 'UBP_UI_BTN_List_TextBox_C::In_Style_Red_03' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, In_Style) == 0x0016F0, "Member 'UBP_UI_BTN_List_TextBox_C::In_Style' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, Sprite) == 0x001968, "Member 'UBP_UI_BTN_List_TextBox_C::Sprite' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, In_Brush) == 0x001970, "Member 'UBP_UI_BTN_List_TextBox_C::In_Brush' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, In_Max_Width_For_Wrap) == 0x0019F8, "Member 'UBP_UI_BTN_List_TextBox_C::In_Max_Width_For_Wrap' has a wrong offset!");
static_assert(offsetof(UBP_UI_BTN_List_TextBox_C, BTN_Margin) == 0x0019FC, "Member 'UBP_UI_BTN_List_TextBox_C::BTN_Margin' has a wrong offset!");

}

